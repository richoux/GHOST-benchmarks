[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28382] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402670 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402670 in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28382] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fd4d810fdab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fd4d810fdab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28511] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fd4d810f0e0 in operator delete(void*)@plt () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fd4d810f0e0 in operator delete(void*)@plt () from /usr/local/lib/libghost.so
#1  0x00007fd4d81112b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fd4d8110a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28511] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28511] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28511] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28570] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28570] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f243187bd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f243187bd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f243187c9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28570] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f243187c9e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f243187c9e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28570] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025f5 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025f5 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28636] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025ad in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025ad in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28636] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f52ebd339fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f52ebd339fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28636] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28636] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fcf3e0e7d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fcf3e0e7d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fcf3e0e89fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fcf3d2e935f in _int_malloc (av=0x7fcf3d62a760 <main_arena>, bytes=128) at malloc.c:3775
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fcf3d2e935f in _int_malloc (av=0x7fcf3d62a760 <main_arena>, bytes=128) at malloc.c:3775
#1  0x00007fcf3d2eaae0 in __GI___libc_malloc (bytes=128) at malloc.c:2893
#2  0x00007fcf3ddf7f78 in operator new (sz=128) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fcf3e0e927e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fcf3e0e8a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f2b31386b28 in __GI___libc_malloc (bytes=4) at malloc.c:2909
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f2b31386b28 in __GI___libc_malloc (bytes=4) at malloc.c:2909
#1  0x00007f2b31e93f78 in operator new (sz=4) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#2  0x00007f2b3218527e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#3  0x00007f2b32184a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#4  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#5  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025f1 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025f1 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f2b32183d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f2b32183d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025b8 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025b8 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025ad in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025ad in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f750b0c2a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f750b0c2a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28902] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025dd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025dd in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28902] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28902] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28902] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7fbbf900d760 <main_arena>, bytes=16) at malloc.c:3498
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7fbbf900d760 <main_arena>, bytes=16) at malloc.c:3498
#1  0x00007fbbf8ccdae0 in __GI___libc_malloc (bytes=16) at malloc.c:2893
#2  0x00007fbbf97daf78 in operator new (sz=16) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fbbf9acc27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fbbf9acba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28961] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28961] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28961] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 28961] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29014] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fd61e559d48 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fd61e559d48 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fd61e55a9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29014] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29014] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fd61e55a9ec in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fd61e55a9ec in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29014] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f847ea93d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f847ea93d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f847ea949f6 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f847ea949f6 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f847ea930d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f847ea930d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
#1  0x00007f847ea949fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f847ea948ab in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f847ea948ab in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a4 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a4 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29183] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3984a01d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3984a01d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29183] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3984a01d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3984a01d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29183] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408408 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408408 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29183] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040848a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040848a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29248] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29248] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29248] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f637590ad5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f637590ad5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29248] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0a95253d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0a95253d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0a95253d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0a95253d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f0a952549fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0a952549fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0a952549fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406cf0 in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406cf0 in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
#1  0x0000000000408547 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29386] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29386] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29386] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe132b422ce in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe132b422ce in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#1  0x00007fe132b41a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29386] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29451] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29451] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040a23d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040a23d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#1  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29451] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004085c8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004085c8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29451] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f255a98d9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f255a98d9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29514] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29514] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29514] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29514] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29578] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29578] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29578] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402670 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402670 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29578] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8e435a7d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8e435a7d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f8e435a89fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29643] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8e435a9240 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8e435a9240 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#1  0x00007f8e435a8a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29643] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8e435a89d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8e435a89d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29643] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8e435a7d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8e435a7d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29643] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29703] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29703] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084bb in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084bb in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29703] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025ad in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025ad in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29703] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f41aa568d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f41aa568d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f41aa5699fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025dd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025dd in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29911] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29911] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8d90ffba0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8d90ffba0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29911] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8d90ffba0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8d90ffba0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29911] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025cf in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025cf in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fb6f2f51d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fb6f2f51d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7fb6f2494760 <main_arena>, bytes=64) at malloc.c:3775
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7fb6f2494760 <main_arena>, bytes=64) at malloc.c:3775
#1  0x00007fb6f2154ae0 in __GI___libc_malloc (bytes=64) at malloc.c:2893
#2  0x00007fb6f2c61f78 in operator new (sz=64) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fb6f2f5327e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fb6f2f52a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 29982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1a2db7bcae in _int_malloc (av=0x7f1a2debd760 <main_arena>, bytes=64) at malloc.c:3667
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1a2db7bcae in _int_malloc (av=0x7f1a2debd760 <main_arena>, bytes=64) at malloc.c:3667
#1  0x00007f1a2db7dae0 in __GI___libc_malloc (bytes=64) at malloc.c:2893
#2  0x00007f1a2e68af78 in operator new (sz=64) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007f1a2e97c27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007f1a2e97ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30043] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7f1a2debd760 <main_arena>, bytes=128) at malloc.c:3780
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7f1a2debd760 <main_arena>, bytes=128) at malloc.c:3780
#1  0x00007f1a2db7dae0 in __GI___libc_malloc (bytes=128) at malloc.c:2893
#2  0x00007f1a2e68af78 in operator new (sz=128) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007f1a2e97c27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007f1a2e97ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30043] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1a2db7da85 in __GI___libc_malloc (bytes=128) at malloc.c:2878
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1a2db7da85 in __GI___libc_malloc (bytes=128) at malloc.c:2878
#1  0x00007f1a2e68af78 in operator new (sz=128) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#2  0x00007f1a2e97c27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#3  0x00007f1a2e97ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#4  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#5  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30043] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30043] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe90aeb31af in _int_free (av=0x7fe90b1f6760 <main_arena>, p=0x1609d90, have_lock=0) at malloc.c:3922
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe90aeb31af in _int_free (av=0x7fe90b1f6760 <main_arena>, p=0x1609d90, have_lock=0) at malloc.c:3922
#1  0x00007fe90bcb52b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fe90bcb4a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30102] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe90bcb3d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe90bcb3d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30102] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30102] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401850 in ghost::Domain::index_of(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401850 in ghost::Domain::index_of(int) const@plt ()
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30102] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f4e20837d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f4e20837d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30173] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f4e208389d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f4e208389d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30173] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30173] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30173] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f645be97a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f645be97a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30234] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f645be96d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f645be96d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f645be979fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30234] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30234] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30234] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7fabde767760 <main_arena>, bytes=512) at malloc.c:3562
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7fabde767760 <main_arena>, bytes=512) at malloc.c:3562
#1  0x00007fabde427ae0 in __GI___libc_malloc (bytes=512) at malloc.c:2893
#2  0x00007fabdef34f78 in operator new (sz=512) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fabdf22627e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fabdf225a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#6  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30305] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fabdf224d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fabdf224d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fabdf2259fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30305] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fabdf225a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fabdf225a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30305] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408437 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408437 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30305] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff4978029f6 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff4978029f6 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:205
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:205
#1  0x00007ff4978032df in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007ff497802a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff4978029e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff4978029e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff4978029db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff4978029db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe6b80ac269 in _int_free (av=0x7fe6b83ef760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3989
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe6b80ac269 in _int_free (av=0x7fe6b83ef760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3989
#1  0x00007fe6b8eae2b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fe6b8eada17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30468] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7fe6b83ef760 <main_arena>, bytes=512) at malloc.c:3381
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7fe6b83ef760 <main_arena>, bytes=512) at malloc.c:3381
#1  0x00007fe6b80afae0 in __GI___libc_malloc (bytes=512) at malloc.c:2893
#2  0x00007fe6b8bbcf78 in operator new (sz=512) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fe6b8eae27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fe6b8eada17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30468] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30468] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040901a in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040901a in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30468] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30521] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30521] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30521] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6b1ff2c8ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6b1ff2c8ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30521] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408416 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408416 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30592] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30592] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040901a in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040901a in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30592] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x0000000000408f91 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30592] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f6ff11de760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f6ff11de760 <main_arena>) at malloc.c:4145
#1  0x00007f6ff0e9c8b8 in _int_malloc (av=0x7f6ff11de760 <main_arena>, bytes=1024) at malloc.c:3425
#2  0x00007f6ff0e9eae0 in __GI___libc_malloc (bytes=1024) at malloc.c:2893
#3  0x00007f6ff19abf78 in operator new (sz=1024) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f6ff1c9d27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f6ff1c9ca17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#7  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30651] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6ff1c9bd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6ff1c9bd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30651] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30651] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30651] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30717] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8fc3b14dbc in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8fc3b14dbc in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30717] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30717] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30717] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30789] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x000000000040a1c8 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30789] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30789] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f043b5bfd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f043b5bfd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30789] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30858] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406c78 in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406c78 in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
#1  0x0000000000408547 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30858] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30858] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0d722dea0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0d722dea0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30858] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f08f282c760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f08f282c760 <main_arena>) at malloc.c:4145
#1  0x00007f08f24ea8b8 in _int_malloc (av=0x7f08f282c760 <main_arena>, bytes=1024) at malloc.c:3425
#2  0x00007f08f24ecae0 in __GI___libc_malloc (bytes=1024) at malloc.c:2893
#3  0x00007f08f2ff9f78 in operator new (sz=1024) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f08f32eb27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f08f32eaa17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#7  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30932] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084ca in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30932] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30932] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f08f32e9d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f08f32e9d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30932] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30991] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402629 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402629 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30991] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2718
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2718
#1  0x00007f3b9f1912df in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007f3b9f190a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30991] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 30991] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f903e6a6760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f903e6a6760 <main_arena>) at malloc.c:4145
#1  0x00007f903e3648b8 in _int_malloc (av=0x7f903e6a6760 <main_arena>, bytes=1024) at malloc.c:3425
#2  0x00007f903e366ae0 in __GI___libc_malloc (bytes=1024) at malloc.c:2893
#3  0x00007f903ee73f78 in operator new (sz=1024) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f903f16527e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f903f164a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#7  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31062] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f903e6a6760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f903e6a6760 <main_arena>) at malloc.c:4145
#1  0x00007f903e3648b8 in _int_malloc (av=0x7f903e6a6760 <main_arena>, bytes=1024) at malloc.c:3425
#2  0x00007f903e366ae0 in __GI___libc_malloc (bytes=1024) at malloc.c:2893
#3  0x00007f903ee73f78 in operator new (sz=1024) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f903f16527e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f903f164a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#7  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31062] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040845a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040845a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31062] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f903f1648ab in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f903f1648ab in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31062] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025f1 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025f1 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:138
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:138
#1  0x00007fdaadf752df in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fdaadf74a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31231] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31231] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fbaa732cd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fbaa732cd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31231] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31231] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408440 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408440 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31302] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3fce216da0 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3fce216da0 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31302] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3fce2179db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3fce2179db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31302] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3fcd4178f5 in _int_malloc (av=0x7f3fcd759760 <main_arena>, bytes=2048) at malloc.c:3794
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3fcd4178f5 in _int_malloc (av=0x7f3fcd759760 <main_arena>, bytes=2048) at malloc.c:3794
#1  0x00007f3fcd419ae0 in __GI___libc_malloc (bytes=2048) at malloc.c:2893
#2  0x00007f3fcdf26f78 in operator new (sz=2048) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007f3fce21827e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007f3fce217a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31302] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_free (av=0x7f18a59b1760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:4018
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_free (av=0x7f18a59b1760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:4018
#1  0x00007f18a64702b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007f18a646fa17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31368] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040843c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040843c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31368] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f18a646ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f18a646ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31368] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31368] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0eff3399e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0eff3399e9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31433] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f0eff339a06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f0eff339a06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31433] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31433] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31433] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31505] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f4d8c062a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f4d8c062a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31505] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f4d8c062a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f4d8c062a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31505] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025fa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025fa in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31505] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31576] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31576] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f68ff1a9d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f68ff1a9d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31576] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f68ff1a9dab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f68ff1a9dab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31576] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31648] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31648] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31648] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f43ed482d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f43ed482d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31648] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f9fd177c6a5 in _int_free (av=0x7f9fd1abf760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:4001
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f9fd177c6a5 in _int_free (av=0x7f9fd1abf760 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:4001
#1  0x00007f9fd257e2b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007f9fd257da17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31713] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f9fd257d982 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f9fd257d982 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31713] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31713] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31713] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fca45cc2d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fca45cc2d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31811] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fca45cc2d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fca45cc2d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31811] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31811] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31811] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31891] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31891] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31891] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31891] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1b34fc0d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1b34fc0d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31956] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31956] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1b34fc0d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1b34fc0d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31956] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1b34fc0d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1b34fc0d40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f1b34fc19fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 31956] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f469afcaa81 in __GI___libc_malloc (bytes=0) at malloc.c:2878
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f469afcaa81 in __GI___libc_malloc (bytes=0) at malloc.c:2878
#1  0x00007f469bad7f78 in operator new (sz=32) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#2  0x00007f469bdc927e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#3  0x00007f469bdc8a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#4  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#5  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32016] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f469bdc7d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f469bdc7d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x0000000000408f91 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32016] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040262d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040262d in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32016] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f469bdc7d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f469bdc7d60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32016] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040262d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040262d in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32087] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32087] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32087] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32087] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f08769fed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f08769fed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32159] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32159] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f08769ffa0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f08769ffa0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32159] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084f3 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084f3 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32159] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32224] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fceb909cd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fceb909cd5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32224] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7fceb85df760 <main_arena>, bytes=64) at malloc.c:3676
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7fceb85df760 <main_arena>, bytes=64) at malloc.c:3676
#1  0x00007fceb829fae0 in __GI___libc_malloc (bytes=64) at malloc.c:2893
#2  0x00007fceb8dacf78 in operator new (sz=64) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fceb909e27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fceb909da17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32224] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32224] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f57bfbbad4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f57bfbbad4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f57bfbbb9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32283] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32283] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f57bfbbad40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f57bfbbad40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32283] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2279
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2279
#1  0x00007f57bfbbc2df in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007f57bfbbba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32283] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040849d in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040849d in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32358] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f018d642d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f018d642d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32470] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040263b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040263b in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32470] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32470] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f018d6439f9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f018d6439f9 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32470] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025dd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025dd in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32543] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32543] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa3ca5f4a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa3ca5f4a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32543] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa3ca5f3d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa3ca5f3d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fa3ca5f49fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32543] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc36eaf9a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc36eaf9a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32609] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2559
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2559
#1  0x000000000040a2fa in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32609] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32609] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32609] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa446870a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa446870a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa4468712cc in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa4468712cc in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#1  0x00007fa446870a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f416d08f8bb in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f416d08f8bb in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32742] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f416d08ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f416d08ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32742] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32742] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f416c28f952 in malloc_printerr (ptr=<optimized out>, str=<optimized out>, action=<optimized out>) at malloc.c:4992
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f416c28f952 in malloc_printerr (ptr=<optimized out>, str=<optimized out>, action=<optimized out>) at malloc.c:4992
#1  _int_malloc (av=0x7f416c5d1760 <main_arena>, bytes=8) at malloc.c:3449
#2  0x00007f416c291ae0 in __GI___libc_malloc (bytes=8) at malloc.c:2893
#3  0x00007f416cd9ef78 in operator new (sz=8) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f416d09027e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f416d08fa17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#7  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 32742] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a0 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 351] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007faaea5838ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007faaea5838ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 351] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7faae9ac5760 <main_arena>, bytes=64) at malloc.c:3687
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7faae9ac5760 <main_arena>, bytes=64) at malloc.c:3687
#1  0x00007faae9785ae0 in __GI___libc_malloc (bytes=64) at malloc.c:2893
#2  0x00007faaea292f78 in operator new (sz=64) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007faaea58427e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007faaea583a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 351] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007faaea582d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007faaea582d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 351] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f53f48e7a85 in __GI___libc_malloc (bytes=2048) at malloc.c:2878
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f53f48e7a85 in __GI___libc_malloc (bytes=2048) at malloc.c:2878
#1  0x00007f53f53f4f78 in operator new (sz=2048) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#2  0x00007f53f56e627e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#3  0x00007f53f56e5a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#4  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#5  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 419] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 419] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f53f48e7b29 in __GI___libc_malloc (bytes=140722201789136) at malloc.c:2909
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f53f48e7b29 in __GI___libc_malloc (bytes=140722201789136) at malloc.c:2909
#1  0x00007f53f53f4f78 in operator new (sz=4) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#2  0x00007f53f56e627e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#3  0x00007f53f56e5a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#4  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#5  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 419] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 419] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 496] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004064b7 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004064b7 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x00007f981682c8c0 in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#2  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 496] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 496] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f981682c9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f981682c9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 496] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 555] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f7efdba5d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f7efdba5d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 555] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 555] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 555] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 661] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025f1 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025f1 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 661] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fd7c05a1c9c in _int_malloc (av=0x7fd7c08e3760 <main_arena>, bytes=128) at malloc.c:3667
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fd7c05a1c9c in _int_malloc (av=0x7fd7c08e3760 <main_arena>, bytes=128) at malloc.c:3667
#1  0x00007fd7c05a3ae0 in __GI___libc_malloc (bytes=128) at malloc.c:2893
#2  0x00007fd7c10b0f78 in operator new (sz=128) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007fd7c13a227e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007fd7c13a1a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#6  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 661] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 661] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fcaa31b2d48 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fcaa31b2d48 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fcaa31b39fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 733] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402670 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402670 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 733] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 733] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 733] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 798] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408437 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408437 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 798] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 798] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 798] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 875] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6ee1d2ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6ee1d2ed5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 875] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 875] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 875] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f9fbcb34d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f9fbcb34d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f9fbcb359fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 944] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 944] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 944] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 944] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a0 in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1013] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1013] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fded3a9ad4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fded3a9ad4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1013] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1013] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1095] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1095] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc3eeee4d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc3eeee4d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1095] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc3eeee59db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc3eeee59db in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1095] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6eb4abad64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6eb4abad64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f6eb4abb9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1169] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1169] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1169] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6eb4abadab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6eb4abadab in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1169] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f3c0cd0ad40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f3c0cd0ad40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1238] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1238] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2276
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2276
#1  0x00007f3c0cd0c2df in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007f3c0cd0ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1238] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a0 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1238] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1354] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1354] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1354] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1354] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1431] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1db821c247 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1db821c247 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#1  0x00007f1db821ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1431] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1431] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1431] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1491] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff6b469dd44 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff6b469dd44 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1491] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff6b469e9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff6b469e9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1491] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1491] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc0477478ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc0477478ca in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1563] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc047747a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc047747a0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1563] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1563] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fc047746d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fc047746d4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1563] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8a11e8ed60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8a11e8ed60 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f8a11e8f9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1649] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1649] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8a11e8f8e5 in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8a11e8f8e5 in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#1  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1649] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1649] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007efc56e7b76b in _int_malloc (av=0x7efc571bd760 <main_arena>, bytes=8) at malloc.c:3334
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007efc56e7b76b in _int_malloc (av=0x7efc571bd760 <main_arena>, bytes=8) at malloc.c:3334
#1  0x00007efc56e7dae0 in __GI___libc_malloc (bytes=8) at malloc.c:2893
#2  0x00007efc5798af78 in operator new (sz=8) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007efc57c7c27e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007efc57c7ba17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1709] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007efc57c7ad5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007efc57c7ad5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1709] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fff781f38c7 in ?? ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fff781f38c7 in ?? ()
#1  0x000000000070fda4 in ?? ()
#2  0x00007efc58083e90 in ?? ()
#3  0x0000000000000009 in ?? ()
#4  0x000000000070fd50 in ?? ()
#5  0x0000000000735ab8 in ?? ()
#6  0x0000000000000000 in ?? ()
A debugging session is active.

	Inferior 1 [process 1709] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a4 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a4 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1709] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1774] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406ccf in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406ccf in ghost::Objective<Unit>::expert_heuristic_value(std::vector<Unit, std::allocator<Unit> >*, Unit*, std::vector<int, std::allocator<int> > const&) const ()
#1  0x0000000000408547 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1774] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040900b in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040900b in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1774] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007face07fdd4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007face07fdd4b in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1774] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa73189dda0 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa73189dda0 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1845] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa73189ea0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa73189ea0a in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1845] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1845] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa73189ddbc in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa73189ddbc in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x00007fa73189e8ea in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#2  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1845] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f049aae49b2 in _int_malloc (av=0x7f049ae26760 <main_arena>, bytes=128) at malloc.c:3444
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f049aae49b2 in _int_malloc (av=0x7f049ae26760 <main_arena>, bytes=128) at malloc.c:3444
#1  0x00007f049aae6ae0 in __GI___libc_malloc (bytes=128) at malloc.c:2893
#2  0x00007f049b5f3f78 in operator new (sz=128) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00007f049b8e527e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#4  0x00007f049b8e4a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#5  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#6  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#7  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1926] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f049b8e3d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f049b8e3d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1926] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f049b8e4a06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f049b8e4a06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1926] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 1926] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040845a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040845a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2041] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2041] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2041] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040262d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040262d in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2041] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402633 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402633 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2108] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f8fcd825760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f8fcd825760 <main_arena>) at malloc.c:4145
#1  0x00007f8fcd4e38b8 in _int_malloc (av=0x7f8fcd825760 <main_arena>, bytes=1024) at malloc.c:3425
#2  0x00007f8fcd4e5ae0 in __GI___libc_malloc (bytes=1024) at malloc.c:2893
#3  0x00007f8fcdff2f78 in operator new (sz=1024) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00007f8fce2e427e in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#5  0x00007f8fce2e3a17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#6  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#7  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#8  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2108] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040260e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040260e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2108] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040263b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040263b in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2108] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f5b0822fd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f5b0822fd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2177] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2177] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004064ea in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004064ea in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x00007f5b082308c0 in ghost::Variable::do_random_initialization() () from /usr/local/lib/libghost.so
#2  0x000000000040a050 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2177] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025ad in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025ad in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2177] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fcf3f74e1b6 in _int_free (av=0x7fcf3fa91760 <main_arena>, p=0x2539d90, have_lock=0) at malloc.c:3922
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fcf3f74e1b6 in _int_free (av=0x7fcf3fa91760 <main_arena>, p=0x2539d90, have_lock=0) at malloc.c:3922
#1  0x00007fcf405502b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fcf4054fa17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#4  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2255] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a0 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2255] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402606 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402606 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2255] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408451 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408451 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2255] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084dc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025dd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025dd in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x0000000000408f91 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f29feff1d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f29feff1d5a in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2321] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402647 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402647 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2387] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f54c2eacd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f54c2eacd40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2387] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f54c2ead9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f54c2ead9d7 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2387] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2387] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fabc365fd44 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fabc365fd44 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x0000000000408f91 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2503] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025dd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025dd in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2503] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fabc365fd64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fabc365fd64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007fabc36609fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2503] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025cf in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025cf in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2503] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406583 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406583 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x0000000000409010 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2655] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2655] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2655] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2655] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x000000000040a088 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2727] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f1c2034ed40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f1c2034ed40 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f1c2034f9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2727] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2727] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401760 in ghost::Domain::get_value(int) const@plt ()
#1  0x0000000000402606 in Stock::required_cost() const ()
#2  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2727] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f968b96f9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f968b96f9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x00000000004083c4 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2796] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f968b96ed64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f968b96ed64 in ghost::Domain::get_value(int) const () from /usr/local/lib/libghost.so
#1  0x00007f968b96f9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2796] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402613 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402613 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2796] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2796] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084cf in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025eb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025eb in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402670 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402670 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe413da40d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe413da40d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
#1  0x00007fe413da59fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2988] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000401850 in ghost::Domain::index_of(int) const@plt ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000401850 in ghost::Domain::index_of(int) const@plt ()
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2988] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004025a4 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004025a4 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2988] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe413da4db9 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe413da4db9 in ghost::Domain::index_of(int) const () from /usr/local/lib/libghost.so
#1  0x000000000040841b in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 2988] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f904269d0d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f904269d0d0 in ghost::Domain::get_value(int) const@plt () from /usr/local/lib/libghost.so
#1  0x00007f904269e9fe in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#2  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3063] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3063] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3063] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402640 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402640 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3063] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f8d4a36b9df in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f8d4a36b9df in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3149] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3149] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3149] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004084c5 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3149] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3217] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f7b09fbba06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f7b09fbba06 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#1  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3217] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3217] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402670 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402670 in Stock::required_cost() const ()
#1  0x0000000000408f91 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3217] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402601 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402601 in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261a in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261a in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040261e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040261e in Stock::required_cost() const ()
#1  0x00000000004084a8 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a64d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__GI___libc_free (mem=0x1764580) at malloc.c:2919
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __GI___libc_free (mem=0x1764580) at malloc.c:2919
#1  0x00007fcbc57ab2b8 in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) () from /usr/local/lib/libghost.so
#2  0x00007fcbc57aaa17 in ghost::Variable::possible_values() const () from /usr/local/lib/libghost.so
#3  0x0000000000408e3c in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x000000000040a21c in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x0000000000401d6e in main ()
A debugging session is active.

	Inferior 1 [process 3290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
