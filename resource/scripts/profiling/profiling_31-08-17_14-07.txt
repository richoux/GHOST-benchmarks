[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16692] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16692] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16692] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16692] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c068 in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c068 in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16828] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402151 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402151 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16828] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16828] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402181 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402181 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16828] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16938] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16938] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16938] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 16938] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17012] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17012] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17012] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402181 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402181 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17012] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004060b8 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004060b8 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406047 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406047 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17143] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17143] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b504 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b504 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17143] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17143] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040bf80 in ghost::Variable::possible_values() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040bf80 in ghost::Variable::possible_values() const ()
#1  0x0000000000408994 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c05f in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c05f in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17290] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17349] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17349] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17349] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17349] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17409] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17409] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17409] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17409] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17474] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17474] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17474] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17474] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b540 in ghost::Domain::index_of(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b540 in ghost::Domain::index_of(int) const ()
#1  0x0000000000407fab in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17586] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17586] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004060d2 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004060d2 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17586] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17586] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17639] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7f6b55553760 <main_arena>, bytes=4) at malloc.c:3674
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7f6b55553760 <main_arena>, bytes=4) at malloc.c:3674
#1  0x00007f6b55213ae0 in __GI___libc_malloc (bytes=4) at malloc.c:2893
#2  0x00007f6b55d20f78 in operator new (sz=4) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00000000004066fe in void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&) ()
#4  0x0000000000408151 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#5  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17639] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17639] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b504 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b504 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17639] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17710] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17710] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17710] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17710] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17769] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17769] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17769] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021cb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021cb in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17769] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408050 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408050 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17847] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17847] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17847] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021cb in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021cb in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17847] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17917] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b540 in ghost::Domain::index_of(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b540 in ghost::Domain::index_of(int) const ()
#1  0x0000000000407fab in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 17982] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000409d98 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c08b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c08b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18112] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18210] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18281] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18281] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18281] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18281] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18337] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040213d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040213d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18337] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18337] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18337] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18411] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18411] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c08b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c08b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18411] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18411] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18489] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402148 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402148 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18489] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18489] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18489] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18542] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18542] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408bd2 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408bd2 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18542] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18542] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18616] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18616] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18616] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18616] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18687] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18687] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b504 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b504 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18687] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18687] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18740] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18740] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18740] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18740] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18799] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18799] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402130 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402130 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18799] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18799] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18904] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18904] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18904] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4eb in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4eb in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18904] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408083 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408083 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18969] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18969] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18969] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 18969] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19028] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19028] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19028] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19028] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408050 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408050 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c08b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c08b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19153] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19153] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021bd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021bd in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19153] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408072 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408072 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19153] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19219] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402148 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402148 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19219] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19219] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4eb in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4eb in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19219] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c095 in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c095 in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19278] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19278] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19278] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19278] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19331] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19331] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19331] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19331] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c06b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c06b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19396] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19396] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19396] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19396] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19464] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408043 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408043 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19464] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19464] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19464] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19530] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19530] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19530] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805f in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805f in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19530] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19629] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19629] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19629] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408083 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408083 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19629] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19706] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19706] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402181 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402181 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19706] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19706] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19777] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19777] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19777] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19777] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19864] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19864] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19864] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19864] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19924] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19924] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19924] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19924] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805f in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805f in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19980] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f6 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19980] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19980] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 19980] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20053] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20119] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040213d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040213d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20119] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20119] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021c3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021c3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20119] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20191] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20191] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20191] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040606d in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20191] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408759 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408759 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20284] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20284] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20284] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20284] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20367] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20367] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20367] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20367] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402162 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402162 in Stock::required_cost() const ()
#1  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20427] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20427] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20427] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20427] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20487] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20487] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20487] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20487] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20553] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20553] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20553] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20553] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20624] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20624] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20624] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20624] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402134 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402134 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20695] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021b9 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021b9 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c00a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c00a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20760] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20831] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20935] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20935] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b540 in ghost::Domain::index_of(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b540 in ghost::Domain::index_of(int) const ()
#1  0x0000000000407fab in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20935] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 20935] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21002] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21002] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fdc in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21002] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406077 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406077 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21002] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21077] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402130 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402130 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21142] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21142] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d7 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d7 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21142] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21142] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21222] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21222] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21222] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021a6 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021a6 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21222] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402148 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402148 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21300] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21300] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fd0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fd0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21300] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402134 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402134 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21300] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21377] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21377] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c087 in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c087 in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21377] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fd0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fd0 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21377] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21449] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21449] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21449] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021c3 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021c3 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21449] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040215f in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040215f in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21560] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21560] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21560] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21560] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21626] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21626] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b504 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b504 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21626] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402200 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402200 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21626] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:55
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __memmove_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:55
#1  0x00000000004089ef in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21685] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
_int_malloc (av=0x7f017c585760 <main_arena>, bytes=1524) at malloc.c:3580
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  _int_malloc (av=0x7f017c585760 <main_arena>, bytes=1524) at malloc.c:3580
#1  0x00007f017c245ae0 in __GI___libc_malloc (bytes=1524) at malloc.c:2893
#2  0x00007f017cd52f78 in operator new (sz=1524) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#3  0x00000000004089c6 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#4  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#5  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21685] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21685] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402167 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402167 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21685] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c095 in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c095 in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
malloc_consolidate (av=av@entry=0x7f9f25a84760 <main_arena>) at malloc.c:4145
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  malloc_consolidate (av=av@entry=0x7f9f25a84760 <main_arena>) at malloc.c:4145
#1  0x00007f9f257428b8 in _int_malloc (av=0x7f9f25a84760 <main_arena>, bytes=1524) at malloc.c:3425
#2  0x00007f9f25744ae0 in __GI___libc_malloc (bytes=1524) at malloc.c:2893
#3  0x00007f9f26251f78 in operator new (sz=1524) at ../../../../libstdc++-v3/libsupc++/new_op.cc:50
#4  0x00000000004089c6 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#5  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#6  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21762] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21827] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021b9 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021b9 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21827] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21827] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21827] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021b9 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021b9 in Stock::required_cost() const ()
#1  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21899] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21899] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021bd in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021bd in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21899] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21899] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 21970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22029] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22029] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22029] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22029] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b540 in ghost::Domain::index_of(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b540 in ghost::Domain::index_of(int) const ()
#1  0x0000000000407fab in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040213d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040213d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040213d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040213d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22094] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040217b in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040217b in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22160] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22254] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22254] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22254] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22254] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22326] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004060c8 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004060c8 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22326] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408043 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408043 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22326] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22326] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22397] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22397] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22397] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22397] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22463] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22463] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402196 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402196 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22463] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407f98 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22463] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22523] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22523] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22523] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22523] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22597] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407fea in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407fea in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22597] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4ef in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4ef in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22597] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22597] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c05b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c05b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402181 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402181 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22669] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22729] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22729] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4ef in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4ef in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22729] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22729] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c08b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c08b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22795] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408055 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22795] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22795] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22795] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22905] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22905] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22905] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#3  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22905] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b504 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b504 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c08b in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c08b in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000409c58 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 22970] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23037] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23037] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23037] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402148 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402148 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23037] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23110] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23110] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23110] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23110] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408b49 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#2  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23175] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040805a in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23175] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c023 in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c023 in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23175] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23175] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23242] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402196 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402196 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23242] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23242] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23242] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23301] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040612a in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040612a in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23301] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e0 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23301] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23301] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23372] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000406077 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000406077 in std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() ()
#1  0x000000000040c070 in ghost::Variable::do_random_initialization() ()
#2  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23372] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23372] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23372] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23443] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23443] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021ae in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021ae in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23443] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e4 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23443] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402139 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402139 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23547] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23547] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040219e in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040219e in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23547] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4e8 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23547] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4fa in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4fa in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23612] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040806c in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#1  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23612] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021aa in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021aa in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23612] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b500 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b500 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23612] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040216d in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040216d in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23689] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040215f in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040215f in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23689] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23689] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408b63 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408b63 in ghost::Solver<Unit, Stock>::compute_variables_costs(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double) const ()
#1  0x0000000000409dec in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23689] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040c07a in ghost::Variable::do_random_initialization() ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040c07a in ghost::Variable::do_random_initialization() ()
#1  0x0000000000409c20 in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#2  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23768] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040b4f2 in ghost::Domain::get_value(int) const ()
#1  0x0000000000402196 in Stock::required_cost() const ()
#2  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#3  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#4  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23768] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004021d0 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004021d0 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23768] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000402191 in Stock::required_cost() const ()
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000402191 in Stock::required_cost() const ()
#1  0x0000000000408038 in ghost::Solver<Unit, Stock>::local_move(Unit*, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double&) ()
#2  0x000000000040a21d in ghost::Solver<Unit, Stock>::solve(double&, std::vector<int, std::allocator<int> >&, double, double) ()
#3  0x000000000040188e in main ()
A debugging session is active.

	Inferior 1 [process 23768] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
