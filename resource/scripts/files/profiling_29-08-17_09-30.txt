[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe7fb11f912 in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffef72a5080, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe7fb11f912 in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffef72a5080, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007fe7fb11f58d in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:128
#2  0x00007fe7fb11f1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fe7fb11eccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffef72a5174: 154) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fe7fb11e346 in ghost::Domain::index_of (this=0x7fe7fb527680, value=154) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fe7fb527630, value=154) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007fe7fb1200f2 in ghost::Variable::do_random_initialization (this=0x7fe7fb527630) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffef72a5720) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffef72a5720, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffef72a5720, finalCost=@0x7ffef72a5718: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffef72a8178) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30271] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffef72a5090) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffef72a5090) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007fe7fb11f54e in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:122
#2  0x00007fe7fb11f1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fe7fb11eccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffef72a5164: 178) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fe7fb11e346 in ghost::Domain::index_of (this=0x7fe7fb51d800, value=178) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fe7fb51d7b0, value=178) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffef72a5720, variable=0x7fe7fb51d7b0, value=178, costConstraints=..., currentSatCost=982) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffef72a5720, variable=0x7fe7fb51d7b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffef72a53f8: 982) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffef72a5720, finalCost=@0x7ffef72a5718: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffef72a8178) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30271] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator* (this=0x7ffef72a4ff0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:753
753	      operator*() const _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator* (this=0x7ffef72a4ff0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:753
#1  0x00007fe7fb11f902 in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffef72a5010, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#2  0x00007fe7fb11f535 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:120
#3  0x00007fe7fb11f1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#4  0x00007fe7fb11eccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffef72a5104: 64) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#5  0x00007fe7fb11e346 in ghost::Domain::index_of (this=0x7fe7fb524ee0, value=64) at src/domain.cpp:78
#6  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fe7fb524e90, value=64) at /usr/local/include/ghost/variable.hpp:146
#7  0x0000000000408561 in ghost::Objective<Unit>::expert_heuristic_value (this=0x225bd30, variables=0x7ffef72a7f50, var=0x7fe7fb524e90, possible_values=...) at /usr/local/include/ghost/objective.hpp:276
#8  0x000000000040ecd6 in ghost::Objective<Unit>::heuristic_value (this=0x225bd30, variables=0x7ffef72a7f50, var=0x7fe7fb524e90, possible_values=...) at /usr/local/include/ghost/objective.hpp:108
#9  0x000000000040d264 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffef72a5720, variable=0x7fe7fb524e90, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffef72a53f8: 7750) at /usr/local/include/ghost/solver.hpp:653
#10 0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffef72a5720, finalCost=@0x7ffef72a5718: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#11 0x00000000004094b2 in main (argc=1, argv=0x7ffef72a8178) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30271] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fe7fb11f559 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
124		  if (__pred(__first))
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fe7fb11f559 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#1  0x00007fe7fb11f1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#2  0x00007fe7fb11eccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffef72a5164: 355) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#3  0x00007fe7fb11e346 in ghost::Domain::index_of (this=0x7fe7fb527680, value=355) at src/domain.cpp:78
#4  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fe7fb527630, value=355) at /usr/local/include/ghost/variable.hpp:146
#5  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffef72a5720, variable=0x7fe7fb527630, value=355, costConstraints=..., currentSatCost=11108) at /usr/local/include/ghost/solver.hpp:580
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffef72a5720, variable=0x7fe7fb527630, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffef72a53f8: 11108) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffef72a5720, finalCost=@0x7ffef72a5718: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffef72a8178) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30271] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00000000004087a6 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator* (this=0x7ffcca357fd0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:753
753	      operator*() const _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00000000004087a6 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator* (this=0x7ffcca357fd0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:753
#1  0x00007f9a05064902 in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcca357ff0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#2  0x00007f9a05064561 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#3  0x00007f9a050641d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#4  0x00007f9a05063ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcca3580e4: 374) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#5  0x00007f9a05063346 in ghost::Domain::index_of (this=0x7f9a05460060, value=374) at src/domain.cpp:78
#6  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f9a05460010, value=374) at /usr/local/include/ghost/variable.hpp:146
#7  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcca3586a0, variable=0x7f9a05460010, value=374, costConstraints=..., currentSatCost=89838) at /usr/local/include/ghost/solver.hpp:580
#8  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcca3586a0, variable=0x7f9a05460010, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcca358378: 89838) at /usr/local/include/ghost/solver.hpp:634
#9  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcca3586a0, finalCost=@0x7ffcca358698: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffcca35b0f8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30421] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffcca357ff0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:761
761	      operator++() _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffcca357ff0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:761
#1  0x00007f9a0506457a in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:126
#2  0x00007f9a050641d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007f9a05063ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcca3580e4: 220) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007f9a05063346 in ghost::Domain::index_of (this=0x7f9a0546ee20, value=220) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f9a0546edd0, value=220) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcca3586a0, variable=0x7f9a0546edd0, value=220, costConstraints=..., currentSatCost=140640) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcca3586a0, variable=0x7f9a0546edd0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcca358378: 140640) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcca3586a0, finalCost=@0x7ffcca358698: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffcca35b0f8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30421] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:132
132		  if (__pred(__first))
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:132
#1  0x00007f9a050641d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#2  0x00007f9a05063ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcca3580f4: 208) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#3  0x00007f9a05063346 in ghost::Domain::index_of (this=0x7f9a05473d60, value=208) at src/domain.cpp:78
#4  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f9a05473d10, value=208) at /usr/local/include/ghost/variable.hpp:146
#5  0x00007f9a050650f2 in ghost::Variable::do_random_initialization (this=0x7f9a05473d10) at src/variable.cpp:81
#6  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffcca3586a0) at /usr/local/include/ghost/solver.hpp:513
#7  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffcca3586a0, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#8  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcca3586a0, finalCost=@0x7ffcca358698: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffcca35b0f8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30421] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040809e in std::vector<int, std::allocator<int> >::end (this=0x7f9a05462800) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:575
575	      { return const_iterator(this->_M_impl._M_finish); }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040809e in std::vector<int, std::allocator<int> >::end (this=0x7f9a05462800) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:575
#1  0x00007f9a050638fe in std::end<std::vector<int, std::allocator<int> > > (__cont=...) at /usr/local/include/c++/5.2.0/bits/range_access.h:79
#2  0x00007f9a05063356 in ghost::Domain::index_of (this=0x7f9a05462800, value=373) at src/domain.cpp:79
#3  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f9a054627b0, value=373) at /usr/local/include/ghost/variable.hpp:146
#4  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcca3586a0, variable=0x7f9a054627b0, value=373, costConstraints=..., currentSatCost=81944) at /usr/local/include/ghost/solver.hpp:580
#5  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcca3586a0, variable=0x7f9a054627b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcca358378: 81944) at /usr/local/include/ghost/solver.hpp:634
#6  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcca3586a0, finalCost=@0x7ffcca358698: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#7  0x00000000004094b2 in main (argc=1, argv=0x7ffcca35b0f8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30421] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f34b0c7f2a2 in ghost::Domain::get_value (this=0x7f34b108ae20, index=374) at src/domain.cpp:70
70	  if( index >=0 && index < (int)_domain.size() )
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f34b0c7f2a2 in ghost::Domain::get_value (this=0x7f34b108ae20, index=374) at src/domain.cpp:70
#1  0x0000000000404522 in ghost::Variable::get_value (this=0x7f34b108add0) at /usr/local/include/ghost/variable.hpp:137
#2  0x0000000000404438 in Stock::required_cost (this=0x229a960) at src/ctr_stock.cpp:37
#3  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x229a960) at /usr/local/include/ghost/constraint.hpp:102
#4  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffce2997e60, variable=0x7f34b108add0, value=374, costConstraints=..., currentSatCost=54387) at /usr/local/include/ghost/solver.hpp:582
#5  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffce2997e60, variable=0x7f34b108add0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffce2997b38: 54387) at /usr/local/include/ghost/solver.hpp:634
#6  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffce2997e60, finalCost=@0x7ffce2997e58: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#7  0x00000000004094b2 in main (argc=1, argv=0x7ffce299a8b8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30516] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000404686 in __gnu_cxx::operator!=<Unit*, std::vector<Unit, std::allocator<Unit> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:841
841	    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000404686 in __gnu_cxx::operator!=<Unit*, std::vector<Unit, std::allocator<Unit> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:841
#1  0x00000000004043a6 in Stock::required_cost (this=0x22a0aa0) at src/ctr_stock.cpp:20
#2  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x22a0aa0) at /usr/local/include/ghost/constraint.hpp:102
#3  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffce2997e60, variable=0x7f34b108fd10, value=367, costConstraints=..., currentSatCost=84553) at /usr/local/include/ghost/solver.hpp:582
#4  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffce2997e60, variable=0x7f34b108fd10, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffce2997b38: 84553) at /usr/local/include/ghost/solver.hpp:634
#5  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffce2997e60, finalCost=@0x7ffce2997e58: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#6  0x00000000004094b2 in main (argc=1, argv=0x7ffce299a8b8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30516] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000409ed6 in std::vector<int, std::allocator<int> >::operator[] (this=0x7f34b1083740, __n=0) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:794
794	      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000409ed6 in std::vector<int, std::allocator<int> >::operator[] (this=0x7f34b1083740, __n=0) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:794
#1  0x00007f34b0c7f2c2 in ghost::Domain::get_value (this=0x7f34b1083740, index=0) at src/domain.cpp:71
#2  0x0000000000404522 in ghost::Variable::get_value (this=0x7f34b10836f0) at /usr/local/include/ghost/variable.hpp:137
#3  0x0000000000404438 in Stock::required_cost (this=0x22a0ac0) at src/ctr_stock.cpp:37
#4  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x22a0ac0) at /usr/local/include/ghost/constraint.hpp:102
#5  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffce2997e60, variable=0x7f34b108fd10, value=174, costConstraints=..., currentSatCost=25565) at /usr/local/include/ghost/solver.hpp:582
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffce2997e60, variable=0x7f34b108fd10, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffce2997b38: 25565) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffce2997e60, finalCost=@0x7ffce2997e58: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffce299a8b8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30516] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040878e in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffce29977e0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040878e in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffce29977e0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007f34b0c8057a in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:126
#2  0x00007f34b0c801d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007f34b0c7fccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffce29978b4: 277) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007f34b0c7f346 in ghost::Domain::index_of (this=0x7f34b107c060, value=277) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f34b107c010, value=277) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007f34b0c810f2 in ghost::Variable::do_random_initialization (this=0x7f34b107c010) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffce2997e60) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffce2997e60, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffce2997e60, finalCost=@0x7ffce2997e58: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffce299a8b8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30516] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc50, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc50, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007fa3942ce5b9 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:132
#2  0x00007fa3942ce1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fa3942cdccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffe1806dd44: 154) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fa3942cd346 in ghost::Domain::index_of (this=0x7fa3946d1740, value=154) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fa3946d16f0, value=154) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007fa3942cf0f2 in ghost::Variable::do_random_initialization (this=0x7fa3946d16f0) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffe1806e2f0) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffe1806e2f0, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe1806e2f0, finalCost=@0x7ffe1806e2e8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffe18070d48) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30679] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
std::vector<int, std::allocator<int> >::size (this=0x7fa3946ca060) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:655
655	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  std::vector<int, std::allocator<int> >::size (this=0x7fa3946ca060) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:655
#1  0x00007fa3942cd298 in ghost::Domain::get_value (this=0x7fa3946ca060, index=27) at src/domain.cpp:70
#2  0x0000000000404522 in ghost::Variable::get_value (this=0x7fa3946ca010) at /usr/local/include/ghost/variable.hpp:137
#3  0x0000000000404438 in Stock::required_cost (this=0x132a8a0) at src/ctr_stock.cpp:37
#4  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x132a8a0) at /usr/local/include/ghost/constraint.hpp:102
#5  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe1806e2f0, variable=0x7fa3946cc7b0, value=305, costConstraints=..., currentSatCost=58364) at /usr/local/include/ghost/solver.hpp:582
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe1806e2f0, variable=0x7fa3946cc7b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe1806dfc8: 58364) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe1806e2f0, finalCost=@0x7ffe1806e2e8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffe18070d48) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30679] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc70, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
193		operator()(_Iterator __it)
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc70, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
#1  0x00007fa3942ce535 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:120
#2  0x00007fa3942ce1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fa3942cdccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffe1806dd44: 233) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fa3942cd346 in ghost::Domain::index_of (this=0x7fa3946d1740, value=233) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fa3946d16f0, value=233) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007fa3942cf0f2 in ghost::Variable::do_random_initialization (this=0x7fa3946d16f0) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffe1806e2f0) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffe1806e2f0, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe1806e2f0, finalCost=@0x7ffe1806e2e8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffe18070d48) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30679] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fa3942ce8fd in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc40, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fa3942ce8fd in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffe1806dc40, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007fa3942ce58d in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:128
#2  0x00007fa3942ce1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fa3942cdccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffe1806dd34: 163) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fa3942cd346 in ghost::Domain::index_of (this=0x7fa3946d6680, value=163) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fa3946d6630, value=163) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe1806e2f0, variable=0x7fa3946d6630, value=163, costConstraints=..., currentSatCost=66321) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe1806e2f0, variable=0x7fa3946d6630, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe1806dfc8: 66321) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe1806e2f0, finalCost=@0x7ffe1806e2e8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffe18070d48) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30679] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd5f0fedf0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd5f0fedf0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007ff91a75e54e in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:122
#2  0x00007ff91a75e1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007ff91a75dccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffd5f0feec4: 330) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007ff91a75d346 in ghost::Domain::index_of (this=0x7ff91ab5c800, value=330) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7ff91ab5c7b0, value=330) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd5f0ff480, variable=0x7ff91ab5c7b0, value=330, costConstraints=..., currentSatCost=19666) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd5f0ff480, variable=0x7ff91ab5c7b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd5f0ff158: 19666) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd5f0ff480, finalCost=@0x7ffd5f0ff478: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffd5f101ed8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007ff91a75e90d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffd5f0fede0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007ff91a75e90d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffd5f0fede0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007ff91a75e58d in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:128
#2  0x00007ff91a75e1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007ff91a75dccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffd5f0feed4: 280) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007ff91a75d346 in ghost::Domain::index_of (this=0x7ff91ab6dd60, value=280) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7ff91ab6dd10, value=280) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007ff91a75f0f2 in ghost::Variable::do_random_initialization (this=0x7ff91ab6dd10) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffd5f0ff480) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffd5f0ff480, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd5f0ff480, finalCost=@0x7ffd5f0ff478: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffd5f101ed8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040d854 in __gnu_cxx::operator!=<Stock*, std::vector<Stock, std::allocator<Stock> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:844
844	    { return __lhs.base() != __rhs.base(); }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040d854 in __gnu_cxx::operator!=<Stock*, std::vector<Stock, std::allocator<Stock> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:844
#1  0x000000000040ec24 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd5f0ff480, variable=0x7ff91ab5c7b0, value=325, costConstraints=..., currentSatCost=97424) at /usr/local/include/ghost/solver.hpp:581
#2  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd5f0ff480, variable=0x7ff91ab5c7b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd5f0ff158: 97424) at /usr/local/include/ghost/solver.hpp:634
#3  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd5f0ff480, finalCost=@0x7ffd5f0ff478: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#4  0x00000000004094b2 in main (argc=1, argv=0x7ffd5f101ed8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040445e in Stock::required_cost (this=0xec6920) at src/ctr_stock.cpp:20
20	  for( auto& v : *variables )
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040445e in Stock::required_cost (this=0xec6920) at src/ctr_stock.cpp:20
#1  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0xec6920) at /usr/local/include/ghost/constraint.hpp:102
#2  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd5f0ff480, variable=0x7ff91ab68dd0, value=290, costConstraints=..., currentSatCost=6225) at /usr/local/include/ghost/solver.hpp:582
#3  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd5f0ff480, variable=0x7ff91ab68dd0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd5f0ff158: 6225) at /usr/local/include/ghost/solver.hpp:634
#4  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd5f0ff480, finalCost=@0x7ffd5f0ff478: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#5  0x00000000004094b2 in main (argc=1, argv=0x7ffd5f101ed8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30810] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd7bfe86e0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd7bfe86e0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007fb8a2b8054e in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:122
#2  0x00007fb8a2b801d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fb8a2b7fccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffd7bfe87b4: 371) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fb8a2b7f346 in ghost::Domain::index_of (this=0x7fb8a2f8fd60, value=371) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fb8a2f8fd10, value=371) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd7bfe8d70, variable=0x7fb8a2f8fd10, value=371, costConstraints=..., currentSatCost=39573) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd7bfe8d70, variable=0x7fb8a2f8fd10, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd7bfe8a48: 39573) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd7bfe8d70, finalCost=@0x7ffd7bfe8d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffd7bfeb7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30916] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040444d in Stock::required_cost (this=0x225fac0) at src/ctr_stock.cpp:37
37	    sum += ( v.get_value() * costValue );
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040444d in Stock::required_cost (this=0x225fac0) at src/ctr_stock.cpp:37
#1  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x225fac0) at /usr/local/include/ghost/constraint.hpp:102
#2  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd7bfe8d70, variable=0x7fb8a2f8fd10, value=211, costConstraints=..., currentSatCost=53507) at /usr/local/include/ghost/solver.hpp:582
#3  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd7bfe8d70, variable=0x7fb8a2f8fd10, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd7bfe8a48: 53507) at /usr/local/include/ghost/solver.hpp:634
#4  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd7bfe8d70, finalCost=@0x7ffd7bfe8d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#5  0x00000000004094b2 in main (argc=1, argv=0x7ffd7bfeb7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30916] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fb8a2b8090d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffd7bfe86c0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fb8a2b8090d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffd7bfe86c0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007fb8a2b8058d in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:128
#2  0x00007fb8a2b801d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fb8a2b7fccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffd7bfe87b4: 297) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fb8a2b7f346 in ghost::Domain::index_of (this=0x7fb8a2f85ee0, value=297) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fb8a2f85e90, value=297) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd7bfe8d70, variable=0x7fb8a2f85e90, value=297, costConstraints=..., currentSatCost=55490) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd7bfe8d70, variable=0x7fb8a2f85e90, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd7bfe8a48: 55490) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd7bfe8d70, finalCost=@0x7ffd7bfe8d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffd7bfeb7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30916] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408783 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd7bfe86c0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:761
761	      operator++() _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408783 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffd7bfe86c0) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:761
#1  0x00007fb8a2b8057a in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:126
#2  0x00007fb8a2b801d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fb8a2b7fccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffd7bfe87b4: 125) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fb8a2b7f346 in ghost::Domain::index_of (this=0x7fb8a2f85ee0, value=125) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fb8a2f85e90, value=125) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffd7bfe8d70, variable=0x7fb8a2f85e90, value=125, costConstraints=..., currentSatCost=9378) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffd7bfe8d70, variable=0x7fb8a2f85e90, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffd7bfe8a48: 9378) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffd7bfe8d70, finalCost=@0x7ffd7bfe8d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffd7bfeb7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 30916] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007faddf7748ea in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269830, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
193		operator()(_Iterator __it)
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007faddf7748ea in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269830, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
#1  0x00007faddf774535 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:120
#2  0x00007faddf7741d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007faddf773ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcfa269904: 264) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007faddf773346 in ghost::Domain::index_of (this=0x7faddfb77740, value=264) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7faddfb776f0, value=264) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcfa269ec0, variable=0x7faddfb776f0, value=264, costConstraints=..., currentSatCost=104969) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcfa269ec0, variable=0x7faddfb776f0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcfa269b98: 104969) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcfa269ec0, finalCost=@0x7ffcfa269eb8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffcfa26c918) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31038] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408799 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffcfa269840) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408799 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffcfa269840) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007faddf7745d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:134
#2  0x00007faddf7741d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007faddf773ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcfa269914: 229) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007faddf773346 in ghost::Domain::index_of (this=0x7faddfb72800, value=229) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7faddfb727b0, value=229) at /usr/local/include/ghost/variable.hpp:146
#6  0x00007faddf7750f2 in ghost::Variable::do_random_initialization (this=0x7faddfb727b0) at src/variable.cpp:81
#7  0x000000000040e1c0 in ghost::Solver<Unit, Stock>::monte_carlo_sampling (this=0x7ffcfa269ec0) at /usr/local/include/ghost/solver.hpp:513
#8  0x000000000040bfe4 in ghost::Solver<Unit, Stock>::set_initial_configuration (this=0x7ffcfa269ec0, samplings=100) at /usr/local/include/ghost/solver.hpp:487
#9  0x000000000040a7c4 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcfa269ec0, finalCost=@0x7ffcfa269eb8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:293
#10 0x00000000004094b2 in main (argc=1, argv=0x7ffcfa26c918) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31038] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269830, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
193		operator()(_Iterator __it)
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269830, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:193
#1  0x00007faddf774561 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#2  0x00007faddf7741d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007faddf773ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcfa269904: 246) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007faddf773346 in ghost::Domain::index_of (this=0x7faddfb70060, value=246) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7faddfb70010, value=246) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcfa269ec0, variable=0x7faddfb70010, value=246, costConstraints=..., currentSatCost=15768) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcfa269ec0, variable=0x7faddfb70010, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcfa269b98: 15768) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcfa269ec0, finalCost=@0x7ffcfa269eb8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffcfa26c918) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31038] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007faddf77490d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269810, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007faddf77490d in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffcfa269810, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007faddf774561 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#2  0x00007faddf7741d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007faddf773ccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffcfa269904: 126) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007faddf773346 in ghost::Domain::index_of (this=0x7faddfb74fa0, value=126) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7faddfb74f50, value=126) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffcfa269ec0, variable=0x7faddfb74f50, value=126, costConstraints=..., currentSatCost=354) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffcfa269ec0, variable=0x7faddfb74f50, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffcfa269b98: 354) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffcfa269ec0, finalCost=@0x7ffcfa269eb8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffcfa26c918) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31038] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000407d93 in std::vector<int, std::allocator<int> >::size (this=0x7efdd8575e20) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:655
655	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000407d93 in std::vector<int, std::allocator<int> >::size (this=0x7efdd8575e20) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:655
#1  0x00007efdd816a298 in ghost::Domain::get_value (this=0x7efdd8575e20, index=0) at src/domain.cpp:70
#2  0x0000000000404522 in ghost::Variable::get_value (this=0x7efdd8575dd0) at /usr/local/include/ghost/variable.hpp:137
#3  0x0000000000404438 in Stock::required_cost (this=0x1cbcf30) at src/ctr_stock.cpp:37
#4  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x1cbcf30) at /usr/local/include/ghost/constraint.hpp:102
#5  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe3a348410, variable=0x7efdd856e6f0, value=40, costConstraints=..., currentSatCost=129000) at /usr/local/include/ghost/solver.hpp:582
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe3a348410, variable=0x7efdd856e6f0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe3a3480e8: 129000) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe3a348410, finalCost=@0x7ffe3a348408: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffe3a34ae68) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31198] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffe3a347d80) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:765
765	      }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffe3a347d80) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:765
#1  0x00007efdd816b5a6 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:130
#2  0x00007efdd816b1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007efdd816accd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffe3a347e54: 176) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007efdd816a346 in ghost::Domain::index_of (this=0x7efdd8575e20, value=176) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7efdd8575dd0, value=176) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe3a348410, variable=0x7efdd8575dd0, value=176, costConstraints=..., currentSatCost=72123) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe3a348410, variable=0x7efdd8575dd0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe3a3480e8: 72123) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe3a348410, finalCost=@0x7ffe3a348408: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffe3a34ae68) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31198] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007efdd8169f80 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++()@plt () from /usr/local/lib/libghost.so
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007efdd8169f80 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++()@plt () from /usr/local/lib/libghost.so
#1  0x00007efdd816b54e in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:122
#2  0x00007efdd816b1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007efdd816accd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffe3a347e54: 363) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007efdd816a346 in ghost::Domain::index_of (this=0x7efdd8573680, value=363) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7efdd8573630, value=363) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe3a348410, variable=0x7efdd8573630, value=363, costConstraints=..., currentSatCost=12354) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe3a348410, variable=0x7efdd8573630, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe3a3480e8: 12354) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe3a348410, finalCost=@0x7ffe3a348408: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffe3a34ae68) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31198] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000404712 in __gnu_cxx::__normal_iterator<Unit*, std::vector<Unit, std::allocator<Unit> > >::base (this=0x7efdd8567060) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:805
805	      base() const _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000404712 in __gnu_cxx::__normal_iterator<Unit*, std::vector<Unit, std::allocator<Unit> > >::base (this=0x7efdd8567060) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:805
#1  0x000000000040469a in __gnu_cxx::operator!=<Unit*, std::vector<Unit, std::allocator<Unit> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:844
#2  0x00000000004043a6 in Stock::required_cost (this=0x1cb88c0) at src/ctr_stock.cpp:20
#3  0x000000000040e1f1 in ghost::Constraint<Unit>::cost (this=0x1cb88c0) at /usr/local/include/ghost/constraint.hpp:102
#4  0x000000000040ec44 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffe3a348410, variable=0x7efdd85697b0, value=96, costConstraints=..., currentSatCost=50432) at /usr/local/include/ghost/solver.hpp:582
#5  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffe3a348410, variable=0x7efdd85697b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffe3a3480e8: 50432) at /usr/local/include/ghost/solver.hpp:634
#6  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffe3a348410, finalCost=@0x7ffe3a348408: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#7  0x00000000004094b2 in main (argc=1, argv=0x7ffe3a34ae68) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31198] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040d82e in __gnu_cxx::operator!=<Stock*, std::vector<Stock, std::allocator<Stock> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:841
841	    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040d82e in __gnu_cxx::operator!=<Stock*, std::vector<Stock, std::allocator<Stock> > > (__lhs=..., __rhs=...) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:841
#1  0x000000000040ec24 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffda1ff8200, variable=0x7f6c3e9c87b0, value=196, costConstraints=..., currentSatCost=104807) at /usr/local/include/ghost/solver.hpp:581
#2  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffda1ff8200, variable=0x7f6c3e9c87b0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffda1ff7ed8: 104807) at /usr/local/include/ghost/solver.hpp:634
#3  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffda1ff8200, finalCost=@0x7ffda1ff81f8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#4  0x00000000004094b2 in main (argc=1, argv=0x7ffda1ffac58) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31338] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
ghost::Domain::index_of (this=0x7f6c3e9cafa0, value=234) at src/domain.cpp:82
82	    return it - begin( _domain );
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  ghost::Domain::index_of (this=0x7f6c3e9cafa0, value=234) at src/domain.cpp:82
#1  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f6c3e9caf50, value=234) at /usr/local/include/ghost/variable.hpp:146
#2  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffda1ff8200, variable=0x7f6c3e9caf50, value=234, costConstraints=..., currentSatCost=83853) at /usr/local/include/ghost/solver.hpp:580
#3  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffda1ff8200, variable=0x7f6c3e9caf50, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffda1ff7ed8: 83853) at /usr/local/include/ghost/solver.hpp:634
#4  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffda1ff8200, finalCost=@0x7ffda1ff81f8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#5  0x00000000004094b2 in main (argc=1, argv=0x7ffda1ffac58) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31338] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffda1ff7b70) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
763		++_M_current;
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x0000000000408791 in __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++ (this=0x7ffda1ff7b70) at /usr/local/include/c++/5.2.0/bits/stl_iterator.h:763
#1  0x00007f6c3e5cc54e in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:122
#2  0x00007f6c3e5cc1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007f6c3e5cbccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffda1ff7c44: 339) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007f6c3e5cb346 in ghost::Domain::index_of (this=0x7f6c3e9cafa0, value=339) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f6c3e9caf50, value=339) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffda1ff8200, variable=0x7f6c3e9caf50, value=339, costConstraints=..., currentSatCost=149230) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffda1ff8200, variable=0x7f6c3e9caf50, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffda1ff7ed8: 149230) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffda1ff8200, finalCost=@0x7ffda1ff81f8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffda1ffac58) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31338] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007f6c3e5cc90f in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffda1ff7b50, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007f6c3e5cc90f in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffda1ff7b50, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007f6c3e5cc561 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#2  0x00007f6c3e5cc1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007f6c3e5cbccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffda1ff7c44: 252) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007f6c3e5cb346 in ghost::Domain::index_of (this=0x7f6c3e9d4e20, value=252) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7f6c3e9d4dd0, value=252) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffda1ff8200, variable=0x7f6c3e9d4dd0, value=252, costConstraints=..., currentSatCost=45757) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffda1ff8200, variable=0x7f6c3e9d4dd0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffda1ff7ed8: 45757) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffda1ff8200, finalCost=@0x7ffda1ff81f8: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffda1ffac58) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31338] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:118
118	      for (; __trip_count > 0; --__trip_count)
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:118
#1  0x00007fcd9b0fc1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#2  0x00007fcd9b0fbccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffc6dca77b4: 176) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#3  0x00007fcd9b0fb346 in ghost::Domain::index_of (this=0x7fcd9b506e20, value=176) at src/domain.cpp:78
#4  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fcd9b506dd0, value=176) at /usr/local/include/ghost/variable.hpp:146
#5  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffc6dca7d70, variable=0x7fcd9b506dd0, value=176, costConstraints=..., currentSatCost=10313) at /usr/local/include/ghost/solver.hpp:580
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffc6dca7d70, variable=0x7fcd9b506dd0, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffc6dca7a48: 10313) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffc6dca7d70, finalCost=@0x7ffc6dca7d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffc6dcaa7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31442] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
124		  if (__pred(__first))
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:124
#1  0x00007fcd9b0fc1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#2  0x00007fcd9b0fbccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffc6dca77b4: 201) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#3  0x00007fcd9b0fb346 in ghost::Domain::index_of (this=0x7fcd9b501ee0, value=201) at src/domain.cpp:78
#4  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fcd9b501e90, value=201) at /usr/local/include/ghost/variable.hpp:146
#5  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffc6dca7d70, variable=0x7fcd9b501e90, value=201, costConstraints=..., currentSatCost=22068) at /usr/local/include/ghost/solver.hpp:580
#6  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffc6dca7d70, variable=0x7fcd9b501e90, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffc6dca7a48: 22068) at /usr/local/include/ghost/solver.hpp:634
#7  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffc6dca7d70, finalCost=@0x7ffc6dca7d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#8  0x00000000004094b2 in main (argc=1, argv=0x7ffc6dcaa7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31442] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x000000000040e300 in std::vector<double, std::allocator<double> >::operator[] (this=0x7ffc6dca79f0, __n=5) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:779
779	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x000000000040e300 in std::vector<double, std::allocator<double> >::operator[] (this=0x7ffc6dca79f0, __n=5) at /usr/local/include/c++/5.2.0/bits/stl_vector.h:779
#1  0x000000000040c62d in ghost::Solver<Unit, Stock>::compute_variables_costs (this=0x7ffc6dca7d70, costConstraints=..., costVariables=..., costNonTabuVariables=...) at /usr/local/include/ghost/solver.hpp:461
#2  0x000000000040d38a in ghost::Solver<Unit, Stock>::local_move (this=0x7ffc6dca7d70, variable=0x7fcd9b504630, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffc6dca7a48: 8575) at /usr/local/include/ghost/solver.hpp:662
#3  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffc6dca7d70, finalCost=@0x7ffc6dca7d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#4  0x00000000004094b2 in main (argc=1, argv=0x7ffc6dcaa7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31442] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
0x00007fcd9b0fc8fd in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffc6dca76c0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
194		{ return *__it == _M_value; }
To enable execution of this file add
	add-auto-load-safe-path /usr/local/lib64/libstdc++.so.6.0.21-gdb.py
line to your configuration file "/home/flo/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/flo/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
#0  0x00007fcd9b0fc8fd in __gnu_cxx::__ops::_Iter_equals_val<int const>::operator()<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > > (this=0x7ffc6dca76c0, __it=...) at /usr/local/include/c++/5.2.0/bits/predefined_ops.h:194
#1  0x00007fcd9b0fc58d in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:128
#2  0x00007fcd9b0fc1d2 in std::__find_if<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_equals_val<int const> > (__first=..., __last=..., __pred=...) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:162
#3  0x00007fcd9b0fbccd in std::find<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int> (__first=..., __last=..., __val=@0x7ffc6dca77b4: 310) at /usr/local/include/c++/5.2.0/bits/stl_algo.h:3791
#4  0x00007fcd9b0fb346 in ghost::Domain::index_of (this=0x7fcd9b50bd60, value=310) at src/domain.cpp:78
#5  0x0000000000407c50 in ghost::Variable::set_value (this=0x7fcd9b50bd10, value=310) at /usr/local/include/ghost/variable.hpp:146
#6  0x000000000040ebd3 in ghost::Solver<Unit, Stock>::simulate_local_move_cost (this=0x7ffc6dca7d70, variable=0x7fcd9b50bd10, value=310, costConstraints=..., currentSatCost=18856) at /usr/local/include/ghost/solver.hpp:580
#7  0x000000000040d189 in ghost::Solver<Unit, Stock>::local_move (this=0x7ffc6dca7d70, variable=0x7fcd9b50bd10, costConstraints=..., costVariables=..., costNonTabuVariables=..., currentSatCost=@0x7ffc6dca7a48: 18856) at /usr/local/include/ghost/solver.hpp:634
#8  0x000000000040aa76 in ghost::Solver<Unit, Stock>::solve (this=0x7ffc6dca7d70, finalCost=@0x7ffc6dca7d68: 0, finalSolution=..., satTimeout=1000000, optTimeout=15000000) at /usr/local/include/ghost/solver.hpp:329
#9  0x00000000004094b2 in main (argc=1, argv=0x7ffc6dcaa7c8) at src/resource_problem.cpp:34
A debugging session is active.

	Inferior 1 [process 31442] will be detached.

Quit anyway? (y or n) [answered Y; input not from terminal]
