@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 500 175 694 590  68 811 605 897  56 892  79 864  17 621 718  49 672 842 600 122 873  63  75  30 860  38 665 117 818 104
  83 827 651 824 779 756 649 783  40 137 172 578 135 703 774 129 890  26 692 123 887  70 109  91 888  24 614 112 862 107
  87 865 569 196 110 586 700 719 760 167 242 839  32 597 722 166 643  35 604 636 893  84 808  51 254 147 868 894 145  96
 139 125 880 520 168 661 829 846 111 156 877 720 120 684 879 180 742 754 815 201 717  92 233 158 102 620 898  65  58 165
 266 183 732 792 861 675 849 848 260 881 189 534  16 683 859 207 721  53 751 259 591 114 195 671 153  33 657 199 159 124
 806 221 686 711 322 899 667 286 155 294 261 886 285 727 749 179 882 219 688 163 875 149 181 105 896 628 142 115  29 309
 134 208 785 731 240 704 786 192 311 407 292 662  61 850 714 106 823 205 623 584 419 173 798 891 144 194 220 866 140 252
 695 160 878 764 178 755 883 150 290 741 278 270 257 529 287 171 834  85 830 525 654 232 870 339 297 730 200 184 133 316
 241 185 494 709 302 841 895 549 193 296 276 227 258 682 511 203 223 344 869 256 370 884 226 566 247 740 854 211 271 592
 691 314 752 812 319 595 245 269 329 851 136 505 306 855 652 263 237 406 723 310 562 255 251 374 457 747 360 367 274 298
 162 336 554 574 320 341 845 346 337 228 148 660 791 874 768 429 246 364 762 378 244 385 224 291 234 858 397 288 335 796
 412 307 522 835 432 390 343 372 284 317 356 876 354 744 653 262 454 473 352 434 206 191 415 794 295 315 900 361 264 602
 408 305 642 613 420 411 299 414 489 371 422 701 521 396 611 328 418 293 493 209 321 387 369 579 441 758 282 482 424 708
 775 348 439 386 331 365 325 382 380 405 669 761 243 362 334 497 395 461 456 465 440 304 399 392 376 782 347 523 435 738
 443 548 478 471 468 389 477 467 460 409 674 515 488 433 379 400 508 333 462 384 452 483 402 398 472 425 417 593 342 345
 388 480 474 466 349 363 537 394 476 524 453 426 450 327 338 393 368 464 469 501 350 519 543 340 536 517 427 580 547 516
 455 603 283 438 463 459 431 475  90 594 490 214 403 587 582 423 545 458 391   3 540 504 570 499 451 518 484 512 571 479
 531 116 559 152 495 410 448 428 527 630 492 401 697 446 610 487 118 533 470 585 421 541 676 544 100 496 502 551 190 359
  67 563 377  77 568 514 558 629 510 498  73 101 509 126 280 588 599 573 555  42 612 539 528 619 631 530 552 481 641 575
 447 689 249 253 513 557  44 550 507 567 503 313 577 143 491 640 606 607 279 146 442 616 617  54 538  62 627 576 713 589
 635 639 430 198 624 706  31 601 532 526 634 413 608  43 272 565 564 572   8 659   9 646 553 626 644  89 583 225 632 248
 696 726  57  59 542 212  72 561 157 546 375  46 615 308 289 647 485 598  86 645 663 710 486 648 680 556 132 679 733 506
 687 699 128 330 668  52 141 436 638 655 664 239 748 187  23 746 535 784 204 637 188 625  99 197 793 250 581 560 666 355
 658 800 202  47 670  15  64 734 771 702 618  76 633  22 318 705  66 809  11 596 151 650 745 656 622 281  27 765 777 324
 449 737 222 326 804 437 113 725 856 170 736 103 816 358 210 814 236 681  71 763   4 743 715 275  80 357 131 772 716  95
 273  21 213 303  39  69 127  97 844 445 790   2 802 176 277 797 164 857 230 685  34 788 739 753 826 444 332 831 833 724
  19 778 215   1 735 130 693  78 817  41 813 265 757 119  74 847  93  48 351 712  45 821 707 750 840 366  60 698 832 810
 780 759  20 787  94  14 218 161 729 217 231 416 805 383  55 889 186   6 235 767 766 852 819 177 609 867 154   5 836 678
 799 108   7 238 863 182 373  98 825 838 769 673 807 169  50 677  88 837  82 853 773 267  25 776  12 300 301 822  18 885
 789 690 323 312 770 216 268  28 781  10 803 229 404 381  36 728 174 795 353 872  13 828 138 871  37 843 801  81 121 820

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.30988e+06us (= 2309.88ms, 2.30988s)
Wall-clock time (full program): 2.36197e+06us (= 2361.97ms, 2.36197s)
Satisfaction error: 0
Number of search iterations: 1471
Number of local moves: 949 (including on plateau: 584)
Number of local minimum: 71 (including on plateau: 52)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11001
Total number of local moves: 6816 (including on plateau: 2984)
Total number of local minimum: 548 (including on plateau: 223)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 320 480 659 147 844 797 340  83 879  90 470  59 834  33 652 870  40  28 702  22 872 857 167  74 839 643 831  30  25 828
 585 454 563 126 176 813 863 893 705  50 110  70 665 124 140 799  73  64 766 160 894 866 505 560 760 121 619 113 861  17
 478 716  66 880 196 123 732 788 890  35 205  69 209 741 841 798 143  38 842  78 729 773 530  95 824  91 677 727  60 141
 704 822 600 860 104 809 235 871 247 588 134 181 528 173 892 789  89  88 768 482 852 202 152 259 771 886 194  27 190  18
 598 366 667  81 891 759 301 586 131 137 122 887 876 283 851 163 222  23 899  80 769 254 450 569 706 796 570  63 227 188
 252 668 624  99 289 556 836 897 856  97 236 220 843  92 827 784 150 144 900 129 862 791 165 100 664 299 504 234 272 125
 547 280 683 896 112 779 821 699  67 208 484  13 587 105 169 774 282 269 740 244 648 319 620 865 291 302 748 436 395 132
 749 855 875 161 481 179 174 772 703 342 128 215 237 292 295 751 310 823 697 116 775 737 895 335 314 197 347 277 198 285
 499 369 794 207  55 153 830 807 817 786 164 384 849 232 284 276 325 595 217 149 765 889 253 296 790 372 640  79 274 365
 275 781 815 203 424 304 444 780 260 864 294 191 838 318 681 221 115 882 755 264 290 561 255 359 186 614 761 216 445 119
 462 412 685 300 389 286 804 776 348 859 416 354 418 146 324 308 397 360 428 379 637 273 529 281 403 356 420 352 515 898
 752 874 833 239 114 417 498 676 293 158 396 361 224 544 312 328 551 338 323 458 593 393 691 271 731 200 370 469 795 313
 566 495 443 479 407 350 459 647 413 288 437 404 367 358 297 548 183 400 644 873 472 386 601 426 265 377 526 309 333 762
 554 363 518 322 218 373 364 618 383 425 582 398 464 390 578 337 408 513 574 483 606 405 579 519 467 267 457 371 630 349
 555 423 357 440 246 387 577 476 430 399 411 433 465 278 489 327 580 353 375 516 355 868 431 456 629 503 346 538 241 631
 391 330 877 514 211 376 306 608 542 380 540 287 388 527 336 885 565 506 435 258 510 331 449 432 524 446 402 522 339 298
 635 517 490  47 494 362 474 406 572 521 531 341 392 243 590 316 541 477 660 385 442 315 453 536 326 653 401 381 475 539
 109 421  20 507 584 615 488 382 473 496 543 592 261 567 626 545 581 427 438 512 145 497 485  58 553 468 559 493 661 409
 133 135  32 609 597 532 535  93 688 724 552 501 166 596 564 471 523 533 502 452 329 142 650 663 525 612  34 594 508 520
 374  15 192 492 636 641 672 414 434 557 229 607 675 611 622 441 219 303 415  56 262 439 311 787 266 466 634 591 410 744
 184  62 120 422 726 658 576  75 633 317 746 639 638 463 575 447 394 728 214 613   2 212 106 680 546 168 695 710 487 679
 419 625 199 230 707 632 562 451  82 460 840 657  43 511 534 151 583 690 182 734 180  77 455  46 573 642 231 687 654 678
  86 127 225 698 756 696 223  76 763 162 701 558 719 568  29 671 826 270 187 627 448 717 117 708  45 571 139 500 646 656
 193 103  68 689 599 616 242   9 602 651 783 628 589 712 715 159 617 549 136 723 305 138 249  65  72 754 700 714 486 649
 177  85 175 662 603  94  11 206  51 693 172 742   3 673 251 718 764 792  21 666 201 750 767 694 343 686 279 832 730 674
 820 240 368 736  36  37 213  41 550 757 811 709 692 793 108 148 805 812 170 816 101 157 248 835  42 378 204 682 669 537
 509 739 268   4 884 171 738 156 130 605 803 684  87 610 189 210 883 733 178 869 351  54 491 854  53 743   6 853 621  39
 604 263 623 850 814 645 154  48 256 713 845 801 102 777   5  84 829 802   7 770  96  57 245  49  31 722 745 782  61 735
 185 825 332 778  44  98  19  26  10 808 818 810 118 867 725 195 711 228 107 753  16 334 847 785 655  71 250 881 461 758
 800 670 344 837 878 257  24 155 307 345  12 720 238 888  14   1 806 747 233 848   8 721 819 858 321 111 226  52 846 429

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.07373e+06us (= 2073.73ms, 2.07373s)
Wall-clock time (full program): 2.12538e+06us (= 2125.38ms, 2.12538s)
Satisfaction error: 0
Number of search iterations: 1073
Number of local moves: 667 (including on plateau: 214)
Number of local minimum: 59 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8808
Total number of local moves: 6549 (including on plateau: 2412)
Total number of local minimum: 369 (including on plateau: 204)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  81 770 858 676 714 855 630 850 620  95 133 698 726  55  49  96 879  58 106 838  69  73 709 713 804  76 107  97 181 899
 111 461 781 786 660 841 592 826 805  41  98 627 692 151  92  45 130 785 867 769  72 376  90 817  86 108 174 857 144 631
 119 880 527 719  62 884  67 589 643  27 145 469 830 110 121  85 801 793 865 846 140 794  84 734  51  88 182 860 149 851
 143 837 779 888  52 677 420 725 190 153 572 644 856  46 104 175 892 115 109 839 463 818 116 747 105  79 883 150 139 799
 829 823 847 720 499 882 519 170 521 193 732 653 253 161 202  87 759 142 120 724 126 788 179 642  60 761  78 204 196 645
 809 775 778 753 780 530 893 885 250 152 163 697 241 158 117 229 159 128 160 613 124 223 188 566 876 211 762  94 496 705
 180 201 605 814 800 900 609 891 774 217 305 752 601 216 207 189 317  56 224 173 194 129 169 897 877 199 331 251 626 811
 514 816 836 668 745 662 334 146 561 682 232 646 302 303 185 231 227 212 230 273 260 859 894 637 304 291 177 286 675 327
 267 321 332 787 852 738 717 262 886 746 277 895 276 225 301 275 259 297 285 341 247 287 245 670 282 237 358 268 684 898
 278 567 608 265 254 767 810 186 335 890 674 701 310 239 300 183 290 320 366 318 896 324 292 575 319 222 834 284 868 240
 355 325 585 336 878 619 854 377 296 246 711 693 299 311 208 218 390 348 421 881 228 365 401 755 685 148 316 359 716 191
 333 219 703 294 349 553 351 439 261 263 396 796 405 422 417 490 312 525 735 397 266 797 357 889 340 242 374 330 436 824
 309 378 387 344 407 571 827 306 467 402 763 535 345 483 543 323 347 264 441 404 624 394 412 504 590 416 389 444 384 512
 411 346 503 406 485 603 502 383 342 388 380 789 414 418 432 474 308 477 449 497 399 565 313 438 382 408 813 472 356 362
 361 425 424 415 337 498 494 371 501 588 329 419 430 455 440 385 466 486 484 386 459 500 534 363 569 776 413 372 454 381
 548 478 445 370 350 462 453 375 470 435 447 481 493 373 528 488 507 451 540 505 429 489 426 487 511 491 433 545  68 437
 427 544 476 428 403 353 532 531 393 479 495 480 542 506 448 492 517 555 537 475 244 538 558 271 195 457 226 508 434 471
 509 482 446 559 431 249 526 520 343 562 518 214 458 524 522 473 546 442 465 598 560 460 547 314  30 510 570  65 523 549
 539 554 307 652 604 157   2 612  48 625 576 176 579 456 367 574 557 464 516 533 696 564 615 215 257 339 596 664 203 468
 529 632 298 328  12 236 272 611 136 556  64 168 581 551 699 671 586 582 568 172 656 617 515 103 680 657 600 550 269 616
 573 563  37 587 452 197 184 398 131  57 629 252 607 672 409 602 667 640 621 614  36 648 618 235 606 552 723 678 360 167
 583 636 255 234  93  61 171 733  82 679 639  99 650 731 594 651 634 633 669 593 580  91 213 221 248 663 623 718  50 688
 578  63 288  71 658 127 364  20 597 721 322  75 689 649 749 599 707 757 702 704 695  25  54  11 686 828 712 706 315  43
 665 138 400 283  38 122  80 577 595 123 210 114  33 727 661 681 694 744 647 654 808 760 750 423 206 872 162 691 610  47
 730 154 166  35 659   1  66 135 741 743 391  15  24 666 764 722 708  40 751 289 772 754 683 200 584 802 673 622 536  89
 853 635  14 137 281 352 369 728 655 690 134  23  22 710 687 843  26 773 820  13 792  31 758  44 771 443 641 766 326 178
 113  70  29 591 295 164 806 628 835 848 742 270   4 784 777 739  19 791   6  17 821 338 862  53 840 729 209 118 825 192
 875 101 513 112 205 280 256  39 736 748 870 450 238 740 873 782 790 815   9  18 243 638 842 354 832 279  59  34 756  28
 861 156 147 102 395  42 100 125   8 798 737 410 803 807 874 844  16   3 795  21 833  83 220 379 541 768 864 822 887  74
  32 165 141 155 765 132 715  77 293 368 831 274 812 866 845 869   5 819   7  10 783 187 871 258 198 863 233 700 849 392

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.60326e+06us (= 2603.26ms, 2.60326s)
Wall-clock time (full program): 2.65599e+06us (= 2655.99ms, 2.65599s)
Satisfaction error: 0
Number of search iterations: 1440
Number of local moves: 1031 (including on plateau: 496)
Number of local minimum: 71 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11211
Total number of local moves: 8144 (including on plateau: 3804)
Total number of local minimum: 464 (including on plateau: 282)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   4 684 864 114 840 754 198 809  96 117 874 847  52 328 729  88 896 377 121 616 287  30  99 878 812 866 119 130 877   9
 798  21 230 675 886 851 841 771  33 419 806 139 732  59 468 249 416  64 315 386 166  20  56 650 872 835 763  66 752 176
 788 141  34 568 842 246 794 142 220  53 765 803  41  95 415 787 829 215  78 213 217 695 704 795 769 791 101  63 875 436
 805 320 414 742 143 782 860 559  83  46 855 145  12 665 396 808 336 244 738 218   3 694 305 588 799 722   6  14 849 364
 802 614  97 688  31 766 719 715  87  10 165 604 828 179 366 824  28 233  22 690 146 767 280 756 859 135 706 481 755 162
 489 664 268   7 689 634 607 712 611 609 191 839 721 368  80 800 269 161  76  50 710  39 171 686  15 753 618 826 605 247
 865 172 266 669 739 773 768 674 623 453 210 723 602 127 541 647 345  89  45  43  42 569  98  84 698 676 610 838 451  75
 797  44   8 701 547 691 593 743 203 566 293 750 741   1  82 683 199 170  35  11 152 781 518 631 759 747 718 687 648  16
 725 733 112 671 713 642 601 529 390 111 486 622 761 262   2 638 353 103  23 137  51 382 697 762 657 637 619 339 582 175
 531 338  55 655 711 677 504 626 477 652 108 646 525 334 288 673  38 267 643 595  13 615 444  26 539 410 749 380 450 546
 533 184 260 709 632 520 598 500 667  65 442 514 519 465 279 116 270 496 641 302 133 630  69 714 621 617 599 201 575 644
 577 100 440 658 561 407 437 462 558 654 312 406 455 479 330 509 483 160 497 397 318 567 503 495 403 383 439 548 464 513
 493 535 581 219 696 560 499 578 505 498  19 488 745 463 349 672  70 408 454 273 432 528 594 281 394 480 351 136 629 585
 606 523 536 460 563 457 576 524 502 645 478 562 530 254 365 532  47 458   5 447 430 452  29 587 534 355 507 620 456 475
 376 448 512 494 389 492 476 245 470 438 510 459 332 301 399 449 337 516 573 570 517 433 661 527 391 441 413 542 369 435
 294 491 565 487 484 501 469 296 508 329 589 471 333 417 515 553 603 421 422 543 446 482 540 379 321 374 538 402 506 236
 304 361 474 344 388 443 367 395 197 892 815 784 311 291 571 409 467 316 473 550 308 445 319 420 272 322 556 884 411 426
 340 392 372 511 485 350 461 356 776 427 554 418 261 869 521 412 818 342 343 381 283 371 876 400  71 423 434 682 276 310
 259 544 813 257 357 232 490 358 335 243 584 429 153 362 708 237 724 633 635 837 833 375 187 401 378 327 307 670 194 653
 274 326 640 154 384 256 385 300 325 716 628 428 431 693 731 275 717 608 774 549 405 222 341 387 363 398 323 679 229 574
 240 278 844 211 289 425  74 299 206 792 785 359 348 666 810 188 789 700 314 861 863  81 204 472 303 226 466 354 317 751
 306 735 659 120 298 295 347 393 783 370 852 290 309 285 651 352 727 404 846 600 845  92 744 105 228 264 850 195 286 284
 185 168 820 807 183 205 235 900 277 790 158 223 251 639 758 150 786 881 522 241 597 424 817 265 252 324 102 625  57 873
 193 255 692 242 292 225 894  86 819 221 360 189 313 551 612 854 583 736 282 737 757 832 656 178 297 238  49 668 373 331
 131 870 624 159 123 880  27 155 346 899 586 207 250 804 613 258 811 707 816 699 883 140 174 263 239 208 248 555 180 660
 843 138 779 853 862  25 125 177 705 649 163  91 196 209 590 214 552 764 728 856 720 132 580 104 591 144 777  24 149 775
 110 891 662 889 107 164 106 224 148 128 663 109 858 868 592 271 545 760 825 212 801 814 780 227  54 234 526 122 147 678
  67 888 129 113  40  32 200  73 887 685 134  48 871 882  18 596 231 734 730 216 557 890 627 564  90 831 151 823 836 572
  77 879 680 156 115 169 202  17 821 848  72 885 867 827 579 192  60 726 746 748 830 895 740  94 253 173  36  68 124 636
 703 778  85 182 126  61  62 897 857 190  58  37 167 772 157  79 186 822 793 537 770 118 702 796 681 181 834 893  93 898

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.44336e+06us (= 2443.36ms, 2.44336s)
Wall-clock time (full program): 2.49553e+06us (= 2495.53ms, 2.49553s)
Satisfaction error: 0
Number of search iterations: 1222
Number of local moves: 766 (including on plateau: 332)
Number of local minimum: 57 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9536
Total number of local moves: 6472 (including on plateau: 2663)
Total number of local minimum: 449 (including on plateau: 187)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  71 163  82  32  37   6 315 231 836 155 818 882 841 830 889 848 826  67 802  60   2 702 827 258  46  74 809 300 886 820
 819  27 805 268  24  25 356 120 789 112 804 823 896 712 757 835 785 152 874 186  10 323 852  33  22  65 851 303 868  19
 859 793 279 151   8  14  80  70 810 188 817 865 762 296 860 822 332 257 885 175  26 813 259 525   4 227 784  12 768 774
 807  41 286 436  23 788 238  69 786 160 401 821 806 385 745 183 775 269 794 178  13 692  50 195 711 812 287 208 797 759
 513 855  34  47 324 798  66 146 689   5 765 761 693 217 750 743 181  38 744  49  17 742  99  62 829 716 736 373 751 772
 687 803  77 172 156 783 343 148 669  31 748 737 727 345 747 543 389 198 766 197   7 720  55 164 688 728 770 310 705 102
 325 666 278 694 171 685  89  56 790 179 665 715 663  83 627 134 141 228 753 667 615 700 297   1 658 758 730 275 719 153
 426 212 196 222 150 646 273 292 707 158 605 682 752 377 703 677  94 105 638 165 695 729 440  68 655 723 741  63 673 648
 298 630  15 128 271 718  97 587 104 588 582 690 508 572 603 686 187 131 620 619 678  84  92 159 664 668 595 631 717 593
 375 653  29 116 290 624 457 629  51 635 600 610 661  52 601 575 632 206 609  21 599  57 184 602 568 617 642 576 608 636
 354 659 333 135 362 570  96 512 674 524 145 577 545 458 578 552 611 622 571  42 633 613   3 592 555 573 560  59 441 566
 438 514 558 253 162 561 209 542  35 264 607 531 553 211 556 554 621 544  36 486 495 639 242 550 559 533 650 503 598 511
 404 585  11 522 376 539 565 580 541 337 564 597 402 367 526 612 463 473 530 518 481 537 101 393   9 454 557 529 497 445
 538 536 625 507 390 502 265 456 505 520 500 618 596 424 439 412 384 365 452 491 485 185 203 506 449 442 509 425 398 388
 451 483 428 447 407 490 517 477 446 443 523 382 499 448 504 415 391 472 437 493 462 450 293 410 470 459 476 379 494 469
 814 336 474 479 551 501 417 392 567 460 395 422 519 547 482 399 364 255 434 372 467 328 468 521 423 427 381 466 419 435
 800 464 532 386 492 314 421 408 355 431 414 432 397 498 420 405 475 366 444 400 409 368 535 453 484 403 374 769 370 496
 662 413 302 411 516 471 346 280 433 334 313 348 478 792 394 311 763 754 416 487 318 465 488 307 363 371 341 867 418 353
 480 309 285 322 549 327 840 329 347 380 795 351 326 816 378 357 710 319 429 291 396 845 562 338 288 250 306 888 461 241
 563 320 594 721 574 301 746 606 274 349 361 262 263 862 270 344 697 430 358 584 256 510 773 230 237 276 312 825 277 340
 634 350 799 644 649 330 352 387 321 455 247 260 342 295 218 406 647 628 213 854 877 359 679 331 284 281 254 884 283 252
 614 691 870 651 849 169 839 294 305 590 304 225 266 833 180 224 369 756 249 781 261 335 684 657 299 205 272 157 226 360
 616 339 706 846 739 267 579 308 527 856 245 207 243 709 229 200 832 779 244 282 221 161 871 755 176 234  81 801 246 216
 204 317 731 581 791 190 893 897 489 643 289 167 202 675 248 850 383 641 191 838 233 219 569 844 220 232  85 528 239 126
 236 139 749 787 808 656 589 771 199 872 515 173 154 708 215 251 235 540  76 683 866 189 670 811 210 898 174  78 149 114
 168 201 834 853 831 142 824 735 147 861 132 125  86 138 192 223 193 900 546 696 857 194 842 764 136 110 100 623 170 892
  91 106 767 583 722 214 637 680 240 738 107  44  95 660  93  20 123 671 144 699 778 182 740 654 878 880 883 875  98 113
 103 124 534 640 732 115 714 894 118 760 166 117  45  54 143 140 713 725  88 873 796 704 645 869 876 858  75 701  16 177
 137 887 698 586 724 879 726 843 652 672  48  73 108 121  39  61 127 847 119 780 734  79 676 782 891 111  58  43 133 881
  28 899 604 895 837 890 626 776 109 815  40  18  87  30 129 733  72 777  53 548 828 591 316 681 863 130 122  64  90 864

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.90558e+06us (= 2905.58ms, 2.90558s)
Wall-clock time (full program): 2.95795e+06us (= 2957.95ms, 2.95795s)
Satisfaction error: 0
Number of search iterations: 1760
Number of local moves: 1058 (including on plateau: 557)
Number of local minimum: 98 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12562
Total number of local moves: 8172 (including on plateau: 3609)
Total number of local minimum: 748 (including on plateau: 279)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 854  68  36 775 663 611 892 703  24 739 187 561 585  65 882 888 897 898  54 131 733 344  69  31 106  90 867 613 100  49
 229 899 158 880 817 777  30 748 105 550  76 701 676  93 645 873  50 670 118  89 366 174 113  16 879  73 885 896  88 841
  21  84 709 744 819 517 878 770 130 543  79 762 623  63 560  60  71 636 870 184 768 535  14  66 868 895 107  19 284 836
 424 115  17 144 886 209 890 883 188 844 133 189 848  95 842 871 140 716 166 104 849 640 126 211 470 181 822 575  80 857
 853 212 248 160 847 430 153 723 245 812 155 232 872  45 600 876  41 779 272 863 838 794 186  47 164 395 216 540 159 758
 301 891  75 893 586 203 786 751  51 850  56 205 753 324 894 545 146 673 142 213 713 242 659 219 874 241 136 182 199 712
 252 221 102 250 482 282 756 814 110 204  87 827 846 210 721 180 111 528 869 185 732 859 207 887 750 191 177 759 169 747
 656 223  92 172 746 230 170 549 292 674 156 789 804 255 694 614 119 843 141 235 807 266 830 165 861 362 236 785  74 675
 654 331 276 289 314 689 233 657 826 862 316 815 707 261 829 309 302 856 243 307 262 311 317 345 353 271 296 574 384 326
 468 270 198 280 341 705 208 677 357 772 308 825 577 152 621 342 323 877 112 461 610 265 399 765 400 335 358 774 371 364
 653 423 277 821 718 542 175 480 411 313 875 672 285 408 637 356 413 363 274 334 275 304 258 393 319 881 238 298 389 730
 584 320 336 263 329 831 450 410 365 325 163 761 537 460 286 533 397 729 239 293 900 372 360 330 618 220 501 803 374 426
 783 402 455 251 726 791 281 367 306 294 463 268 824 328 310 688 361 377 224 234 464 375 855 332 514 349 448 745 259 441
 665 425 481 504 305 379 562 629 403 327 449 337 525 381 351 806 339 267 394 428 416 554 288 376 347 568 373 801 369 466
 456 380 405 427 508 431 348 641 390 487 412 489 483 442 699 419 436 494 438 385 359 350 404 398 534 383 391 731 378 417
 493 502 445 458 570 477 518 401 596 352  42 541 467 523 406 194 414 407 522 454 346 476 422 505 388 498 519 443 644 492
  96 429 529 555 368 434 491 484 527 500 538 515 370 634 432 382 318 520 435 578 479 516 462 509 507 551 440  61 469 386
 222 485 583 321  52 128 459 452 536 418 532 572 597 474 531 247 524 439 510 499 472 503 571 490 497 622 661 231 592 295
 396 355 594 650 544  83 579 486 457 606 557 603 283 556 471 437 421 237 563 695 473 114 566 451  82 521 511 127 591 506
 214 647 581 588  91  81 569 161 546 698 513  70 278 660 447 649 607 157 547  86 631  34 595 567 696 558 651 260 760 573
  99 681 685 706  35  40 668 322 671  55 638 628 228 818  26   2 488 215 627 720 139 526 648 633 173 548 589 539 763 605
 590 646 587 576 719 643 564 249 666 151 678   7  27 565 253 256 598 137 727 617  57 138 642 639 273 620 602 315 553 420
 338 630 667 690  94  33 693 625 704  10 608  13 149 593 303 340 816 117 609 632 101 799  37 682 616 766 679 312 662 197
 192 624 795 121 686 225  23  78 612  97 776 354  53 767  32 559 683 227 752 512 154 697 737 604 496 743 711 343 740 122
 124  62 635 206 240 792 626 193 552 619 742   8 433 582 580 444 715 264 771 599  67 684 790 717   3  15 257 820 866 109
 495 687 702  98   6 387 669  72 741  28 734 145 132 782 178 664 749 200 798 800 478  85 722 808 333  59 784 195 738 246
 171 735 754  22 244 860 680  44 788 176 755 724  29 475   4 108 736 254 714 708 201 691 530 652 392 845 162 123 835 103
 658 129 409 728 116 279 135 120 834 692 810 190 202 757 218  38 725 290 797 465 655 196 773 700 780 781  43  64 764 167
 805 802 851 147 446 811  11  25 269 226 793 297 179 889  58  12 865 299 287 840  20 832 787 809  39 828 778 453   9  48
 769 837 833 796 217 615  18   1 813 291 884 415 143 858   5 823 710  46 300 864 150 839 148 168 183 125  77 134 852 601

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.57916e+06us (= 3579.16ms, 3.57916s)
Wall-clock time (full program): 3.63308e+06us (= 3633.08ms, 3.63308s)
Satisfaction error: 0
Number of search iterations: 2202
Number of local moves: 1113 (including on plateau: 587)
Number of local minimum: 143 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 17112
Total number of local moves: 9227 (including on plateau: 4653)
Total number of local minimum: 1113 (including on plateau: 363)
Total number of resets: 5
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 773 136 749  32 743 679  50 824 870 708  57 873 834 455 833 578 112  70  88 883 130 352  14  16   9 599 867 225  61 895
 650 844 790  67  30 696  25 651 710 791  62 862 709 876  69 164 266  36 144 156  27 580 892  20 122 762 871  31 879 733
 838  91 465  82 262 506 107 664 576 799  51 639 685 882 674 671 141 106  55  59  46 661  11 897  53 772 857 830 148 887
 864 115 889 852 194 669  81 656 877 259  56 742 676 108 621 657  83  77  84 899  94 853 102 334 204 691 734 166  80 798
 574  79 797 299   8 801 222 821 810 794 117 861 769 157 308 630 751  60 162 160 153 874 199 866 192 420 721 123 129 658
 612 111 745 175 264 174 150 856 839 896  65 286 201 224 611 521 644 161 214 193  95 750 854 116 789 804 704 356 319 786
 243 215 712 229 218 842 248 660 582 711 242 257 846 159 759 884 672 413 253 217 213 875 178 169 290 881 475 186 173 713
 237 239 647 128 203 720 220 888 828 815 146 353 135 240 850 659 140 417 374 336 198 880 812  37 249 764 609 269 341 781
 900 238 673 885 426 718 491 581 317 206 311 250 448 831 167 632 326 228 333 377 182 778 187 298 154 822 642 307 423 384
 809 219 741 267 118 757 247 722 761 300 296 235 287 315 726 893 783 739 293 355 346 398 313 305 233 583 667  21 458 328
 886 855 869 270 337 170 236 860 807 254 289 528 276 255 246 271 351 360 212 408 190 591 320 736 865 294 878 208 330 363
 278 282 628 418 316 272 256 652 332 848 433 428 312 340 552 314 302 593 399 414 304 357 318 268 837 748 618 717 379 600
 470 323 216 703 402 441 345 397 183 265 437 443 518 444 371 310 569 806 419 456 364 339 774 447 471 283 608 803 431 477
 275 478 424 277 463 223 872 489 559 531 422 306 464 435 610 442 309 453 512 434 891 381 462 291 436 365 409 368 474 460
 295 385 395 517 410 454 380 495 439 401 532 440 404 511 459 375 488 411 438 361 514 449 226 776 372 562 530 452 539 505
 461 451 396 482 516 390 493 622 450 394 338 415 616 383 412 586 624 197 535 344 349 343 499 322 588 480 391 403 481 554
 378 388 261 473 503 500 496 191 389 538 563 570 567 637   7 544 467 200 407 416 565 605 635 386 668 366 292 387 548 568
 485 492 367 405 519 510 329 536 427 543 479 490 325 534 263 202 633 285 604 350 551 613 557 392 527 523 303 370 542 359
 564 598 550 549 446 103 571 430 513 547 468 207 594 584  48  22 524 358 577 603 587  33 501 507 654 575 142 601 457 602
 466 509 221 483 555 158 680 155 342 540 335 515 596 643  87 147  78 508 545 755 682  49 655 626 502 666 373 590 529 525
 171 498 585 469 607  63 560 196  68 165 746 698 573 689  86  13 645 497 683 765 522 716 701 700 520 143 281 606 546   3
  28 592 234 558 719  42 738  12 400 537 629 694 487 715 185 280 321 572 526 663 702 324 662 533 620  38 181 670 579 274
  23 777 133 589 735 707 775   6   2 561 782 556 649 619 273  35  40 648 771 566 597  58 595 553 767  43  92 684 805  74
 646 744 152 752 753 230 382  85 541   4 687 690 126 665 429 241 625 494 631 705 653  45 760 376 617 138 131 697 232 284
 636 614  26 811 835  18 638 168  76 476 766 677 627 737  90  97  41 756 859 732 693 251 678 832 137 139   1  73 779 252
 105 795  24 231 362 127 640 244 258  96 890  34 134 747 686 699 816 780 847 210 725  98 101 728 754 504 184 695 813 188
 145 731   5 288 814 730 796 209 177  71 858  72  52  15 868 836 472 826 819 104 724 149 120 823 421 279 406 729 675 301
 260 727 327 820 825 634 784 110 121 114 898 211  19  17 763 331 623 802 894 841 740 615 785 113 245  44 176 484  93  99
  89 348 369 681 800 788 863 172  66 124 768  64 100 109 692 793 818 845  29 714 829 347 425 205 787 180 297 758 445  10
 354 641 125 723 132 393 840 163 195 227 792 119 486 189 770 688 851 817 808  39 849 151 179 843 432  47  75 706 827  54

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.14921e+06us (= 2149.21ms, 2.14921s)
Wall-clock time (full program): 2.2016e+06us (= 2201.6ms, 2.2016s)
Satisfaction error: 0
Number of search iterations: 884
Number of local moves: 704 (including on plateau: 152)
Number of local minimum: 33 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7348
Total number of local moves: 5604 (including on plateau: 1792)
Total number of local minimum: 289 (including on plateau: 142)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 441 841 116 851 281 780 721  84  32  66  27 699 794 623 814 537  47 882 753 147 134  37  54 697 262 786 784 296 792 137
  39 436 709 898 109 825 839 741 110  64 132 638 541 879  70  38 129  67 866 896 755  91  43 750  34 771 889 627 402 127
  60 838 415 899 119 100 732 104 161  75 775 530 837 891 779  80  17 113 842  74 532  78 222 828 279 752 802 582 126 873
  68 101 220 897 883 411 610  44 202 648 115 538 323 689 164 688 102 424 855 150 681 125 758 574 849 133 655 826 105 677
 186 146 290 886 120 151 710  22 850 212 226 733 880 703  83 557 192 111 189  61 704  13 860 672 835 900 687 754 647 135
 260 188 547 770 307 406 761 141 809  77 848 735 813 642 748 872  65 209 233 144 183 114 123 845 817 223 788 619  76 152
 190  81 678 798 159 870 410 166 455 276 148 797 375 881 456 812  42  90 291 196 277 289 265 861 736 822 840 823 199 232
 237 184 604 515 207 240 884 867 698 112 269 877 787 634 412 843 386 244 227 283 198  48 431 487 272 827 774 255 484 229
 142 342 252 507 211 197 245 376 865 430 285 690 854 702 210 762 201 395 876 400 350 800 106 550 801 253 719 432 423 139
 149 238 157 816 868 453 268 208 369 447 236 458 711 593 364 763 326 354 325 333 888 316 363 756 673 349 620 448 257 409
 280 301 832 660 195 472 551 154 329 297 863 782 512 295 357 804 433 478 300 338 371 330 203 555 730 461 658 273 407 294
 421 318 416 728 382 444 428 485 314 465 298 358 383 466 311 327 193 442 468 473 284 488 324 578 718 871 669 426 608 429
 370 334 815 686 435 539 292 477 385 434 191 351 765 562 397 414 404 892 251 321 420 377 234 653 595 401 493 254 417 356
 501 362 773 602 427 398 391 348 405 347   8 408 392 353 355 605 572 387 384 592 480 443 437 399 304 360 737 587 821 337
 413 340 379 396 525 339 581 361 471 668 589 475 367 332 439 519 352 346 249 529 495 470 372 499 422 625 486 419 469 588
 464 502 394 498 259 247 482 368 313 514 378 446 452 597 403 345 393 506 388 418 479 645 549 450 531 544 637 380 508 425
 460 491 583 390 457 509 483 553 559 504 540 565 536  18   2 454 518 492 693 494 438 278 153 611 497 569 136 545 528 459
 607 503 194 182 516 566 521 462 674 534 282 586 366 535 548 575 440 335 481 649 341 561 617 204 615 598 302 270 107 344
  89 571 179 117 580 609 577 118 511 343 626 722 560 522 228 650 542 303 299 594 676 451 524 221 659 558 185 632 603 266
 692 523 631  82 467 496 618 263 556 613 445 216 513 293 510 317 489 474 526 567 500 679 584 168 635 643 275  12  20 708
 654 552 169 214 599  26 639 621 570   1 520  41 585 543 517 219 714 726 591 644 622 600 614 305 381 616  45 178 546 463
 641 785 568 108 663 612 573 683 180 533 657 590  11 177 682 490 564 596  96 505 685 636 743 158 256  69 239 200 140 675
 629 601 242  30 662 606 224 790 724 640 664 128 246 319 740 217 725 628  63 174  93 661 856 248 172  14 162 739 795 723
 633 680 231 258 716 170  55 449 563 859 656  72 176 312 831   7 796 131 742 749 776 744 261 331 130 696  62 705 651  73
 715 624 309  51 729 121 243 819 187 760 833  71 336 322 670 271 701 707 757 666  35 576 665 306  88  19  94 215 844 781
 894 836 389 205   4 579  99 646 667 630 717  95  56 213 789 288 764   3  31 805  85 671 746 308 218 274 167 820 652 864
 858 834 857 250 769   6 206 713 155 738 734 235  50 122 768 225 766 818 691  16   9 893 778  23 145  15 328 267 359 887
 731 793  87  40 829 700  53 824 264 706 554  49  92  46  28 287 874 747 830 684 695 727 810 156 173  98  33 103 694 808
 885   5 767 124 807 791 138 759 772 777  24 310 143 241 811 175 890 720  58 751 476 527 799 286 373  97  86  25  52 846
 806 165 712  57 230 852 181 869 365 745 875 320  59  10  29 374 878 895 160 862 853 847  21  36 315 171 163 803 783  79

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.11677e+06us (= 2116.77ms, 2.11677s)
Wall-clock time (full program): 2.17064e+06us (= 2170.64ms, 2.17064s)
Satisfaction error: 0
Number of search iterations: 958
Number of local moves: 770 (including on plateau: 219)
Number of local minimum: 34 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7678
Total number of local moves: 5955 (including on plateau: 2110)
Total number of local minimum: 280 (including on plateau: 149)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 867  41  12 149 197  94 226 823 236 300 769 330  80 247  59 836 759 648 801 715 747 273 714  95 204 838 813 726 866  50
 162 690 815 123 697 127  53 857  51 663  39  69 201 196 804 749 842 171 784 772 861 494 720  92   9 779 814 803  10  68
  43  40 736 137 191 299 713 830 192 160 350  19  46  73   2 826 723 794 631 850 733 349 639 380  30 848 797 731 825 528
 699 188 624  13 666 267 282 734  11 615 840 168  20   7   5 845 821 367 811 828 868  81 203 253 788 751   6 860  47 847
 754 359  22 219  14  58 783 781 834  82 184 125  48 217 159 735 448 757 635 739 698 406 353 120 773  21 827 767 855 742
 688  36 677  55 164   8 678 746  79 325 548 122  61 671 852 743 768  34 708 478 657 660 684 106   3 721 775 613 662 193
  27 270 287 262 605 151  17 760 506 366 216 233 417 786 621 544 209 643 556 679 609  28 440  83 791 593 651 696 795 674
 535 248 669 523 206  42 622   4 650 224 665  71 619 569 629 771 208  16 245 796 744 130 610 110 620 614 722 717 782 154
 579 246 705 126 129 306 179 584 146  49 566 165 681 706 654 642 695 558 687 638 596 223 313  98 727 529 753 561 524 150
 218 108 607 658 728  86 602 676 599   1 157 180 581 668 520 513 374 724 301 603  93 141 653 587 627 577 582  99 567 685
 652 183 709 360 378 502 667 578 659  52  18 285 335 450 636 740 142 454 617 550 575 145 585 112 365 647 537 530 547 505
 514  97 495 597 525 594 716 656 542 105 612 238 156 565 516 664 562 398  70 114 504  37 475 190 598 632 702 626 719 296
 444 670 595 368 655 563 445 644 512 176 568  64 292 538 379 508 323  15 181 531 527 555 474 553 498 205 573 526 522 611
 437 467 533 591 446 468 521 480 402 453 630 314 424 572 634 381 689 370 545 483  75 509  78 534 549 588  23 519 328 472
 469 477 266 316 559 485 541 431 421 430 859 394 408 372 583 439 384 501 616 459 466 376 419 488 297 404 461 426 357 411
 515 590 560 319 397 576 873 465 510 414 443 433 487 447 435 491 324 420 383 649 482 410 385 415 354 395 438 473 265 167
 405 416 452 536 403 432 449 493 413 532 451 899 347 332 351 271 484 470 552 497 458 242 816 463 289 364 399 274 554 471
 425 500 503 543 640 322 182 304 337 748 222 586 707 373 460 401 675 518 418 338 305 442 853 462 489 441 334 391 288 308
 492 436 327 507 329 427 481 476 387 729 309 680 511 302 355 256 799 409 737 352 259 429 820 711 237 479 371 294 333 281
 456 812 161 539 240 346 393 341 286 843 888 817 428 215 279 412 392 152 229 646 243 893 290 741 318 422 423 358 258 694
 175 885 407 317 307 837 875 136 389 878 254 608 457 241 396 277 683 464 382 339 388 331 851 778 343 213 210 455 363 276
 272 604 856 400 745 877 251 326 344 762 672 766 295 252 298 348 362 263  76 166 199 765 153 761 832 202 260 249 268 891
 257 833 198 780 312 854 225 261 356 764 718 606 551 375 283 221 178 879 275 239 641 600 777 787 187 211 284 144 377 342
 390 280 134 730 303 882 704 336 244 870 819 661 703 790 139 227 345 315 133 291 200 881  26 756 234  32 173 232 809 876
 874 691 104 712 185 810 107 135 894 592 692 770 849 212 231 103 499 214 434  74 310 880 293 686 758  44 858  60 189 255
 207 738 169 844 898 361 871 264 228 496 121 805 752 864  91 132 321 818 574 116 124 785 601 802  89 320 163 195 143 623
 177 490 789 311 831 776 158 109 872 700  90 570 800 235 806 250  54 710 230 172 111 774  35 865 889  31 386 340 119 835
 170 645 892 841 278 571 101 117 900 540 673 839 863 884 886  29 194  45  72 131  33 750 128 486 763 822  67 517 138 140
 725 895 148 793 625 693 118  66 897 100  85 829 807 792 824  84  38 633  24  96 896 369  62 269 798 637  88 147 890  87
 887 580  63 846 862 701 682 102 618 546  57 869 589 564 628  77 220 755 808 174 113 557  65 732  56 155  25 186 115 883

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.62885e+06us (= 2628.85ms, 2.62885s)
Wall-clock time (full program): 2.68162e+06us (= 2681.62ms, 2.68162s)
Satisfaction error: 0
Number of search iterations: 1388
Number of local moves: 992 (including on plateau: 376)
Number of local minimum: 62 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10717
Total number of local moves: 7539 (including on plateau: 3128)
Total number of local minimum: 531 (including on plateau: 237)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  13 206  73  56  12 824 873 877 656 844   3  34 846 217 731 809 111 845 759 390 289  55 839 835 703 101  62 746 176 530
 707  28 697  49  20 780 139 854 812 761  48 867 822 837 806 235 108 688 814 727 121  59 829 154 249  47 832 186  36 203
 179 184 236  70  65 661 709 821 772 863 333  84  15 816 850 719   4 153 823 876 196 813 782 711  27 502 248  66 795 142
  10 117 122  31 660 789 768 673 125 589 754 465 827 770 781 401 732 735 889 808  23  77 166  88  25 276 283 753 767  11
  91 736 147 178 463 833 830 779 783 313 135 730 675   2 810  22 149 799 760 838 181 141 445 791 639   9 798 230 162  46
 167 665 223 335 825   1 725 666 796 325 576 788 197 747 776  17 609 690 652 684  52 208 272 647 566  19 269 193 792  33
 116  45 563 296 828 664   7 739 778 627 198 802 696 683 677 722 590 686 607 680  74  81 342  97 718 183  80 623  98 215
 679 174 626 136 663 459 811  14 774 617 295 655 733 451 716  64 582  99 695 668 118 212  72 674 577 175 263 633 588 292
 640 300 540 202 650 710 556 233  79 218 503 657 475 698 420 681 745 610 572 651 595   8 200 584 586 105 240 672  53 332
 628 653 499 112 571 671 606 685 479  50 662 592 624   6 705  58 689 439 574 687 604 271 359 505 648 474 157 163  26 318
 143 630 641 348 508 507 525 583  40 448 394 538 593 509 523 587 702 285 591 676 691 372  39 596 382 254  30 546 453 381
  71 500 104 199 561 637 569 594 204 752 477 669 614 339 611 726 579 534 515 228 654 297 535 526 438 211 210 602 407 152
 635 107 634 357 492 245 498 514 701 480 543 615 410   5 490 522 603 618 527 450 560 343 632 536 542 246  96 521 539  54
 558 408 258 188 643 553 597 461 437 550 434 457 471 570 444 483 137 646 512 524 433 428 369 562 424 370 454 216 548 380
 425 528 415 533 541  63 517 458 504 362 377 629 426 649 384 495 485 547 642 238 520 395 470 460 482 414 396 222 552 386
 467 456 484 559 506 481 491 378 493 397 340 469 446 422 532 501 430 478 442 432 531 364 346 598 376 427 416 412 406 435
 578 513 519 884 402 334 294 274 468 349 338 308 429 585 455 440 436 728 383 241 275 388 441 307 494 423 564 554 486 625
 557 398 328 516 373 421 302 279 337 856 347 413 619 310 326 323 363 843 301 464 353 518 720 404 281 545 797 266 400 555
 306 496 319 567 858 351 341 452 257 324 636 890 309 466 375 431 366  78 565 443 293 787 805 227 361 487 476 291 409 549
 419 367 327 631 447 345 264 358 385 393 757 379 403 311 365 391 312 405 194 861 360 621 758 417 356 612 706 317 449 605
 191 368 278 608 168 133 371 201 868 389 239 207 336 221 253 872 352 134 316 322 723 738 785 330 399 717 714 817 866 599
 268 742 693 638 392 260 277 284 329 815 173 305 670 265 255 473 229 715 256 148 177 613 700 287 247 762 694 826 314 708
 899 878 286 713 171  82 170 411 182 242 350 290 261 304 573 226 298 320 252 262 885 897 865 172 127 842 756 219 841 741
 213 853 267 581 321 244 834  94 190 225 344 299 132 303 282 862 187 374  29 270 874 900 155 857 840 488 888 250 616 743
 849 667 721 737 331 529 231 124 209 692 820 102 131 164  85 150 896 568 214 251 243 748 123 224 751 801 462 763 180 749
 793 232 880 755 859 158  68 145  42  37 869 851  86 882  38 773 151 189 234  90 852 875 497 192  35 544 580 315 601 892
 871 771 704 622 129 724 160 575 537 110 803 130 895 115  67 644 712  93  76 220 645 146 354 161 818 898 387 195 159 794
 766 729 355 887 126  87 185 819 259 786 138  95 100 699 106  83 280 156  41 273 734 860 489 777 418 883 600 894 140 750
 804 620 836 879  60 205 119 113 128  69 765  92 109 658  61 784 847  44 237  89 659 510  75 682 120 807 769 855 775 744
 472 144 740 848 870 764 678  57 891  32 864 103 165 511  18  21 831  16  43  24 800 790  51 114 886 893 288 169 881 551

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.31309e+06us (= 2313.09ms, 2.31309s)
Wall-clock time (full program): 2.36695e+06us (= 2366.95ms, 2.36695s)
Satisfaction error: 0
Number of search iterations: 1165
Number of local moves: 819 (including on plateau: 306)
Number of local minimum: 51 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8720
Total number of local moves: 6640 (including on plateau: 2914)
Total number of local minimum: 342 (including on plateau: 209)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 846 661  69  31 633 845 250 890 895 368  56 885  83 589 178 145 704 188 161  61  89  48  96 841 788 118 820 560 897 720
 853 611 655 893  42 117 184 858 891 216 166 856  76  40 106 167 157 843 148 754  49  68 888 796 727 175 672 689  20 798
 144 800 874 767  51 109 119 102 716 101  37 863 125 838  78  97 155 876 534 158 737 848 173 624 765 174 811 892 123 824
 657 808 687 870 642 186 715 896 854 420  44 604 138  59  50 237 847 103 474 134  93 219 231 678 593 172 489 685  79 851
 243 773 442 115 809 131 749 839 675 630 132 696  54 330  73 196 246 194 280 601 182  57 641 317 676 842 731 695 287 879
 205 805 335 141 146 875 772 747 628 774 136 751 190 100 133 127 191 208 467 667  74 586 303 793 766 244 654 818  75 804
 199 779 126  53 315  98 617 162 168 758  91 887 169 217 257 886 152 259 321 790  94 663 833 577 880 861 566 898 105 734
 521 597 548 261 832 249 340 733 637 526 254 815 177 220 176 181 314 253 382 495 333 213 776 717 629 386 753 761 135 301
 272 812 873 204 743 150 503 252 265 852 328 623 170 510 364 139 222 212 269 662 236 881 324 802 797 419 783 311 297 240
 452 777 399 245 108 320 375 345 894 878 309 554 296 385 565 290 349 427 377 574 859 284 379 286 529  84 884 810 298 183
 361 711 346 459 415 334 348 234 899 436 343 557 313 207 277 769 255 164 316 864 352 855 339 900 730 307 596 512 107 209
 775 366 475 383 404 285 279 201 289 844 291 889 387 299 262 300 266 241 883 867 344 410 522 278 712 429 591 362 465 416
 509 370 723 239 393 305 425 223 666 826 546 599 409 609 516 373 422 479 351 389 276 627 369 336 610 411 600 283 434 197
 539 428 367 380 424 338 458 450 518 446 461 407 441 417 358 587 602 418 440 359 378 524 507 326 514 288 551 578 648 363
 388 435 482 430 403 391 547 543 214 347 506 210 493 478 412 505 444 504 447 528 595 582 332 392 607 500 374 381 568 477
 355 470 532 502 709 487 357 621 325 268 408 372 460 331 491 292 439 533 646 371 492 483 426 484 394 308 472 652 494 341
 497  41 476 523 496 537 570 453 619 499 451 233 545 431 360 549 520  12 456 318 398 402 594 625 511 515 397 564 486 437
 350 193 580 421 433 682 449 631 622 438 443 322 488 485 721 588 432 405  65 541 508 396 527 552 200 376 113 414 660 480
  90 481 151 563 498 455 674 530 519 116 468 464 752 555 701 558 556 579 137 384 643 270 615 454  21 569 294  14 697 707
 163 264 274 639 462 540 466 571 353 156 471 306 647 592 626 536 739 746   4   5 651 192 473 553  66 561 401 690 724 644
 542 423 230 248 725 653 538 203  82  45 736 275 668 645 256 650 575 713  86 227 581 584 636 525 160 603 319 469 705 413
 550  43  19 616 614 732 635 567 365 656 726 229 694 445 613 559 664 671 612 327 699   1 573 124  13 576 356  85 598 153
 686 271 282 618 741 590 692   3 585 211 759 395 691  26 531   6 745 501 795 202 562 742   9  52 342 700 354  33 708 683
 693 448 337 688 680 572  11 670  77  95 865  72 583 649 837 535 149 781 722 154 638 171 517 251 406 714 218 189 763  30
 242 224 702  28  70  62  23 681 293 215 857  87 784 803 620 791 799 840 606 677 698 789 632 142   8 658  15  58 816 295
 735  55 792 813 463 882  22  80 110 728 750  16 740 849 860 778  67 665 770 206 835 185 147 120  34 258 198 490 756 111
 786 310 703   2 225 640 738 634 187 159 544 281 780 684 801 673 729  39 830 312  17 221 762 247 304 807  81 130 710 179
 806 232  10 794 165 821 817 238  38 180 787  63 659  18 748 260 828 121 757 706 822 608 768  60 267 605 226 235 829  47
  27  25 831 825 760 866 771 112  99 814 679 140 669 836 718 872 228 785 329 782 457 744  35 390 323  36 104 129   7 122
  29 302 195 764 114 263  71  46  32 513 871  64 834 868 827 869 719 755 850 400 823 862  88 273 143 819  92 128  24 877

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.28879e+06us (= 2288.79ms, 2.28879s)
Wall-clock time (full program): 2.34414e+06us (= 2344.14ms, 2.34414s)
Satisfaction error: 0
Number of search iterations: 1174
Number of local moves: 843 (including on plateau: 319)
Number of local minimum: 37 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9034
Total number of local moves: 6679 (including on plateau: 2423)
Total number of local minimum: 363 (including on plateau: 176)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 495 221 682 841  56  17 359 857 846 216 250 771 744  34 851 753 872  35  23 793 391 300 837 137 179 817 129 868 123  18
 735 751 862   6 175 783 189 825 752   9 268 809 296  10 888 220 267   8  46 856 733 794  86 238 113 869 174 732 670 351
  83 319 835 755  33 839 372 788 743 317 807 850 275 116 789 843 723 253  93 730  78 826 852  72  12 791  58  13 214  36
 371 707 800  20 632 170 410 247 256   7 360 813 680 766 832 776 777  15  45 816  25 773 834   5 126 797 273 782 239 161
 185 233 720 828 104  28 651 102 775 154 765 796 350 144 840 757 328 177 728 521 593 795 824  38  94   4 148 833 180 820
  81 119 806 740 284 681 320   2 657  11 667 754 219 772 697  59 287  19 780 760 122 626 671 120 442 745  67 664 703 640
 195 381 714 779  30 724   1 712 866 246 141 721 279 692 687 619 650  21 653 218 499 668 357  44  49 691 136 802 764 176
 684 190 739 542 127 770 662  39 585  76  14 731 209 633 741 501 249  71 644 601 635 679  16 548 155 698 188 643 530 615
 166 734 647 564 652 736 659 547  22  70 103 455 205 608 579 654 143 672 695 248 646  37 577 106 270 742  85 669 596 628
 200  90 819 729 711 516 660 661 597  52 581 622  64 634 616 621 107 666 609 118 450 466 269 147 276 590 335 605 124 580
 171  87 678 614 623 738 649 557 727 281 500 658 178 639 401 394 574 656 165  80 535 665 334 398 264 469 324 505   3 648
 149  75 363 624 554 600 552 702 514 434 591 458  66 436 567 532 142 604 527 213 537 487 301 586 338 467 329 529 693 545
 576  24 513 569 517 533 382 511 293 254 443 536 638 571 393 561 583 272 504 224 589 520 145 594 291 476 446 498 568 491
 489 575 562 526 472 379 553 244 523 408 420 481 477 304 508 556 607 423 497 134 544 488 207 551 283 486 419 518 406 475
 468 409 413 565 376 462 493 404 232 459 449 531 416 421 470 630 484 515 456 457 441 555 225 483 461 492 582 414 422 330
 512 388 353 402 478 510 243 534 432 549 428 519 375 452 625 674 396 231 385 540 471 485 464 438 447 445 480 463 426 370
 454 427 429 465 503 397 855 451 431 543 411 525 509 323 306 384 417 539 387 407 584 383 341 368 494 496 524 365 448 349
 602 830 433 361 332 331 305 280 378 617 336 298 716 340 403 326 870 374 437 701 237 377 482 373 558 546 595 369 356 352
 412 395 299 318 460 479 768 347 400 560 327 502 399 325 303 390 708 366 314 415 312 769 718 444 663 386 726 315 265 430
 202 358 348 405 289 316 849 271 424 690 893 337 854 245 307 345 313 541 367 861 392 263 677 598 559 355 310 474 292 380
 884 853 309 295 234 439 290 236 322 749 206 156 810 282 453 222 308 896 138 333 706 182 425 344 637 311 506 227 873 889
 286 343 241 294 364 418 838 440 877 831 339 183 354 198 346 897 859 212 210 786 288 836 550 297 792 258 507  73 321 277
 804 627 223 131 842 184 159 818 538 588 867 193 696 163 201 191 260 805 235 528 173 274 203 886 603 160 863 285 785 230
 882 858 114  51 761 261 700 226 197 847 181 257 746 262 168 204 709 631 158 435 473 211 389 900 763  99 704 242 871 215
 808 150  92 240 157 895 186 162 164 812 844 139 683 251 151 217 490 815 342 655 302 153 362 611 894 105 878 259 799 899
 573 606 208  74 860 167 266 822  95 748 715 117 705 592  82 100 587 874 784 522 196 112 140 892 827 135 787 194 566 169
 641 848  97 762 612  62 110 133 146 725 199  42 686 865  89 130 125 881 864 228  79  69 699 891 737 229 876 109 823 758
 629 676  48 121 885 132 252 781 636 710 645 192  68 778  60 774  61 570 790 278 811  47 883 821 719  63 689  98 187 111
 713 599 115 803 675  50  88 128  32 879 152  40 563 814  54  84 578 801 759  26 875 618 620 756 747  43 767  77 172 887
  65 642  53  91 717 898 694 688  55 673 613  29 255 845 108 101  41 572 880  31 798  57  27 829 722 750 610 890  96 685

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.38619e+06us (= 2386.19ms, 2.38619s)
Wall-clock time (full program): 2.44024e+06us (= 2440.24ms, 2.44024s)
Satisfaction error: 0
Number of search iterations: 1183
Number of local moves: 938 (including on plateau: 436)
Number of local minimum: 44 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9148
Total number of local moves: 6998 (including on plateau: 2545)
Total number of local minimum: 396 (including on plateau: 219)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  43 233 893 867 775  18 139 122 861 655  19  51 168 819 171 101 876  77 877 866 835 574 871 889 896  38  62  81  10 628
 125 348 793 863 113 894 578 817  13 832  25  79  28 620 898 551 748  72 444 659  71 117 860 812 766  22 785  39 479  64
 135 114 888 845 658  65 822  97 120 607  33  11  87 442 548 571 849 175 564 827 777 764 884 806 732 110 190 572  29 193
 137  82 719 895 615 123 537 751  89 772  57  61 150 154 899 672 642  56 192 219 850 689  70 619 758 759 892 201 724 131
 217 844 705 613 482 108 651 791  95 692 169 133   8 637 360 802 649 181  99 531 797 608 115 820 831 890  92 209 238 148
 897 291 307 874 255 857 750 129 231 778 173  54 185 522 352 606 792 873 186 742 127 784 262 885 734 189 136  80 256 208
 156 236 779 709 320  84 836 738  94 798 260 367 267 864 234 870 712 359 290 161 310 825 653 872 683 202 128 337 253 118
 172 149 220 740 741 164 882 881 281 859 261 153 244 311 720 226 818 285 289 702 174 854 847 856 687 191 188 230 151 239
 247 197 288 604 714 250 203 838 561 767 346 257 685 304 816 760 879 160 152 693 232 654 240 592 815 132 316 166 246 401
 317 272 676 493 782 242 258 565 235 776 376 287 684 675 275 788 390 347 278 293 470 770 749  90 626 495 176 459 385 286
 308 254 328 588 375 396 425 707 372 769 386 402 670 880 280 755 270 371 214 474 318 774 421 362 671 334 436 222 439 314
 313 248 213 576 823 419 343 694 198 579 279 466 801 393 416 408 388 358 365 397 332 875 394 294 575 500 447 463 528 430
 224 580 768 567 344 366 321 887 211 395 357 382 900 370 467 380 264 589 457 417 345 325 412 389 601 462 355 558 527 295
 323 406 259 518 331 400 460 453 423 440 512 496 404 794 407 521 456 410 446 517 883 368 326 414 405 435 420 524 429 335
 477 399 581 492 509 454 403 532 422 339 483 590 302 377 485 413 383 591 438 488 364 349 443 387 602 363 525 378 481 465
 516 621 409 340 475 553 437 520 428 392 480 330 450 546 373 489 306 319 543 550 269 369 268 583 501 511 478 505 490 464
 598 451 449 252 568 566 587 361 559 445 338 398 418 472 678 379 611 519 384 266 503 297 341 356 276 652 333 491 533 434
 554 539 552 353  34 441 627 476 381 432 529 433 427 305 632 538 473 195 612 502 424 585 646 354 158 210 514 458 595 536
 633 461 506 165 603 577 730 112 227 283 593 523 391 630 534 504 605 545  41 513 639 487 196 542 273 508 296 600 228 570
 468 704 699 271 541 668 448 350 636 452 486 586 215 634  15  88 582 530 494 111 510 469 617 540  98 641 557 556 497  52
 499 648 205 142   4 640 629 544 610  27 635 614 245  59 698  86 507 105 721 549 515 594 225 622 284 562 563 680 638 665
 650 426 681 324 155 484 666 119 625 180 535 690 599 241  68 679 216 584 631 116 657 200 204 573 184 664 498 645 526 695
 761 569 157 336 102 660 126 560 656 103 706 700 327  17 618  50  20 682 673 292 697  31 736 342 107 596 723 662 805 701
 609 710 178 167 141 735  32  93 663 147 763 808 757 121 623  47  35 718 674 312 624  60 728 146  37 754 667 597 743 826
 839 708 669  85 303   7 661  16 703  46 726 752 647 555   2 322  83 104 786 471 696 144   6  73 431 716 717 644 789 814
 821 762 179 130  45 756 124 411 739  63 733 688 263 237 765  44 199 878 731 182 725 223 722   3 277  14 677 686 747 691
 771 810 143 455 711 162 207 274 729 251 787 727 830 177  49 301  23 868 282 799   1 315 415 109  91 846  30 795 744 813
 790 547  12 134 824 773 221 218 834 187 865 803 829 100 811 374 212 886  75 783 159  58  36  55 300 851 746  42 138 852
 848  69  53  96 329 853 249 194 715 309 745 833 753 643 243 299 229 869 737   9 145 170 780 106  76 842 713 807   5 796
  67 837 206  21 843 800 163 265 804 140 858 841 781 616  78 891 298 809 840  74  66 183  48  24  40  26 855 828 862 351

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.31925e+06us (= 2319.25ms, 2.31925s)
Wall-clock time (full program): 2.3731e+06us (= 2373.1ms, 2.3731s)
Satisfaction error: 0
Number of search iterations: 1178
Number of local moves: 805 (including on plateau: 336)
Number of local minimum: 54 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9035
Total number of local moves: 6931 (including on plateau: 2752)
Total number of local minimum: 342 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 182  68 195 257 710 899 880 780 143 788 865 590  67 674 872  54  33 126 885 625 560 739  38 784 287  82 120 108 215 889
 616 854 119 754 823 538 875 891  64 652  34 802  19 131 172  89 180  71 848 385 686 789  77 792 766  80 298  28 863 219
 152 738 831 751  44  94 577 636 160 776  58 868  65 149 884  99 895 147 157 249 468 867 289 849 795  35 708 528 530 116
 624 193 229 822 723 181 878 471 162 714  57 623  42 811 890 201 315 114 893 781 816 726 250 318 709  26 366 208  81 291
 570 808  84  53 855 568 518 448 202 809  25 744  90 857 118 244 887  88  56 123 819 772  37 879 155 882 159 125 682 858
 841 164 158 715 355 877 883 820 364 756 259 749 611 770 234 105  23 173  76 107 859 694 213 825 483 338 212 188 554 109
 740 853 150 847  92 187 721 539 142 773 231 755 128 838 282 104  85 267 124 864 394 779 896 324 804 348 153 190 768 137
 900 165  87 307 335 533 620 892 245 704 140 566 224 731 332 356 261 424  66 844 585 299 222 832 663 297 803 284 588 210
 377 233 196 301 117 758 574 824 898 580 260 774 314 876 303 141 175 226 122 813 728 469 275 500 810 296 376 311 722 166
 491 629 113 732 263 266 645 888 171 444 614 871  78 294 414 211 290 218 541 741 886 339 268 661 881 408 206 272 488 192
 733 403 897 352 163 716 668 696 371 480 646 597 313 239 191 492 194 536 405 273 425 467 270 327 454 328 361 343 736 439
 306 464 526 322 415 442 546 843 466 695 354 438 351 269 381 400 316 461 248 419 763 463 441 821 818 238 417 510 214 168
 873 363 274 534 401 367 748 375 587 641 404 221 286 276 486 341 369 495 435 634 440 446 427 545 472 548 227 325 523 452
 563 397 498 513 228 340 496 389 489 627 410 455 497 392 595 241 894 457 453 326 407 292 368 319 584 409 429 423 305 719
 331 476 337 470 295 459 430 198 547 571 329 347 519 479 569 436 413 252 384 445 342 607 649 564 437 592 387 391 812 447
 462 420 456 586 380 540 402 379 565 552 321 478 556 599 388 304 256 277 398 515 432 293 412 451 542 346 550 524 572 559
 474 589 598 511 418 416 310 583 465 345 285 532 681 460 421 350 320 333 422 443 578 138 386 426 458 648 393 628 555 349
 176 481 664 605 621 527 262 501 370  52 197 639 687 317 477 602 593 390 434 517 581 529 573 139 525 596   2 600 493 365
  62 619 640 670 666 383  10  83 428 217 557  48 205 684 561 665 662 558 271 522 433 659 610 637 395 549 431 521 225 544
  49 656 622 543 606 101 302  70 579 278 502 336 705 490 676 630 699 551 487  47 506 608   8 516 509 535 601 667 154 482
 133 121 800 378  75 691 330 475 508 494 449 373 603 236 567 537 615 612 753 635  55 507 644  79 344 725 701 382 179 514
  74 512 396 591 411 258 264 216 145 242 651 178 730 594 671 657 638 745 777  60 353 134 679 654 360 484 786 711  39 505
  97  17 473 576 713  96 247 170 747 372 658 251 650 680 562 698 520 690 617 632 230 647 374 406  95 827   4 631  98 737
 185 653 553  18  43 499 362 103 575  50 834 189 531  63 642 729 672 828 678 100  45 683 743 280  40 765 815 794 309 734
 717 688 692 186 357  22 246 167 785 204 613  41 764 283 796 846 769 503 685  91 129   6 604 132  14 655 660 860 207 793
 203 697 761 702 706 675 253 279 677  61 742 323 707  36 626 856   7 689 618 235 220  13 735 156 130 805 835 724  29  15
 862 112 703   9 787 866  30 255 148 144 746  69 771 312  24 609 807 782 752 669  46  21 806  59 485 643 110 673 633 582
 869 102 504  11 288 146  86 177 845 223 700  93 797 712 254 840 833 851 874 151 209 237 718 136 300 174 829  12 817 727
 852 759 184 200 799 308 169 135 830 240 760 115 767 243  16 836   3 801   5 399 359 265 783  32  73 750 798 861 334 839
   1 281 775 199 826 762 183 232 837  31 814 450 757  20 111 842 791 850  51 870 161  27 720  72 127 106 778 693 790 358

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.97761e+06us (= 2977.61ms, 2.97761s)
Wall-clock time (full program): 3.03291e+06us (= 3032.91ms, 3.03291s)
Satisfaction error: 0
Number of search iterations: 1803
Number of local moves: 842 (including on plateau: 336)
Number of local minimum: 100 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13259
Total number of local moves: 8351 (including on plateau: 4049)
Total number of local minimum: 652 (including on plateau: 284)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 483 774 146  46  18 856 840 299 437 825  55  10   8 877 791 275 869 212 823 158 836 837   2 867  88 801  16 416 329 521
 656 561 201  50 342 634 849 258 710 408   3  63 838 863 858 176 809  78 704 138 439 653  20 848  51  73  21 707 645 859
 271 850 118  83  28 766 228 104  84 793 806   6 723 719 770 316 814 249 827 209 864 317  19 865  17 749 764 347  42 767
  81 829  56  45  31 125 207 204 222 819 626 315 780 667 743  29 874 103 735 208 779  23 824 816 792 854  53 673 282 720
 297 834  15 154 730 293 239 142 498 795 105 129 810 811 800  25 762   9 757  35 724  26 794 717 170 517 835 721  34 737
 415  70  92 180 151 686 279 300 206  80 499 349 663 695 775 287 772 197 518 111 589 685 664 683  32 760 763 722 784 508
 708 276 692 313  41  91  67 243 191 652 530 265 655 798 604  30 644 404 373  11 799 396 744 688 244 731 812 773 167 573
  64 179 639 238 785 227 641  43  13 738 828 568 544 586 733  40 525 117 538 583 700  37  61 679 728 588 627 732  85 649
  49 270 709 288 285 250  75 115  94 637 714 625 671 640 638 553 699  93 253 469 676   4 696 611 633 706 580 786   5 691
 555  90 715 255 600 113 613 119 636 661 603 399 592 666 467 411 446 216 205 403 581  96 680 593 541 471 693 455  86 554
 540 630 665 237 575  89 681 120 341 542 620 578 619 617 658 110 651 254 214 231 318  22 493 582 535 615 523 631 126 698
 514 584 479 390 557 319  79 595 100 556 623 513 359 356 647 480 622 601  27 101 648 269 472 388 597 413 406 624 587 609
 130 344 660 451 605 336 533 153 470 646 608 464 520 430 551 527 563  14  36 576 564  71 434 559 628 524 463 511 509 635
 522 266 485 383 495 268 401 506 560 567 574 534 417 515 546 453 487 441  66 232 462 504 501 505 420 500 510 419 526 450
 379 572 381 482 529 395 414 355 512 426 428 432 380 460 452 461 545 367 490 407 429 590 412 599 397 365 345 394 547 570
 594 335 507 438 585 596 352 481 378 435 427 442 497 486 362 263 475 536 528 375 477 385 328 369 543 405 612 387 650 267
 307 339 363 689 459 324 474 448 537 569 440 384 491 418 454 746 350 478 323 727 346 325 327 320 494 386 353 884 503 257
 331 421 364 558 358 374 304 489 669 392 382 682 377 422 516 466 309 890 366 294 449 423 488 444 332 424 389 354 443 805
 803 548 370 562 409 465 855 844 343 357 334 750 195 361 264 402 278 618 431 456 226 830 391 457 400 338 301 314 311 302
 272 337 283 657 295 781 340 822 694 199 862 351 303 433 296 566 410 398 670 348 333 886 246 330 224 447 376 213 857 286
 755 703 184 531 280 284 852 778 218 872 326 614 248 172 233 240 372 668 758 393 892 577 306 252 371 262 368 188 712 106
 716 745 241 740 310 539 217 754 741   1 292 308 235 290 221 675 165 815 684 436 274 896 137 321 247 298 259 853 880 225
 281 552 256 821 687 826 322 885 697 166 171 182 168 164 160 861 261 571 565 713 223 492 878 229 832 107 305 277 678 185
 817 549 788 425 841 360 761 818 312 193 273 186 198 173 163 602 211 847 245 807 155 789 672 219 851 123 215 289 476 157
 718 642 174 889 236 753 181 748 802 175 291 177 883 189  87 734 108 702 606 845 127 598 882 203 894  95 230 149 210 187
 496 121 887 782 124 759 643 260 876 251 196 813 220 162 200 898 116 579 161 831 202 888 133  65 134 891 893 242 502 190
 871 132 701 519 875 632 468 654 739  54  59 895 131  82 144 616 145 769 607 900  99 484  77 109 879  76 139 112 674 873
 147 194 659 797 768 610 777 662 787  38 141 808 150 159 152 711  44 790 458 846 192 234 860  72 690  58 677 140 870  24
 736 756 842 729 751 621  97 725  98 532 833 776  69 135  47 820  33 747 445 804  60 705 796  68 122  39 839 128 114  48
   7  12 843 783 765 143 726 591 550 136 866 897 771 169 183 742 156 752 102 868  52 473 178  57 629 899 148  74 881  62

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.77824e+06us (= 2778.24ms, 2.77824s)
Wall-clock time (full program): 2.83056e+06us (= 2830.56ms, 2.83056s)
Satisfaction error: 0
Number of search iterations: 1516
Number of local moves: 802 (including on plateau: 348)
Number of local minimum: 95 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 11937
Total number of local moves: 7041 (including on plateau: 2904)
Total number of local minimum: 825 (including on plateau: 242)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 110 861 105  30 878 870 882  67 806 304  47 201 342  51 825  69 697 853 712 881 886  77 822  61 116  87 163 160 662 890
 885 887 879  43 605 802 824  10 562 534 125  36 350  64 875 135 543 812 847 551  73 455 719  98  18 123 600 178 686 196
 895 884 889 627 750 835 860 573 804 869  34 149 250  17 776 202 261 225 642 585  29  82 811 106 126 247 262 146 422 157
 660 236 830 109 242 711 809   9 888 841 102  26 464  72 838  22 613 563 900 706 122 419 677 213 191 754 129 894 443  32
 209 739 194  54 580 357 570 840 850 846 148 592 538  68 836 210 385 655 857 832 137  70 618 172 187 180 866 112 721  92
 275 401 206 288 676 872 728 219 795 384 229 283 365 168 211 161 891 769 653 622 179 164 748 235 877 214 738 290 699 175
 171 131 114 151 717 302 704 796 826 611 787 530 529 133 208 239 845 650 896 892 152 233 893 199 138 231 816 259 238 124
 341 257 324 228 771 132 767 883 274 624  85 705 520 251 237 240 244 898 856 449 349 189 899 147 480 589 280 381 805 310
 654 364 323 828 621 215 670 714 177 863 343 352 608 226 140 154 874 794 393 689 308 533 287 448 155 332 687 200 205 358
 289 260 316 220 646 318 591 335 271 760 188 858 353 298 230 488 880 770 742 509 813 193 331 315 368 272 465 375 785 276
 402 212 871 351 759 433 571 369 376 775 296 594 473 360 279 483 454 416 330 468 277 413 309 399 327 693 256 406 837 326
 386 169 334 286 868 374 707 427 379 876 596 818 661 306 421 404 145 440 547 701 300 293 372 339 373 292 781 347 268 305
 645 340 361 190 506 258 518 513 446 338 198 782 400 322 546 378 388 692 370 675 526 666 512 496 492 291 344 319 391 612
 269 394 460 790 408 484 493 204 743 311 345 625 491 556 584 348 218 387 241 380 405 555 548 674 510 425 590 371 377 329
 553 429 245 420 558 282 266 567 409 631 593 451 363 503 499 502 438 579 356 432 523 453 442 554 423 396 566 366 482 234
 494 390 317 511 417 313 508 610 354 428 414 477 527 481 507 515 426 490 462 395 535 437 434 267 578 355 487 486 383 517
 403 524 470 668 410 333 243 458  19 207 626 450 216 525 516 430 397 505 531 521 389 501 576 540 644 606 337 541 392 537
 439 278 504 466 255 583 447 572 544 159 696  89   3 575 461 601 564 415 441 297 452 698 459 733 602  88 569 495 435 595
 478 476 497 549 431 632 301 444 619  86 382 411 197 528 671 550 561 252 457 456 641  35 545 498 568 418 472 536 104 720
 599 597 560 552 577 629 254 479 463 346 630 174 127 485   4 359 118 367 740 248 673 222 445 657 724 614 467 747  60 598
 588 474 514 469 471 751  95 273 634 295 615 186 150 726 663 633 636  94  93 128  15 690 557 682 539 694 616 604  21 609
 582 708 603   2  50 766 249 475 321  71 678 294  37 783 702 587 500  20 581  90 651  65 522 731 684 710 774 565  56 658
 542 715 586 680 183 574 270 192 637 265 672 640 117 725 723  74  75  62  79  84 336 669 156 718 532 620 643 867 412 667
  83 623 703 756 232 607 489 158  44 264 681 784 648 635 761 652  53 181  33 143 762 735  12 407 810 732  55 559 134 779
 758 713 727 792  45 716  66 709 665 221 691 314 855 649 100 737 113  25  76 281 688 700 142 729 108 227 121 685 639 223
  39 659 664 808 111  52 103  13 115 167 768 263 786 780 679 859 722 162  16  96 820 772  80 752 617  23 638 834 328 789
  41  14  31 628 519 101 182 763  99 656 734 362 797 829   6 897 320 253 153 424  27 814   5 749 755 793 312 753 695 803
 823 683 791 303 176  40 139 821 184  78 741 436 819 849  57 873 736 745 107 130 842 778 285   1  28 851 144 141 170 744
 844  59  49 862  42 166  24 827 165 398 746 833 799 777  63 848 119 224 120 203 807 765 173 831 757 815 246  81 864   8
  58  38  48 854  11   7 185 195  46 307 325 800 730 773  97 865 299 217 284 647 798 839 136 764 788 843  91 817 801 852

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.81024e+06us (= 2810.24ms, 2.81024s)
Wall-clock time (full program): 2.86283e+06us (= 2862.83ms, 2.86283s)
Satisfaction error: 0
Number of search iterations: 1402
Number of local moves: 778 (including on plateau: 319)
Number of local minimum: 81 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11965
Total number of local moves: 7730 (including on plateau: 3697)
Total number of local minimum: 713 (including on plateau: 262)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 797  94  39 815 639 763 838 308 829  21   6 808 519 135 196 813 203 858 112  11 827  48 489  27  17 847 414 428 721 893
 231   3 164 788 768 761  64 801  58 293 132 812 163 158 832 865 710 895 328  77 707  85 252 809 165 145 722 818  30 879
 772 852   7 798  46 718 767 850  28 436  42 834 198  20 119 825 729 170 628  41 790 138 249 855  65 741  71 800  78 848
 682 708 760  22 737  88 696  25   8 516   9 764 289 133 733 746 750 307  12  26 791 100 577 728 126 711 233 736 669 833
  93 757  79 716   4 738 192 676 195 807 166 837  90 405 214 690 644  36 659 712 781  74 452 826 238 173  55 753 853 600
 103 822 178 544 227 314 799 732 110 374  89 793 302 592  18 731 727 244 747 150 545 286 550 773  62 782 271 828 602 220
 666 691  15 440 677 578 819 529 105 125 136 673 402  98 706 648 613  34 531 704 748 189  54  73 254 633 197 649 766 762
  14 697 120 759 725 539 630 730 432  19 598 769 127  35 618 758  33 251  23 702 620 107 188 643 297 604 624 596 715 542
 283 248 553 780 735 572 770  67 228 511 473 609  60 663 675 569 635 304 149 652 694 207 160 670 151 561  87 796 637  16
 575  91 606 688 636 774 674 344 546   2 496 687 104 705 486 671 442 506  81 488 179 364  63 699 243 512  45 689 621 498
 541 494 431 634 582 683 558 246 418 719 446 464 108 508 573 484 543 118 157 693 591 357  70 507 294 555  13 510 615 603
   1 492 739 614 514 631 619 241 385 557 356 686 129 517 471 579 654 182 416 549 430 474 152 534 409 551 239 346 423 625
   5 610 638 445 605 601 411 256 587 316 597 213 392 362 672 656 751 236 353 425 326 258 193 655 358 632 595 319 478 570
 608 593 580 453 490 469 292 339 540 417 422 684 299 565 566 403 113 449 627 465 526 491 208  10 323 523 642 463 460 495
 658 513 322 594  40 437 538 583 352 468 562 467 515 290 397 500 661 366 360 612 334 435 349 447 535 279 629 477 341 454
 309 461 400 434 448 574 588 413 284 487 412 342 381 451 456 617 548 250 367 457 408 622 584 383 626 266 466 421 556 504
 560 337 410 391 321 455 443 889 386 530 365 419 318 734 276 521 424 528 345 156 325 559 388 564 450 899 277 393 462 390
 376 311 355 481 370 835 224 665 301 315 525 291 830 272 324 382 401 581 590 472 493 599 820 351 480 441 312 406 470 242
 407 303 458 502 536 300 522 845 509 282 387 395 777 420 479 280 394 398 438 335 320 399 404 379 698 888 333 347 384 396
 259 222 444 296 884 216 361 754 427 389 640 245 518 851 332 155 209 657 821 765 459 499 794 206 363  75 623 348 433 270
 714 269 235 380 524 281 310 537 368 795 900 237 680 317 205 482 372 867 247 377 371 645 679 240 742 265 891 330 226  29
 880 844 616 429 190 186 285 692 724 861 313 354 803 262 202 171  43 805 611 176 180 668 369 275 505 329 755 415 194 378
 775 263 298 532 111 225 350 568 306 887 273 264 497 882 816 218 859 576 749 336 439 641 567 221 685 141 586 123 159 168
 211 124 836 154 373 811 873 215 703 331 723 274 868 230 204 174 260 831 287 475 375 678 776 288 869 709 340 148 146 229
 223 854 338 142 278 343 257 232 547 295 740 200 863 720 234 212 191 552 846 210 653 817 877  84 485 122 898 261 840 201
 563 896 806 268 883  50 255  83 717 810 875 114 533 650 783 153 144 476 784 134 102 647 660 115 743 172 651  86 253 109
 589 130 876 161 137  80  69 181 839 131 874  52 756 885 866  44 187 713 700 787  51 890 426 219 857  61 856  76 128 894
 483 662 841  99 147 101 184 503 842 305 327  56 792 185 864  49 177 752 554 843 199 695 814 167 779  66 802 878 267  82
 778 117 786  97 143 217  31  72 870 849 860 140 701 681  92  95 571 520 169 823 183 646 607 881 804  47 162  37 872 664
 359  57 585  59 745 175  96 139 871 667 771  32 501 789 106  24 527  53 824 862  68 897 744 886 892 785 726  38 116 121

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.65931e+06us (= 3659.31ms, 3.65931s)
Wall-clock time (full program): 3.71371e+06us (= 3713.71ms, 3.71371s)
Satisfaction error: 0
Number of search iterations: 2384
Number of local moves: 795 (including on plateau: 347)
Number of local minimum: 181 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 18492
Total number of local moves: 8022 (including on plateau: 3932)
Total number of local minimum: 1369 (including on plateau: 322)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 885 798 876 759 750  59 815 784  84 128 405  69  56  41  49 791 888 102 875 866  91  76 254  40 129 845 752  98 289 861
 608 494 777 641 843  25 853 837  96  42  48  65 440 119 108 692 827 868 514  53 481  95 186 162  88 900 863  39 899 852
 833 850 880 873 653  68 571 164 655 656  33  58  75  81 191 372 539 113 762 124 647 851  44  94 130 719  67 865 665 882
 735 792 756 292 627 155 594 473 279 166 872 615 109 205 195 887 601  70 703 892 233 192  79 136 181 734 297 690 106 849
 793 670 841 790 210  32 732 766 216  89 207 623 110 146 178 842 611 161 834 141 858 107 266 786 255 152 869 118 277 835
 629 864 606 542 821 891 831 741 182 890  23 800 148 260 169 230 813 134 778 156 709  80 116 163 768 328 306  72 103 362
 678 770 708 234 839 577 621 751 282 243 122 158 220 143 237 796 794 120 154 204 184 175 523 897 211 788 246  85 884 871
 695 582 575 679 521 123 680 862 889  36 311 172 167  90 249 687 736 253 159 325 824 183 392 390 740 668 367 185 323 652
 650 739 738 281 894 247 356 829 828 214 252 896 304 449  87 302 666 327 229 285 817 275 288 138 170 452 298 151 893 460
 355 553 469 421 248 527 402 314 693 767 303 840 357 287 217 728 769 284 324 312 780 359 874 177 446 300 208 347 443 411
 406 705 321 830 745 377 257 316 140 334 710 730 290 370 344 313 343 335 133 772 510 401 410 676 226 280 403 563 431 844
 338 558 342 810 301 495 886 318 261 270 262 779 465 654 137 291 565 468 898 242 193 256 276 307 707 453 384 227 711 661
 389 550 895 332 877 501 293 424 423 271 341 378 331 408 317 820 387 375 330 686 239 305 363 549 364 397 785 425 315 445
 416 525 346 258 202 596 361 439 723 382 587 860 358 881 506 350 223 434 336 333 669 426 329 543 437 310 265 502 422 496
 429 556 309 418 376 339 380 497 396 532 391 438 472 366 567 374 545 836 448 513 420 454 485 552 415 451 283 419 404 450
 530 383 352 368 466 457 388 326 555 586 340 351 433 630 640 160 479 442 427 478 515 395 564 548 512 486 180 600 526 398
 373 399 484 503 294 663 447 400 535 407 489 487 522 467 524 580 417 516 199 345 360 386 394 474 619 624 499 531 463 114
 554 197 528 101 428 436 432 491 365 716 409 504  55 498 534 547 441   3 492 544 742 612 631 578 145 189 682 691 585 385
 430 295 470 201 672 354 458 464 477 471 509 135 712 308 476 508 511 618  19 505 518 540 576 490 604 228 579 435 583 369
 412 153 296 173 111 562 493 209 507 584  26 139 475 568 592 593 590 722 517 589  51 632 748 638 699 483 595 480 614 264
 597 215 488 610 546 674 150 715 551  20 573 268 662 648 696  15  60 519 660 520  61 649 541 581 322 272 602 667 174 459
 221 224  16 203 117 537 570 697  66 588 658 337 455 572 675  14 126 644 444 634 724 613 456 574 560 637 566 557 617 413
  34  71 353 225  46 598 198 125 651 646 603 188 681 569 635 605  77 599 698 754 702 746  12 689 694 626 561 533  37 559
 149  93 171 609 147 659 235 190 765 500 259 482 870 633 753 461 176 628 643 664 747 806 848  45  92 165 713 811 179  22
 232 238 142 269  21 536  17  31 859 274 704 706 883 625 620 206 299 673 245 744 688 714 720 808 855 761  38 121 381 105
 131  62 244   6 773 737  99 700 758 607 763 267 622 802 636  73 251 782  29   4 222 776 726 825 795   1 144 846 677 157
 529  47 414 818 379  86 717 218 783 727 856 371 826 755 749 642 241 196 733 320 104  74 771 112 731  57 462 729  18  50
 212 348   8 718 132 801  24  11 213 683 823 616 671 743 799 250 127 812  30 701  27 725 781  82 775 797 684  78 809  35
 263 774  13 273  83 764  64 187 240 832 814 645 867 319 819 286 194 760 787 757 231 807   5 657 838 349  28 803   2  54
   9  10  97 278 393 639 591 236  43 854 822 538 879 878 816 100 219 721 115  52 168 805 857 804   7  63 789 847 685 200

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.43903e+06us (= 2439.03ms, 2.43903s)
Wall-clock time (full program): 2.49162e+06us (= 2491.62ms, 2.49162s)
Satisfaction error: 0
Number of search iterations: 1286
Number of local moves: 823 (including on plateau: 316)
Number of local minimum: 67 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8756
Total number of local moves: 6622 (including on plateau: 2672)
Total number of local minimum: 408 (including on plateau: 198)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 889 130 895 824  46  87 887 428 848 862 879   7 296  85  81 205   5 147 875 821 823  27 574   9 863  45 791 881  67 138
  20  57  52 729  14 873 855 825 866 877 859  70 183  23 319 266  64 153 878 790 894 822 717   4 229  71 836 814  30 325
 772 882 760  94  47 763 820 847 830 710 853  12 185  13 249 254  34  74 752 608 884 208 810 117 720  42 815   6  48 306
 685 127 817  18 119 851 774 806 781 805   8 112 307  32 281 188 742 220 745  19 808 678 286 548 832 239   2 738 741 206
 771  82 705 784 126 777 840 637 691 788 807 334   3 809  69  50 802  21 764 735 173  17 353  39 709 167 222 804 144 292
 750 135 841 767  53  16 748 723 683 696 829 698 114  40 159 224 619  60 749 512 300 143 297 731   1 101 702 811 756 257
 635 299 726 803 234 827  11 679 686 724 712 655  91 194  28 108 596 116 695 340 737 202  66 100 762  37 768 714 744 226
 676 690 721 658 247 733 240 576  95 235 707 671 174 669 373 155 740 209 631  55 264  92 404 730 725 165 668 634 568  10
 654 622 614 652 274 363 599 680 650 694 590 597 227 612 141  15 553 109 623 647 291  90 124 640 700 134 625 713 131 151
 682 578 649 674 280 677 613 766 540  75 592  99 288 656 164  96 615 618 638 278 338 606 213 595 546 156 550 611 204 118
 567  97 532 600 146 697 552 620 587 661 107 617 541 500 560 354 648 605 573 323 310 219 375 547 549 190 589  65 651 133
 505  25 542 629 335 237 544 580 584 525 556 160 327 545 572 582 326 644 322 561 142 616 283 543 535 261 345 585 494 610
 480 571 593 407 341 563 555 186 557 565 181 554 170 484 414 289 420 502 643 514 558 523 508  79 575 195 521 579 429 559
 448 570 482 161 498 583 424 495 250  36 490 524 466 513 441 506 492 520 491 497 457 501 519 476 465 301 515 463 405 526
 451 461 453 511 537 421 383 458 499 473 534 459 385 475 493 516 538 533 419 105 380 346 467 456 438 452 468 496 477 431
 330 398 381 434 536 504 460 417 527 315 464 471 479 454 667 485 423 470 449 481 403 509 418 518 350 522 446 367 402 435
 436 360 397 379 564 899 445 331 450 370 447 488 427 689 474 422 462 413 364 348 369 382 455 392 433 624 387 487 409 412
 442 430 248 393 581 359 440 415 444 344 384 439 861 362 320 607 396 406 245 443 703 437 828 269 425 645 336 469 472 372
 386 361 294 591 408 316 309 388 374 357 378 531 566 368 411 517 400 377 399 757 588 366 389 401 410 663 528 313 633 736
 290 321 478 390 562 277 486 308 302 337 432 312 577 275 255 833 233 287 391 888 753 352 718 371 342 604 376 268 653 844
 262 787 223 252 693 163 273 231 272 890 293 630 598 265 786 818 282 662 333 602 365 746 529 192 303 642 258 279 259 627
 351 416 191 270 775 285 211 305 503 284 332 260 849 304 871 835 329 317 238 311 609 773 819 251 193 794 246 356 395 842
 201 267 207 137 673 355 253 893 314 212 510 271 347 636 793 688 154 708 569 216 639 244 891 900 256 659 328 242 187 765
 236 892 184 125 728 221 343 180 358 339 175 197 845 751 318 785 243 739 136 324 539 628 664 898 241 780 176 145 626 699
 295 754 263 203 868 666 122 128 179 298 110 276 530 897 883 594 123 792 166 215 722 706 665 228 896 769 113 172 198 684
 121 789 129 132 632  88 148 232 199 177 601 850 743 801 603 747 846 799  78 670 152 783 230 200  84 876 111 178 856 660
 168 704 189 867 869 140 214 106 196 149  68 874 675 217 646 711  77 798  58 171  61 681  63 800  62 865 885 837 857 507
  38 489 872  72 759  56 210 157  43  80  83 782 727 778 732 692 858 621  98 394  54 779 672 813  59 880  26 349 701 641
 162 426  33 886 716 687 715  89 104  86  51 734 758 843 586 218 657 761 158 120 150 169 102 816 719 839 860  24 182 864
 812 795  44  73 854  31  41  29 103 551 483 831 776 225 826 755 838 834  35 770  49 870  76 852  93 797  22 115 796 139

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.90173e+06us (= 2901.73ms, 2.90173s)
Wall-clock time (full program): 2.95799e+06us (= 2957.99ms, 2.95799s)
Satisfaction error: 0
Number of search iterations: 1614
Number of local moves: 1210 (including on plateau: 668)
Number of local minimum: 43 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12344
Total number of local moves: 7723 (including on plateau: 3816)
Total number of local minimum: 624 (including on plateau: 277)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 887 124 766 141 890 156 878 721 893  54 729 263 658 805 158  73 865 107 671  75 215  41  84 828 128  76 659 872 161 537
 880 855 885  74 193 813  52 848 687  60 661 608 896 137 150 100 811 271 833 143 591  98 139 859 175  90 629  56 895  26
 123  85 581 538 557 839 470 753 742  83 579 649 830 836 164 634 826 558 666 134  81 242 144 613 900  39 421 138 130 160
  61 879 768  94 888 706 626 764 732 563 677 737 573 717 198 120 777  35 792  80  67  70 129 822 133 136 864 178 159 170
  77  88 796 518 834 740 601 739 803 185 154 348 858 209 197 325 823 473 798 223  30  50 436 846 109 882 862 106 147 258
 842 153 635 685 140 883 310 689 211 171 378 229 269 757 273 650 101 614 781 877 105 216 272 850 894 249 700 226 241 114
 290 210 873 785  57 187 254 678 699 287 795 802 898 860 162 564 217 838 208  78  87 691 790 861  91 213 221 163 352 304
 191 214 752 853 168 801 196 460 204 119 371 771 617 261 457 762 849 592 368 234 246 641 810 682 184 148 818 291 176 279
 127 189 373 255 104 281 265 676 747 245 794 232 867 724 825 774 284 604 356 151 238 870 155 690 744 230 748 289 355 323
 117 306 852 713 283 222 194 574 372 891 812 250 369 454 388 654 115 664 282 329 383 746 783 594 318 266 775 313 219 277
 333 157 631 395 884 240 451 806 561  62 343 317 332 264 360 787 324 869 422 441 353 494 693 709 567 349 236 286 416 433
 253 435 702 897 288 275 268 525 233 227 390 354 556 169 199 667 274 559 400 545 381 632 405 611 506 396 847 695 418 408
 376 821 298 419 374 346 342 411 248 262 276 876 442 844 429 295 314 899 375 448 359 522 517 670 453 417 427 385 367 303
 361 322 334 391 321 438 621 482 386 542 480 412 402 568 398 505 491 237 519 447 489 866 379 892 425 478 244 387 297 401
 871 311 534 499 501 511 285 370 319 341 414 328 503 309 514 439 474 602 362 507 512 312 479 426 596 490 358 428 434 486
 399 331 461 443 603 576 366 547 365 483 456 450 616 445 330 459 548 432 299 415 580 458 475 280 540 465 394 302 504 493
 307 406 452 590 410 565 463 357 382 510 267 420 524 469 476 308 437 397 571 472 449  82 539 492 535 532 404 645 466 588
 531 569 500 623 407 440 546 294 578 528 605 485 543 529 335  66 424 643 495 327 464 278 102 326 316 431 430 527 555 618
 502 639 179 620 409 734 719 251 566 550 554  89 513 315 704 172 572 350 336 544 553 549 188   5 508 509 110 516 640 619
 607 530 496 583 484 446 132 377 224 599  19 551 570 587 520 239 725 247 637 471 413 190 584 292 679 488 392 657 595 181
 487 498 207  21 455 636 536 363 606  16 597 708 305  51 552 403 615 145 585 681  22 521 560 235 467 609 526 688 767 653
 562 633 200 339 673 642 814 195  23 648  44 582  97 575 256 260 638 113 662 612 751   2 468 111 220 728 600 598 797 672
 523 730  63 125 477 589 782 344 152 841 586 515   9 622 703 257 610  24 665 655 718  43   7  28 789 749  13 692 707 497
 726 675 203 627 228 625  58 142 674 720 135  14 149  20 701 259 131  36 668 722 644 780 696  65 784 683 173 845 663 669
 694 593 182 301 756   6 788  29 126 765 736   8 180 684 652 393  69 186 165 715 660 338 651   4 754 808  33 874 624 741
 793 712  71 118  25 270  32  96 716 820 296 727  59 108 541 735  93 686 183 714 743 778 351 212 647 628  37 755 819 750
 760  68  11 680 800 192  72   1 177 854  18 201  10 697 698 481 577 384 218 723 827 533 231 389 738 817 829 710  15 804
 776 759 630 252 857  38 799  45 646 340 320  86 225  12 733 815 122 347  48 769 835 807 773  34  95 656  92   3 770 831
  42 462  53 881 112 116 779 772 364 863 824 758 300  64 731 875 243 840  47 146 851 809 832  49  46 167 380  99 121 889
  17 761  27  55 337 202 816 206  79 886 205 745 345 423 711 444 166 763 103 837 868 856 843  40 174 786 293 791 705  31

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.37742e+06us (= 2377.42ms, 2.37742s)
Wall-clock time (full program): 2.43015e+06us (= 2430.15ms, 2.43015s)
Satisfaction error: 0
Number of search iterations: 1125
Number of local moves: 844 (including on plateau: 278)
Number of local minimum: 60 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8989
Total number of local moves: 6686 (including on plateau: 2483)
Total number of local minimum: 405 (including on plateau: 166)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 890  28   7 811  19 100   4 712 270 764 796 880 839 891 250  10 150 245 241 815 179 843 781 831 794 809   2   3 120 431
  66  11 296 103 178  22   5 290 102 866 760 873 835 824 255 754 106 116  41 833 207 872 722 701 765  39 791 848 383 851
 888  55  15 823 110 275  98 122 751 260 707 821 177 746  32 243  40  90 763 729 115 724 770 846 820 834 808  13  12 828
 789 199   9 881  68 234   6 240 741 659 699 829 822 896 143  57  99 104 759 861  16 246 205 801 790 779  58 680  84 761
 783 183 451 543  14  25 773  26 743  47 147 665 217 734  59 800  71 200  37 692 639 788 854 825 629 372 836 753  62 547
 666 291 311 842 220 287 142 160 731 850 683 681  18 647 216 107 705 152 631 627  31 503 137 730 273 623 772 589 364 526
 612 295 121 721 169 228 151 180 609 672 529 685 634 704 166 131 197 232 577 696 211 584 632  43 738 615 674 660 332 717
 579  30   8 827 108 173 720 389 613 502 289 733 687 662 271 700 127 189 703 670  65 807  92  36 652 614 706 777 132 654
 483 461  81 719 344  85 499 114 723 663 117 619  17 750 282 641 597 580 621 537 710   1 697  53 441 676 510 658  78 758
 569 123 549 473 196 406 625 308 476 643 713 598  20 617 105 616 281 202 470 756 329 475 645  82 136 591 728 626 478 679
 494 330  23 525 366 223 449 218 605 695  52 545 594 534 374 593 651 414 622 430 516 380 524 497 272 522 506 602 224 735
 633 438 539 444  56 239 671  93 518 504 486 571 667 410 460 496 558 355 435 405 448 437 565 204 548 550 398 484 411 492
 514 481 418 646 222  63 567 266 606 533 446 369  54 523 185 640 572 479 495 668 536 678 546 520 552 432 544 474  94 392
 417 408 541 487 427 170 648 382 464 409 467 312 297 682 500 559 450 407 540 635 527 424 416 512 274 488 462 428 443 339
 587 586 458 350 284 455 303 373 442 396 402 573 468 566  29 288 489 422 642 340 669 578 343 469 590 491 581 457 412 472
 583 436 568 505 885 664 675 413 513 225 404 347 480 268 530 278 515 425 384 359 354 325 650 601 440 293 363 247 352 433
 551 445 561 490 611 421 159 498 345 636 248 334 400 653 463 563 485 517 603 628 466 253 482 381 327 454 263 531 509 238
 362 657 379 193 732 570 342 477 599 528 386 452 299 348 358 318 280 390 361 595 317 555 556 397 259 471 391 819 736 388
 313 521 385 353 608 610 535 511 564 322 365 493 501 393 419 294 277 265 356 305 415 688 661 292 310 399 655 508 319 878
 168 812 360 439 624 787 677 607 261 331 795 126 279 269 870 231 333 862 337 326 252 328 233 656 857 244 262 309 557 323
 338 749 423 429 786 604 298 708 459 856 336 264 877 192 766 368 420 585 206 321 560 194 395 304 230 161 203 335 799 349
 227 745 768 324 620 744 371 637 237 254 158 357 889 256 852 236 315 426 367 314 630 320 316 582 804 341 164 285 600 376
 219 592 847 129 882 686 378 554 387 377 748 198 453 133 698 798 215 691 214 283 792 182 830 174 172 346 186 401 769 181
 130 684 814  86 886 775 874 711 307 301 221 162 897 125 876 191 785 715 251 229 793 235 176 562 210 112 300 212 638 257
 128 726 727 163 742 618 134 596 840  75  27 394 465 154 574 865 776 853 276 119 869 575 149  89 403 837 226 124 689 302
 171 188 673 145 532 883 871 805 148  73 195 213 806 267 588 375 762 649 900 139 306  88  49 849 797 864 201 146 782  50
 258 860 714 867 447 780 894 845 157 175 153 101 140  60 832 165 813 774  95  24 576 184 737 507  96 167 899 187 818 190
  74 887 709  76 817 884 855 810  87  51 538  21 155  34 702 519 771 693 803  67 863 141  70 553  69 286 118 895 725 242
 144 542 868  83 784 747 694 644  79 739 755  91  72  42 858 841 816 716 740  77 690 898 249  48 156  44  64 113 875  46
 879 752 892  38 778 757  97 826 138 109 893 208 456 135 802 838 859 767  45  35 434 209  33 370 111  61 844 351 718  80

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.62287e+06us (= 2622.87ms, 2.62287s)
Wall-clock time (full program): 2.67931e+06us (= 2679.31ms, 2.67931s)
Satisfaction error: 0
Number of search iterations: 1381
Number of local moves: 801 (including on plateau: 203)
Number of local minimum: 76 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10817
Total number of local moves: 7358 (including on plateau: 3168)
Total number of local minimum: 548 (including on plateau: 214)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 637  99 121 772 486  18 778 668  45 773 789 633  68 871  32 888  62  59 108  95 686  94 758 816 827 853 186 872  85 336
 168 898 138 732 743 432 103  23   9 877 709 866  36 688  66 875  30 194 740 120 763  39 864 685 123  12 831 830 107 814
  73 736 622 803 652  15 599 114 125 198 729 690 141 126   6 895 147 595 786  69 682  67 605 826 190  82 760 602 779 801
 109 164 843 454 589 196 479 296  22 179 176 788  52 583 137 725  65 745 750 237 870  37 295 782  60 655 823 707 884 813
  49 735 291 795 794  72 471 636  71 210 784 825   8 165 201 855 191 869 805 160 683 133 792 213 106 231 718 774  70 808
 105 240 128 883 892 900 485 146 144 570 857 665 192 787  48 216 136 399 697 209 742 501 113 886 183 466 228 669 208 820
 375 119 211 833 150 163 893 159 162 261 777 593  93 330 352 180 282 873 845 188 445 197 357 775 532 799 790 704 215 862
 259 143 175 837 839 222 285 748 170 187 674 765 274 817 252 200 277 544 539 239 711  87 879 642 127 670 584 894 204 271
 294 428 492 896 371 132 265 731 199 313 793 705 224 302 131 139 254 815 469 148 878 851 734 286 299 258 781 728 284 315
 300 752 319 440 882 218 724 256 347 897 588 741 255 380 217 290 241 809 848 272 756 408 124 297 195 247 720 500 184 308
 353 233 401 650 338 229 333 761 446 279 890 365 348 340 395 323 314 400 847 887 885 604 361 251 345 332 366 607 344 288
 292 346 260 641 281 326 386 780 899 350 591 889 414 234 182 424 447 393 802 263 874 273 317 560 372 377 325 610 205 402
 392 267 327 493 378 459 563 412 403 385 394 590 429 307 465 407 264 413 601 425 804 370 334 497 280 891 354 656 436 519
 491 390 418 739 438 276 520 515 356 355 467 404 415 509 464 339 822 419 342 502 457 268 320 536 437 598 477 538 381 322
 451 283 431 461 600 341 387 417 525 373 441 463 474 364 510 487 449 455 409 478 406 473 530 542 363 523 677 298 522 382
 511 483 476 379 482 362 351 460 388 543 422 448 468 603 547 383 526 236 531 516 310 514 508 551 421 238 426 475 376 581
 490 556 293 410 470 646 528 512 442 587 453  34 439 557 617 359 628 488 499 433 129 566 435 452 349 535 391 250 462 505
 548 585 553 396 481 612  86 578 545 450 489 444 321 518 456 423 582 102 416 513  78 503  98 661 616 574 529 304 537 517
 358 533 559 369 561 540  47 495 458 624 203 324 623 527 472 484 443 569 389 504  44 700 328 177 695 427 613 405 480 564
 550 621 577   4 649 673 130 306 596 534 166 189 647 521 506 554 627 230 151 100 420 567 608 671 507 571 289 303 639 609
 672 710 494 173 266 498 155 206 634 116 660 145 615 687 723 679 496 434  92 626 318 751  97 305 568 681 225 244 549 696
 635 562 140 309  27 632 311 664 606 565 269 118 713 552 555 753 625  80  76 638  24 368 693 579 738 110 586 343 630 614
 703 312 573 134  81 667 663  21 541 832 360 153 654 592 699 692 722 152 524 689  89 730 158  75 558 122 597 104 746 572
 662 658 726 227  64 644 214  54 675 698 270 301 717 629 676 648 576 242  90 759 246 747 594  88 744  13 611 212 702  28
 798 657 783 156 653 719 546 678 714 659  26 172 785  42 721 749 769 157 167 733  50 824 631  46  19 257  57 243 620  84
 797 834 701 253 580 737 691 618 645  10 398 337 861  25 846   1 384 169 149 842 278 575 708 117 849  58 226 142 651  33
 852  53 818  79 245 207 791 716 829 860 101 262 838 755 694  51 757 232 331 329  91 680 174  83 666 811 161  77 770 202
 807   7  56  17 287 863 715 684 865 115   5  61 712 219 828 430 766 819 220 806 154 776 335 316 706 859  35 249 762  41
 764 235 754   2  43 836 248 221 844 619   3 171 858 411 850  55 821 767 181 854 367  16 727 771 840 868  14 112  40 223
  20 876 835 178 193 880 768 640 810  96  31 374 841  74 867  11 812 856 111 881 275 796  38  29 800 397 135  63 643 185

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.44833e+06us (= 2448.33ms, 2.44833s)
Wall-clock time (full program): 2.50276e+06us (= 2502.76ms, 2.50276s)
Satisfaction error: 0
Number of search iterations: 1228
Number of local moves: 865 (including on plateau: 350)
Number of local minimum: 55 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8948
Total number of local moves: 6482 (including on plateau: 2506)
Total number of local minimum: 381 (including on plateau: 173)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 111 802 846 890 870 898 793  30  10 664  78  49 845 752  72  35  29 764  23  46 709 488 886  69 721 769  44  14 755 453
 858 766 114 105 100 632 763 112  47 699 833 178 792 119 668 164 145 179  97 102 742 626 650 887 785 760 142 787  52 611
 144 583 896 135 103 645 751 698 865 630 637  68 776  56 132 110  88 863 166 530 197 716 677  86 839 873 241 177 665 168
 143 842 316 893  38 556 831  60  55 884 140 441 652 125 121  40  39 881 139 118 141 759 830 879 848 815 899  50 683 297
 218 712  96 185 880 553 784 113 163 695 131 192 659 159 301 124  84 454 515  51 635 743 821 624 829 894 676 167 813 244
 506 219 198 162 120 891 867 206  70 567 269 762 878  76 199 220 227 245 158 194 773 778 834 671 727 849 628 221 770 230
 174 757 484  99 262 874 895 129 265 783 153 450 877 233 723 109 238 298 181 191 157 820 885 215 620 642 714 212 825 250
 350 710 340 295  28 696 503 492 293 897 866 258 767 205 869 182 360 236 223 187 211 669 267 532 588 739 606 255 649 242
 300 623 243 234 232 687 302 217 808 892 694 697 290 362 226 306 176 308 343 257 288 888 289 264 859 706 824 235 741 224
 247 761 563 251 275 356 663 311 363 798 625 592 354 281 841 303 214 246 204 378 889 566 332 276 373 856 657 278 341 321
 735 403 189 352 651 254 314 184 351 682 882 574 353 299 456 324 195 312 309 843 673 827 272 329 596 387 734 384 307 344
 193 648 591 279 313 703 334 342 305 429 736 900 318 256 249 377 370 448 737 372 852 572 310 397 425 511 517 291 414 326
 261 597 282 389 545 337 327 385 292 598 691 445 461 411 390 374 284 675 388 408 868 561 477 443 587 426 346 437 463 367
 416 339 451 402 434 349 400 376 850 369 439 522 405 409 413 322 883 319 513 335 404 686 435 519 462 382 424 423 394 440
 479 430 487 399 436 478 368 383 535 395 407 438 432 464 333 460 410 455 325 457 823 330 525 493 473 526 466 428 459 421
 417 348 485 396 548 361 154 575 406 364 452 475 586 518 474 579 509 476 546 512 580 266 486 514 489 431 371 420 365 412
 418 401 433 516 562 498 260 555 422 541 549 480 345 505 533 483 471 398 491 467   6 294 534 537 392 496 415 482 524 507
  33 393 137 520 495 614 581 500 539 612 582 490 557 208 458 560 542 136 559 531 504 366 594 497 270 589  79 470 576 523
 468 568 274 481 604 123 610 465 469 472 590  63 501 616 510 638 569 540 149 538 613 359 573 186 547  36 188 678 502 585
 550 347 446 527 508 552 646 618 494 200 122 231 601 543 528 447 584 689 636  34   3 271 680 647 358 600 155 536 639 323
 521  45 203 617 662 216 654 593 554  26 607 338  91 621 631 499 577 660 644 609  20 180 602 615 571 529  62 653 196 719
 603 357 570 720 320 578 544 661 641  77  16 317 599 746 681 551 595 605 629 685 115 386 640  74  43  67 202 672 133 688
 619 183  89 643 268 564 315  21 702 287 684  98 655 692 117 627 565 633 718 711 622   9  32 731 449 160 126 738 713 744
 253  57 700 794 634  92 283 690 756  87 336 558  41 786 670 771 728 758 708 775 222  11  58 381   4  53 252 656 722 679
 753 391 754 693 732  42  37 795 797  66 740 658 280  82  85 857 730 801 240 789 667 148 248 116  19  12 263 747 169 804
 810  24 828 745 666 134  18 800 138  27 380 146  81 704 717 807 748 832 791 331 286 201  54 724  93  75 729 777  13 836
 782 674 812  83 772 207 161 768  15 210  71 749  59 799 239 774 707   2 725 806 444 173  95 814  61 229 790 608 107 779
 835 304  17  48 190 375 156 765 796 130 213 826 101 864 872 875 781 108 822 715 419 209 106 861 150  64 871   5 228 809
 442  80 855 811 840 225 128 853 788 175 237 819  94 780 170 847 862 104 733 705 379 285 171 127 172   8 817 860   1 147
 876 151 816 851 427  25  73 818 726 259 355 701  65 844 837 750 805  90 803 838 273 328 152   7 165  31 277 854 296  22

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.54426e+06us (= 2544.26ms, 2.54426s)
Wall-clock time (full program): 2.59866e+06us (= 2598.66ms, 2.59866s)
Satisfaction error: 0
Number of search iterations: 1229
Number of local moves: 864 (including on plateau: 351)
Number of local minimum: 56 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9820
Total number of local moves: 6890 (including on plateau: 2944)
Total number of local minimum: 442 (including on plateau: 263)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 888 410 150 805 692 162  95 122 894 702 224 876   9 145  83 567  88 747   1 180 621 889 677 842 237  72 799 766 748  24
 186  75  44 770  43 696  71  99 886 753 867 732 865  85 551 711 275 668  48 292 101 828 815 764 680 148 564 674 128  96
 147 272 525 691 881  91 672 131 781 699 566 607  66  25 178 538 277 599 126 583 219 834 356 821 896  76 718  21 236 883
 118 877 105 891  63 734  77  97  56 811 884 826  41 252  87 295  94 866 683 394 723 862 897 789 194  69 725 794 156  55
  52 687  98 197 893 121 142 203 233 765 171 728  84  27 205 719  73 788 549 738 225 885 615 824 705 181 782 812 135 878
 296 541  79 879 863 139 198 600 167 872 898 176 134 250 183 869  70 802 221 288 778 593 324 729 900 153 189 830 302 192
 359 832 306 662 287 267 534 116 125 681 797 803 416 320 270 231 173 489 223 755 193 817 304 362 870 322 847 785 124 245
 248 514 164 772 136 226 458 895 166 130 174 871 269 208  62 737 227 700 329 606 650 563 814 212 358 279 257 800 846 844
 278 616 388 352 375 261 103 230 827 347 242 283 232 207 108 890 422 882 682 715 804 522 874 779 195 293 258 829 253 268
 109 861 532 342 228 417 254 249 244 892 337 333 184 163 213 346 299 310 793 809 816 436 643 247 899 742 414 330 775 298
 251 656 335 637 217 317 752 372 386 543 887 325 433 262 396 443 487 724 246 838 852 623 284 349 271 434 229 259 367 340
 323 841 154 392 376 453 274 363 384 357 312 646 300 381 350 856 264 579 377 848 256 808 587 476 628 461 399 238 427 405
 393 605 334 472 408 319 389 321 464 403 241 505 348 475 454 338 413 508 784 875 510 642 406 281 344 387 457 421 559 459
 332 855 341 697 297 420 550 385 402 469 445 328 294 767 301 383 409 286 703 404 739 526 331 371 390 373 496 449 374 398
 336 370 560 622 429 501 590 430 391 428 511 444 412 518 516  23 603 529 631 536 397 574 415 327 235 527 243 308 641 468
 368 467 506 576 423 528 654 481 451  29 407 460 265 480 531 431 463 572 521 290 474 418 441 524 439 442 512 364 504 494
 273 307 401 438 478 432 498 491 617 424 316 484 495 542 313 379 554 548 592 507 597 239 440 582 477 479 360 315 466 471
 435  54 497 160 626 380 640 612 426 485 595 289 558 545 500  18 675 503 596 165 168 411 577 499 196 602 555 736 547 465
 490 240 552 446 353 586 339 618 648 613 280 611 456 625 688 161 556 462 291 146 155 509 216 425 378 630 657 486 450 448
 562 285 546  50 573 483 561 493 698 594 537   4 530 557 419 492 519 584 129 133 660 305 741 326  38 520 568 588 565 455
 488  81  36 535 663 624 569 671  33 102 632 580 833 666 735  67 585 200 190 100 633 143  11 658 119 783 678 667 760 673
 854 234 652 115  53 614 649 670   2 591 365 629 645 686 610  45 713  20 544 533 276 222 182 517 581 502 609 634  42 726
 712 266 601  57 689 798 282  14 175  35 651 578 733 437 482 721 740  13  82 638  51 263 206 774 825 589 731  31 635 706
 684 255 709 106 515 539   6 644 710 669 151 693 810 354 647 179 685 137 540 314 513 141 776 177 140 604 470 185 523 639
 771  68 751 620 716  90 361 756 786 694 636  93 571 780 608 839 311 117 807 112 113 114  65 172  17 704  59 318 722 744
 170 382 820 209 570 860 787 400 792 159 157 452 575 831 791 214 676 351 345 215 690  78 762  39 720 188 369 169 707  37
 851 553 819 880  86  30 661 806 104  74 218  32 822 701 717 796 745 127 664 679 849 123 152  61 210 777 191  92  40 655
 859 473 857  15 714 823 653 619 757 138  26  22 665 627 835 111 813 132 220 309 303  80 199 447 761 659 149 211 695 343
 864 749 795   7 110 768 853 754 850  46 187  47 743 840 845 366 598 260 868 355 144   3 201  34  49 773 202 395  19 790
 818  89 858 120 758 836 843 873  60  10 801  58 727 759 837 750 708  12 730 158   5  64 204 107 763 746  28   8 769  16

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.95452e+06us (= 3954.52ms, 3.95452s)
Wall-clock time (full program): 4.00793e+06us (= 4007.93ms, 4.00793s)
Satisfaction error: 0
Number of search iterations: 2300
Number of local moves: 1179 (including on plateau: 690)
Number of local minimum: 150 (including on plateau: 41)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18506
Total number of local moves: 9604 (including on plateau: 5482)
Total number of local minimum: 1401 (including on plateau: 417)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 238 160 108 876 769 881  39 104 888 844 877 210  74  75 873 674  71 772 106 187  89 574 712 584 742 858 295  60  31 744
 179 162  27  62 173 539  72  46 512 650 819  45 152 130 792 782 781 811  99 694 183  87 801 848 839 765 841 231 861 532
  21 887  90 141  81 758  12 609 566 845 665  92  13  44 868 493 884 809 502 120 590 700 837 511 822 380  56 859 131 129
 894 119 891 804 122 507  67 293 762 110 701 496 138  61 807 761  94 882 550 223  42 733 525 655 813 728  85 383 199  70
 103 153 197 128 725 755  88 109 760 843 767 340  18 212 862 608 750 883 581 100 115 743 889 615 685 482 350 188 240 226
 124 324 142 126 245 454 172 204 833 854 747 112 159 249 849 705 895 166 101 314 145 827 773 818 730 874 344 181 272 776
 281 244 255 105 647 869 836 171 382 832 893 866 301 345 558 715 133 156 248 150 148 706 554 875 795 168 111 224 113 834
 900  77 207 154 662 850 177 892 640 756 871 299 359  47 393 696 291 161 573 268 102 885 739 360 851 342 205 137 236 385
 335 165 477 220 318 899 288 292 602 896 676 221 308 408 594 878 349 222 228 191 879 125 898 369 768 233 239 481 216 740
 258 273 194 897 800 668 886 235 784 693 638 279 370  93 260 865 316 622 336 180 890 354 270 447 169 371 431 266 261 409
 321 317 271 286 802 599 388 237 803 302 495 298 368 436 274 663 297 443 546 276 202 348 675 835 867 306 407 339 262 852
 330 296 480 430 479 829 186 724 565 275 488 805 373 449 499 243 313 367 759 372 406 265 346 810 347 441 315 552 451 320
 498 427 195 379 351 579 423 252 545 338 538 326 816 250 190 337 328 864 352 432 289 735 533 779 503 464 439 196 794 363
 486 491 403 374 390 569 283 613 494 440 516 561 278 466 285 485 450 536 490 442 307 282 487 429 468 515 510 470 560 435
 404 438 287 437 230 425 452 508 580 453 422 497 416 531 604 257 419 421 783 355 500 433 568 474 426 489 377 582 327 420
 395 553 458 446 309 234 544 592 402 475 311 378 682 506 652 366 563 277 322 535 356 444 381 400 547 630 570 522  82 583
 616 593 471 147 476 227 541 504 343 353 392 398 646 601 577 587 417 478 254 534 505 384 585 391 294 164 459 310 578 690
 634 457 619 596 386 219 405 564 241 461 189 483  98 472 463 521 501 415 600 401 465 469 323 312 256 559 537 597 549 723
 414 618 389 625 635 357 413 680 332 460 267   8 540 526 445 284 688 614 140 649 528 333 610 211 242 707 621 456 305 418
 660 603 492 611 542 455 632 484  96 556 644 586 517 679 530  43 394 656  58  14 796  54 246 157 520 641 708 518 620   3
 623 548 524 629 251  15 462 636  78  97 209 514 683 643 732  66 428 709 473 527  35 376 595 325 523 290 519 612 766 627
 687 605 830 672  50 253 788 631 448 365 361 529 513 509  86 434 411 606 218 710 628   5 184 163 203 651 567 720 677  11
 319 607 588 699 280 208 698  83 269 684 387 341 571 562 467 151 714  20 653 633 692 127 397 217 144 697 543 575 412 777
 734 704 576 648 557 132 695 551 121  57  80 771 825 666   4 174 671 716  64 661 637  84   1 362  91 624 787 770 746   6
 703 736 793 719 654 215 589 749 155 185  63 738 259 659 170  17 639 598 731 797 737  26  25  65   7  36 718 808 790 134
 780 748 826 645  16  19 741 331 300 146 192 799 717 681 175  53 754  22 856 786 778 727 225 329 107  79 117 726 626 214
 823 617 824  69 136 364 664   2 143 167  51 745 863 791  30 591  48  10 691 686 764 667 158 304 135 757 774 178 642 821
 670 763 860 702 838 193 853 722 399  28 123 572 785 689 247 658  37 213 815 814 263 555 116 264 303  73  40 673 198  49
  76  24 812  41 870 375 711 857 114 201  38 334 831 880 206 232  59  34 657 751 775 789  29 424 118  52 798 846 753 828
   9 806 229 847 721  68 410 840 358 149  95 872 842 855  23 176 820  32 729 713 669 678  33 182 200 139 752  55 817 396

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.48962e+06us (= 2489.62ms, 2.48962s)
Wall-clock time (full program): 2.54335e+06us (= 2543.35ms, 2.54335s)
Satisfaction error: 0
Number of search iterations: 1295
Number of local moves: 754 (including on plateau: 293)
Number of local minimum: 78 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8992
Total number of local moves: 6721 (including on plateau: 2987)
Total number of local minimum: 352 (including on plateau: 175)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  45 663 843 832 694  52 893 857 589  49 120 180 565 143 130 879 482  46  87 612  81 815  95 882 898  97 839  66 850 131
 708 891  61 173 632  55  37 894 106 642 726 672 676 126  79 871 739 115 530 563 102 791 161 820 220 876 302 111 584 252
 774 195 105 780 887 892  59 193 119 603  64 800 511  91  43 732 723  48 755 597  92 554 619 889 245 141 206 855 833 110
 874 493  58 769 886 661  35 215 209  98 241 134 816 294  74 895 574  69 570 182 659 698 246 864 872 129 828  65 840 167
 192 870 259 766 896 221 777 107 207 602 734 888 885  31 151 104 757 187 270 745 186 717 174 671 249 197 435 258 878 101
 177 813 136 740 467 863 100 238 226 743 728 818 202 137 279 219 702  93 822 273 231 785 133 848 793 260 512 153 799 225
 178 674 214 213 880 233 797 611 123 817 770 283 746 280 144 721 846 152 899 265 158 657 194 783 156 188 744 217 336 236
 250 772 125 845 432 169 253 303 333 824 655 651 304 370 299 347 750 434 867 331 248 687 860 145 148 234 719 150 754 256
 884 881 201 243 301 190 267 714 900 320 854 171 230 218 135 128 705 281 297 866 185 679 149 693 210 741 587 457 869 159
 346 313 155 242 269 411 897 778 160 883 851 310 308 422 305 142 790 317 477 307 295 727 371 389 462 571 749 278 590 400
 235 255 735 733 342 386 179 334 306 829 531 198 309 196 118 417 416 425 849 423 266 560 324 796 861 580 668 322 550 372
 289 547 262 290 298 357 275 481 380 405 827 761 391 420 365 237 802 429 823 291 319 614 292 335 330 686 653 384 695 277
 418 353 261 199 329 203 449 480 287 486 825 485 567 361 244 502 620 373 510 296 478 623 509 358 332 801 752 401 658 355
 442 469 375 804 349 363 634 399 492 506 441 507 381 396 487 447 504 378 382 483 498 491 446 463 415 385 413 592 368 205
 428 387 421 311 394 409 340 468 543 549 450 360 402 326 522 362 537 350 356 858 559 594 338 343 546 633 540 419 393 377
 366 352 497 553 458 443 367 621 499 345 426 508 453 359 424 427 500 348 545 586 476 191  30 631 575 456 624 532 479 444
 461 431 494 558 697 436 459 465 374 593 440 466 527 403 505 521 397 327 451 455 398 408 534 404 536 525 127 528  99 496
 701 539 535 376 513 489 601 551 471 430 228 514 541 470 410 495 667 439 548  44 464 337 638  68  17 518 433 568 438 472
 700 562 615 652 669 445 520 685 474 517 114   5 282 552 414 437 223 599  14 639 390 222 622 555 736 641   7 344 232 648
 516   4 542 576 578 490 666 189 591  21 501 557 609 581 645 566  18 660 181 165 712 271 616 503 665 300 274 681 293 544
 630 577 598 626 605 526 484 452 585  60 460 473 475 613 588 596  94 529 388  84  75 395 707 216 704 284 286 538 288 579
 650  96 617 582  77 519 670 339   1 564  85 610 662 680 692 835 200 794  82  88 629 515 524  89 628 729  22 533 272 731
 637  86 696  70  34 720 606  19 683 316 164 646 787 706 713 763  40 636 607 572 600 323  63 124 758 351 212 573 328 682
  71  12 643 109 718 753   8 664 789  33  39 748  80 798 699 627  57 771 640 809 569 183 759 157 776 392 268 561  20 762
 595  54 677 722  15  47 625 819 688 254 121   9  26 724 865  90 175 689 318 608 730 263 795 675 112 710 523 656 239 691
 703 147 709 116 690 556 618 684 716 168 412 379 132 649 807  56 369 764 604  72 792 103 760 285 257  32 172 779 154 830
 364 852 647 488 166 853  76   6 678  83 765 448  51 725 856 208 162 768  53 811 838  11 742  78 756 314 276 139 454 847
  67 312 341  24 227 184 635 113 782 224 354 784 788 808 873  41 315 751  29 837 767   3 806 251 229 831 644 814  27 654
  28 711 859  73  10 747 781 673 821 836 264  42  36 826 805  38 211 868 240 406 877 176 862 138  16  23 583 803  25 737
 786 204 834  50   2 842 407 163 383 715 325 108 773 810 844 812 140 875 321 247 841 122 146  62  13 890 117 738 170 775

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.45456e+06us (= 2454.56ms, 2.45456s)
Wall-clock time (full program): 2.5094e+06us (= 2509.4ms, 2.5094s)
Satisfaction error: 0
Number of search iterations: 1162
Number of local moves: 770 (including on plateau: 337)
Number of local minimum: 57 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9836
Total number of local moves: 6598 (including on plateau: 2669)
Total number of local minimum: 475 (including on plateau: 198)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 101  55  96 754 768 756 772 269 699  22 789 438 834  16 842 139 751 767 288 186 760 719 839 242   1 294 770  53  71 424
 855 161 254  61 778 198 114 467  77 800 167 718 829   6 825  90 857 845 310 164 147 847 333 801   3 830 870 819 224  65
 743 205 339 811   7 788  85  99 370 687 798 735 859  87 787 143 790 726 342 328 135 748 818 777  41 187  81  28 178 793
 844   2 237 528   4 838 401  27 668 808 202 766 192 185 611 322 803 846 291 807 761 746 596 130  36 645 295  50  72 802
 797 356 334 865 175 100 745 243 165 721 702 773 238 171 824 209 805 822  51   5 106 860 694  79 284   8 775 686 188 734
 613 146 549 821 641  15  88 201  89 695 585 736 688 129 795 102 785 724 170  66  11 628 700 673 412 445 739 505 125 639
 738 132 697 728 762 828  47 617  63 679  62 744 134  25 677  56 704 794 263  24 740 809 680  78 277 118 712 536  84 707
 221 256 571 593 682 732 521  44 652 731 381 513 543 222 656 116 635 506  34  38 649 701 330 158  58 210 661 755 594 752
 671 233 575 665 636 684 627 159 469 664 683 495 152 241 563  20 610 615  21  29 600 654 779 411 245 197 546 540  17 714
 602 151 551 607 533 515 572 725 510 374 595 786 223 508 541 601 675 781  73  69 112 509 372 137 257 111 490 813 168 554
 127 176 632 431 621 428 570 194 466 228 483 565 234 499 514 568 567 422 407 598 658 442 524 564  59 605 640 597 154 542
 289 329 590 559 488 538 759  93 482 669 650 229  37 402 663 582 479 519 414 583 346 529 592 124 409  10 477 633 618 423
  48 408 465 553 619 624 449 552 406 441 492 517 157 292 606 576 446 464 138 530 651 280 390 435 319 584 588 569 393 523
 285 320 502 494 578 518 525 326 520 535 579 430 105 471 512 258 459 455 362 396 672 260 391 614 213 433 703 500 623 476
 573 427 489 394 454 616 439 349 332 463 472 487 405 581 440 327 473 493 388 350 562 387 447 400 478 429 547 432 378 503
 566 522 395 620 385 347 504 323 365 484 480 434 376 306 456 516 527 474 325 532 599 451 246 392 380 398 637 548 470 457
 426 678 337 338 436 437 416 397 355 534 630 318 792 266 364 307 475 603 501 296 545 497 612 386 653 331 230 361 625 369
 421 848 861 303 156 486 264 204 353 341 314 642 555 667 574 404 179 360 498 460 297 379 884 371 670 249 375 481 359 560
 561 634 298 867 420 304 444 875 717 220 177 410 248 696 413 389 368 142 831 399 282 193 352 383 631 638 348 443 448 384
 299 643 216 271 872 852 219 591 236 275 366 580 321 403  83 270 558 544 832 415 556 462 892 231 626 418 281 251 662 290
 377 550 890 286 240 305 227 301 324 587 827 373 367 676 453 733 309 417 452 259 312 345 317 279 604 589 876 265 660 315
 720 622 273 419 351 287 267 674 896 276 203 340 644 247 357 774 302 149 425 817 215 886  46 710 655 826 145 363 272 354
 526 496  19 268 646 255  92 507 866 336 335 293 262 698 274 750 208 252 784 705 278 195 868 659 815 804 183 133 782 226
 344 691 166 316 153 180 869 771 313 115 235 458 763 747 109 882 196 217 609 849 261 190 300 894 877 693 181 212 685 239
 537 666 874 232 199 835 174 871 883  33 244 207 709 730  40 737  52  97 749 856 136 189  98 820 539 511 110 117 888 382
 343 862 283 206 885  76 783 723 214  26 840 250 741 863 311 812 122 253 880 769 586 358 123 148 858 155  45  86 742 172
 182 864 169 113  68  32 144 854 160 722 141 121 485 899  14 608 211  54 765 753 791 103 104 810 900 799 878 889 843  39
 163 689 898 120 119 708 692 647 841 131 225  13 711 706 150 814  35  94 657 715 184  31  18 758 690 727 162 887 757 173
  75 577 895  74 648 126 833 531 716  95 776  80 461 879  12 557  91  23 891 836 850   9 140 200 729 780  42 893 629  67
 468 816  60 218 191 107 873 881 308 823  82  64 450 897  49 853  43  57 764 681 713 108  30 851 796 491 128  70 806 837

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.71356e+06us (= 2713.56ms, 2.71356s)
Wall-clock time (full program): 2.76755e+06us (= 2767.55ms, 2.76755s)
Satisfaction error: 0
Number of search iterations: 1452
Number of local moves: 788 (including on plateau: 240)
Number of local minimum: 111 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10575
Total number of local moves: 7333 (including on plateau: 2946)
Total number of local minimum: 570 (including on plateau: 214)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 240 842  52 886  60  56  45 861 639 774  75 710 139 888 883  81 129 848  95  61 865 173 753 791 840  80  32 727 849  41
 634 759 110  31  26 590  73 846 528 701 616 724 887 895 703  38 829  96 112 187 202  78 626 749 133  77 872 832  39 522
 736 825 893  89 162 156  55 679 430 551 157 873 152 431 681 588 891 116 167  64  90 889 119 709  46 864  58 683 704 657
 123 875  69 867 146 198  65 854 699 804 197 712 120 570 871 612 359  92 135 200 853  72 232 691 149 103 860 794 622 571
 746 109 160 882 758 128 295 730 729 870 122 560 203 850 857 625 549 221 237 258 141 379  84 288 246 896  82 166 606 738
 228 880 130 132 209 823 163 506 694 269  76 785 898 855 518 188 751 482 256 161  99 201 107 722 885  74 108 826 784 705
 655 301 105 250 159  50 693 764 876 582 214 868 174 136 756 215 544 877 499  49 803 138 837 900 216 171 140 151 659 733
 755 206 257 305 316 155 414 809 834 805 169 884 236 249 742 362 750 241 371 312 618 217 897 643 282 199 332 270 277 608
 526 265 706 211 807 195 181 600 862 259 303 293 297 285 740 299 781 242 613 275 404 833 389 769 251 310 348 192 440 839
 732 381 210 372 302 196 284 304 772 700 263 395 320 811 351 698 640 360 406 179 856 272 294 660 307 338 394 225 817 676
 757 317 247 369 322 248 354 330 286 365 739 720 300 262 684 820 576 323 234 899 333 264 306 607 350 204 268 357 831 843
 254 325 337 260 892 355 717 483 261 336 287 890 343 716 370 226 497 243 329 456 425 252 383 894 368 366 859 313 575 503
 462 398 400 445 319 847 318 292 382 321 314 402 689 346 495 500 812 627 291 233 347 326 363 596 416 515 276 475 439 869
 327 390 367 378 858 696 224 467 802 552 349 572 399 408 525 423 419 311 344 487 448 388 441 563 380 375 465 418 386 353
 298 458 446 505 504 433 554 532 410 435 290 401 463 356 478 459 595 328 403 315 464 454 385 393 421 496 391 878 491 479
 529 407 502 397 432 422 450 530 396 473 427 460 615 358 480 541 289 429 538 523 485 438 514 324 341 373 374 546 511 411
 178 604 471 405 469 581 520 545  19 559 498 376 557 470 223 361 540 476 345 415 437 442 566 472 556 489 436 516 501 488
 537 524 580 492 646 574 512 493 547 668 494 536  40 457 597 100 449  94 481 592 543 168 577 420 635 565 486 426 220  62
 452 434 555 534 527 510 413 568  63 651 447  68 603 513 444 584 180 443 177 564  21 466 508 417 708 424 579 517 521 624
 636 455 602 632 428 594 490 561 686 207 118 675 384  43 509 131  48 553 477 637 674 667 569 271 647 583 484 507  35 212
  27 645 623 548 567 685 598 628  44  22 621 531 558 468  37  67 296 648 690 713 308 573 550 239 631 629 605 611 340  13
 663 707 630 519 619 763 768 280 194 191 715 113 641 533 334 614 387 760 339 578  57  47  36 193 669 593 589 770  70 143
 189 542 777 638 617 687 664   6  34 101 281 183 587 656 176 677 267 535 666 735 644 787  71  33 799 562 688 610 117 186
 609  20 741 672 661 633 148 158 671  42 863  12  59 665 164 377 205   3 801 779 771 218 806  28 719 879 658 649 273 231
 182 585 728 773 652  18 798 170 352 673 800 238 620  83   4 586 190 721 654 670 662 789 765  88  10 653 702   9 274  66
 714  91 745 642 461 539 821  53 153 219 852   7 786 115   8 650 451 813 599 731 752 734  25 137 743  23 790 121 409 331
 227  54  15  16 692 725 718  87 748 229 766  97 845 678 184 695 793 145 841 754 255 851 776 208 775 266   1 697 147 230
 392 154 453 711 792 726 767 104 175 283 744 124  93 309 235 782  29 824 747 723 126 737 783 213 127 778  11   2 810 761
 106 797 788 142  14 818 822 245 150 762 844 134 680  85 364 335 144 836 838 780  17 796 474 253  51 835 819 222  86 278
 601 165 816 412  98 114 591  30  79 111 874 172 827  24 102 881 125 828 830 185 815 866 279 244 814 795 808   5 682 342

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.35455e+06us (= 3354.55ms, 3.35455s)
Wall-clock time (full program): 3.40796e+06us (= 3407.96ms, 3.40796s)
Satisfaction error: 0
Number of search iterations: 2108
Number of local moves: 1075 (including on plateau: 500)
Number of local minimum: 123 (including on plateau: 46)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15829
Total number of local moves: 9320 (including on plateau: 4739)
Total number of local minimum: 886 (including on plateau: 339)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 562 874 371  31 806 788  18   3   2 347 764 879 828 835 171 751 208 800 658 268 128 840  29 331 242  78 161  60 856 826
 827  71 387 100 878 854 829 858 572  63 871 690  54 894 156 885 196 766 359 270 246 847 199 380 154 545 244  61  16 243
   7 831 281  15 726 880 851   9 731   4 805 754  79 721   1 775 176 621 432 201 780 748  17 252  46 730 135 845 815 247
  96 821 198  11  92 877 786 792  12 791 820 810 392 758  85 817 192 809 254 184 743 785  22  87 195 718 396  56 771 145
 861 774 376 294  99 801 708 824 818 694 662 846 566 784 121 843 155 789 419  55  39 168  35 358 169  20 186  73 628 350
 787 453 113 193 672  62 704 752 705  40 745 649 188 717 720 642  32 760 741 134  42 756 709 263  21 107 144 776 713 175
 790  81 158  23 312 759 807 646 655 140 746 671  83 691 627 648 130 223 755 190  49 700 657   8 269 675 314 683 729 296
 665 635 183 111 659 677 715  45 614 341 823 608  57 521 640 569 615 698 673  27 507 799  14 307 261 194 119 772 632  34
 612 555  51 116 656 492 584 688 783 277 733 767  37 636 586 643 696 697 582  48  33  24 680 255 221 568  47 604 692 152
 589 558 231 160 575 576 580 701 578  38 687 685 293 551 650 292 603 428  98 548 125 629 587  75 630 592   5 679 736  36
 488 695 187  86 529 471 622 684 544 533  67 532  90 699 445 546 611 556 524 723 619 542 613  74 329 456  41 531 653  25
 538 534 189 464 454 560 433 570 616 399 540 502 276 526 581 571  28 719 102 335 549 559 509 148 641 232 325 625 465 525
 497 678 561 375 506 606  50 573 536   6 553 607 320 452 596  10 567 413 485 600 282 652 518 476  53 491 434 519 626 473
 455 664 554 365 286 547 504 624 410 468 435 470 357 482 490 591 407  26 436 449 599 530 427 405 337 425 479 517 287 489
 431 505 264 503 469 516 535 495 520 710 537 349 316 460 370 348 426 338 496 448 411 552 500 423 598 328 373 334 467 493
 319 360 512 422 421 382 597 605 446 515 414 417 378 477 346 377 401 290 539 345 494 374 430 669 343 447 797 557 397 444
 484 550 522 564 303 412 486 514 408 353 305 409 498 850 585 451 478 309 541 379 339 310 388 418 393 466 474 404 463 459
 367 462 857 602 304 321 403 443 450 644 333 313 461 384 363 355 342 819 841 352 406 273 528 398 317 330 728 275 402 442
 395 366 798 601 458 356 351 323 259 499 300 327 768 394 372 295 336 577 816 238 315 288 260 794 481 383 590 381 390 804
 225 415 813 681 523 266 400 438 202 610  13 385 511 369 753 749 440 227 234 617 200 306 848 782 429 258 424 441 222 734
 391 324 735 645 284 271 437 389 239 900 235 267 838 256 226 283 326 297 475 881 416 210 215 639 777 362 855 249 240 853
 364 483 631 712 289 129 318 213 869 285 420 241 763 205 527 237 279 322 299 882 265 833 220 707 654 236 844 248 206 834
 274 131 795 737 368 647 167 822 141 272 147  95 583 230 278 224 825 501 340 593 865 302 812 634 793 218 875 228 361 257
 301 150 510 839 291 219 890 209  43 620 251 332 724  69 204 354 864 298 852 757 873  93 217 472 727 229 725 344 262 796
 122 151 588 670 165 280 233 197 211 876 164 311 706 143 842 191 781 660 182 618 779 117 739 579 891 744 457 245 207 666
 114  58 703 889 893 203  65 105  80 899 163 110 849 181 179  64 814 132 253 762 738 667 250 740 623 480 714 162 860 765
  76 216 711 773 863  52 157  66 159 682 138 112 651  44 862 153 149 142 308 803 716 124 742 867 830 732 883 895 101 508
 180 103  19 866 115 123 126 769 118 676  72 137 868  59 689 594 770 139 170 747 638 136 702 802 761 750 668 888 108 722
 811 897 674 808 133 214  77  70 896 172 109 146 892  97 178 173 832  91 439 574 686 185 778 563 693 884 565 177 106 595
 887 120 543 859 386 174  82  88 898 661 663  94  89  30 872  84 836  68 212 487 633 166 870 609 637 837 513 886 104 127

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.13077e+06us (= 3130.77ms, 3.13077s)
Wall-clock time (full program): 3.18489e+06us (= 3184.89ms, 3.18489s)
Satisfaction error: 0
Number of search iterations: 1913
Number of local moves: 1004 (including on plateau: 514)
Number of local minimum: 132 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13408
Total number of local moves: 8540 (including on plateau: 4229)
Total number of local minimum: 697 (including on plateau: 307)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  17 144  49 847  80  15  23 215 275 872  36 350 838 829 846 881 773 858 870 887  75 884  83 162 869 736 876  18  93  14
 816 146  20 772 255 801  56 187   6 840 882 354 798  55 855 818  16 254 756 811 807 830  32   3 860 537 418  43 380 107
 192 780 216 531 123 534  44  96 172 809 824  51 795 226 788 861 827 344 266 815 163 837 447  82 852 833 848  13  41 105
 345 856 291   1 285 722 740 813  11 678 875 160 814 304 741 739 873 378   7 751  66 714  46 384 794 669   9  19 282 148
  92 768 204 505 371 792 235   2 269 748 787 181 681 277 642 782 545 184  38 819 118 796  26 671 658  12 674 804 104 730
  69 776 450 339 200 219 129  37 150 750 660 141 711 108 783 698 689 106 564 754  94 850  30 779 719 752 665 609  34 650
 803 593 213 716  45 802 298  91  10 710 677 134 746 406 712 715 644 229 340 631  42 692 784   4 760 646  39 688 214 131
 729   8  57 245  25 500  33   5 369 655 764 135 805 102 613 594 745 130 649 556 786 541 210 629 766 738 165 602 691 668
  72 125  48 167 391 588 164 267 407 552 667 557 485 292 525 445 699  40 680 223 731 608 636 620 558 635 702 685 221 725
 217 632 234 694 174 547  21 189 323 597 539  63 425 308 587 670 611 128 520 579 481 675 584 549 590 657 566 589 679  87
 700  58 143 695 306 713  70 483 463 365 155 142 499 261 518 651 507  27 427 604 414 511 596 523 705 533 555 661 690 540
 648 645 262 475  60 615 212 448 193 585 582 601 470 336 321 517 519 586 473 330 605 727 466 439  22 659 546 513 207 453
 506 610 322 516 442 472  85 287 195 696 626 424 467 496 538 634 437 408 494 652  84  47 701 488 492 528 575 576 663  54
 512 173 377 368 478 572 591 338 152 573 429 599 474  50 560 514 522 563 532 477 641 503 402 441 430 454 543 618  64 565
 479 411 394 456 465 416 569 487 529 567 373 461 399 361 551 476 451 559 397 491 383 435 457 428 310 622 386 335 423 444
 600 324 385 364 571 526 459 372 469 495 426 624 420 419 347 530 542 501 236 502 535 389 390 440 348 480 510 374 603 334
 366 284 548 395 438 332 898 708 592 393 577 449 333 417 363 326 305 640 346 293 550 331 356 355 562 527 405 482 693 251
 379 311 683 791 733 382 630 484 638 359 317 225 889 358 817 452 388 806 412 264 224 398 446 362 176 222 283 544 302 240
 410 318 828 396 497 307 895 431 607 458 289 763 432 724 489 421 157 862 723 147 357 243 260 279 301 328 468 257 404 464
 343 274 462 865 621 342 859 415 653 272 375 239 422 707 268 206 486 319 460 893 313 367 231 327 433 309 821 392 370 471
 381 337 753 843 662 246 761 676 617 281 352 820 276 580 177 286 168 682 278 403 628 265 296 295 341 400 376 325 252 758
 844 314 891 434 583 280 647 515 443 230 401 742 353 762 119 186 785 619 124 256 228 300 244 842 263 360 509 247 789 205
 349 625 775 614 536 687 743 834 880 126 329 721 320 825 182 101 121 886 253 299 686 211 303 258  61 203 273 316 749 249
 315 899 706 188 623 241 409 728 637  95 765 866 190 656 297 238  88 697 136 312 841 351 561 800 242 159 209 199 232 835
 137 156 836  28 897 853 771 868 726 149 180 826  97 863 112 171 115 633 218 197 290 183 744 227 888 170 672 139 774 595
 717 178 718 493 606 185 627 797 777 166  67 793 154 508 100 151 127 504 849 133 673 248 790 116 111 851 250 110 839 877
 612 769 684 524 781  53 436 755 664 191 271 288  31 832 294 169 196 220 735  62 892 122 867 757 194  90 270 845 732 179
 666 616 900 140 890 120 759 570 581 153  86 654  29 490 175 109 208 598 871  99 233  98 883 799  65  79 113 810 857 864
 812 554 498  35 734 521 896 778 885  76 145 578  24 704  81 103 117 553 158 202 808 161 874 747  68 237  52 823 413 878
 387 831 568  78 643 132 455 639 822  74  59 574 138 259 114  71 854 201 703  73 767 198 770 709  77  89 737 879 720 894

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.62871e+06us (= 2628.71ms, 2.62871s)
Wall-clock time (full program): 2.68321e+06us (= 2683.21ms, 2.68321s)
Satisfaction error: 0
Number of search iterations: 1331
Number of local moves: 917 (including on plateau: 408)
Number of local minimum: 58 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10119
Total number of local moves: 7261 (including on plateau: 3681)
Total number of local minimum: 434 (including on plateau: 284)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  58 616  94 808 545 722  91 740 890 719  22 226  10 107 891 394 174  89  98 112 888 885 676 866 889 723 119  68 115 880
  92 868 897 261  90 149 871 852 784 108 379 746 157  40 710 529 131 825  45  47 639 399 858 285 820 660 230  66 861 116
 132 887   3 641 177  99 707 593 729 727 237 811  27  81 159 570  30 589 123 126 732 144 626 875 865 863  41 898 169 854
  69 777 178 837 161 181  72 845 721 544 203 806 308  54 873 444 651 122  77  42 579 179 823 838 817 601 403 259 167 884
 211 196 882 354  95 150 214 679 809 165 714 367 186 202 828 872 162 103 514 272 870 190 640 895 835 712 309  64 892 133
 128 146 234 690 768 848 243 765 750 206 432 879 290  52 506 271 339 756  97  44 745 135 839 899 770 883 210  73 248 269
 331 156 124 689 222 200 841 695 853 393 564 842 184 283 900 699 197 141 155 138 700 481 893 831 193 862 223 130 306 289
 224 840 152 766 195 265 684 731 615 340 702 342 213 257 242 742 346 552 318 345 471 153 886 327 352 708 304 894 334 215
 416 219 876 781 250 201 260 686 624 315 677 336 160 445 280 671 300 802 344 187 647 833 607 199 698 705 302 329 148 217
 241 314 332 776 856 142 397 827 661 824 358 151 320 276 810 801 369 617 275 246 247 778 337 229 255 847 389 436 140 264
 519 239 310 760 405 305 288 749 652 896 701 384 205 227 503 878 233 788 380 534 350 279 293 422 231 849 361  87 236 451
 499 357 388 349 347 478 363 596 632 408 266 716 425 343 295 836 312 387 734 530 245 377 410 301 752 539 378 273 485 494
 479 299 759 411 395 417 351 675 477 218 431 568 774 194 385 414 322 502 500 437 284 877 504 353 291 488 371 321 490 528
 360 440 375 204 374 419 392 554 509 448 563 267 415 450 559 435 542 493 286 672 520 296 326 522 867 483 348 565 335 496
 324 277 391 433 459 511 492 438 262 474 510 566 418 434 382 505 619 555 533 400 567 427 525 467 383 497 460 412 428 366
 489 216 263 317 604 287 463 495 480 464 338 398 406 643 426 462 644 413 491 421 212 449 439 526 404 657 779 557 365 407
 580 373 625 486 381 532 556 325 256 549 681  38 316 429 501 603 461 515 323 613 443 251 587 536 390  26 538 524 590 487
 364 623 592 541 711 455 558 249 423 466 106 442 465 605  23 581 621 307 508 680 470  71 356 376 551 278 664 476 507 446
 453 591 653 458  18 562 600 370 355 546 535 240 513 577 175 424 447 452 109 372 637 341 328 512 612 333 553 692 588 469
 537 728 521 634 655 531 441 253 274 586   6 527 629 780 650 208 125 362 456 472 706 602 313 560 303  11  21 730 311 583
 523 540  34 221 631 618 578 254 396  60 134 668 670 611 654  39 608  62 773 609 207 118 516 547 649 104 682 622 694 693
 610 584 669 292 359 751 598 164 154 430 627 561 736 573 683  17 548 572 409 713 192  36 498  83  51  49 743 597 666 550
 571 582 595 171 775  59  48 137 298  61 173 454 715 599 630 105 518  86 673 662 576 790   4 678 620 180 628 648 725 754
 704 696 636  76 791 635  12  80  55 747 252 805 659 786 575  88 735 585 594 785 168 753 143 543 110  15   9 724 633 121
 796 368 674  75 812  19 642  85 163  20 814  29 665 800  37 235 762 120 869 797 238 606 228 189 468 101 803 517 850 733
 703 709  67 330  31 844 792  57 100 574  50 738 457 748  14  93 860  79 783 830 147 663 258 127  33 386 829 881 614 718
 645   1 638  70 764 843 726   7 114 646 691 182 717 697 282 111 816 789 818 807 166 782  74  82 158  78 473 761 569   8
 787 846 484 129 822 832 769 198  96  46 795 281 799 771 209 270  35 402 739 758  28 737 176 185  63 232 826  24 857 319
 851  25 297 767  65 667 294 225 139 720 741 102 821 763 113 798 864 794 687 859 183 401  84 117  32 475 685 874  56  16
 819   2 772 188 757 793 172 191 244 815 813  43 855 688 220 420 744 656 804   5 658 482 268 145  53 170 834  13 136 755

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.38669e+06us (= 2386.69ms, 2.38669s)
Wall-clock time (full program): 2.44092e+06us (= 2440.92ms, 2.44092s)
Satisfaction error: 0
Number of search iterations: 1099
Number of local moves: 816 (including on plateau: 233)
Number of local minimum: 44 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8044
Total number of local moves: 7196 (including on plateau: 2894)
Total number of local minimum: 176 (including on plateau: 199)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 539 183  92  34  36  30 890 750 785  55 302 857 582 702 186 222 716 726 363 880 896  95 454 642 150 803 700  62  77 706
 752 143 120  10 889 126 882 866 767  56 617 888 600 853  88 211 881 104 182 157  93  75  61 741  44 862 655  66 899 827
 838 129 805  48 292 181 227 898 786 708 139 871 839 695  57 287 681  53  12 874  26  27  89 739  47 845 531 897  29 865
 816 239 160 137 869 114 210 878 789  51 828 121 824 788  58  69 711 840 185 483 159  91  76 731 144 858 834 622  60 770
 864 113 190 191 831 250 620 792 825 173  23 127 755 836 849  24 782 658  90 895 176  63 207 875 256 811 724 242  71 202
 830 877 166 153  70 885 892 863 224 187 558 251 195 448 169 230 776 859 228 671 124 134 105 192 848 347 630 493 329 781
 663 111 893 215 117 268 751 585 307 299 759 879 720 868 162 142 234 286 238 650 184 178 335 698 223 837 480 690 314 429
 819 154 205 300 152 241 891 730 306 276 842 237 765 689 147 274 678 680 201 226 357 285 280 873 170 844 887 217 128 661
 799 368 249 372 122 235 168 818 900 216 777 322 652 611 248 136 717 691 273 337  73 283 109 856 180 610 631 669 331 762
 703 115 525 530 232 261 198 666 386 867 719 284 841 694 327 289 267 303 362 315 560 252 269 428 140 758 729 365 418 712
 597 317 189 141 450 371 172 779 304 359 165 188 316 499 282 536 870 475 389 886 298 535 406 394 209 375 472 883 850 808
 633 511 437 872 426 500 379 659 564 422 339 212 636 590 350 233 383 456 320 405 324 311 615 333 326 653 279 734 348 265
 175 884 440 296 319 442 586 204 219 504 391 523 414 603 309 341 861 860 364 484 231 502 275 565 446 723 270 506 417 361
 591 342 471 507 441 354 495 445 393 343 894 344 427 377 288 409 177 266 424 401 387 643 330 514 407 599 550 526 338 832
 522 392 402 469 408 411 312 381 517 537 544 423 376 443 876 253 308 436 494 557 482 613 221 378 519 515 295 562 263 606
 260 444 571 415 496 509 551 425 662 609 400 395 435 412 491 594 325 438 336 485 616 421 467  98 477 369 474 358 566 416
 399 370 667 488 583 605 313 271 458 334 612 434 396 225 501 464 459 398 468 508 236 567 505 503 608 413 297 498 532 403
 255 385 596 197 572 481 390 290 455 546 107 589 476 646 569 593 529 449 581 452 578 460 673 470 447 366 462 245 575  81
 384 380 543 656 492 510 420 145 559 360 604 345 657 639 626 587 323 123  17 665 461 555 524 619 701 332 352 118 465 353
  83 654 513 580 549 516 466 264 538 520 294 432 628 130 670 556 621 431 592 108 542 754 742 548 647 138  45 397 541  16
 208 679 672 540 607 685 487 155 382  31 196 595 570  46 552 623 553 240 649 579 478 692 651 554 632 214 110 291 534 310
 479 748 528 801 404 637 497 243 171 563 244 602   2 259 625 693 203 439 771 486 746 490 635  59 640 272  78 131 714 355
 206 598 778 629 790 855 430 277 135 573  39 705 158  82 664 846 254 451 634 161 843 618  18  72 627 220 164 638 676 374
 301 707 783 521 727 763 125  33  94 764  14 686  67 156 740 710 148 545 648 463 713 733 761   9 798  50  22 512 704 218
  11 674 718 696 806 576 199 246  40 410  74 574   4  42 568 743 116 278 813 262 747 821 775 644 815  38 200 697 577 351
  41 645 133 791  37 796 318 258 728 745 641 784 112  54  32 760  87 349 833 151 687 735 802 305 688  20 179 518 829 457
  79 797 194 601   3 103  85  84 744 847 193 660 119 683 677 800 163 675 699 725  28 547 817 433 757  43 584 561 715  99
   5 772  13 753 247 812 774 167 149 807 722  68 281  64 773 367 213  97 793 146 852 682 766 102 709  80 684 388 756 473
 174  52 794 823 780 229 738  86  35 820 854  19 328  25 809 736 373 321 835   7 804 826 810 132  65 101 851 614 453  21
 489 732 668 749 768 769  49 257 293 533 624 100 340 356 822 787 106 588 721  96 814 527 737   8 795 419 346  15   6   1

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.94984e+06us (= 2949.84ms, 2.94984s)
Wall-clock time (full program): 3.00436e+06us (= 3004.36ms, 3.00436s)
Satisfaction error: 0
Number of search iterations: 1646
Number of local moves: 933 (including on plateau: 346)
Number of local minimum: 79 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12785
Total number of local moves: 7841 (including on plateau: 3966)
Total number of local minimum: 610 (including on plateau: 320)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  29  16 851  14 809 864 746 180 120 845 800 819  26  44 261 813 772 739 871 174 272 230  27   5 308 294 167 844 743 832
 758 833 256 175 855 299 254 295 703 773  10 154  95 204 117 192 825 578 806 830 657 611  71   3 859 787 837  12 407 259
 829 786 223 738 826 146  30  60 838  86 814 217 157 170 156 121 774 150 839  67 821  48 730 752 740 750 802   9  51 785
 804 642  50  17  38   7 234 456 781  19 754 364 155 198 817 816 693   8 438 811 166  87 842   6 795 789 588 660 834 646
 784 688 734 633   4 720 196 102 822 144 390 325 762  15  25 628 807 147 440 823  13  89 751   2 566 527  45 867 669 797
 659 849 763 209  35 661 694  75 761  20 712 283 695 141 108  59 616  47 203 727 753 211 630 613  22 640  39 828 757 705
 692 706 858 683 645  42  18 273 623 665 709  37  40  83 143 702 275 559 419  85 116 191 634  56 637 799 770 677 619 759
 632 573 722 526 241 737  41  24 597 736 794 331 591 193 681  21  93  11 617 581   1 569 103 315 474 674 776 668 711 482
 557 554 585 747 404 250 707 228  53 667 568  76 605 240 522 717 691  52  91 636 670  34 582 601 465  55 678 552 651 277
 635 742 577  99 579  92 622 130 782 207 735  65 697 521 596 729 686 647  88 641 366 219 650 671 403 656  97 328  23 232
 621 589 178 127 685 451 531 224 449 587 194  31 576 347 586 593 701 382 607  32 594 477 387 595 580 447 563 626 558 197
 515 540 571 551 430 427 505 313 485 658 673 251 543 475 355 655 700 542  80 432 494 519 488 627 276 478 168 136 442 186
 575 491 487 378 149 414 583 323 410 523 433 255 547 454 469 648 654 320 268 490 356 672 371 548 501 417 550 544 525 160
 393 511 435 556 397 598 513 379 561 592 415 133 375 503 365 452 599 271 444 638 298 533 545 443 395 537 421 624 476 113
 493 450 472 332 529 309 682 448 500 524 367 341 535 402 409 326 105 492 530 335 464 345 549 610 462 723 369 439 453 520
 489 504 420 338 570 512 457 555 468 509 538 496 428 516 467 486 532 229 499 495 518 446 324 423 484 422 316 281 502 291
 411 473 351 350 618 850 629 653 481 352 606 567 370 461 296 300 424 301 479 429 343 346 436 418 480 602 285 386 381 437
 242 322 349 396 374 282 235 539 398 470 377 565 413 756 885 289 483 336 843 406 287 354 388 394 339 317 441 639 898 498
 399 227 265 460 603 458 652 564 348 463 278 368 267 897 321 344 319 471 766 546 314 514 221 361 303 882 389 380 510 625
 416 302 311 337 612 249 793 744 412 342 820 815 284 238 373 258 182 408 803 818 243 384 425 383 360 195 376 690 159 783
  90 236 459 353 861 827  84 620 445 798 455 780 188 391 392 306 892 791 162 401 877 187 164 237 431 541 244 363 216 724
 257 266 745 330 269 125 836 506 893 231 169 768 263 560 288 252 696 714 719 359 863 900 165 270 247 248 853 405  58 260
 119 310 304 731 726 767 856 614 202 812 245 749 362 508 880 358 100 189 434 279 274 888 884 664 327 111 264 239 177 142
 233  61 201 771 792 212 808 666 184 340 329 890 210 662 553 875 124 846 854 220 292 713 173 687 226 152 312 385 208 536
 590 110 400 765 779 866 185 698 262 290 528 824 305 679 183 158  62 874 213 176 333 876 199 715 886 171 760 253 153 222
 857 286 708 643  28 609  74 699  33 131 246 769 790 896 755 126  82 810 205 225 732 507 122 860  36 293 894 878 172  49
 112 200 179 840  43 132  73 716 675 728 297 649 848 887 831 868 357 572 517 881 805 891 280 163 151 106  69 190 307 148
 134 215 862 426 318 676  66 865 129 114 128 534 778 710 689 104 107 680  79 140 721 218 870 718 777 161 214 334 879 869
 109 895  64 872 181 137 748 725  54 788  68 497 775 764 145 615  70 741  78 372 733 604 873 801  96  57 584  72 899  98
  81 138 135 118 115 796 663 841  46 101  63 562 835 600 847 704  94 608 123 466 139 852 631 574 889 684 644 206  77 883

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.32604e+06us (= 2326.04ms, 2.32604s)
Wall-clock time (full program): 2.38059e+06us (= 2380.59ms, 2.38059s)
Satisfaction error: 0
Number of search iterations: 922
Number of local moves: 748 (including on plateau: 235)
Number of local minimum: 28 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7305
Total number of local moves: 6143 (including on plateau: 1970)
Total number of local minimum: 208 (including on plateau: 139)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 895 796 848 818 852 624 704   8  30  69 279 828 178  52  68 239  51 809  36 101 676 869 526 134 874  21  55 870 738 467
  41 744 579 144 855 896 850 141  61 887 637 842 854 831 125  85  58 810 123 632 472 119 140 648 894  93  98 511 194 151
  50 722 819  64 866 610 665 556  86  71 816 897 812 570 899 127  48 197 120 598 117  53 409 618 835  99  54 867 790  80
  33 886  12 860 749 820 838 571 654 269 530 762 811 817 655  28  75 198 219 712 147 201  88 185 113 152 885 338 791 116
 183 840 155 206 512 768 776 834 288  31 747 798 824 160 841 458 184 385  22 802 823 100  81  92 427 261 264 766 775 112
 305 297 877 158 755 173 191 780 190 398 764 659 316 801 104 693 169 246 192 771 723 111 325 664 731 445 168 421 761 327
 179 876 331 124 742 256 760 807 148 167 642 686 136 217 323 343 214 797 692 631 208 153 281 773 883 238 254 605 890 159
 247 868 142 218 557 714 873 880 359  16 505 275 892 231 172 698 165 839 223 634 417  25 792 382 302  63 262 827 725 212
 808 259 243 347 563 353 321 491 859 303 432 272 357 804 814 727 166 348 224 719 318 861 103 882 240 437 294 322 383 265
 241 207 313 285 661 740 758 622 233 455 650 266 308 324 293 799 273 783 314 865 292 295 188 255 310 857 335 387 788 418
 170 225 393 879 889 376 252 849 228 320 572 270 209 365 538 837 332 900 274 784 412 251 863 395 260 232 362 536 396 146
 822 276 844 378 544 107 484 360 862 462 851 489 449 277 250 311 199 641 227 643 424 135 471 898 392 109 220 789 344 257
 358 349 236 263 743 346 290 786 330 287 843 333 370 339 569 300 336 341 342 833 452 684 373 578 367 244 672 699 410 442
 400 475 372 319 582 433 425 846 384 406 389 566 381 603 408 429 554 380 481 375 439 306 296 419 352 315 520 568 307 785
 476 289 474 426 575 416 539 407 585 334 388 468 299 545 436 523 638 230 454 354 510 423 456 434 480 656 486 457 420 337
 490 506 441 411 594 564 176 542 405 482 397 651 653 391 204 528 657 521 377 235 404 465 547 221 450 414 369 355 461 604
 581 478 616 519 379 584 399 229 644 479 180 366 371 590 483 561 413 592 633 403 431 361 567 128 516 428 438 492 546 108
 611 508 312 541 282 444 340 196 562 473 374 137 599 497 586  82 615 504 328 485 626 466 620 446 493 317 386 498 673 514
 628 525 522 469  49 518 619 363 453 608  11 110 593 507 636 574 501 430  79 210 440 555 630 531 443 451 529 502 552 477
 415 649 669 537 226  56 464 126  46 675 402 690 629 540  87 234 591 613 553 245 588 621 580  35 652 635 640  37 609 671
 513 517  70 660  89  19 487   6 573 645  84 729 601 549 726 447 495 181 821 278   1 711 667 524 496 509 765 211 576 565
 614 602 666 805 200   9 138  96 589 494 186 597 488 587  95 130 606 713 658 401  29 460 680 364 748 701 732 271 182 674
 639 647 533 394 118 668 548 157 470 737   5 129 499 607 734  97 679  77 700 189 623 825  43 532 543 646 696 187  90 703
 132 115 720 550 202 215 154 237 832 627 267 164 677 697 527 681 769 551 772 286 687 558 301  13 595 888  44 298 203 753
 752 248 102 826 213 875 133 560 515 709 878 715  10  20 750 368 724 156 884  67 793 596 283   2  32 716 600 268 161 559
 777 162  65 612 503  66 710 787 448 717 174 350 304 759  42 291 678 779 736 258 177 280 845 583 105 459 688 390  14 756
 625  60 689  17  15 705 195 309 685 774 175  94 721  24 326 782 746 351 662 535 694 707 778 435  40 806 463 139 222 741
 853  74  38 781 106 682 150 205 718 745 216 253 143 534 193 577 891  39 893  83 751 683 691 767 149 763 708   3  91 735
 670  73 739 171  76 356 145 730 422 754 249  72  27 163 836 864 858  45 813  57 815 794  62 706  23 757 728 284 345 881
   7 242 695 733  18 122 131  34 856 121 872  47   4 114 795 702 830  59 663 329  26 847 829 871 770 803 800 617  78 500

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.45674e+06us (= 2456.74ms, 2.45674s)
Wall-clock time (full program): 2.51001e+06us (= 2510.01ms, 2.51001s)
Satisfaction error: 0
Number of search iterations: 1251
Number of local moves: 650 (including on plateau: 176)
Number of local minimum: 97 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9050
Total number of local moves: 6847 (including on plateau: 2900)
Total number of local minimum: 358 (including on plateau: 216)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 536  76 139 583 221 824 730  40 173 203 803 864 175  75 601 869 899  94 137  19 417 851  98 877 872 571 804 842  60  62
 769 895 158  86 111 868  80 881 847 110 831 793  54  35 700 865 559 132 124  20 784 119 102 811 809  45 759 166 856 146
 779 859 896 205 227 792 757  31  47 683  68 490 190  27  25 749 377  53 867  87  39 852 698 802 870 206 813 100  34 892
 782  83  33 598  71 522 772 178 270 125 861 860 262  46 258 103 715 342 898 259 130 236 127 764 789 747 888 113 796 887
 836 135 106 439 900 679 768 243 179 886 746 750 361 202 563  64 826 237 879  65 693 118 366 732 755 185 385 193 129  95
 882 752 890 150 660 843 832  21 291 215 701 684 134 254 323 104 687 109 744 767 391 223  93 794 628 265 618 208   3 249
 148 817 192 207 261 828 762 116  78 105 889 728 238 326 304 273 893  73 140   9 756 620 287 827 862 709 680 853 367 167
 229 840 647 161 897 300 317 697 328 268 753 630 187  63 151 209 648 421 378 239 810 431 131 488 875 766 710 327 305 309
 376 468 250 325 848 812 170 225 883 607 745 663 147 894 260 310 356 198 180 318 615 312 805 705 551 252 195 737 144 164
 276 281 308 311 774 467 818 157 267 411 874 783 272 155 373 303 819 189 410 228 891 395 535 444 528 829 858 181 219 159
 337 422 156 394 512 480 231 285 240 256 807 727 415 199 841 447 284 374 197 307 885 172 494 629 506 365 706 787 849 211
 418 235 471 117 724 671 530 399 429 314 678 616 241 283 340 381 742 404 339 332 780 495 255 667 638 346 264 257 674 475
 839 427 626 497 396 349 420 380 453 338 553 432 610 428 520 594 352 290 375 345 659 507 591 440 442 463 204 247 485 253
 289 619 364 274 353 324 383 554 278 437 412 409 390 407 532 416 876 534 790 501 354 403 279 543 646 286 430 486 462 484
   2 503 382 379 621 558 397 524 313 651 350 470 362 642 435 210 492 389 277 549 426 459 423 521 578 478 685 515 393 531
 493 301 372 473 369 351 370 458 498 474 245 511 600 269 419 398 644 483 355 388 580 577 460 489 481 570 593 425 408 461
 586 336 550 450 360 529 526 508 454 294 465 582 297 445 631 617  38 316 568 413 611 548 163 315 177 579 496 575 569 517
 479 516 414 448 464 246 154 320 505 451 472 562 547 433 533 434 604  42 457 424 406 652 449 191 348 666 602 658 539 499
 438 331 392 401  84 487 525 584 344 542 333 402 358 592 441 725 573 669 108 627 587 603 466 233 296 538 645 574  51 566
 186 702 557 641 518 123 510 634 436 599 226 341 723 690  11 500 527 675 639 612  66 595 275 282 280 386  85 589 552 555
 476 322   1 455 523 513 673 623 306 546 213 299 363 699 596 564 212 692 491 572   4 760 405 263 482 585 509 696  36 636
 739 519 576 357 359 556 606 734 649 456 581 174 643 540 115 176  16 504 731 469 371  96 446 220 152 477 293 608 719 633
 664 588 560 689 165 234 711 537 605 561  28  26 632 670 121 622  90 661 729 541  17 160  22 183 168 718 656 665 721 771
 597 672 514 791 230  67  61 668 751  24  92  23 770 544 694 691 169 650 682 722  97 688 743 384  14  48  50 704 720 655
  88 126 686 814 797 452  37 625 654 101 216  69 761 637 748 502 196 837  44 763 292 781 855 295 335   5  56 251 785 707
 214  55 778 835  32 120 321 830 545 609  15   6 653 716 799 825 217 880 833 801 614 800 635 334  13 242  29 387 244 133
  89   8 758  52 820   7 302 846 590 765  99  58 735 662 443 676 149 850 712 822 347 142 816 138 162 681  49 222 775 740
  77 726 695 806 330 145 271  57 714 786  41 298 713 878 657 677 218 845  59 733 182  82 857  43  72 565 288 112 717 871
 114 773 171 823 640 232  81 736 821 854 224 143 884 838 266  70  18 834 184 795 368 808 863  10 107 201  12 329 703 613
 777 128 873 754 248 136 400 624 567 844 194 122 798 866 815 141 319 738 188 788 343  30 776  91  79 741 153 708 200  74

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.36846e+06us (= 2368.46ms, 2.36846s)
Wall-clock time (full program): 2.43214e+06us (= 2432.14ms, 2.43214s)
Satisfaction error: 0
Number of search iterations: 1062
Number of local moves: 776 (including on plateau: 329)
Number of local minimum: 44 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8247
Total number of local moves: 6177 (including on plateau: 2096)
Total number of local minimum: 336 (including on plateau: 161)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  57 137 624 200  64  51 813 705  85 807  99  48 895  45  59  62 893 867 694 768  75 829 875 136 837 896 805 884 105 100
 668 891  80  33  82 487 868 859  76 151 677 563 266  73  84 783 812 144 776 788  74 847 855 326 181 889 711  77 155 239
 524 900 196  42 233 107 483 618  81 851 815  78 118 127  30 676 832 153 852 771  72 885 745  40 696 861 876 205  95 553
 848  97  89 879 102 548 646 199 123 804 886  35 774 164 101 593 767 103 751 744 234 836 229  38 265 863 810 169  71 747
 710 154 281 180 126 757 872 698 135 740 830  86 106 224 271 534 656 113 809 778 147 857 856 156 115 730 543 173 247 631
 636 116  66 766 841 484 759 866 152 604 703 190 244 187 197 734 157 158 681 818 261 715 772 145  70 897 558 223 290 225
 674 300 167  65 159 880 890 808 148 704 828 163 821 212 110 842 240 129 206 845  68 699 787 684 194 567 690 186 256 193
 726 168 142 214 268 826 658 338 161 777 706 131 259 192 215 888 295 296 590 536 216 707 844 245 881 737 678 238 236 347
 794 272 284 263 333 790 369 671 670 862 327 720 242 274 330 583 311 241 319 689 335 798 393 334 217 731 695 208 207 253
 763 380 269 166 176 331 713 262 308 892 736 733 464 325 366 799 277 386 288 313 309 603 289 140 322 640 811 318 320 816
 802 254 368 293 231 653 754 887 221 396 632 292 408 226 298 276 447 317 294 877 394 664 248 630 352 665 625 358 389 264
 620 201 211 361 282 680 735 375 398 337 377 899 291 367 399 372 278 416 898 312 466 507 350 691 304 601 724 349 404 310
 279 305 376 405 364 728 501 482 443 363 697 883 814 355 341 345 415 461 275 343 362 436 348 403 452 588 709 356 344 342
 515 421 602 395 306 373 478 267 371 324 346 791 387 612 503 410 456 894 417 382 476 430 307 429 462 533 422 390 384 432
 438 400 523 401 465 505 520 576 448 446 392 329 360 571 585 502 634 414 332 493 413 434 451 455 411 406 323 440 425 423
 351 500 365 489 547 472 251 441 378 424 509 488 522 598 255 629 513 469 477 470 473 542 499 450 439 120 357 397 498 592
 467 481 463 549 454 383 516 566 480 474 449 442 582  20 504 426 460 437 544 532 336 354  27 435 379 565 605 573 494 518
 402 570 457 453 511 529 497 177 541 491 528 577 111 486 479 539 530 578 599 185 512 527 496 650 556 316 119 508 545  46
 218 626 485 584 492 183 490 458 260 562 303  83 546 679 538 580 471 613 143 560 540 495 569 420 551 257 302 514 468 525
  41 575 419 606 672 141 108 568 557 519 564 600 627 537 607 188 506 555 510 189 693 321 615 213 552 246  47 621 445 673
 475 521 579 596 594 412  63 531 550 114 535 385 554 589 614 622 561 611 595  19 235   5 628 644 581 232 270 649 657  94
 117 647 686 591 619 359  16  67 719 409 252 586 638 662 641  10 587 633 160  56 723 209 608 661 526 228 222 617 597 669
 125 643 667 660 559 428 133 654 652 574   8 381 725 700 645 243 722 610 666  52 663 301  13 353 659  53 195 655 748  28
 191 701 635 738 741 286 433 132 840 427 220 609 431 732 718 174 682 716   4  91 708   1  98  49 639 171 370 616 687 675
 374 572 789 742 688 315 210 124 637 121  92 391 793 642 796 249 112 721   7 712 775   2  79 749  36 203 444 834 623 683
  55 795 517 758 287 339 146  29 843  60 237 459 784 729 717 283 780 803   9  69 648  87 258 752 230 328 297 817 685 714
 182 819 651 340 838 314  34 198 865  39 285 739  61 756 750 692  50 850 797 170 825   3 179 806 134 109  96 407 773 753
 418 854 853 871 760 172 250 128 786  15 139 273 388 781 762 104  22 770 785 150 820  32 138 824 765  18  58  14 801 764
 299 122 849 858 839 149 219 743 727  44 165 800 280 827 831 202  43  26  25 782 870 162 204 779 874  54 130 873 702  37
 746  93 822  17 882 833  90  88 860 184 178 761  24 823 769 175   6  31  12  21 792 227 755 878 835  11  23 846 864 869

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.42664e+06us (= 2426.64ms, 2.42664s)
Wall-clock time (full program): 2.47956e+06us (= 2479.56ms, 2.47956s)
Satisfaction error: 0
Number of search iterations: 1145
Number of local moves: 717 (including on plateau: 234)
Number of local minimum: 59 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9052
Total number of local moves: 7272 (including on plateau: 3148)
Total number of local minimum: 316 (including on plateau: 234)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 897  32  24 884  80 726 197 682 722 433  37  22 844 148 883 105 651 781 622 183 292 796 270  89 826 339 881 207 809  53
  58 899  31 779 146  71 849 857 771  68  67  33 877  27 894  73 841 672  98  86 465 655 572  83 876 609 878 246 255 679
 122 661 346 490 854 519 124 828 643 202 151  74 226 150  64  63 741 787  25 209  97 795 647 262 777 134 870 863 898 893
  79 856 573 896 562 171 706 102 687 107  17  59 831  62 838 252 845 617  75 177 638 719 142 143 780 756 805 199  96 725
 126 118 553 225 852 797  84 132 663 147  49 596 602 875 328 162 824 747 187  54 448 531 294 176 853 731 665 724 170 802
 160 169 350 230 220 447  76  81 699  50 840 127 610 368 866 290 606 540  65 306 695 858 624 180 814 791 887 727 244 595
 128 208 289 511 168 258 895  85 793 228 281 348 315 167 325 191 286 786 282  70 666 670 259 900 873 549 644 855 623 862
 155 269 178 249 357 271 288 487 846 692 135 308 798 217 243 450 156 691 284  78 749 865 712 372 718 660 554 827 185 721
 335 133 861 192 890 232 227 340 457 442 295 374 839 267 280 390 247 253 299 106 811 808 188 735 754 879 613 823 182 263
 304 189 581 384 565 892 114 707 880 456 376 279 333 311 137 277 307 775 152 164 302 810 248 345 678 688 604 198 630 829
 278 412 379 239 453 260 438 378 517 313 820 320 300 266 354 398 552 711 347 423 537 671 242 402 532 758 574 642 405 594
 251 274 298 422 237 389 250 366 676 477 425 830 371 493 344 467 427 506 364 385 452 640 677 375 698 889 496  93 667 276
 480 886 285 221 351 210 383 355 362 416 675 353 316 332 312 337 468 684 291 471 584 464 193 377 789 548 484 693 401 794
 367 475 588 216  95 407 627 482 523 293 597 551 495 547 449 437 321 563 381 444 451 309 394 338 515 558 434 404 489 765
 352 324 479 359 388 370 326 504 458 396 533 411 543 497 582 513 418 476 358 603 525 536 319 542 649 235 478 505 428 408
 534 334 296 420 454 510 256 459 369 432 415 524 342 488 491 570 472 498 500 373 486 546 440 409 387 619 629 583 356 323
 634 413 575 550 564 499 518 211 397 443 446 463 501 406 535 417 435 509 421 382 545 223 445 528 157 473 330 455 426 614
 429 512 521 129  52 233 461 138 577 502 557 589 395 578 419 567 483 474 620 633 683 522 636 559 215 608 181 303 469 470
 462 436 145 527 508  19 673 576 391 399 767 507 568 541 653 341 544 520   2 639 195 365 492 514 329 585 265 646 327 579
 729 560 386 530 566 736 586 708 403 601 466 516 701 526 764 539 591 363 694   6  94  11   4 605 115 165 287 410 393 460
 593 569 494 561 153 813 598 538 275  40 580 238 592 657 728 713 196 272 571 599 336 120 658 441 125 159 392 611 703 190
 615 654 117 625  88 776 656 590 224   1 556 618 268 529 705 669 641 179 732 755 245 283  26 821 305   9 236 734 206 652
 680 702 310 697 681 659 704 317 400 717 616 752 144 414 648 632 696  30 631 818 203  20 349  10 116  72 205 439 714 139
 485 710 825 662 343 674 314 607  12 740 431 637 757 555  15 745 621  41 664 730 172 264 759 301 273 119 111 173 645 130
 778 626 785 112 635 360 503 742 222 835 600 769 175 788 110 807  55 204 761 753 848  91 481 234   8 161 109  87 834  42
 815 748 186 804  21 668 770 760 104 751 612 783 131 709 723 650  35  60 882 874 113 166 768 689  23  92 100  56 361  61
 891  47 587 154 720 685 860 628  99 833 859  13  77 832  38 836 136  39 773 847 744 213 812 819 214  51 430  90  14 174
 888  82 784  18 772  28 871  45 123 766 231 790 140 816   5 746 733 201 799 743 103 322 800 842  43 254 297 424 700 149
 782 380 867 690 868 806   3  36 101 885 750 869 184 212 716 163 141 218 792 803 817 194 200 686  16 763  69 241  34 229
 108 837 822 739 872  29 158 774 121 850 331 762 240 737  66 715  46 318 843 801 219  48 864 738  57 261   7 257 851  44

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.14365e+06us (= 2143.65ms, 2.14365s)
Wall-clock time (full program): 2.19725e+06us (= 2197.25ms, 2.19725s)
Satisfaction error: 0
Number of search iterations: 979
Number of local moves: 718 (including on plateau: 160)
Number of local minimum: 38 (including on plateau: 11)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7002
Total number of local moves: 5987 (including on plateau: 2088)
Total number of local minimum: 170 (including on plateau: 166)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 494 845 429 131 774 861 229 732 288 696  37  95  73 137 691 103  65  79 134 746 832  38  71 819 811 167 648 727 866 897
 101 898 792 760 144 869 726 226 669 771  63 125 765  53 722  93 126  46 315  96 205  92 248 676 783 891 105 863 591 701
 114 218 423 868  84 743 808 875 785 779  30  31  28 110 150 139  94 129 644 716 849  68 159 844 828 132 270 895 802 900
 182 899 825 713  88 703 170 822 604 620 621 121 179 168 243 809  69 234  76 843 160 104  59 756 859 185 118 794 860 631
 657 610 660 164 253 646 233 728 894 452 804 334 272  97 149 203 146  91 319 186 327 173 169 731 818 892 191 830 741 745
 597 815 635 220 231 293 227 705 846 574 625 178 350 200 320 124  74  99  75 881 838 141 738 663 460 211  77 761 709 848
 142 805 770 240 245 887 870 650 768 879 183  82 294 461 877 358 106 155 147 672 223 291 127 833 263 140 279 789 799 180
 750 367 857 256 283 433 647 516 841 766 823 278 539 130 176 222 221 204 371 836 219 328 512 285 357 269 244 835 758 192
 886 187 651 195 202 772 710 533 605 831 190 265 454 260 213 330 309 375 345 864 199 206 447 594 704 297 268 564 782 277
 855 712 624 262 304 629 546 303 466 734 840 267 340 393 196 431 414 228 378 567 739 212 214 665 359 311 292 456 480 298
 353 332 398 344 215 775 280 333 642 273 800 370 693 826 376 306 271 264 282 542 896 366 419 341 554 421 313 527 571 432
 806 300 301 237 290 399 255 407 308 394 827 389 759 362 354 295 404 335 876 793 853 299 194 411 336 380 326 685 619 321
 403 323 409 369 360 342 503 343 418 346 871 478 614 420 383 495 468 862 476 181 377 381 364 247 890 325 252 596 632 387
 401 441 331 483 450 322 384 372 302 550 736 395 349 498 437 508 412 515 416 893 254 316 400 426 627 471 339 473 586 428
 482 347 479 434 453 337 485 368 565 405 390 469 422 523 606 317 497 310 534 511 435 555 374 514 486 391 442 458 509 417
 499 474 464 438 492 352 448 501 581 396 402 477 351 528 459 314 493 487 622 462 463 436 386 626 348 365 455 324 457 415
 588 525 582 566 544 513 674 524 573 444 379 443 451 440 562 385 446   5 519 307 506 413 496 338  67 355 577 361 397 535
 538 560  29 541 623 637 491 201 439 489 561 502 633 284 601 532 570 531   2 408 609 449 305 767 520 239 382 296 207 569
   8 526 547  14 500  25 585 208  22 615 618 410 592 575 612 484 246 659 589 470 607 490 517 551 530 634 655 287 356 583
 599 504 548 545 510 558 613 690  83  36 543 518 135 536  32 559 537 638 686 242 465 467 636 579  49 720 521 286  26 654
 158 568 556   9 603  55  81  44 671 232 276 684 580 557 687 682 666 678 608 427 472 698 529 177 552 578 549 373 189 576
  85 602 329 553 694  40 645 781  10  24 257 522 241 261 719 708 680 649 563 102 692 628 668  18 587 617 658 115 388 679
 630 639  62 754 735 664 652   6  98 778 312 590 198 616 600 711 677 699   1 154 225 777  80  20 595 803 611 116 172 540
 791 161  47 572 702 153 174 737 266  50 156 730 481 593  48 662 787 742 776 138 584 749 697 113 128 653 748 250 166 661
 392 162 318 733 598  23 643 670 249 769 209 717   7 641  13 740 706 762 788 406 100 718 747  52 475 751 824 193  51  58
 281 119 424 837  12 667 675 107 259  86 224 807 725 724 715 656 773 821 445  66 683 786 842 784  39  72 689  33  16 148
 133 120 854 505 673 275 640 151 123  61 764 873 753 688 814 744 723 363 795 425  57 847 681 216 117 714  64 112 108 122
 188  89  11 888 834 430  60 111  54 136 488 755 816 813  17 780 763 885 858 251 152 851 829 165 163 757 884 235 143 109
 707 210  70   4 867  78  42  21 856 145 289 812 721 801 865  15 889 796 872  56 258 797 790 217  35 729 852  43 507 171
 695 157  90 880 752  34  19 850 230 184 197 798 700 820 878 810 883 874   3 274 236 839 817  87 175  45 882 238  27  41

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.60487e+06us (= 2604.87ms, 2.60487s)
Wall-clock time (full program): 2.65938e+06us (= 2659.38ms, 2.65938s)
Satisfaction error: 0
Number of search iterations: 1276
Number of local moves: 838 (including on plateau: 281)
Number of local minimum: 52 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10374
Total number of local moves: 7387 (including on plateau: 3073)
Total number of local minimum: 424 (including on plateau: 253)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 864 799 611 143  62  41  49 871 649 841 749  70 672 161 106 133  13 870 825 738 487 732 794 674 510   9  83  54 691 214
 563 885 784 130 769 145 189 888 881 505  48  89 759 231  47  75  60 125 897 705 561 556 105 751 808  51 874 783 102 149
 539 735 656 135  69 764 115 792 752 780 880  86 809 184  64 101 109 122 156 804 720  84  91 675 821  44 119 898 832 579
 681 760 436 549 235 201 564 839 531 719  81 185 763 238 273 140 129 687 582 709 680  94 168 603 721  95 887 256 593 116
 706 754 577 141  21 103 635 640 624 862 545 293 873 152 298 111 100 588 422 301 400 232 222 884 790 886 250 175 587 343
 739 612 876 243 195 771 879 464 380 894 265 252 890 529 196 237 155 170 159 773 851 162 266 542 457 166  88 259 229 816
 667 761 741 247 204 446 605 530 644 850 630  58 828 158  82 181 220 463 711 868 306  98 329 678 557 202 118 144 300 889
 875 645 124 264 242 368 268 746 812 782 305 226 371 254 253 855  85 215 621 312 878 325  73 891 747 354 407 227 882 108
 246 244 194 403 295 599 411 872 218 712 316 275 171 137 386 823 369 895 337 803 453 892 323 838 893 317 212 382 178 321
 817 249 307 552  97 748 729 437 333 528 213 469 402 470 277 435 383 123 900 376 869 857 313 308 896 131 315 278 283 420
 637 379 361 499 176 478 866 883 861 600 326 276 423 330 233 459 239 219 502 659 281 292 331 287 668 324 211 397 441 877
 336 322 228 730 401 596 745 389 260 366 342 822 807 349 391 488 271 209 899 399 820 291 153 373 713 261 357 409 374 414
 285 270 408 634 258 658 845 507 304 520 430 345 346 485 320 534 500 393 778 480 456 351 359 433 660 448 438 358 347 365
 360 319 328 631 550 756 432 429 536 484 284 802 282  77 416 348 392 148 834 318 443 859 509 362 662 303 398 377 370 506
 384 512 516 481 388 427 462 620 424 538 350 415 468 279 501 449 508 524 230 210 853 493 465 299 340 602 474 445 452 406
 418 262 375 547 521 450 236 405 482 302 515 381 486 434 404 513 671 525 475 523 586 490 410 619 353 428 290 267 572 575
 518 444 431 117 495 601 338 548 496 551 492 503 417 138 565 647 627 269 454 594 245 562 491 413 332 511 498 589 187 442
 559 614 472 412 585 207  57 421 519 466 553 341 497 558  25  40 700 567 216 633  96 356 566 740 461 580 583 526 651 514
 576 489 544   8 460 147 560 626 532  80 665 471 677 426 425 623 622 372  22 455  72 447 569 568 314 540 570 467 573 615
 555 574 806  74 818  66 517 344  29 311  39 477 483 686 641 653 609 625 151 223 636 642 708 160 198 725 527 607 504 127
 150 451 684 286 772 104   3 183 154 473 533 693 584 387 618 703 535 476  76 592  20 590 578 595 327 710 629 597 648 364
  18 702 673 701 639 289 571 206  59  16 692 310 182 650 757 581 690 663 698 294 164  11 522  17  53 606 717 591 664 779
  65 718 439 669 774 695  78  38  45 363 728 632  90 604 736 390  79 652 737 654 174 537 613  19  46 844 699 716  35 646
  68 132 800 750 836 479 742 200 157  23 655 683  99 731 755 765 679 657 225 120 173 248 787 257 263 694 682  37 628 190
  92 169 743 458 819  10 197 234 762 112 608 793  42 856 696 785 727 685 240 367 146 661 643 121 192 554 541 638   7 617
 272 355   4 610  63 394 814  71 128 339 744 722  55 829 810 598 781 733 179 113 670 688 546 396  26 758 165 734 221 697
 142  31   1 776 715 854 813 139 191 172 714 766  28 796 837 768 842 616  43  56 843 767  67 208 136  15 775 419 676 309
 251 188 199 849 543 440 274  50 666 114 777 789 193 704 846 255 827  52 707 217 224  33 863 395 163 726 826 177 352 815
 280   6  87 753 689 867 335  36 798 180  34 797  27 835 833  30 788 858 378  93 205 831 786  24 167 801  12 848 840 297
 852 134 110 723 824 811 186 107 288  32   2 494 791 847 724 795 805  14  61 126 203 334 865 385 241 830 770 860 296   5

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.81799e+06us (= 2817.99ms, 2.81799s)
Wall-clock time (full program): 2.87469e+06us (= 2874.69ms, 2.87469s)
Satisfaction error: 0
Number of search iterations: 1576
Number of local moves: 1145 (including on plateau: 671)
Number of local minimum: 42 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12271
Total number of local moves: 7722 (including on plateau: 3773)
Total number of local minimum: 633 (including on plateau: 263)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 514  82 844  57  27 808 807 124 832 745 814 746 678 873  24 781 776 800  41  44 656  95  75  49 805  85 784  81  34 434
 854  65 146  51 292 813 653 546 250 837 728 113 123 828  69 829 136 880 564 345 555 104 268 782 884  86 569 107 900 138
 585 817 307 200 171  76 693 125 725 894 865 165  61 812 281  53 170 795 645 101 737  64  67 696 892 686 597 896 208 131
 591 697 787 375 260 542 132 114 231 726 796 139 192 183  89 284 523 886 870 673 882  72  99 766 869 167 819  78 472 201
 858 166 770 195 177 109  52 249 891 792 889 245 191 850 151 567 128 724 757 164 207 468 189 622 747 883 857 118 306 193
 888 205 708 102 658 866  87 218 878 827 803 144 187 331 142  88 186  79 853 560 867 212 137 730 588 255 629 173 860 254
 731 222 272 863 116 791 852 226  73 716 785 225 221 224 243 133 134 190 768 689 734 230 797 895 707 247 822 252 159 198
 285 175 682 267 244 115 294 897 148 847 769 328 157 893 300 216 108 206 484 265 833 174 811 825 706 407 732 199 611 537
 233 397 290 333 319 163 414 544 790 762 536 871  59 312 283 228 295 236 760 310 818 843 120 872 640 256 541 217 780 293
 360 885 275 261 330 219 296 258 433 835 703 431 322 248 209 371 234 456 868 381 465 382 347 359 875 223 899 519 802 269
 389 181 419 337 238 778 299 323 338 582 483 820 365 276 270 232 317 257 744 842 680 439 367 695 720 343 374 321 595 491
 380 851 356 309 288 318 266 346 311  63 642 753 386 271 349 246 316 301 461 887 556 287 302 779 593 278 655 352 864 749
 580 327 452 329 363 488 351 370 635 448 534 304 490 297 286 417 364 898 499 202 647 463 240 410 527 423 631 489 571 480
 497 393 291 554 418 342 378 361 399 372 409 387 416 462 289 552 453 400 353 632 429 512 646 618 598 700 411 408 314 521
 396 354 481 455 395 358 350 615 308 402 420 385 572 425 457 474 405 507 394 549 398 373 459 404 836 413 553 522 449 406
 315 503 263 525 438 479 476 427 614 445 545 470 444 403 348 415 436 401 473 357 561 513 437 587 325 450 467 443 495 460
 332 510 262 515 424 535 442 435 446 504 505 344 496 469 506 657 454 486 493 428 334 594 630 508 340 383 516   9 440 518
 475 613 590   6 487 500 471 551 619 531 185 601 392 502 612 576  23 565 511 492 509 605 485 498 103  17 478 559 412 547
  10 494 562 106 532 529 578 568 690 616 368 426 540 579 566 670 599 464 447 573 451 251 150  50 152 644 355 577 341 627
 607 520 604 574 660  70 539 533 482 388  21 229 570 736 584 668 538 654 110  83 432 557 626 466 335 326 320 602  42 639
 130 259 624 563 526 617 548 754 517  54 280  22 685 600 643 583 596 727 422 688 441 501 592 153 239 636  92 586 253 184
 220 530 609 672 705 628 674 241  45 264 362 581 721 671 608  40 713 524 298 662  93  39 550 227 122 794 339 606 235 742
 704 771 763 717 623 669 761  46 649 215  55 661 543 633 677 652  33 610 237  90  97 824  30 145  77 719 277 681 274 282
 178  48 204 702 799 621   3 676  56   1 384 664 684 665 816 764 777 558  60 738 305 756 740  13  71 743 179 691 242 377
 129 759 172 723 698 112 767 793 390  74  47 648 733  18 620 718 683 699 156  16  98 663 675 210 366 758 126 801 141 722
 638 750 735 739  94 651 659 641 625  43 140 589 788 650 712 751 859 127 147 303  84 666 711 379  66  15  62 798  91   2
 603 679  36 430 709 687 694 789 194 111 121 575 826   7 806  20 773  31 336 477 154 809 528 273 100 741  25 838 369 774
 143 752 214 849 861  28  32 729 692 213  19 180 786   4 862  12 821   5 421 376 162 846 890 211 168 855 203 710 667 804
 810 119 783 876 848 324 313 856  58  26 158 714   8 117 839 637 831  38 155 765 161 715 772  96  29 105  68 845 748 701
  80 391  14 830 815 279 634 160 196 182 149 755 879 176 874 881 834  11 188 823 169 458 775 197  35 877 135  37 840 841

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.93137e+06us (= 2931.37ms, 2.93137s)
Wall-clock time (full program): 2.9845e+06us (= 2984.5ms, 2.9845s)
Satisfaction error: 0
Number of search iterations: 1272
Number of local moves: 788 (including on plateau: 226)
Number of local minimum: 58 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12116
Total number of local moves: 7630 (including on plateau: 3329)
Total number of local minimum: 616 (including on plateau: 249)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 840   9 788 143  42 869 117 837 124 891 876 132 690 129 838 471 805  35 844  30 255 307  36 836  91 729  22   2 894 833
   5 835 158 125 821  54 739 297  75 881 858 715  98 793  61 323 842 360 859  12  16 385 163 757 101 801 853  76 669 783
 489 147 895 133 233 817 107 827 250 829 226 732 864 771 165  89 781  80 819 785 716 172  28 719  32 809  13  15 164 808
 310 677 726 271 733 750 789 756   1 810 193 134 824  10  23 130  39 334 710 885 740  86  73 683 100 774 784 284 128 758
 182 275 754 220 452 768 815 685  18 766 744 237 391 156 854  96 851 408 751 746  29  77 230 717 320  21 762 111 304 775
 142 472 790 209 313 763 742 605   6 649  59  44 628 708  19 236 787 325 823 769 655   3  63 641  14 786 638 390 752 484
 215 199 664 102  83 611 660 594 627 700  11  74 712 743 706  94 825  53 678 749 666 433  68  17 580 812 725 318 109 687
 607 352 741 207 162 602   4  56 601 767 560  52 735 764 634 188 761 166 696 626 557 190  26 534 728 737 697 200 483  82
  41 347 795 568 175 569 632 745 714 713 191 121 709 583 559 202 636 145 590 597 516 103 241 595 734 633 608 126  37 290
 231 222 625 461 319 723 610 646 502 399  34 249 609 650 689 184 490 119 565 588 618  46 629 656 606 682 401 140 500 322
 515 217 676 519  87 640 671 517 573 429 195 219 492 584 691 139 541 105 524 550 535 186 665 453 561 596 593 493 335 214
 554  55 400 621  50 587 648 540 514 586 558 581 575 418 658 150 614  85 364 376 604 389 600 612  64 536 548 482 522 224
 555 137 439 221 542 375 657 572 467 528 642 518 198 478 527 624 526   8 549 574 563 617 392 543 460 539 546   7 476 235
 303 366 487 332 372 447 450 566 653 525  24 562 529 537 417 495 577 635 576 243 477 442 455 413 544 468 446 108 603 463
 591 449 393 491 504 508 398 531 436  65 567 488 507 440 299 564 532 333 513 533 407 423 481 367 377 497 430 432 485 474
 382 434 298 294 384 578 458 350 380 498 386 369 553 547 556 637 395 459 445 451 512 570 406 422 538 509 403 420 361 520
 402 878 501 414 456 510 301 521 506 397 373 353 496 338 462 388 283 282 464 351 470 425 410 348 394 475 396 794 722 405
 358 797 378 383 803 428 441 305 415 339 273 324 161 317 530 480 368 688 330 316 344 831 357 479 257 327 409 686 886 505
 778 850 261 286 404 437 431 435 424 345 363 336 293 356 269 834 246 849 499 311 176 426 871 329 251 268 359 736 312 780
 770 792 173 772 791 194 321 262 245 411 473 342 300 296 302 277 443 877 337 252 454 494 427 371 444 256 365 589 782 703
 280 579 466 720 662 416 412 258 314 266 278 759 695 419 276 724 306 861 309 178 867 843 295 201 260 362 238 599 381 291
 421 711 263 822 731 189 374 248 668 349 551 718 153 259 181 670 116 800 292 887 253 315 622 274 387 244 331 820 227 639
 811 619 355 818 340 187 874 852 211 213 814 341 264 205 206 680 247 582  62 192 234 884 196 285 343 120 228 847 804 701
 281 486 135 898 698 225 232 144 152 270 328 673 171 179 265 896 208 659  72 272 218 623 846 157 753 667 832 631 796 748
 254 692 170 755 721 893 113 240 806 370 880 765 216 115 168 651 289 620 288 159 122 828 868 149 613 131 210 879 308 242
 779 148 146 511 900  31  38  92 841 112 826 777 185 830 862 727 663 643 239 169 197 654 839 154 661 180 229 545 183 354
 326 287  95 167 523 136 174 212 705  84 644 848 106 897 773 776 118 855 114 870 203 760 872 155 747 223 585 615 598  47
 675 151 845 379 465  49 571  57 799 160 279 702 204  70 899 707  48 883  33 889 346 672 730 875 860  88  93 448 457  81
 616 863  78 816 652  90  43  66 807 138 630 798 267 865 123 645 127 674  99  45 892 684 738  79 882 141 704 866  60  27
 802 469  20 857  97  69 693 699 681  25 679 552 890  58 503 438  51 592  71 110 873 647 888 694 813 104  67 856 177  40

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.79064e+06us (= 2790.64ms, 2.79064s)
Wall-clock time (full program): 2.84532e+06us (= 2845.32ms, 2.84532s)
Satisfaction error: 0
Number of search iterations: 1655
Number of local moves: 778 (including on plateau: 331)
Number of local minimum: 99 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11334
Total number of local moves: 7440 (including on plateau: 3136)
Total number of local minimum: 542 (including on plateau: 209)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 622   4  13 770 159 270 804 812 171 285 276 230 783 871 852 384 722  91 851 126 868 258 201 714 864 112 402  84 873  43
 860  39 843  61 759 713  80 127  23 899 697 728 299   6 829 121 708 111 797 203 896 259 204 166 177  54 891 795 355 815
 318 313 509 105 262 807 775 710  74 847 680  45 761 821 857  75  17  33   1 192 667 528   5 777 741  37 108 832 731 887
 122 297 103 878 801 673 826 672 229  64 628  30 144 768 665 173 639  65 134  31 735 210   3 786 808  32 603 799 872 725
 114 729 125 146  67 805 732 702  51 842 183 740 814 791  94 716 767 677  97  52 809 145  22  88 824 277 584 753  49 720
 764 704 251 696 692  21 611 719  56 738 424   8 703 811 228 260 743 754  48 193 505 585 386   7  19 137 351 709 594 798
 368 723 211 737 701 445  20 758  14 268 658  86 718 654 123 615 726 747 666 224 640  28 167  38 752 256 130 715 645 682
 160 727 119  10 685 669 606  36 226 760  46 787 755 659 116 651 589 766 550  50 141 117 315 691 644  85 617 670 744 524
 255  59 133 790 686 573 596 631 449 320 579 578 681 599 218  55 637 577 175 629 300   9 298 580 621 139 650 458 635 605
 162 592  15 466 511 756 763 433 232  24 586 568 678 600 319 607  77 508 110 641 559 132 282 674 652 345 280 612 671 660
   2 543 608 602 530 525 593 663 239 236 331 503 492 490 101 646 235 655 570 601  12 625 448 442 471 249 392 540 574 597
  35 609 598 556 632  34 344 595 356 396 148 325 499 558 169 668 385 664 404 214 551 630 538 656 817  18 536 587 389 604
 549 566 443 545 687 537 459 416 305  72 453 535 555 516 310 291 406 327 565 533 292 561 482 430 588  16 618 470 544 444
 381 432 553 539 421 583 510 498 303 546 541 429 378 131 272 504 248 494 642 431 480 513 493 411 616 246 478 422 620 400
 395 469 463 457 401 382 491 564 451 455 554 519 405 486 322 438 497 419 363 403 452 531 515 446 338 434 465 567 316 517
 199 560 485 548 563 506 418 512 412 461 440 456 526 683 398 472 488 365 534 295 483 474 341 273 527 447 393 489 357 410
 454 428 623 367 636 361 238 529 542 861 875 894 350 397 415 346 288 520 219 399 373 523 572 379 151 571 309 317 380 198
 369 413 347 371 328 352 234 323 734 590 450 372 240 375 390 294 495 383 334 858 387 407 479 439 284 736 837 359 848 487
 358 394 306 275 417 823 330 354 581 676 557 138 362 582 484 168 576 614 150 253 332 267 477 427 243 745 877 514 340 895
 522 706 349 501 376 281 342 436 796 613 876 290 441 562 627 391 308 311 464 502 225 307 662 252 279 748 336 409 353 250
 724 283 337 335 476 360 366 408 521 460 209 158 149 261 435 746 302 174 269 547 784 802 496 343 885 698 834 468 321 364
 781 779 296 197 215 223  99 165 866 859 675 370 388 233 711 189 208 170 828 426 739 863 423 312 314 782 693 113 324 274
 833 187 626 155 188 241 289 882 552 591 774 883 196 301 377 785 425 195 181 850 220 750 661 172 109 788  81 217 886 120
 707 264 844 227 213 216 855 648 789 569 263 147 179 129 575 749 286 326 841 793 333 271 643 800 212 862 257 124 265 128
 688 156 649 771  93 890 329 293 647 304 247 135  82 221 473 684 610 152 689 822 500 638 803 191 898 712 164 245 339  90
 879 690 830 244 769 475 194  73 532 254 278 900 888 178 414 266 136 825 207 772 104 751 348 694  92 889 467  42 182 142
 776 206 653  78 222 202 699 200 839 231 176 849  70 374 831 884 835 287 897  95 794 180 806 507  89 633 792 163  40 107
 634 695 705 518  68  66 106  98 838 190 115  76 892 186 757 773 161 619 874 881  71 730 845 827  27 762  29 836  57  79
 437 846 624 853  87 657 765 205 869  44  96 856  62 154 420  83 816 867 242 778  26 679 780 893  11 840 184 143  58 140
  47 102 854 717 870  69  41  53 818  60 700 880  25 118 733 481 185 819 813 721 237 742 820 100 462 865 157  63 153 810

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.05194e+06us (= 2051.94ms, 2.05194s)
Wall-clock time (full program): 2.10581e+06us (= 2105.81ms, 2.10581s)
Satisfaction error: 0
Number of search iterations: 881
Number of local moves: 639 (including on plateau: 184)
Number of local minimum: 31 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6604
Total number of local moves: 5541 (including on plateau: 1737)
Total number of local minimum: 236 (including on plateau: 152)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 867   7  92 842 723 216  44 800 852 869  30 206 806 860  21   3 548 161 134 864 182  71 796 861  16 144 100 780 822 798
 758   2 350 111 871  76  42 341 779 135 397  62 857 777 207 770 753 439 569 586 773 336 108 813 711 307  25   8 824 728
  15 107  23 845 844 700 714 657  43 816 424 707 843 136 210 752 146 403 118 708 342 138 738 784 290  56 225 762 765 204
 846  64 192 369 445  26 195 811  37 793  63 768 647 739  18  11 825 208 630 760 740 171 153 862  29 718 181 727 685 802
 725 410 198 848 277 376 803 724 788 619 601  99 757 730 716 694 467  49 109 743 703 170 112 807  34  14 125  48  13 756
 795 282 261 840 766  31 731  67 821  28 197 236 733 598 602 656 622 218   9 632 638  33 304 786   1  90 269 626 834 809
 678  27 199 805 679 224  22 570 641 690 596 751 698 543  20 623 343 200  35 763 217 487 660 749   6 484 319 209 794 483
 500 184 649 666 686 636 759 260 732 658 241  60 674 654 139 634 243  52 677 808 695  19  24  68 553 671  17 280 774 502
 742 183  98 664 661 105 567  12 364 688  59 702 687 223 541 691 313 275 631 618  88 320 706 613 783 676 222  82 595 606
 645 278 267 610 490 667 665 215 549  80  45 639 585 480 179 652 116 203 516 721 607 149 648 554 699 682 212  66 621 675
 722 573 291 533 563 525 522  75 628 544 129 614 633 612 137 593 515 114 167 546 597  83 609 591 520 697 318  36 579 449
 518 539 201 616 565 503 556 508 526 583 580 263 582 145 158 552  41 104 558 519 529 547 576 584 617 481 325 101 624 514
 524 498 382 560 478 528 566   5 537 443 574 370  73 754 409 603 476  10 506 422 124 513 470 571 673 540 332 465 592 517
 420 542 426   4 532 298 581 254 411 535 575 357 485 237 627 454 611 510 615 489 396 432 460 463 555 344 430 625 353 494
 620 511 559 505 393 380 530 594 391 389 390 501 551 830 374 334 589 362 381 234 349 534 310 450 492 474 189 305 588 406
 373 473 367 438 366 477 375 568 442 448 418 455 281 429 356 705 399 741 331 495 354 587 252 404 491 715 441 395 412 527
 401 323 453 471 371 415 469 417 493 421 402 456 312 466 190 482 509 538 329 497 894 314 488 496 328 545 659 605 377 394
 286 737 504 464 746 577 271 436 486 512 303 444 337 283 646 447 750 440 388 338 479 452 360 458 276 250 680 358 346 461
 462 853 670 425 306 300 414 650 427 348 531 400 297 433 835 359 258 413 392 302 205 437 880 256 240 309 791 451 335 536
 379 383 662 472 296 884 288 710 154 293 295 287 895 327 324 248 898 557 398 863 235 386 251 274 854 246 635 423 230 368
 347 339 792 340 202 221 326 600 870 301 859 196 157 669 262 355 345 814 351 213 900 855 299 162 330 419 772 736 226 257
 106 416 782 239 317 180 279 820 231 363 838 284 141 719 837 431 640 781 211 247 321 888 378 255 264 681 385 865 322 294
 663 734 720 372 308 188 259 435 265 311 735 847 244 186 692 127 709 683 245 352 789 841 289 672 174 272 790 270 156 187
 142 755 550 128 220 745 831 761  91 160 717 172 163 407 810 121 899 833 882 177 892 729 150 405 115 227 604 229 285 315
 123 801 361 159 132 819 232 523 152 266 168 889 169 316 815 249 507 839 886 151 642 828 851 193 333 292 826 564 191 238
 103 253 562  95 890 856 273 468  72 787 365 767 228  70 599 148  47 799 883  79 173 823 878 102 818 885 653 655 110  74
  86 827 896 117 131 866 797  40 747 219 713 175  84 176 608 693  32 804 748 133 214 561 785  46 849 701 887 428  39 113
 155 775 446  81 126 812  97 684  93 164 744 876 387 499 897 194 726 572 637 143  94 590 185  51 877 817 769 874  85  65
 130 868 712 776  53 651 434 242  61 408 858 836  87 140 457 879  69 521 704  54 178 643 166  38 891  89 875 764 881  50
 384 771 850 120  78 233 873 268 832 644 668  96 122  77 829  55 119 872 475  58 165 578 629 147 696 689 459 778  57 893

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.72281e+06us (= 2722.81ms, 2.72281s)
Wall-clock time (full program): 2.7769e+06us (= 2776.9ms, 2.7769s)
Satisfaction error: 0
Number of search iterations: 1487
Number of local moves: 760 (including on plateau: 262)
Number of local minimum: 86 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11070
Total number of local moves: 7208 (including on plateau: 3152)
Total number of local minimum: 607 (including on plateau: 241)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 496 178  93 898 594  50  79 124 828 477 489 689 595 694  58 102 157 890 739  68 375 112 527 873  41 545 790 217 841 896
 105 886 576 101 654  53 776 888 656  96 842 203 812 254  77  33 109 680 676 170  27 186 778 718  42 764 653 731 219 750
 872  65 485  57 122 895 156  92 821 189 885 803 136 814  52  73 692 762 155  38 626 176 862 637 144 488 210 802 794 612
  94 182  46 808 768 266 839 118 796 880 795 289 590 798  81  76 815 858 686  54 705 145 738 753  98 282 238 255 150 312
  97 693 224 162 887 152 709 867 700 256 213 634 151 644 188 233 127 179 716 135  86 865 769 774 167 308 665 220 875 819
 196 194 104  60 710  91 174 180 773 183 711 857 736 207 249 422 235 631 455  90 765  47 621 597 882 618 863 206 835 823
 148  71  75 214 706 120 779 320 856 276 331 878 643 474 236 198 610 199 580 258 860 103 633 883 191 741 859 211 222 840
 106 131 130 100 305 195 242 140 852 153 899 443 770 789 311 277 629 664 807 248 502 253 652 897 364 844 864 325 300 323
 287 200 228 193 410 301 273 745 893 336 671 335 830 826 185 302 230 215 799 149 853 850 514 817 212 192 846 285 231 307
 466 319 341 247 329 290 356 385 606 310 624 505 900 288 232 357 871 315 892 881 473 395 678 327 244 286 761 160 373 304
 334 278 500 129 397 225 128 317 388 166 516 440 838 787 117 437 344 639 783 874 613 338 756 366 171 760 866 416 218 374
 350 205 239 649 147  80 470 404 605 420 493 868 855 386 279 358 809 343 648 339 512 332 666 811 574 264 383 349 382 295
 291 414 360 603 306 609 376 377 506 392 371 262 508 261 522 424 361 617 813 668 481 316 553 614 484 766 272 451 280 257
 293 177 423 387 561 333 270 347 351 321 487 431 492 536 507 482 707 820 418 322 471 394 616 483 370 598 326 337 876 379
 442 464 435 429 444 460 529 448 313 297 469 409 355 430 407 368 510 569 299 380 543 891 557 465 445 274 367 472 495 549
 457 499 428 354 537 498 463 421 281 511 399 417 401 480 449 517 475 402 539 403 309 625 494 419 396 581 415 352 461 532
 452 411 265 528 596 523 467 359 314 259 542 456 554 365 324 623 438 504 501 406 268 405 294 408 732 534 513 413 520 541
 681 454 630 602 524 439 446 556 585 645 245 389  39 591 490   5 260 434 531 526 393 552 381 298 592  62 519 560 714 372
 563 515 476 555 119 641 478 432 346 742 538   2 632 567 486 615  12 491 390 566 165 275 267 240 550 546 551 635 509 611
 412 547 673 353 533 579 748 568 722 503   7 518  88 173 687 497 202 345 229 582 340 572 391 540 535  85 704 436 650 296
 701 837 792 651 251 571 729 565  64  83 398 578 175  43 702 669 154 328  37 204 425 601 227 250 715 663 161 657 646 638
 607 659 755 564 577 604 558 575  19 608 462 723  74 427 726 642 636 588 125 369  32  51  23 209 586  24 458 479 685 670
 587 600 622 450 690 562 661  69  89 816 593 303  55 114 679 573  84 521  40 362 292 733 468 108 784 647 163 683 619 548
 725 640 699 583  13 754  36 677 234 713 184 544 246  22 719 785 142 599  35 797 181 696 121   1 833 672 384 655 805  20
  48 570 627 584 674 426 620 749 187 763 703 727 284 734 831 721 740 137 132 717 241 712 201 139 691 237 134  26  34 126
 724 847 848 675 747 782 746 810  70 759 110 190 342  63 834 845 318  78  15 682 667 800  95  61 870  18 158 172  25 164
 730 818 806 889   8 559 628  66 269 658 263 169 197 786 801 757 744   6 271 697 836  87 111 348 107 589 123 735   4 453
 695 781  44 758 688 877  72 363  99  67  16 216 146 708 660 447 525 530 441 827 243 771 113 168 843 221  49 743 720 684
 662  29 737 791 208 829 698 825 133 767 143 223 283 226 849 793 775  56 433 879 459 832  31  59 822  45 138 752  21  17
 894 851 854 141  10 751   9 728 159 869 116  14 788  28 777 884 804 115 330 824 772 400 378 252  30 861  82 780  11   3

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.55856e+06us (= 2558.56ms, 2.55856s)
Wall-clock time (full program): 2.61318e+06us (= 2613.18ms, 2.61318s)
Satisfaction error: 0
Number of search iterations: 1285
Number of local moves: 716 (including on plateau: 189)
Number of local minimum: 90 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8649
Total number of local moves: 6104 (including on plateau: 2552)
Total number of local minimum: 376 (including on plateau: 194)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 854  21 778 831  60 814 259 807 124  73 809 313 794 292 832  71   6   3 425 856 275 783 815 804 168  12  23  97 840 676
 788  14  67 726 810 724 161 862 330 138 823 335 752 267 775 110  45 838  33 776 877 288  28 212 148 846 795  65 867  15
 847 839 792 848  83  44 199  42  58  36 786 355 796  18 790 784   7 393  16 301 851 844 800  13 107 821  37 517 787 704
 763  22 244 871 710 805 130 826 191 205 827   5 216 257 808  61 829 734  24 869 751 162 825  94  46 682  20  80 712 746
 743 739 121 718  17 797  64 683  74  31 379 176 741 249  25 571 740 749 230 661 765 711 758 727 103  51 767 126 296 703
 747 700  85 414 799 128 254 618  34  43 729 160 426 264 755  63   8 701 236 680 732 714 675 374 250 662 713 651 152 748
 702 738 415 638 830 674 175 816 383  39 652 451  99  35 706 294 756 613 181  48 645 707 304 180  87 660 671 112  76 828
 663 622 753 637 723  29  11  10 736 445 527 118 715 197 721 106 642 648 153 673 655  19 119 750 621 745 572  50 342 513
 657 733 575 692 757 845 101 167 209 302 620  32 708 189 446 165 737 659 140 647 537   2 551 237 605 579 607 245 115 656
 580 584  40 627 639 594 372 587 722 258 533 260 649 215 626  86 553 491 654 608 132 624 611 229 549 539  72 320 155 606
 698 538 108 623 610 591 310 612 552 494   1 253 483  59  49 550 563 601 670 184 635  93 600 532 548 566 589 602 151 650
 569 586 482 440  75 363 145 361 116 615 542 413 672 544 583 578 449 557 481 609 421 500 558 270 526 488 450 365 350 407
 511 730 554 597 525 643 470 218 406 418 630   4  89 545 536 574 604 489 214 131 528 448 679 164 677 524 617 248 117 625
 343 465 127 469 629 509 362 341 458  53 457 568 543 492 515 582 463 521 562 468 505 530 541  52 520 498 487 581 352 522
 556 529 478  26 433 442 585 435 420 510 519 516 490 328 416 336 534 367 493 329 477 593 496 497 390 431 475 472 439 503
 471 430 501 394 346 467 462 437 432 898 514 577 409 473 559 353 411 459 479 382 384 518 400 485 410 506 349 412 318 279
 312 900 327 392 344 319 512 546 395 599 306 760 381 590 419 396 452 447 398 464 429 405 340 803 325 453 252 371 455 423
 443 314 369 861 348 484 434 504 316 265 389 766 802 428 474 508 368 276 376 334 339 309 424 385 380 280 461 665 868 345
 460 444 332 422 377 262 820 404 357 317 391 878 417 454 466 240 358 375 842 359 321 438 693 573 326 333 388 576 614 278
 297 315 841 305 234 166 895 295 303 403 865 547 397 835 347 456 255 273 408 870 232 866 370 570 311 282 261 592 486 238
 441 360 356 399 401 402 476 499 759 688 427 837 300 818 208 299 204 351 685 308 850 366 872 182 183 291 239 507 564 243
 200 235 658 224 251 307 884 596 873 272 289 785 555 833 271 742 354 228 227 256 283 801 364 640 211 338 373 633 495 337
 157 247 287 277 290 188 717 171 893 791 323 793 789 754 213 798 146 268 678 653 560 773 195  98 858 129 378 274 632 185
 100 203 860 284 225 201 387 480 769 561 207 695 102 664 843 853 158 159 628 646 269 172 286 876 863 322 241 780 540 141
 122 134 324 220 177 684 875 226 694 892 217 781 598 709 179 855 223 198 782 285 242 636   9 720 881 109 186 762 691 104
  57 135 811 123 880 222 886 894 281 771 331 690 196 699 263 641 859  95 603 194 293 150 125 266 298 246 889 836 719  62
 137 891 813 221 174 233 669 136 686 882 156 779  92 852 502 687 219 143 668 193 187 139  66 531 817 386 806 744 616  90
 105  96 154 114 888 206 716 631 666 735 163 535 192 697  91 768 864 857 595 523 202  88 142 899 772  69 190 231 436 890
  79 883 567  41 731 667 619 178 634 885  47  78  82 681  27 169 834 173 822 170  54 689 144 764 774 897 728 777 210 111
 113  68 696  81 149 705 565 133 644 896  56  55  30  77  70 819 874 849 812  38  84 147 725 588 761 770 879 824 120 887

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.67661e+06us (= 2676.61ms, 2.67661s)
Wall-clock time (full program): 2.73168e+06us (= 2731.68ms, 2.73168s)
Satisfaction error: 0
Number of search iterations: 1476
Number of local moves: 985 (including on plateau: 365)
Number of local minimum: 68 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11196
Total number of local moves: 8073 (including on plateau: 3537)
Total number of local minimum: 422 (including on plateau: 280)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 821  33 778 119 831  41 847  95 644 851 116  32 597 785 538 863 217 186  22 791 171 618 877 118  66 197 102 816 620 723
 846 889 874  74  65  43 773 159 560 844  71 736 712 745  20 590 123 668 103 424 112  53 742 591 783  70  28 799 326 692
 185 209 817  84 880  10 713 206 818 578  38 882 584 855 100 885 139 868 109 884 121 169 182 624  39 128 160 698 726 824
  27 148 532 776  45 181 759 164 839 173 184 888 648 857 163 891  34 743 155 894 229 149 731 129  91 156 576 828 859 666
 211 101 789 696 168 238 852 137 781 711 190  31 786 753 215 829 247 879 203 388 414 151 881 474  83  80 682 710 757  78
 373 270 700 213 862 730 639 522 767 234 228 122 294 267 551 114 153 396 378 883 279  68 748 205 898  99 225 820 739 738
 536 183 811 230 900 188 492 892 653 134 878  54 849 161 854 145 321 684 236 285  87  29 224 867 120 232 860 694 195 721
 640 218 642 221 131 127 636 727 780 179 106 330 788 158 537 318 240 873 384 282 257 365 751 865 251 283 777 649 256 744
 316 341 805 187 202 255 790 208 299 265 300 608 825 248 525 296 293 226 138 390 135 870 897 895 165 609 543 896 233 755
 533 191 686 545 893 669 574 199 552 549 613 342 729 323 794 311 402 307 241 345 268 277 231 796 351 305 364 637 245 243
 340 800 725 569 387 249 774 535 489 360 861 180 374 141 674 281 308 289 333 466 346  60 320 660 244 475 477 614 875 309
 890 313 769 239 223 420 432 392 222 616 399 834 367 480 357 214 348 667 548 272 554 872 194 491 665 337 529 262 260 349
 312 559 544 708 419 416 276 413 274 207 264 324 227 561 377 509 339 812 386 681 126 328 494 695 499 356 395 418 887 709
 332 408 553 368 310 871 571 266 275 284 530 329 354 869 319 370 302 444 664 261 500 327 659 452 438 306 430 717 400 606
 464 486 371 287 358 582 434 570 422 393 409 412 523 468 437 451 518 467 519 376 435 605 470 473 391 588 382 343 483 398
 415 546 564 563 586 439 443 411 498 428 651 403 375 315 465 449 347 462 463 441 366 405 273 540 335 557 482 458 338 497
 397 450 457 431 456 297 201 442 460 508 478 417 436 369 427 448 372 426 517  51 515 573 558 661 516 541 612 410 575 514
 110 506 381 594 585 446 258 589 271 472 383 317 683 652 177 550 600 130 454 404 602 628 531 406 493 350 363 459 504 617
 547 455 242 484 453 469  21 380 192 583 501 385 355 542 286 421 479 259 401 580 505 793 610 595 658 510 562 295 471 481
 657 511 253 615 646 581 157 688 176 314 361 621 524 488 204 603 641 490 704  57 556 445  69  23 539 650 627 407 604 304
 250 633  73 656 495 592 331 705 142 111 568 526 567 622 104 132 507 672 593 685  59 630 703  82 706 647 701 359   1 663
 334 527  76 425 487 447  77 577 520 833 676 566 175 638 220 802 579 502 718 389 671  15 632 654 823 670  19 298 140  25
 288 629 193 619  64 503  37  63 461 675 601 754 124 528 607 699 587 623 689 673 680 496 301 691 598  35 252 200 756  89
 476 740 178 645 626 235 394 693 325 714  75 697 172 728 322 635 534 485 662 752 810 631  94  50 263 720 762   7   2  88
 572 716 196 611 741 379  58  44 292  86 655 735 303 565 513 625 795 115 827 733 747 746 690 150  13 715 599  24  72 198
 643 634 152   3 555 838  92 813  97 702 679 105   8  30 837 806 737  93 687  62 858 808  46 147 787 797 822  14  67 596
 760 809 280   9 246 876 840 734 143  55 336 170 291  56 804  49 770 512 765 125 722 758 133 174 843 779 352 254 772  98
 832   6   4 866 107 766 433 278 750  96 853 807 210  48 845  47 886  40 761  11 801 784 353  79 732 678 803 154 216 269
 189 362  52 830 117 864 521 815 771 836 792 144 423  26 899  16 856 136   5 768 814 113  36 782 835 819  17 167 429  81
 219 842  18 848 677 763  90 798  42 724 719 764 212 237 344 166 841  61 850 162 775 749  85 146 290 826  12 108 707 440

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.45525e+06us (= 2455.25ms, 2.45525s)
Wall-clock time (full program): 2.50844e+06us (= 2508.44ms, 2.50844s)
Satisfaction error: 0
Number of search iterations: 1251
Number of local moves: 796 (including on plateau: 242)
Number of local minimum: 63 (including on plateau: 7)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9762
Total number of local moves: 7075 (including on plateau: 3146)
Total number of local minimum: 362 (including on plateau: 213)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 385 195  24   2 203 801 763 810 874 853 762  38 895 252  14 885 606 884 224 196 186 866  90  55 164 774 799   6  41 868
 871 845  95  59 142  61 143 859 865 862 233  30 863 219 791 850 858 849 139 198 215 297 242 153 846 841 842   8 133 106
 828 250 354  22 834  20 840 832 824 238 208  93 270 207 104 815 716 811 161  13 794 817  33 206 814 764 798  46  10 793
 829 760  96  87  27 822 800 796 804 593 749 183  43  51  48 783 356 784 135 622 344 795 371  17 781 285  44 466 257 787
 812 758 145 782 768  49 773 739 761 228 365  50 180  40 287 777 273 775  98 116 771 733  85  42 722 569 778 172 148 719
 728 666  65 730  21  92 751 718 772 710 735 745 117 193 155   7 260 696 137 296 717 691  77 108 740 197 712 747 188 744
 727 705  37 690 709 742  64 243 237 724 720 706 334  62  32 697 293 713  36 402 707 708 673 175 676 167 694 129  25 688
 677 141 251 689 358 665 656  60 660 669 686 364 680 100 105 662 174 687 151 643  45 681 190 417 693 263 667 668 130 683
 699 615 202 671 388 655 628  29  16 679 644 663 267 192 646 637  97 661 200 650 638 213 619 187 594  15 602 633 136 639
 624 613 132 636   9 675 612 642 621   4 630 249 588 264 575  28 322 652 396 578 109 571 597 221 647 300 617 627 381 595
 582 536 431 564  54 600 618 529 585 140  11 239 591 589 629 568 118 567 216 556 554 623 587 333 577 191 558 553 259 557
 559 572 570 563 325 548 576 543 510 508 596 283 560 581 541 527 127 480  57 574 592 561 521 310 544   1  83 520 261 522
 539 435 535 546 265 540 562 518 551 124 586 222  72 537 549 547  69 226 538 532 523 534 505 482 492 346 550 514 573 503
 506 463 509 488 526 465  58 490 500 501 452  31 483 290 517 470 486 477 456 491 499 474 448 489 473 475 471 513 512 502
 487 479 453 496 460 438 484 481 445 441 478 163 467 420 494 504 485 458 519 462 405 476 459 497 472 461 454 443 302 432
 450 447 614 819 440 430 423 418 419 327 455 511 383 429 426 451 579 442 449 403 409 395 413 394 493 376 397 457 422 444
 367 542 872 469 464 408 427 424 425 436 412 428 392 406 468 400 421 349 439 338 404 446 407 416 399 524 830 382 387 433
 390 341 374 378 649 384 303 411 401 391 317 369 674 375 284 410 788 368 393 398 415 386 844 583 339 897 370 336 590 357
 323 359 268 347 692 328 348 292 372 802 352 684 379 380 363 326 887 362 890 366 342 337 528 545 353 714 329 331 598 318
 373 244 343 315 340 360 330 316 314 414 715 299 725 324 807 313 852 301 857 678 664 266 355 377 321 797 304 319 531 361
 280 833 350 295 552 345 288 294 306 754 351 584 291 854 272 281 726 332 580 279 891 278 282 607 220 767 231 275 806 311
 305 225 759 289 308 286 234 245 704 838 276 530 209 856 240 254 770 335 738 746 255 888 201 651 246 641 253 212 785 236
 229 298 605 223 495 211 235 702 256 277 870 601 786 752 232 138 437 565 634 860 185 258 748 685 269 603 169 168 753 271
 204 107 670 309 173 217 848 182 181 262 825 507 837 820 210 218 608 248 839 178 873 640 648 657 171 729 199 205 736 214
 165 877 867 241 654 134 150 154 177 274 162 525 779 734 653 194 695  56 645 230 835 152 179 883 899 631 184 672 599 115
 160 149 808 159 875 756 158 170 112 533  89 886 320 610 803 146 555 147 766 900 307 123 732 737 227 312 516 723 616 120
 131  71 776 876 389 166 698 122 110 611  76 896 780 701 898 125 632 157 721 851  63  81 189 755 103 566 128 805 882 156
 113  68 625  75 836 731  86 620  52 111 609 889 498 757 879 626 247  91 743  80 659  99 880 893  82 101  88 861 682 434
  70  74 816 864 818 765 515 792 635  35  78 892  18 809 703 126  66  19 700 826  67 121 789 827 119 114  79 881 894   3
 102 847 869 831 741 821 144  84  26 176  73 855  34 711 790 750  12  23 658  53  47   5 823 813  39  94 769 843 878 604

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.9891e+06us (= 1989.1ms, 1.9891s)
Wall-clock time (full program): 2.05875e+06us (= 2058.75ms, 2.05875s)
Satisfaction error: 0
Number of search iterations: 807
Number of local moves: 630 (including on plateau: 177)
Number of local minimum: 26 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6126
Total number of local moves: 5519 (including on plateau: 1892)
Total number of local minimum: 153 (including on plateau: 141)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 895 796 894 207  79 588 126 873 794 838 844  63  50 538 147 559 618  66 769 111 885  59 174  78  54  76 556 787  91 900
 834 891 759 785 693 193 227 102 845 744 703  67 128 762  86 821  77 210 204 605 847  51 878 101  72  37 802 617 258 116
 240 731 392 130 136 665 113 751 450 808 841  83 883 642 480 565 107  95 719 134 866 656 717 119 173  56 114 881 864 104
 773 786 363 180 561 252 123 691 596 100 669 889 896 694 112 798  44 318 650 163 592  93 206 103 149 267 892 514 795 246
 772 789 871 199 850 570  36 310 765 805 546 141 279 722 129 813  53 171 184  65 809 222 108 121  47 888 670 818 529 233
 201 601 672 110 634 342  69 659 825 887 290 524 139 867 175 678 231 236 636 144 241  87 874 334 897  31 810 493 729  99
 178 690 648 192 568 165 870 848 876 831 840  80  62 869  52 563 407 575 247 649 179 377 187 372 196 167 739 323 614 151
 817 229 884 291 699 172 674 725 235 195 657 225 262 806 778 880 728  70 287 245 161 124  41 238 417 232 807 675 639 322
 156 679 336 224 619 862 384 197 213 424 416 133 120 584 237 706 186 320 324 843 405 692 700 275 259 311 861 893 855 301
 194 730 846 106 741 295 272 215 300 721 671 271 757 503 302 830 286 292 219 364 899 306 385 208 251 244 623 793 668 223
 214 468 599 355 784 646 327 249 390 343 283 169 284 782 445 410 647 423 217 886 257 378 211 829 496 351 688 456 408 520
 203 305 370 263 701 868 345 332 319 278 621 359 419 774 803 315 603 376 791 486 143 379 352 341 437 412 427 281 852 360
 273 388 398 269 333 426 401 433 890 534 515 250 854 461 340 580 449 374 309 815 371 470 457 368 523 280 530 338 609 277
 361 504 466 545 697 307 335 458 353 350 625 230 459 573 430 397 898 406 346 285 574 435 373 415 469 558 325 436 505 400
 451 337 308 462 266 507 492 542 296 551 501 745 441 479 339 569 464 317 369 587 443 429 442 452 476 396 541 465 499 349
 282 477 168 597 414 434 453 455 497 328 344 526 381 572 321 473 549 428 756 500 314 586 239 608 513 447 365 590 431 467
 510 402 399 264 615  30 536 354 312 525 488 537 577 105 472 289 645  34 460 578 661 644 481 498 685 403 511 471 547 482
 502 581 637 382 484 153 521 566 474 439 274 522 188 394 622 483 555  64 446 518 564 478 444 391 438 475 454 630 304 532
 579 409 631 652 248 752 540 389 662 544 600 362 591 356 552 413 421 594 181  13  97 602 616 528 448 582 205 234 166 548
 157 411 604 509 299  45 593 689 535 576 331 589 720 164 533 393 554 776 531  10 506 491 595 583 607 494 440  75  38 667
 487 553 109 653 185  88 620 696 710 297 418 512 366 158 654 160 270 489 560 770 422 543 837 527 758 713 140   2 135 683
 626  42 138 797 298 733 747  23  28 664 383 735 519  92 638 159  20 612 632 702 508  43 800 562   7 811 655 598 316 627
 633 386 209 571 226 125 643 367 118 686  98 742 550 200 768 183 663 732  12  49 723 613 220 767 687 781  74 641 256 792
 673  60 162 801 357 640  81  48  82 255  96 705 485  19 704 303 695 709   6 635 624 736 820 879 658 585 146 490 347 714
 682 326 610 737 127 189 828 761  21  29 293 764 606  71 253 148 265 740 684 629 152 676 711 750 851 698   1 117  25 771
  94  46 242 726 137 666 567 790 749  55  16 816 425 294 313 182 827 743   9 516 724 875 212 681 780 863 329  11  61 766
 677 715 395  15  73 718 177  32  84 142 748 755 799 288 628 191 760 779 814 753  85  35   8 727 708 775 154 348 712 420
 330 155 145 754 463 860 858 812 176  89 115 822 432 216 716 150 539 833 853 358  57 819   5 190 680 826 268   3 228 763
  14   4  58 882 404 375 734 131 788  90 221  27 804 276 651 243 832 856 517 260  26 839 865 611 746 738 170 495 198 660
 707  24 202 857 824 849 823  17 132 387  68 872  39 254 835 261 122 877 783 842 380 777 557 859  33  18 218  40 836  22

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.74448e+06us (= 3744.48ms, 3.74448s)
Wall-clock time (full program): 3.79842e+06us (= 3798.42ms, 3.79842s)
Satisfaction error: 0
Number of search iterations: 2199
Number of local moves: 1477 (including on plateau: 1005)
Number of local minimum: 109 (including on plateau: 66)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 18037
Total number of local moves: 10454 (including on plateau: 6303)
Total number of local minimum: 1045 (including on plateau: 450)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 642 542 165 890  97 150  99 885 899 779  67 753  96  66 106 842 151  89 508  48 110 724 716  54 893 211 830 693 895 515
 206 883 122 891 124 866 148 675 105 589 145 802  95 191 225 187 868  51 780 173 197 746 102 166 698 705 547 630 897 701
 132 691 467 611 855 649 120 546 114 674 109 840 204 766 857 782  73  79 673  85  92 492 155  41 875  90 575 274 783 811
  82 692  78 573 510 894 111 356 121 217 117 896 679 113 146 763 169  91 747 663 286 664  62 200 818 238 870 676 848 835
 768 821 185 800 881 182 227 249 454 718 190 276 752  88 159 178  61 127 851 168 270 806 175 208 834 137 797 666 637 850
 316 774 103 754 183 540 115 186 898 543 181 739 841 593  68 501  98 228 212 184 144 689 365 803 827 201 548 810 852 219
  52 816 149 556 210 872 884 395 245 330 262 790 645 214  87 239 308 320 608  70 230 886 202 847 366 195 813 740 755 429
 254 662 193 805 112 284 298 880 347 878 131 504 858 134 158 391 236 363 824 161 282 765 889 364 216 427 822 368 622 287
 507 849 139 717 537 296 277 234 809 801 240 310 795 224 301 312 188 196 892  76 463 612 306 163 174 353 812 253 859 820
 172 420 459 578 352 294 299 603 160 742 414 877 680 283 527 203 357 396 255 189 799 900 223 386 563 373 694 231 647 439
 221 786 338 558 241 341 243 336 218 205 512 625 758  81 288 374 192 222 838 856 261 743 394 424 552 399 659 291 733 826
 275 404 770 554 259 346 771 244 233 358 315 667 627 309 325 226 482 351 731 162 465 686 271 305 319 447 846 343 560 864
 300 326 455 598 302 285 328 406 722 252 350 497 525 408 167 450 448 839 655 359 417 887 473 235 461 476 549 457 638 250
 438 428 423 536 687 323 281 392 384 354 609 441 559 437 451 272 267 490 565 471 421 833 360 564 265 514 472 475 433 370
 362 597 436 398 405 293 644 469 498 340 530 318 434 381 601 415 419 435 385 533 553 324 332 342 648 348 595 426 632 422
 380 511 401 345 483 355 493 477 551 550 503 544 383 402 485 470 333 479 458 496 468 372 407 591 513 466 403 432 371 393
 462 387 377 481 431 640 660 491 331 339 418 304 499 349 506 480 321 569 732 327 586 453 685 643 602 290  33 518 337 264
 568 487 656 397 582 516 521 531 629 538 535 378 410 369 446 583 449 443 314 389 619 279 539 486 639 562  22 390 152  86
 682 307 519 123 494 460 576 651 633 478 442 141 313 194 596 523 555 566 440 545 580 180 670 509 198 280 430 574 295 561
 641 322 631 379 702 557 759 344 579 665 335  45   3 505 584  18 571 587 526 517 484 251 522 577 176 684 445 171 311 624
 502 500 495 125 636 760  15 334 570   5 787 628  32 712 425 581 452 621 488 703  30 138 524 532 567 671  21 688 263 710
 773  93 657  74 677 708 620 133 108 273 615 646 229 626 756 735 690 604  37 529 520  60 736 618 489 528  63 727  56 135
 737  34 388  19 769 652 592   1 706 594 775 247 256 607 791 695 635 600  20 788 711 140   8 616 199 654 375 678  75 153
 613  69  38 266 697  65 412 767 798 278 713 599 329 714 661 823 650 871 170 658 815  77 610  23  71 729  31  40 209 719
 541 382 819 361 764   4 853 634 751 585 606  25 400 723 745   6 681 617 289 778 744  49 614 721  13  26 367 157 118 142
 715  83 837 411 242 730 704 126  55 100 409 268 297 772 748 843 860 588 164 777 761 129 728 623 734   7 269  80  11 444
 762  44 862 456 784  42  16 829 156  50 832  36 590 844 720 136 861 750  12 814 845 246 143 825 119 873 248 147 215 258
 672 376 781 177 179  46 707 867  39 757 796 237 317 709  27 804 817 882 260 807  58 303 668 130  84 888  43 726 101 257
 738   9 741  35 292 793 863 464 653 416 792  53 213 865 683 669 534 207  17 776 699  57 808 725 128 874 104 154  94  59
   2 220 831  47  28 572 879  10 749 107 785  29 696 836 876  14 789 854  64 413 605  24 828 794 474 869 232 700 116  72

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.23997e+06us (= 3239.97ms, 3.23997s)
Wall-clock time (full program): 3.29305e+06us (= 3293.05ms, 3.29305s)
Satisfaction error: 0
Number of search iterations: 1894
Number of local moves: 1056 (including on plateau: 390)
Number of local minimum: 102 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15239
Total number of local moves: 8341 (including on plateau: 3999)
Total number of local minimum: 919 (including on plateau: 299)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 895 788  63 841  60 774 797 866  75 257  48 701 125  44 221 782 642 115 132 462 162 825 190 736 170 205 730 822 114 873
 113 270  94 891 135 800 123 886  36  80  54 674  97  71 783 459 703  56 814 106 892  98 896 610 887 899 592 816 446 134
 897 509   6 877 741 722 743 737 189  58 236 629  10  77 867 229 881  64 661  19 346 235 890  78 200 835 586 875 223  95
  14 709  65 487 150 677  93 849 126 227 124 712  62 208 858 225 141 167 728 504 638 862 900 648 176 793 883 846 185 458
 136 594 159 175 796 684  59 720 156 704  39 608 318  73 829 781 573 267 876 151 803 628 139 122 864 219 193 792 172 885
 634 666 843 543 155 585 149 524 154 202 157 845 153 181 735 882 871  79 828 174 565 178 105 690 152 633 182 780  86 784
  82 751 203 857  85 880 689 525  42 228 863 613 197 234 785 611 274 599 832 312 259 186 288 879 217 240 794 245 194 551
 216 807 233 161 568 682 243 819 344 120 327 813 239 290 715 298 643 325 778 230 422 307 765 859 238 251 772 231 101 718
 275 620 166 278 286 724 851 512 856 884 224 870 130 330 826 336 776 128 770 204 244 265 183 745 195 294 360 321 260 602
 252 262 263 443 414 665 748 480 220 894 187 811 370 311 663 893 268 201 571 264 405 282 310 266 343 345 760 249 622 753
 256 799 349 861 398 786 271 258 391 255 874 668 299 341 376 322 676 279 378 287 337 452 253 606 269 331 707 339 389 708
 358 681 457 192 242 619 888 640 332 320 388 697 296 198 440 368 597 329 304 645 434 357 241 291 400 377 436 889 301 798
 625 295 303 328 364 808 802 215 323 326 395 386 878 247 428 319 292 455 413 461 237 356 390 314 637 530 831 419 646 492
 471 392 415 397 387 463 375 898 427 460 383 412 425 507 254 840 560 564 340 289 522 401 479 572 559 350 293 284 454 342
 515 394 372 444 553 603 420 324 408 380 451 456 206 590 410 426 453 362 281 839 505 470 315 464 409 366 381 496 374 848
 407 538 433 317 396 363 517 562 382 384 508 500 478 575 514 371 544 529 431 393 367 445 472 561 369 423 535 483 468 250
  68 404 432 439 435 518 421 442 499 495 475 448 519 338 429 473 555 503 365 418 600 493 596 579 403 549 545 196 527 351
 587 491 574 226 534  34 636 554 399 498 490 305 581 537 477 469 145 447 379 649  21 548 474 511 607 653 605 417 354 313
 406 118 650 567 416 110 557  81 727 632 510 280 618 528 691 654 621 563 335 438  25 631 641 482 546 300 539 550   2 297
 635 547 589 485 657 361 569 103 578 588  23 163 359 536 465 612 209 540 670  47 199 671 675 533 513 532 131 520 658 347
 725   1 651 148 627 248 604 184 552  13 598 437 626 721 137 761 277 556 566 558 213 486 678  27 655 790 467 542 523 144
 614 121 541 662 449  35 334 430 679 630 639 129 582 692 506  92 127 526 652 705 750   8  72 502 624 450 348 698 696 222
 623   3 570 580 821 352  31 742 667 669 769 180 746 731 316  41 373 683   7 489  40 847 609 140 617 749 207   5 744 164
 516  61 494 680 501 104 133 754 815 719 214  67 830 656  66 779  99 714  33 729 791 752 211  46 686 660  45 591 484 285
 102 276 869 644 818 138 308  89 673 601 763  51 584 664  15  57  53 576 142 688 695 713 659 726 232 188  84 747 777 583
 710 177 865 593  22 497 411  74 844 739 441 117 733 700 302  16 179 740 168 616 577 694 711 116 805  18  29 158 764 699
 738 853 766 119 773 109 647  49 333 488 860 273 757 672 191 147 838 685 355 466 789   9 165 246 111 687 385  88 756 160
  55 424 521  83 820 100 595  17 723  37 804 143 734 824 112 850 716 872 173 768 812 827  30 706 108  38 693  43 855  32
 767 795 810  26  70  24  20  90 833 775 837 309 762 868  28 212 146 836 272 817 854 402 476 107 806  52 306  69 531 615
 823 169 759 171 842  50 481  91 732 852 834 218 801 771  76 210 283 755 261 787  11  87 702 353 717 758  96   4 809  12

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.33493e+06us (= 2334.93ms, 2.33493s)
Wall-clock time (full program): 2.38837e+06us (= 2388.37ms, 2.38837s)
Satisfaction error: 0
Number of search iterations: 1168
Number of local moves: 753 (including on plateau: 219)
Number of local minimum: 52 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7936
Total number of local moves: 6177 (including on plateau: 1994)
Total number of local minimum: 389 (including on plateau: 176)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  30 198  57 180  84 720 248 779 103 819 735 824 818 174 264 754 829  45 789 780 811 371 857 327 113 847  40 835  55  29
  35 253 258 215 127  24 167 797 778 161 124  93 145 742 166 809 615 183 817 772 292 766 820 231 155 799 846 830 784 711
 750 751 326 163   2 307 100  22 839 856 172 764 272 112 743 831 633   8 787 739 277 802 737 273 109 666 730 286 263 195
 770 716 140 407 727   1 796 287 271 776   7  65 791 724 247 822 123  38 661 752  16 691 851  69  97 838  39 795 221 777
 701 511 242 721   5  44 706 803 233 131 758  46 769 653  83 669 800  14 736 438 728 641 804  43  33  48 637 461 245 812
 694  26 125 193 150 442  10 718 147 529  15 346 744 235 256 657 664 617 581 434 733 503 647 199 220 649 801 693 702 785
 704 710  36 707 767 658  28 605 676 144 683   9 713  79  25 616  27 680 445 121 749 673 853 128 306 682 714  75 154 748
 675  20 310 107 621 411 689  34 686 119 608 670 599 679  77 806 747 763 697 244 668  18  23 347  19 360 674 625 656 563
 629 586 111 729 519 645 705  74   3 149 620 698 712 479 353 685 276 760 731 135 590 655 544 110 334  41 585  76 241 740
 626 726  54 504 485 660 667 659 568 137 607  32 486 520  31 692 214 583 584 261 133 636 644 311 405 370 589 703  17 611
 308 546   6 576 513 249 558 604 530 600 490 619 481 687 623 635 212 234 663 364 532  49 499  90  12 678 652 579 455 471
 639 610 477 708 358 572 429 690 516 441 274 126 700 602 603 597 376 646  11  59 466 577 428 151 363 421 472 117 480 606
 495 688 333 591 613 565 506 512 624 545 555   4  42 521 537 528  70 594 543 265 509 538 494 293 211 522 450 392 482 493
 612 478 269 514 595 552 508 491 423 380 531 580 547 430 553 402  13 542 323  21 446 578 425 335 501 415 561 536 403 551
 601 502 444 404 505 487 431 500 338 345 433 398 630 469 526 439 452 533 406 309 473 569 634 359 329 230 451 437 419 462
 396 741 475 422 564 525 418 340 534 401 566 448 355 393 373 410 476 463 467 497 394 432 527 443 255 414 474 420 456 436
 344 280 369 465 489 435 343 321 447 681 573 550 408 874 391 559 440 507 765 484 382 351 301 379 665 332 285 328 378 389
 387 366 855 862 560 892 341 354 424 299 427 296 453 397 352 257 871 642 412 384 339 587 268 449 628 281 317 209 302 304
 567 325 549 266 464 746 377 283 457 385 416 868 399 336 312 192 832 381 815 540 284 375 357 518 618 202 723 303 237 388
 458 390 316 865 386 571 882 254 622 177 483 648 196 342 288 454 383 395 417 348 297 374 243 863 695 409 349 426 745 239
 324 753 889 252 315 367 262 259 861 523 330 510 275 240 854 331 498 228 170 837 825 132 300 826 790 696 251 219 207 191
 218 305 833 845 158 361 159 574 805 356 337 181 878 201 816 194 313 289 184 627 250 891 368 640 841 314 270 210 859 238
 227 807 582 872 279 188 179 879 232 175 350 298 204 134 866 291 290 118 320 738 322 203 860 775 588 792 318 643 759 226
 782 206 756 372 216 575 894 157 319 562 236 827 122 798 662 225 468 294  71 699 186 295 260 810 842 136 156 684 732 173
 492  78 762  47 153 365 887 213 187 715 190 844  86 823 593 217 896 650 176 556 609 200 246 867 592  73 870 229 632 267
 108 139 771 834 517 224 885  91  87 672 282 671 222 881 719 168 828 788 116 557 138 278  92 570 614 884 160 459 631 129
 223 106 757 535 808  89 890 400 761 877  88 548  62 114 852  82 488 858 189 734 152 164 178 821 781 554 208 888 162 146
 165 120 898  72 836 101 197 794 850 840 849 651 460 677 171  60  61 768  58 143 148  98 104 848 899 755  53 773 169 897
 142 869 793  50 886 875 185 141 130 515 900 362 883 105 541  66 524 814 496  81 873 598  52 654 717  56 115 102 895  95
 413 709 722  37 813 864  68 880  64 205 876 539  63  94 638  67  96  80  85 596 893 470  99 786 783  51 725 182 774 843

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.12938e+06us (= 3129.38ms, 3.12938s)
Wall-clock time (full program): 3.18375e+06us (= 3183.75ms, 3.18375s)
Satisfaction error: 0
Number of search iterations: 1848
Number of local moves: 936 (including on plateau: 332)
Number of local minimum: 152 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13660
Total number of local moves: 8488 (including on plateau: 3988)
Total number of local minimum: 755 (including on plateau: 322)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 894 847 768  77 900 508 140 391 682 150 105 828 854 783  59 725 619  36 829 896 168  90 103 765 177 576 115 125 241  64
 280  68 757  50  49 123 891 153 806 844 779 129 640 762 848 661  66 131 607 193 645  45  98 734 761 875 471 148 863  38
 532 108 515  65  39 185 200 781 874 142  78 139 562 655 867 837 667  61 834  67 881 726  75 769 176 858 695 872 192  63
 285 209  96 888 598 730 869 857 589 138 425 871 165 808 866 605  89 175 750  55  99  71 133 885  85 694 630 121 636  93
 583 201 191 455 898 666  79 427 831  83  94 838 561 759 527 810 195 170 889 159 187 697 160 821 152 897 774 156 158  97
 754 132 239 188  73 225 196 650 882 122 232 782 204 873 393 840 194 429 749 217 221 147 884 851 835 303 880  69 663 288
 189 186 302 672  84 802 183 673 118 360 263 711 818 794  91 832 229 212 483 261 199 886 184 795 206 785 862 309 772 254
 809 367 887 357 211 664 136 849 169 226 264 830 262 305  70 789 256 312 300 210 313 233 824 797 291 899 788 307 521 269
 286 218 126 287 637 400 586 590 816 155 320 551 892 727 161 859 293 275 487 386 301 722 296 615 102 260 877 182 800 308
 266 311 238 282 101 372 236 839 707 710 390 632 807 813 321 747 215  81 717 351 895 379 353 638 220 244 251 222 883 294
 893 127 861 272 343 350 475 526 314 243 332 778 325 472 330 252 340 253 702 823 366 444 198 601 409 316 737 368 784 281
 434 180 418 257 753 594 404 361 478 371 582 501 354 323 383 596 278 780 890 363 289 432 446 588 364 438 297 440 622 299
 417 283 317 766 203 273 407 395 348 336 459 495 792 416 347 451 365 599 735 337 207 575 480 703 112 453 712 342 868 322
 375 738 397 516 441 468 345 448 335 341 413 467 422 510 476 520 878 267 450 498 327 334 585 274 349 456 402 509 477 497
 329 412 457 814 430 436 569 208 315 258 324 488 396 419 414 384 452 524 356 493 820 415 435 443 445 411 454 852 370 392
 469 692 276 517 523 578 376 279 352 518 181 540 403 690 179 503 373 506 143 580 641 338 492 249 513 566 473 505 574 486
 319 581 484 166 538 157 107 502 490 426 401 494 465 387 698 380 388 255 491 572 674 439 499 389 563 474 410 621 553 592
 670 423 420 137 522 362 292 558 537 318 496 544 449  12 326 504 629 559 385 431 481 552 406 259 570 437 462 657 507 610
 746 466 541 529 464 543 534 130 568 642 398  22  92 394 609 571 511 290 378 587 623 549 604  87 567 643 113 489  86 739
   4 662 533 659  80 564 686 531 550 556 162 539  57 613 535 213  32 514 600 669 760 500 479  21 635 482 554 542 237 546
 424 421 565 433 678 149 602 512 519   6 764 106 545 408 530 224 668 656 248 617  51 460 676 242 618 573 461 606 141 612
 742 736 660 646 442 557 709 704   3 584  46 577 374   1 683 234 654 298 235 628 796  53 579 680 333  25  47 723 135 631
 114 620 624 731 310 591 787 100 626 755 677 240 163 250 652 190 805 729  48 634 528  31  18 306 801 597  60 616 197 715
 120 614 713 693 748 548  20  72 216 708 633 110 245 665 648  43 470 555 428 649 593 681  40 525 752  62 304 603 271 786
 627 685   7 679 536   2 647 227 154 684 720 399  35  10 560  15 625 870 458 671 744 608 687 134  44 611 128 651 485 812
 595 776 741 644 381 728 763 377  14 689 804  76 777  24 691  37  29 775  54 146 853 447 819  88 164  41 230 714 205 833
 223 864 339 382 688 171 756 104 219 791 716 265 701  11  28 295 803 850  30 270  58 743 740  56 758 358 706 815  42 733
 109 721   8 172 817 247 547 346 639 836 876 124 790 284 331 144 843 675  33 705 745 732 798  17 826  13 231   9 178 719
 658  74 268 463 855 700 117 751 359 696 811 405 151  19 119 228 724 799 111 202  27 842 653  16 846  52 145 860 699 865
 369 793 767 718 173 822 856 174   5 827 770  34 214 328 773  26 825 879  95 845  23 344 771 167 841 116 246  82 355 277

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.48355e+06us (= 2483.55ms, 2.48355s)
Wall-clock time (full program): 2.53695e+06us (= 2536.95ms, 2.53695s)
Satisfaction error: 0
Number of search iterations: 1162
Number of local moves: 918 (including on plateau: 446)
Number of local minimum: 77 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9249
Total number of local moves: 7498 (including on plateau: 3655)
Total number of local minimum: 312 (including on plateau: 260)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 722 101  33 376 898 733 802  85 772 847 118 556 771 356  51  38  19 726 745 122 145 831  43 109 777 890  68  93 792 896
 895 495  20 886 151 709 830  71 787 818  11 585 758 380  55  35  84 125 807 630  37 723 225  36 879 853  17  95 892 626
 167 142 679 744  64 541 736 116 875 819  32 796  69 487  89 104  65 829 884 742 665 724 100 815 872 877 131  83  99 169
 661 900  34 857 108 586 880 158 842 697 132 531 798 706  82  42  87 371 883 855  80 683 258 144 887 326 177 485 141 124
 795 149 105 700 182 653 889  98 826 822  31 841 203 543 192 204 137 168 862 387 162 874 138 227 675 897 114 645 146 850
 687 110 344 768 106 881 269  44 671 716 128 690 160 553 660 194 171 833 885 848 190 794 340 217 535 148 156 416 338 663
 836 894 159 776 291 808 878 191 348 587 135 821 188 805 246 264 245 161 209 812 134 751 561  94 641 107 205 528 662 178
 532 218 201 606 183 704 590 873 788 876 297 689 249 624 253 270 310 170 261 888 186 608 433 195 694 341 184 793 323 176
 676 224 155 655 285 672 299 282 668 790 223 868 211 695 360 197 257 181 303 735 266 899 618 237 212 306 806 865 318 252
 650 322 307 580 210 770 314 331 289 483 438 810 840 804 175 278 273 828 313 696 506 743 248 267 304 260 284 740 220 232
 305 126 350 589 354 756 311 610 414 644 846 816 364 674 367 397 254 256 336 616 280 290 669 337 319 400 288 859 287 401
 588 230 330 575 283 638 346 648 275 636 349 508 382 760 432 385 309 251 594 410 236 293 244 386 405 286 420 764 766 786
 677 482 300 572 446 461 454 714 334 372 538 622 773 765 233 374 554 366 368 447 375 328 317 412 315 361 370 623 333 229
 406 521 427 544 365 477 517 324 657 424 500 620 359 347 335 325 411 494 377 379 451 563 396 398 436 537 295 849 355 426
 384 357 421 484 399 525 481 320 369 423 488 419 513 390 404 565 429 392 440 449 444 402 413 893 439 491 378 478 435 490
 496 403 437 381 493 473   5 445 388 533 395 546 418 524 633 469 458 516 471 562 363 555 450 219 558 464 497 389 601 373
 468 408 551 428 474 417 548 489 512 430 459 501 434 479 498  30 425 598 443 358 431  56 504 422 486 457 566 574 604 465
 547 520 514 327 523 281 462 510 559 475 499 213 466 152 519 584 522  52 492 579 539 625  77 592 442 515 511 321 527 570
 173 505 509 383 628 121 599 476 545 329 549 470 518 202 568 583 351 576 130 332 472 631 180 567 596 635 619 174 467 627
 352 642 460 339 560 294 609 615 316 308 640  22 597 235 503 550 678 680 611 115 666 529  45 536 163 629 530 250 534 507
 208 652 542 296 753 603 557 581 573 651 480  48 526 139 593 681 685 607 394 247  25 165 688 569 143 577 441  58 455 578
 255 612 613 239 540 302 259 643 452 185 692  60 646  57  40 686 456 703 595 658 637   7 719 617 670 621 571 234 654  92
 564 634 693 243 664 147   3 407 277 127 656 119 649 342 747 591 707 734 763  91 713 129  16 647 196 752 659 298 242 705
 391 600 699 179 728 117  14 673 206 120 639 216 682 362 614 727 702  72 729   4 739 157 803 632 140 701 775 279 718  97
 187 817 711 214 602  27   6 409  15   8 769 133  61 274 823 757 827 732  26 552 750 222 785 799 605 754 691 228  21 710
  29 684 789  75   9  24 737 800 301 113 720 164 276 262 834 871 780   2  41 112 791 226 811 741 698 103 778 193 813 738
  47 839 837 502 712 189  23 761  50  63 844 231 343 345 838 755 784 582 353 312 746  39 820 759  59  70 453 272 715 172
  76 801 717  28 809 268 797 762 153  90 725 111  49 240 774 866 824 730 102 241 782 263 867  18 150  78 854 393 166 781
 731  74 870  88 832 265 221 215 199  62 415 238 463 721 814 858 851 779  12 200 843 198 856 882  96  13 852 667  46 154
  10  53 708  81 863  73  79 864  54  67 767 271 749 292 783 835 860   1  86 136 861 207 891 748 123  66 825 869 845 448

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.04719e+06us (= 2047.19ms, 2.04719s)
Wall-clock time (full program): 2.10104e+06us (= 2101.04ms, 2.10104s)
Satisfaction error: 0
Number of search iterations: 828
Number of local moves: 622 (including on plateau: 168)
Number of local minimum: 40 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6634
Total number of local moves: 5840 (including on plateau: 1683)
Total number of local minimum: 172 (including on plateau: 128)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 868 463 654 894 715  50  60  20 630 881 723 677 693  99  35 774  90  26 130 558  85 798 752 857 895 758 101  74  83  72
 781 190 816 764 850 117  38 107  36 829 141 708 653 100  79 165 132 103 105 838  68 128  63 682 892 784 898 864 862 722
 626 869 620 849 782  56  69  93  53 759 429 800 651  58  30 877  81 112  22 767  70 169 198 879 701 753 736  67 472 867
 836 118 746 476 253  23  55 131 671 872 655 613 888 156 287 856  34 146  97 808 109 770 170 805 293 834 889 202  31 691
 754 262 787 234 900 163 119 189 106 172 778 597 823  64 240 218 152 223 880 788  87 768 795 776 186 878 219 236 239 882
 861 594 790 860 200 891  98 286 185 201 719 804 513 191 257 173  86 197 181 813 135 592 282 883 497 623 194 419 127 863
 794 756 270 195 321 179 890 315 793 332 896 815 796 153 136 273 166 250 182 844 196 252 666 488 274 810 791 224 193 265
 772 665 661 208 133 249 728 676 148 126 683 657 824 305 275 307 211 757 406 706  71 124 848 833 266 479 229 174 168 826
 258 248 292 209 214 378 814 886 647 241 704 762 803 345 335 221 277 217 435 619 212 775 348 586 216 686 320 446 215 806
 311 571 696 349 206 238 821 299 750 792 237 743 624 334 242 411 294 344 267 675 855 341 210 669 244 581 231 235  94 851
 385 858 276 384 297 818 831 346 744 227 897 570 296 207 260 147 125 233 259 441 373 832 702 698 289 599 386 353 326 356
 366 563 271 263 350 364 797 380 498 184 281 494 365 261 548 283 372 309 887 582 376 452 690 699 374 673 269 445 370 749
 393 532 303 412 264 403 487 566 483 451 388 615 414 484 511 381 359 508 569 637 396 360 361 561 391 610 496 340 418 422
 369 424 290 328 319 387 786 358 516 383 495 567 410 363 329 368 377 327 544 438 545 500 423 481 609 439 899 389 402 450
 312 354 420 323 492 379 444 468 362 474 493 506 456 518 533 392 428 355 308 540 482 703 486 449 339 530 606 447 591 325
 547 521 442 440 394 510 460 469 490 529 425 520 457 375 505 407 554 514 466 515 467   9 436 517 427 527 298 272 491 531
 461 485 471 499 397 489 573 351 477 631 322 464 405 367 390  61 552 524 465 268 556 595 633 400 431 280 459 480 525 504
 611 416  45 473 636 448 596 134 574 602 512 324 535 625 426 718 543 478 434 395 536 526 433 413 145 255 695  16 550 421
 670  73 502 617 470 710 523 538  77 453 541 357 503 509 640 635 583 539  91 347 668 614  49 301 572 306  13 542 565 507
 590 129 564 644 627 475 251 534  21 721  76 432 607 578 585 537 652 593 562 330 656  92 642 247 616 246  29 681 519 279
 579 546 575 167 632 660 382 437 408  14 205 291 310 587 559 522 589 639 725 316 398 688  15 199 560 222 458 553 711 568
 621 314   7 634 588 820 662 650 401 732  17 295 158 600 740 622 680 555 557 178 612  57 300 177 142 285 689 577 761  84
  39 149 773 648 584 336 709 430 220 580 104 232 171 551 102 720 737 663 598 176 692 733 254  59 763 213 684 766 678 151
   2 115 687 714 717 745 443 608 462 313 188   1  66 707 659 802 755 603 751 140 672 641 338   4 713 157   5 649 748 110
  88 700  62 741 629 399 228 712 779 604 111  24 154 801 638 674 780 735 404 230 705  40 729  95  82  48 605 738 724 256
  47 455 143 113  27 618 317 785 685 727 809 138 122 739 871  41 769 679 667  43 842 337 164  80 835 501 225 734 827 175
 333 645 760 139  52 812 304 697 628  37  89 161 183 859 876 549 726 371  18 159 830 643 664 187  75  96 646 852 846 278
  12 731 343  44 789 819 331 601 783 528 825  65 284 874 841 409 742 777 853 302 694  54 817 150  32 114 415  10 160 116
   3 417 243  28  19 799 245 873 765  42 747 121 318 865 716 144 847 884 807  51 288 192 843 203 885 108 875 837   8 342
 226 352   6 866 658 180 454 576 123  78  25 162  33 840 870 828 822 854 845  11 839 730 204 137 771 120 155 893 811  46

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.08859e+06us (= 3088.59ms, 3.08859s)
Wall-clock time (full program): 3.1429e+06us (= 3142.9ms, 3.1429s)
Satisfaction error: 0
Number of search iterations: 1651
Number of local moves: 1063 (including on plateau: 515)
Number of local minimum: 80 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13321
Total number of local moves: 8757 (including on plateau: 4572)
Total number of local minimum: 681 (including on plateau: 349)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 500 176 144  37 688 130 439  74 435 753 765 896 685 103 733 757 222 569 893 878 677  73 102 758 782 219 660 164  54 149
  66 785 187 889 713  42 171 158 604 891 666 863 596  87 228 395 515 613 123 845 101 890 151 109 125 545 793  36 887 441
  82 574 112  52 866  90  96  85 568 839 738 789 633  79 155 876 524 161 676 737 146 894  98 798  51 885 790 250 239 632
  67 235 137 882 647 721 693 165 169 880 895  92 833  83 899 835 645  60 114 801 591 622 167 813 129 113 148 160  88 831
  59 638 251 492 614  43 192 636 715 690 772 847 592  75 152 786 401 488 590 746 172 877 183 562  86 190 743 200 256 467
 281 886 827 330 244 542  77  95 147 274 617 143 599 197 843 770 433 226 726 763 214 271 201 252 900 493 881 224 312 747
 135 120 288 185 776 397 794 283 299 519 394 157 714 131 655 807 858 318 892 576 170 265 153 888 351 699 773 247 141 530
 140 242 883 177 867 339  81 862 238 635 150 195 860 139 162 815 648 434 778 564 605 277 298 348 249 475 717 269 243 825
 365 463 138 541 856 107 367 230 748 566 324 278 828 188 211 703 864 327 708 220 323 854 289 179 241 460 670 261 370 836
 258 232 834 322 850 202 520 215 163 792 115 262 898 198 320 543 532 656 581 234 897 285 267 180 321 805 777 229 387 640
 248 560 373 712 236 309 316 377 447 346 873 282 332 210 290 744 750 371 705 354 233 352 268 809 739 294 606 273 264 842
 307 364 505 552 331 328 374 293 363 868 342 869 375 507 304 297 405 837 430 336 453 279 404 319 406 540 742 523 480 382
 418 345 357 643 306 260 359 455 427 347 329 428 771 485 816 308 458 315 686 675 360 384 349 335 310 762 369 338 389 731
 333 400 300 425 376 481 413 295 275 619 452 871 385 459 341 372 353 572 423 223 508 402 872 874 416 437 381 410 448 399
 280 412 407 490 326 325 583 646 343 501 388 615 499 471 340 473 527 567 551 494 538 445 450 477 630 361 504 390 449  33
 426 391 334 497 443 489 456 486 159 253 522 396 496 424 516 588 465 589 292 408 509 429 483 432 362 578 553 593 535 411
 393 311 398 291 526 609 380 419 546 672 513 422  12 414 491 528 577  57 470 536 495 403 548 457 440 409 654 421 657 466
 575 386 438 154 454 484 506 534 658 502 469 529 558 468 582 464 106   6 378 474 651 602 537 420 510 431 525 531 472 111
 565 108 554 217 557 663 303 451 639  68 498 518 358 659 392 555  16 203 533 673 671 584 479 679 487 218 547 514 579 227
 580  41 478 511 585 296 608 594  64 653 571 680 563 668 641 628 105 476 482 168 550 549 626 444 512 276  26 600 446  94
 707 556 610 216 503 683 442 665 642 209 667 601 142 559 662 286  56 436 521 621 116 661 544   1 612   3 182 795 756  61
 684 597 598 313   9 644 607 682 191  97 652 745  63 791 461 156 207 616 118 611  22 175 650 595 587 691 255 769 725 204
 810 625 706 133 117 603 803  20 573 173 368  17  44 768 620 189 379 208 166  72 720 649 695 618 804 623 272 722 752 266
 570 631 704 701 186 729  53 687 735 700  48 284 127 698  50 136 539 709 355 100 664 366 779  91 561  93 213 787 802 417
 710 727 812 415  28  30 728 846  15 128 259 723 194 629  80  78 317 697 221 755 730 231 781 724  39 689 122 586 759 462
 761 178 736 796  34 774 799 716 624 121  89 734 305 808 841  45 696 669 126  84  49  18 637  47 780 196  46 766 783 257
 859 784 718 830 749 788 818 823 350  62 104  29 132 678 754  23  24 870  14 240 692 702 851   7 124 145  76 821  65 383
 741  40 517 634  21 849 110 806 681  71  11  38 314 848 193  58 212 740 760 119 819 767 797 237 879 356 184   8 865 840
 751 824  70 246 344 732 627 206 822  32 205 199 337 853  19 245 820 694 134  27 814  35 852 775 225 674   5 817 302 829
 844 884  99 832 263 826 800 711 875 254 719  13 270 838 764  55 861  31  69 181  25 174   4 287 857 855 301 811  10   2

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.32564e+06us (= 2325.64ms, 2.32564s)
Wall-clock time (full program): 2.37873e+06us (= 2378.73ms, 2.37873s)
Satisfaction error: 0
Number of search iterations: 1085
Number of local moves: 800 (including on plateau: 388)
Number of local minimum: 31 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8541
Total number of local moves: 6078 (including on plateau: 2381)
Total number of local minimum: 351 (including on plateau: 162)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 885 244 720 776  99 852  60 870 551  87 594 874 654 875 129  80  97 138 619 829  55 533  37 271 237 591  38 718 112 890
 694 100 774 882  74 872  48 693 368  23 879 862 222 109 173 103 860  91 740 855 216 572 128 108 896 706  36 516 893  22
 837 788  53 119 131 126 245 590 817  89 899 832 616 719  46 117 878 710 523 565  56 241 223 163 716 462   5 859 195 895
 566 703 744 898 106 839   8 306 552 215 883 897 571 105 176 107 782  43 493 799 503 854 104 189 887 213  33 683 113 143
 626 838 765 743 476 848  59 174 805 141 822 170 792 140 317 136  61 886 758 167 518 232 234  24 752 892  93 756 179 111
 556 182 630 851 891 114  88 514 641 502 861 240 605 273 259 133 871 815 731 739 185 818 296 253 169 217  81 521 323 156
 732 800 771 726 208 139 881 238 701 270 490 214 857 279  63 386 204 120 810 797 576 869 116 877 262 257 302 242 206 122
 696 803 786 876 144 164 265 142 329 263 574 772 748 252  64  34 192 845 669 809 884 849 256 276 161 233 471 275 251 432
 846 537 268 700 200 690  58 193 868 385 160 190 775 280 504 239 266 411 787 673 795 762  78 766 209 781 309 248 330 207
 575 779 661 187 311 305 682 804 623 463 466 352 823 221 249 285 362 322 826 178 402 495 168 867 225 691 290 218 281 404
 750 293 316 331 228 235 484 856 790 348 292 610 429 320 130 392 224 231 836 889 659 833 260 343 229 791 469 172 310 465
 643 319 327 497 347 425 520 880 287 236 312 649 438 267 301 349 553 378 458 475 866 376 834 403 414 246 247 759 372 337
 844 363 457 389 459 366 570 288 341 450 382 449 464 186 369 205 350 663 583 559 658 489 380 461 339 621 313 767 299 451
 821 278 314 219 410 394 300 391 467 417 755 202 365 528 419 505 888 407 479 375 729 413 416 453 390 793 328 393 454 212
 308 563 284 220 507 338 491 470 436 613 336 374 546 485 900 353 582 581 474 303 499 405 441 472 422 298 481 381 492 460
 318 544 625 517 477 437 399 593 297 194 177 388  90 496 342 675 430 564 448 555 355 356 536 644 487 580 443 530 370 648
 264 603 423 494 359 431 704 531 435 500 226 608 529 442 440 367  32 506 396 538  69 412 426 542 577 595 401 597 501 567
 197 421 510 433 515 444 415 101 261 579 428 588 548 642 532 618 662 508 420 640 354 334 468 488 612  65 668  62 578 424
  21 447 615 678 398 509 406  94 657 614 269  50 568 513 587 455 606 550 452 418  41 596 592 524 534  98 604 547 560 512
  82 665 633 687 677 666 573 162 620 558 115 486 123 589 243 647 695 395  47 294 132 188 728 650 511 645 498  95 631 480
 175 166 147 699 584 473 434 527 181   4 602 545  49 629 599 733 478 540 118 738 121 482 561 636 600 549 637  76 664 768
  72  28 325 569 397 689 709 439  16 634 723 227 125 519 853 680 632 522  73  31 717 154 543 627 715 326 698  19 741 712
  51 409 601 198 628 674 483  17 211 622 789 742  39 685 749 653 692 526  25  92 778  11 725 671 230 124 672 679  79 660
  27 638 155  70 847 535   3 802 199 607  66 639 598 801 585 655 611   6 258  20 557 289 554 737  75 344 812 525 686 814
 361 135  85  40 831 735 656 427 332 617 383 377 291 747 714 770 146 796 134 254 255  68 539 707 171 670 713 721 757  83
 102 624 373 335 751 702 711 777   9 813 295  54 157 825 684 840 159 708 371  96 286 379 828 158 137  26 798  14 676 827
 400 110  10  15 651  67 894 446 785 811 151 180 203 697 780 586 250 283 272  29 734   1 808 184 864 445 763 820 609 667
 277 764 724  18 806  45 761 769 196 842 191 753 340   7 830 681 152 730 201 150 351 360 754  12  84 307 652 794 816 148
 333  13 274   2 850 357 784 364  52 783 324  42 304  77 773 858 635  30 387 562 843 384 736 282 745 541 819 183 315 863
 456 358 145 346 153  44 824  57 688 835  71 149 646 807 705 873 165 210 127  86 321 760 746 727 865 408 841 345 722  35

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.40247e+06us (= 2402.47ms, 2.40247s)
Wall-clock time (full program): 2.45901e+06us (= 2459.01ms, 2.45901s)
Satisfaction error: 0
Number of search iterations: 1153
Number of local moves: 876 (including on plateau: 423)
Number of local minimum: 38 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9131
Total number of local moves: 6725 (including on plateau: 2462)
Total number of local minimum: 391 (including on plateau: 194)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 548 272 711 744 712 768 883 897 456  29 890 838 461 867 203 116 114 658  84  99 150 154 813 135 100 707 127  30  51 898
  68 503 159 661 636  80 784 888 895  85  91 118 811 896 874  53 769 767  79 589 798  46  86 710  70 151  45 217 829 757
 125 781 400 240 793  87 181 563 772 239  47 892 173 876 827 143 657 753  33 169 834 565 733 877 153  92  39 570 152 749
  96 208   6 886 537  95 651 873 814 123 145 157 701 863 848 101 186 709 198 138 741 261 783 464 136 826 823  36 280 830
 728 113  50 600 226 269 723 630 882 619  97 866 561 887 680 184 191 881 533 686 778  94 553 176 108 122 332  61 130 755
 635 121 843 794 215 158 182 731 885 223  90 266 782 137 868  52 846 800 384 218 839 364 290 142 879 787 199 168 117 500
 880 243 862 803 216 214 551 864 810 179 132 104 855 256 729 212 144 738 273 338 844 291 287 360  82 761 439 190  56 802
  81 126 452 362 677 300 719 568 650 174 170 279 762 899 822 339 448 791 389 878 305 610 555 120 105 716  49 163 185 821
 304 393 381 824 698 200 202 638 560 237 147 298 759 155 248 344 196 288 336 642 201 900 851 865 383 856 460 329 195 625
 149 111 253 806 274 281 502 660 607 893  72 326 859 162 238 236 447 693 307 306 779 648 453 387 350 819 268 378 402 849
 276 345 258 351 388 314 506 578 688 374 884 257 850 262 385 527 403 575 325 549 277 260 805 211 251 754 730 292 302 538
 317 255 405 514 320 454 295 587 580 242 423 833 444 283 410 426 193 430 641 586 397 617 333 311 497 828 597 313 394 590
 471 367 592 433 420 327 417 459 593 562 210 372 666 254 431 436 267 627 275 294 357 788 450 335 284 543 628 598 524 535
 860 293 232 303 486 492 396 491 483 366 264 442 516 348 554 498 330 407 467 662 370 675 515 285 342 703 286 392 493 564
 505 746 536 552 395 608 573 582 545 445 616 352 472 308 379 331 421 399 408 328 375 404 432 315 631 513 194 373 458 319
 509 558 512 343 519 655 479 337 354 482 270 526 413 435 653 356 523 369 363 422 517 466 440 386 521 541 322 416 463 365
 480 612 487 401 665 494 484 530 334 601 428 477 507  67 556 465 504 235 434 457 557 446   9 470 418 455 615 525 539 263
 529  73 462 476 604 469 496 205 309 683 382 664  31 559 569 299 674 221 412 705 415 475 478 676 577 602 161 501 359 449
 495 613 574  44 437 724 371 349 341 622 547 585 489 595 594 414 227 624  54 109 614 316 481 508 721 411 596 425 259 376
 380 528 637 245 540 473 681 265 346 591 499 618 427 532 633 649 250 249 451 391 443  23 429 659 581 110 656 546 671  12
 647 522 572 609 584 511 112 204 289  27 700 696   8 790 634 670 544 644 321 282  83 146  69 765 773  71 737 192 894 419
 605 692  43 629 770 668  76 353 361 588 621 626 468 684 297 679 678 488 702 107 213  11 714  13 510  74 229 571 687 358
 725 646  48 172 603 566 103 124  16 606 673 690 128 542 187 704 632 189 801 599 775 220  40 743 485 224 750 872 246 406
 789 520  64  78 745 583  66 438 178 682 645  26 312 639 252 736 758 225 726 296 550 424 611  41 717 175 858 518 748 115
  21 640 706  89 643  42 623 222 228 689 825 219 156 816  55 672   4 164 764 567 368 347 234 763 808 233 777 857 752 231
  62 796 579 180 134 669 760 171 131 720 785 667 167 188  37 747  63 148 694 398 652 771  38 832 576 324 474 734 812 206
 786 715 799 209  20 708 735  34 133 713 301  32  77  28 247 840 780 160 718 230  25 792 804 807 776 141 409 740 732  24
  14 869 831 534  98 817 340  57  75 861 845   1 165  22  19 837 815  35 870 820   7 809 490 751 697 244 742 842   5   3
 739   2 207 310  58 835 531  88  60 663 841 847 318 106  15 727 685  65 774 853  10 756 620 390 166 377 695 871 889  17
 691 852 854 323 102 654  93 129 140 197 875 441 177  59 271 722 766 183 699 797 241 836 119  18 818 355 278 795 891 139

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.63151e+06us (= 2631.51ms, 2.63151s)
Wall-clock time (full program): 2.68851e+06us (= 2688.51ms, 2.68851s)
Satisfaction error: 0
Number of search iterations: 1206
Number of local moves: 622 (including on plateau: 178)
Number of local minimum: 68 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10554
Total number of local moves: 7639 (including on plateau: 3995)
Total number of local minimum: 442 (including on plateau: 270)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  49  46 762  77  68 851 117 757 480 103 877 773  88 896  40 226  36 780 750  89 658 659 749 848  96  76  51 867 759 887
 136 374 840  66  39 763 574 775  70  23 875 652 338 871  43 728 884 156 645 175 579 834 890 786  44  52 129 711 351 112
 171 195 841 623 625 856 892 511  55 123 874 149  75 719  32 122 126 132 703 578 870 704  60 793 201  69 259 889 798 470
 860  98 843 102 262  86 632 801 498 368 849 665 101 768 108  79 271 688 184 183 847 618  56 791 120 173 861 727 697 179
 457 153 755 863 862 140 885 631 367 319 880 526 186 205  33 106 152 760 276 169 581 681 177 824 109 738  35 289 695 661
 866  53 803 157 154 737 200 280 563 199 894 236  42 859  95 285 146 825 810 356 551 758 273 628 436 133 114 608 792 662
 165 869 188 194 517 100 344 785 583 369 647 805 170 886  34 852 158 761 272 185 828 865 424 410 248 222 161 488 774 211
 239 900 882 180 464 250 246 444 770 178 400 197  71 189 322 307 125 360 202 835 354 883 897 311 375 187 437 853 811 846
 242 891 204 208 223 357 644 251 868 234 682 595 212 218 423 150 138 833 822 297 815 898 407 669 142 207 225 266 832 562
 232 378 743 254 257 888 706 361 541 422 601 348 147 359 320 399 292 252 181 335 876 721 287 767 327 879 409 269 393 571
 417 270 284 268 244 182 568 723 497 376 736 245 345 447 318 850 398 291 427 864 627 784 323 309 456 206 275 549 460 776
 404 306 249 353 221 294 329 836 718 219 598 816 438 337 362 796 469 349 340 203 396 449 415 655 237 321 267 899 475 764
 355 505 439 310 253 300 823 326 446 429 371 325 313 332 503 333 649 408 324 390 391 477 230 893 895 414 615 341 434 691
 397 508 339 363 476 468 352 502 420 334 633 274 462 450 443 350 412 347 278 435 509 451 754 499 729 453 418 328 565 566
 342 484 372 282 377 315 389 545 485 573 577 448 554 518 373 343 331 553 358 366 379 538 668 510 584 473 382 493 482 421
 466 471 380 467 507 430 441 496 490 494 452 521 602 416 491 243 384 597 587 385 220 293 478 413 419 395 411 536 474 556
 445 513 256 405 406 547 298 370 463 387 455 512 364 394 489 428 402 486 432 492 386 288 514 564 527 580 501 479 539 593
 567  19 676 612 542 570 519 520 134 265 279 532 531 522 425 561 388 708 667 635 167 301 675 258 552 724 403 442 295  26
 535 540 654 472 572 454 461   3  73 594 261 141 529 589 596 546 591 622 524 523 312  58 585 516 634 592 483 193 286 576
 575 506 586 636 426  91 174  81 231 813 336 621 604 559 533 692 525 712 392  87  17 255 607  50 657 638 515 653 640 303
 159 537 543 679 504 643  28 700  83 238 191 500 534 726 617 530 673 603 613 440 168 224 487 433 800 431 630 144 481 176
 544 605  16 582 799 626 557 192 143 560 166 137 694 629 637  18 555  12 771 772  20 302 678 590 495 641 717 619  92 346
 606 210 648 684 569 687 742 124 558 646 235  31 713 119 701 715 732 787  22 614 151  63 660 281 782 620 548  41 110 116
 744 216 735 806 753 705  15 164 214 642  74 683 674 233 839 789 458   8 690 599  99  21 707 241 670 610 693 172  14 247
 794 671 111 838 162  11 639 651 459 809  90 383 666  78 686 650 600   4 797 739 190 217 228 131 550 844 830  67 155 465
 818 766 148 588   2 616  94 305 264 609  97 139 812 730 827 777 783 304 702 819 699  57 213 209 747 290  10  61 733 296
 802 672 105  13 751 731 227 710 725 745  72 104 781  30 752  93 878 714 198 401 283 135 680   1  38 790 740 624  64 656
 314 778  29 807 842 113  25 330 698 826 121 720 820 308 858 263 277 316 229 716 663 299   5   6 128 855 746 685 127 611
 118 741  37 857 765 677 722 196 788 814 130 689 795  80 734 528 837  65 260 779 664 317   7  45 808  85 829 115  24   9
 696 240  47 769 873  27 872 145 831 804  62 748 854  48 881 756 845  82  59  54 215 365 381  84 709 817 821 107 163 160

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.94217e+06us (= 2942.17ms, 2.94217s)
Wall-clock time (full program): 2.9975e+06us (= 2997.5ms, 2.9975s)
Satisfaction error: 0
Number of search iterations: 1727
Number of local moves: 1019 (including on plateau: 500)
Number of local minimum: 106 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12836
Total number of local moves: 7958 (including on plateau: 3735)
Total number of local minimum: 779 (including on plateau: 285)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   4 870 768 774 887 113 620 165  38 253 258 886  63 189 868 183 349 203 228 882  50 124  13 803 748 879 840 729  30 698
 849 819 112 885 767 271   2 270 742  15 666 871 664 148 530 295 407 224 198 836  54  16 137 832 121 791  32 321 859 781
 825 143  58 889 657 762 292 851 333  17 663  78 799 685 649  89 275 162 155 736 133 197 456 771 874 897 679 341   9  40
 758 222 273  18 845 795  19  94  31 213 396 862 867 747 820  36 350 256 322 823   7 643   8 830 802 719 837  47 740 135
 789 397 287 872 750  60  55  45 139 195 760 876 793 658 761 174 639 277 354 732 157  44 145 452 738 841 834  29  51 611
 826 129 386 568 644  80 136 661 344 720 723 875 744 249 884 263 184 274 212 784   6 132 470 674   1 844 655  11 220 816
 665 673 146 692 786 739  88 801  76 717 366 722 640 116 501  70 170 122 127 831 678 194  68  28 451 517 616 670 635 610
 710 102 558 894 526 202 204 721 688 695 735 555 669 727 288  49 262 260 186 597  42 177 151 301 583 652 660 529  46 746
 599  12 591 634 676 619 152 646 743 629 726 543 766 700 450 169 268  62  26 701 707 393 120 280 307 508 159 724 578  27
 754 618  79 542 525 608 589 379 564 809 659 794 579 128 689 219 107  87  75 549 528 125 539 582 615 633 340  72  48 680
 638 485 138 715 631 704 437 504 567 650 296 687 603 531 577 182  90 158  52  24 482 494 607  81 382 598 675 708 641 178
 506 623  33 381 622 449 290 637 547 454 593 510 432 434 426 233  34 101 239 656 686 458 554 600 305 586 561 552 490 523
 459  91 147 441 486 385 403 556 383 461 496 491 464 592  43 304 478 507 489 653 570 590 534 677  77 596 522 630 469 521
 334 604 445 557 475 562 413 465 309 479 584 574 540 207 414 241 468 418 654   5 512 581 625 380 527 266 471 516 324 565
 566 402 606 518 609 400 585 503 632 519 235 587 612 201 356 298 588 318  65 443 601 537 533 371 187 421 392 447 500 483
 457 410 347 424 376 419 572 337 573 390 492 345 473 254 422 514 436 505 515 538 439 453 613 520 541 440 513 524 428 245
 261 362 495 394 411 487 387 342 404 332 431 800 323 442 377 502 395 718 509 545 536 327 493 406 446 360 855 463 427 285
 375 548 838 335 325 359 401 331 238 368 370 425 749 498 772 553 779 484 355 467 210 481 444 388 725 257 357 415 299 369
 384 293 757 320 339 462 417 255 365 259 416 316 460 180 544 782 763 733 684 408 348 699 317 645 559 423 391 294 399 303
 412 694 302 328 474 231 773 229 351 130 900 435 438 247 313 850 776 835 857 476 291 227 314 858 433 221 372 115 297 336
 346 448 813 367 284 175 745 160 326 873 358 234 312 807 728 535 683 822 668  92 374 651 329 306 667 168 364 361 276 243
 163 863 671 144 319 352 343 315 759 737 308 217 330 864 338 896 798 755 856 246 265 171 672 300 409 230 193 172 466 363
 286 888 281 282 267 215 716 420 571 140 208  96 232 854 188 895 550 569 898 289 353 861 546 713 131 181 614 153 808 310
 192 682 602 237 272 429 248 705 176 662 477  66 104 190 499 852 697 878 880 191 824 626 796 269 389 166  95 283 792 236
 244 141 595 149 250 119 842 142 797 105 594 211  71 196 167 815 575 702 642 109 846 770 551 199 899 216 242 881 714 731
  97 806 785 251 108 812 734 225 311 103 279 173 264 373  59 890 472 696 775  98 751 810 752  41 681  93 205 756 488 627
 111 532 580 161  14 853 821 278 860 741 117  10  53 185 223 628 378 405 693  83 818 200 777 455 114  84 843 892 778 828
  22 154 865 226  73 240 753 883 787 833 134  64 218 829  99 576 647 804 511 480 764 877 621  37  57  39  67 891 712 252
  69 106 118 497  82 765 769 790 150 893 214 209  74 648 100 817  86 617 560 156 780 788 624 691  56 866 110 206 827 847
 814 398 839  20  35 848 709 805 711 123  61   3 179 636 430 605 811 563 730  85 703 869 706  25 690  23  21 783 164 126

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.91337e+06us (= 1913.37ms, 1.91337s)
Wall-clock time (full program): 1.96636e+06us (= 1966.36ms, 1.96636s)
Satisfaction error: 0
Number of search iterations: 793
Number of local moves: 448 (including on plateau: 122)
Number of local minimum: 51 (including on plateau: 6)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5368
Total number of local moves: 4562 (including on plateau: 1131)
Total number of local minimum: 145 (including on plateau: 89)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 300 896  33 855 860 537 104 718 132 856 872  30 133 841 151  29 804  45  84 159 778 691 602 781 854 139  96  41 217 877
 839 789  91 811 157 468 176 166 604 659 842 128  99 563 834 404 150  86  46  52 753 893 651 582   2 144 890 121 874 641
 826 891 322 664 184 628  42 149 143 892 817  57 712 663 692 244 859  76 138 180 863 209 626 554 172 791  31  95 776 219
 541 569  74 832 773 287 197 774 118 865 837 232 301 600 882 206 807 899 233 187 598 107 200 346  38 203 155  90 894 670
 725 723  63 257 879 165  43  67 205 762 825  79 169 686 783 202 772 864 173 215 876 168 352 784  89 858 314 243 486 688
 702 709 189 853 147 900 106 120 224 488 248 115 897 237 713 489 828 175 720 125 786 616 302 539 861 680 191 325 101 129
 764 472 213 267 898 683 238 271 250 793 221 252 204 845 665 473 869 164 491 186 881 546 871 857 183 260 124  71 212 291
 618 669 226 599 137 654 102 888 835 777 573 181 255 849 160 577 744  97 263 131 416 341 875 887 330 568 116 174 280 193
 822 222 630 293 214 690 198 126 760 585 803 561 437 799 282 678 310 357 482 373 304 170 848 329 311 349 262 270 236 814
 798 883 429 436 297 895 247 446 194 281 283 218 299 344 207 810 369 216 716 305 327 370 348 625 351 785 356 321 515 844
 818 372 275 362 303 687 292 385 272 389 425 142 261 444 889 328 246 391 526 364 396 660 847 640 840 642 333 240 338 408
 401 318 733 320 266 672 353 277 307 409 430 355 402 463 410 843 724 286 850 337 623 829 229 371 242 770 407 201 223 464
 366 317 547 484 471 315 477 379 358 326 456 345 462 390 342 851 285 383 475 498 227 824 323 367 459 607 481 387 428 885
 368 343 677 727 400 395 308 380 483 340 445 476 467 417 550 527 388 768 265 363 452 458 359 457 532 492 469 403 522 284
 502 393 548 394 306 365 384 405 420 378 478 377 480 324 501 531 336 536 542 575 433 749 431 594 382 424 411 331 461 524
 454 440 593 332 530 494 374 386 595 517 455 507 535 335 499 220 474 412 426 506 487 438 566 195 347 497 479 505 406 511
 538 423 470 256 549 413 427 415 485 449 490 588 418 545 521 533 525 361 398 419 397 516 414 584 574 514 432 500   1 360
 273 518 295 529 513  49 523 614 453 465 556 576 493 661 495  75 631 448 235 732 510 562 105 190 558 611 633 509 685  18
  82 145 589 583 655 567 658 565 508 590 376 571 544 141 649  34 442 648 731 434 596 108 572  23   3 254 652 591 647 557
 504 540 422 503 435 288 643 528 350 496 113 586 581 177 249 182 603 520 210  40 552 309 543 645 620 316 632 634 597 697
 460 264 392 656 553 290 700 671 579  72 613 447 794  64 123 136 650 555 179 721 185 251 636  94 519 560 592 635 612 512
 441 451 551  53 580 122 729 719   8 615 156 758 717 629 117 188 704 610 738 639 609  47 199 163 619 208 722 684 605 134
 171 587 268 167 699 666 780  19 601  51 715 743 682 624 130 334  24 578  28 608 638 312  98 739 707 443 775 564 748  16
 231  58 710 245 676 111 675 679 771 153 606 627 617  32  59 708 298 880 728 750   6 421  65 289 570 278 755 833 673  11
 258 534 689   5 192  25 693  60 782 228 559 742  26 703 646 726 127 644 622 681  66 399 253  36 637 450 696 674 667 695
 259 196 819 152 886 294 806 706 808  61  83 787 714 114  93 796 148 852 439 747 621 668 234 763 319  12  10 870 100 158
 239 230 866 831  50 276 797 701 746 140  54 757 178  37 734 381 135 790 805 767   4  35 751  92 745 103 815 730  21 705
 112 339  87  44 737 740 698 792  48 154 109 752  14 225 756 779  85  81 795 788  68 846 800 162 812 711  39 836 827 279
  88 211 884 269  22  78 867 868 735  62  20 653 823  69  70 765  17  27 375 820  56 862 296 754 759 769 809 821   9 657
  15  13 830 736 146 761 878 241 741 662  55 873 801 694 313 466 161 766 802 813   7 110 119  73  80  77 838 816 354 274

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.98019e+06us (= 1980.19ms, 1.98019s)
Wall-clock time (full program): 2.0344e+06us (= 2034.4ms, 2.0344s)
Satisfaction error: 0
Number of search iterations: 844
Number of local moves: 621 (including on plateau: 204)
Number of local minimum: 32 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6081
Total number of local moves: 5409 (including on plateau: 1855)
Total number of local minimum: 155 (including on plateau: 149)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 706  66 876 885 829 842 174  30 820 671 874 684  46 889 700 208 130 647  96  71  79  20 649  55 648 707 152 814  31 116
  77  50 867 894  69 756 769  87 690 847 642 468 173 325 669 104 729 597 156 265  72 657 777  26 692  99  74 837 888 159
  54  44 117 886 169 857 566 110 794 887 701 215 465 727 728  85 724 660 487 148 166 587 720 157 634 125 108 691 875  28
  17 185 195  33  81 850 840 178 792 561 693 759 871 742 785  65 856 772  64  83  35 517 735 103 189 204 633 796 141 740
  29 198 630  78 883 864 122 722 845 537 737 202 124 862 703  37 852 819 190 181 326 328 818  92 589 674 602  52 206 213
 200 250 232 155  84 897 834 330 860 717 808 877 144 621 694 158 881 795 115 557  97 816 224 281 276 228 879 186 118 201
 323 139 631 244 154 891 893 225 340 899 895  70 184 695 663 217 151 629 245 416 271 900 882 826 282 216 696 164 209 165
 176 292 615 220 314 507 662 843 274 866 709 267 138 832 744 255 132 844 136 100 128 803 872 374 786 283 689 277 150 227
 275 196 298 163 395 598 665 513 896 466 825 333 210 898 677 153 775 608 218 230 317 865 214 222 603 299 718 514 318  53
 682 270 415 308 269 761 134 773 788 316 676 296 140 799 851 342 259 802 293 273 797 383 239 339 609 425 191 366 417 302
 565 387 252 349 177 495 822 312 542 345 386 431 261 363 544 406 315 672 251 892 257 306 133 372 423 878 771 884 404 320
 389 234 447 365 434 680 716 301 675 377 341 801 409 371 268 321 391 659 730 411 410 327 403 401 420 478 688 380 379 309
 414 350 452 263 469 451 855 426 384 382 408 286 824 453 348 421 338 553 248 427 858 356 358 438 890 337 543 329 256 398
 347 332 436 454 294 407 397 354 368 551 413 529 443 563 731 396 681 388 471 390 500 448 484 334 344 310 880 370 593 307
 439 491 449 359 424 394 355 288 373 467 547 405 369 375 481 272 503 303 279 291 400 564 524 702 508 502 869 492 473 617
 506 494 496 429 437 498 539 280 430 450 346 399 435 521 531 446 555 433 527 456 540 352 393 385 493 499 489 613   5 538
 552 480 459 472 419 295 464 441 455 490 241 530 580 101 520 574 575 319 457 440 392 367 525 536 461 238 505 504 550 573
 445 548 516 486 624 289 297  40 549 501 562 509  59 605 482 135 418 512 719 511 601 626 460 510 171 654 199 523 532 432
 604 462 582 522 546 353 192 422 476 578 535   1 568  73 526 571 618 331  27 497 545 515 683 576 175 570 470 458 485 554
 656 632  76 596 595 477 528 533 246 558  82 616 428 180 145 541 606  93 710  98 644 322 619 639  25 636 479 534 584 637
 651 635  43 614 640 242 518 588 591 258 610  34 679 463  41 714 559  51 711 592 628  32 594 586  90 475 240 474 519 643
 607 670 585 664 572 168 311 712 351 137 581 734 556 123 212 666 129 183 235 770 612 583  16 611  23 577 264 567 646 650
 638 768 147 668 685  57 229 205 146 102 193 655 704 483 287 721 708 167 705 579 442  22   3 699 673 678  19 767 766 599
 170 765  38 793 622  47 376 778  75 247  61  48 713 697 149 741 661 362 623 725 600  80 143  86 569 831 412 749 687 667
 305 782 748 762 815 335 336 828 113  15  94 751 715 114 106 753 207 211 787 746 620 284 750 758   9 590 127 107 726  21
 641 811 625 732   4  13  56 823 285  67   2 627 658 237 253 783 254 304 760 791 733 324  68 686 300 262 278 645 739 754
 653 833 752 231 774 179  60 357 111 182 197 698 652  58 120 839  36 249 810 790 219 780 126 812 266 798 290  18 849 776
 807 861  14  62 806 161 560 378  45 723 105 805 361 233 236 873 121 221 809 841 747 260 188 764 763 119 402 381   6 863
 830 444 738 804 789 112  42 800   7 131  89 172 827  49  95 870 343 243 835 853 736 868 160 364 859  10 488  12 109 836
 757 846 784  24 142  39 203 838 194 187 162 313 779  63 226 848   8  88 821  91 743 223 755 781 745 813 360  11 854 817

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.22301e+06us (= 3223.01ms, 3.22301s)
Wall-clock time (full program): 3.27854e+06us (= 3278.54ms, 3.27854s)
Satisfaction error: 0
Number of search iterations: 1793
Number of local moves: 952 (including on plateau: 464)
Number of local minimum: 109 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14396
Total number of local moves: 7498 (including on plateau: 3527)
Total number of local minimum: 801 (including on plateau: 277)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 245 558 770  56 798 170 110 107 728 135  44 209  90 291  95 714 259 890 899  53 627 574 779 748 897 140 889 752  91 797
 659 876 835  70  94  96  86  67 865 689 800 208  50 711  87 538 888 884 827 138 173 604  58 117 868 131 682 436  80 898
 203 786 878 478 746  99  69 133 861 462 869 520  37 758 183 254 864 439 877  66 855 328 205 128 409 794 194 143  64 813
 815 247 554 896 161  38  79 112 763 866 782 159 216 727 783 736  43 241 542 567 578 742  49 215 643 136 295  62 649 819
 467 814 184 101 891 132 149 106 233 677 108 225  41 621  32 892 139 848 803 189 559 894 561 375 882 795 633 867 119 178
 863 834 201 716 235 158 171 280 109 731 368 355  47 697  63 857 151 806 179 213 739 886 160 218 113 816 555 847 266 881
 654 799 765 474 843 226 879 244 193 593  61 424 278 666 319 870 229 523 313 219 826 597 199 290 850 127 246 217 391 200
 822 198 175 548 104  68 284 856 243 825 743 687 129 808 282 491 238 376 408 155 528 722  76 248 883 232 721 872 197 596
 433 851 787 650 264  88 314 182 837 626 156 389 338 756 228 749 296 585 483 362 780 292 253 294 272 260 713 740 231 306
 564 849 270 846 204 854 358 377 361 639 124 470 263 821 379 303 186 252 327 269 661 630 414 258 287 256 844 720 234 495
 647 428 220 836 207 321 202 293 371 340 887 791 430 705 261 398 249 550 297 885 534 724 332 300 195 482 187 392 588 463
 805 651 318 832 308 438 356 237 465 434 395 900 707 625 374 584 405 239 312 307 255 366 385 350 262 481 820 224 333 347
 726 476 365 320 367 325 378 206 600 875 370 790 305 487 250 310 510 675 421 331 302 402 611 537 422 322 745 283 397 407
 447 268 323 757 236 286 416 895 369 440 622 324 382 346 472 373 535 425 311 522 513 448 388 599 353 499 686 507 444 329
 418 351 637 352 240 427 575 530 222 348 383 737 437 503 417 525 484 384 339 316 543 457 580 451 390 480 673 488 441 387
 544 276 551 435 372 411  12 277 442 549 494 485 403 562 455 364 541 508 629 342 317 386 459 396 556 696 518 569 540 426
 493 449 486 212 468 519 506 571 431 154 446 583 533 443 454 490 469  48 360 479 400 164 464 610 601 557 560 700 344 521
 180 380 458 114 693 631 461 460 624   7 653 118 489 502 579 496 516  39 501 492 394 221 343 671 590 679 432 614 602 576
 191 410 636 147 635 606 531 634 335 211 657 174 589 381 572 497 581 751 130 341 632  59 393 509 563  25 592 412 730 591
  33 514 419 301 526 586 644 605 473 271 298 532 619 166 628 663 694  46 504   6 618 144 475 413 615 545 445 527 582 623
  65 111 570  42 648 517 613 594 401 227 698  51 471 188 577 429 565 747 515 741 251  98 681 598 664 831  54 285 603 680
 100 573 566 452 669 723 656 718 612 137 646 176 641  19 505 185 536 345 608 512  10 547 670 595 617 315  55  13 672 642
 609 265 640 399  74 553 706 709 645 477 587 273 717 275 685 415 733 655 103 796 142 810 145 683  84 620 169  24 511  11
 304 500  34 450 788 638 754 524 674 529 738 691 792  36 330 662 157  97 676 660 715 230 735  21  81 699 357   2 539 102
  57   4 678 153 761 703 125 710 824  35 704 404 658 420 725  89  27 767 607 750 134  23 773 775 214 105  92 692 818 688
 299 423  40 326 165 778 769 652 257 812 760 768 665 279 766 120 753 789 116 744 289 122  45 804 163   1 363 616 708 123
 334 288 148 880  18 860 830 811 196   9  71 755 871 337 695 242  30  83 732 466  20 859 771 772  78 701 456 181 667 354
 568 152 223 546 719 702 852  15   5 759   3 734 774 210 762  28 833 190 267 858 162 177 873 668 121 150 406 802 784 172
  77  16 712 845 729 785 807 793  17 309  22  85 690 146 781 115 764 192 336 862 684 167 829 841 828 801  73  75  52  82
 893 168  72 281 552 777 823 817 359 349  26 498 853  29 776 126 840 141  93 874 274 842 809  31  14 839  60 453 838   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.96238e+06us (= 2962.38ms, 2.96238s)
Wall-clock time (full program): 3.01761e+06us (= 3017.61ms, 3.01761s)
Satisfaction error: 0
Number of search iterations: 1734
Number of local moves: 817 (including on plateau: 310)
Number of local minimum: 116 (including on plateau: 23)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 12409
Total number of local moves: 8221 (including on plateau: 4064)
Total number of local minimum: 569 (including on plateau: 305)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 101  14 175 110 151   2 235 836 869 864 857 119 861 163 870 271 877 876 849 871 797  81 216 852 881 134  40  72 116 355
 880  82 166 858 188 108  89 835 873 844 851 118 865 237 862 176 860 850 847 170 238  77 815 829 351 147   8 258  12  21
 839 341   4 832 178   3  31 633 817 830 813  51 319 356 816 169 824 823 884 100 774 130 228 806 827 197  93  56 709  32
 818 288   9 362 226 194 200 308 793 781 811  11 545  17 801 196 757 822 798 340 202  85  61 784 777 752 580 274 165 758
 776  92 212 794 439 142 245 788 771 785 780 786 333  64 782 117 787 388 743 764 254 115 129 779 762   5  58 745  73   7
 722 192  34 754 234  55  49 725 734 702 768 638 268 273 726  42 741 724 121 718 713 738 149 733  19 705 167  48 264 759
 719  16 557 699 146 152 207  80 712 657 703 236  52 232 708 135 720 696 496 717 698 707 106  66 689 693 206 697 299 714
 654  79 710  10 251 674   6 375 683 685 662 269  35 112 669  43 667 666 673 677 244 663 365 650 701 660 219 125 648 640
 619 658   1 627 309 686 604  26  13 631 681 168 231 229 668 305 661 622 621 664  78 316  57 626 602 624 270 610 659 649
 584 217 522 447 252 613 242 645 656  37 634 379  97 186 606 283 635 591 594 607 323 593 240 617 630 578 279 639 164 625
 632 611 386 615  86 583 586 306 614 444 587 199 138 571 589 354 471 564 548 153 150 601  15 582 549 579 286 555 592 569
 575 407 727 585  29 538 561 541 597 239 563  83  95 537 547 143 598 576 577 573 530 572 292 562 542 567  99 539 126 595
 536 544 499 554 334 558 508 517 543 559 516 275  76 506 501 535 527 162 491 483 469 504 314 490 493 498 114 489 418 502
  60 486 520 532 377 509 482 521 529 526 523 513 497 401 531 528 468 511 433 518 512 481 374 474 494 472 213  62 492 476
 519 475 453 467 540 488 515  44 454 510 470 441 436 414 459 435 431 421 449 443 461 398 463 448 500 485 505 484 480 427
 402 487 438 458 460 462 420 479 380 455 422 495 465 507 387 412 434 446 440 428 395 457 466 442 445 452 417 423 451 690
 413 464 384 437 524 372 382 415 477 405 393 408 553 473 419 399 397 430 392 565 808 331 684 320 450 432 590 409 373 416
 337 368 629 390 411 425 360 424 338 394 353 546 899 371 391 838 383 751 429 343 389 404 525 329 336 396 637 367 406 346
 325 342 344 716 570 327 348 692 400 426 363 859 795 291 310 359 350 311 820 378 410 358 671 361 349 403 603 352 347 335
 370 831 263 312 581 295 300 230 260 326 317 534 711 842 278 652 385 357 302 886 290 644 805 345 297 369 599 211 680 243
 318 802 287 249 574 293 321 791 255 596 267 695 809 729 330 628 315 289 256 322 895 262 772 301 248 307 789 246 328 241
 339 303 281 280 807 266 812 298 381 282 304 608 748 833 215 600 265 276 257 195 770 214 739 261 220 313 706 778 868 296
 171 285 700 210 855 259 826 866 224 181 250 767 616 730 277 821 227 253 201 366 747 221 840 272 223 825 687 218 225 172
 205 623 867 209 721 737 728 180 140 193 183 609 552 651 189 804 198 503 158 187 672 173 894 247 155 872 682 848 204 131
 478 755 761 139 841 882 819 177 179 148  96 191 566 676 185 766 156 154 104 222 612 885 642 159 845 208 514 647 551 157
 145 636 874  88 605 775 897 160 203 103 174 814 533 799  67 715 102  27 746 854 646 190 568 128 136 843 756 161 588 182
 124 803 740 900 736 878 675  90 144 127  28 376 665 691 120 550 111 294 107  84 284 763 670 133 137  45 898 837 732 773
 123 704 233  36 643 891 735 694 122  91  65 744 364 810  94 828  41  70  68 790  75 890 834 132  69  71 765 749 896 888
 113 879 856  53 560 456 653 655  30 620  63 783 332 760  20 723 105  23  87  47  46 893 556 109  38 742 889 753 796 875
 618 731 883 792 887 892 679 184 324  74  18 800  59  54  98 688  22  39  24  50  33 769  25 678 750 141 846 863 853 641

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.46845e+06us (= 2468.45ms, 2.46845s)
Wall-clock time (full program): 2.52248e+06us (= 2522.48ms, 2.52248s)
Satisfaction error: 0
Number of search iterations: 1256
Number of local moves: 786 (including on plateau: 274)
Number of local minimum: 75 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9013
Total number of local moves: 6707 (including on plateau: 2511)
Total number of local minimum: 411 (including on plateau: 187)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  93 142 692  82 234 843 163  40 268 643 307   9 724 836 667 182 736 793 831  29 220 848 838  83 286   6 845 445 840 790
 161  21 783  84  20 798 162 128 768 777 794  71 868 864 149 680 176 856  25 382  41 787 834  15 725 875 596 151 829  95
 705 822  36 138 214 765 694 229 383  16 799   3   7 782 756  66 833 873 329   5  17 776 213 392 195 846 880 116 839 786
 279 730 388 687  39 201 187 733 503 826  32   8 778 719 809 700 548 748 795  80  59 819 755  62  58  46  27 242 861 796
 166 635 241  88 335 743 122 597  18 758 554 144 364 817 767 670 321 791 726 112  77 882  54 853  19  98 589 415 729 830
 118 804  12 183 148 141 256  43 275 801 165 158 539 805 737 697 754 775 638  24 130 806 641 752   4 779 616 350 660 704
 622 677 664 264 208 711  68 632   2 391 802 248 698  13  56 566 232 574 669 753 110 513  35 225 727 651 684 294 685 741
 716 751 338 169  74 559  26  49 281 701 671 124 575 810 662 734  61 690 618 757 145 288  67 811  23 714 600 178 693 630
   1 599 322 267 319 750 634 747 397 512 676 258 190 674  22 517 104 573 657 712  28  48 631 222 567 511 710 629 614 624
 545 108 326 290 224 420 759 269 155  14 675 387 619 621 663 341  85 636 586 656 465 613 744  92 699 455 552 152 691 673
 649  38 199 205 230 723 681 379 516 544  89 398 617 640 564 488 170 409 385 196 408 565 463 451 591 483 578 556 715 585
 581 553  34 537 255 579 526 678 160 561 550 312 563 603 450 519 119 520 530 571 400 498  33 644 471 607 441 143 508 569
 318 609 555 576 320 499 542 260 540 495 592 416 668 531 404 505 340 487 150 394 317 515 480 164 582 103 469 521 543 620
 593 494 497 446 272 328 457 473 510 454 546 524 449 587 468 502 332 532 346 492 380 362 610 347 560 605 433  11 547 358
 536 514 426 407 298 427 496 475 558 308 470 507 422 639 474 395 464 655 490 476 500 444 534 369 368 533 376 482 462  10
 413 568 432 527 447 504 486 683 541 277 423 467 484 437 424 653 316 403 349 310 615 479 435 389 637 352 289 262 412 501
 583 436 297 460 594 429 203 396 489 430 897 535 485 325 528 401 188 266 493 438 477 367 518 529 334 509 414 689 327 478
 366 453 761 425 506 606 491 417 884 344 337 452 890 390 295 219 858 439 354 419 598 393 228 360 342 333 154 377 443 381
 345 193 361 458 764 227 481 399 760 356 280 766 302 331 253 428 874 371 827 343 590 386 348 746 247 378 274 721 240 466
 261 233 650 661 645 410 304 323 688 411 859 625 363 239 339 221 440 314 351 888 523 303 841 305 223 373 238 899 301 284
 206 259 633 658 803 204 237 300 648 866 250 646 461 357 336 129 876 167 330 602 824 309 244 353 418 174 384 886 406 549
 770 881 666 431 604 115 863 611 820 324 359 584 210 180 315 186 702 185 306 173 772 456 278 626 254 402 313 713 134 282
 771 372 722 672 706 365 251 472 249 355 375 642 374 207 293 175 709 434 135 784 789 270 894 216 774 212 198 742 114 243
 823 291 146 738 797  94 892 865 215 200 623 850 153 285 299 800 682 265 202 156 732  86 271 679 273 179 889 595 217 218
 814  31 562 852 570 842 184 812 577 105 246 731  64 370 877  42 612 226 177 855 728 659 197 538 854 172  63 647  55  53
 287 895 263 808 898 147 851  87 459 311  97 522 421  65 231 818 792 191 292 878 740 133  73 837 703 442 192 780 252  50
 695  91 887  75 815  99 885 140 257 236 781 870 896  78 109 123 276 120 126 825 862 121 696 137 844 891 762 580 132 106
 828 245 296 735 572 171 654 720 628 189  79 749 157  69 867  57 283  47 136 879 627  70 871 718 235 773 860 707 125 168
 194 405 769 745 816 107 821 686 807 525  60 857 102 211 100 869 551  44 813 117 893 111 101 883 739 900  52  51  96  90
  76 665 557 847 788 708 139 872 159 785 127 652  72  30 601 832  81 131 849 209 448 608 588 717 763 113  37 181  45 835

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.73675e+06us (= 2736.75ms, 2.73675s)
Wall-clock time (full program): 2.79134e+06us (= 2791.34ms, 2.79134s)
Satisfaction error: 0
Number of search iterations: 1422
Number of local moves: 1275 (including on plateau: 795)
Number of local minimum: 15 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10659
Total number of local moves: 7290 (including on plateau: 3133)
Total number of local minimum: 539 (including on plateau: 241)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  80 840 731  63 120  74 156 132 817 833 278 874  87   8 358 776  18 299 808 712 856 818 237  73 822 775 550  52 675 593
   3  15 397  19 106  37 484  35 813 101 266 757 877 122 597 848 325 555 873 424 766 780 798 137 746 832 770 802   1 229
 797 861   2  61 121 398 352  58 194 839 243 858 792   9 347 744 691 195  42  47 819 851 854 245  41 773 806  28 862 585
  76 879 187 338  40 204 427  39 733 633 218 850  85   7 269 820 781   5 881 406 719 793 828 181 697 735  14 809 857   4
 188 741 322  91 292 404 414  49  90 761 782 823 680 105  94 743 745 771  10 262 801 821 748  21  22 673 789 751 384 138
 794 800 377 212 291  32 232 190 131 795  70 662 815 749 241 720 153 679 149 552 698 702 705  95  48 638 624 829 196 336
 669 714 174 258 607 602  50 491  16 615  57 779 635 285  38 695 685 668 115  89 694 700 645 613 727 844  96 760 169  25
 626 656 178  43  93 395 711 124 159 126 737 718 690 666  29 810 807 674 734 693 740 681  17 307  44 475  64 706 506 306
 640 542 117 200 151 128 401 554  23 442 652 609 591 577 145 594 524 630 752 586 661  54 725  11 682 631 562 659 114 558
 730 618 272 185 148 280 473 147 175 286 133 508 539 579  27 606 617 598 464 575 717 487 623 287 568 754 507 726 312 574
 559 592 519 431 529  79 186 208 576 599  20 587 403 523 109 625 443 610 643 572 480 526 621 337 614 636 634 670  45 139
 535 545 449 528 192 642 536 629 665 588 462 111 483 160   6 357 433 463 595 589 570  51 657 646 676  24 532 569 447 375
 448 348 608 284 511 612  81 580 405 557 435 482 601 514 578 561 457 376 295 537  99 563 628 396 544 551 533 531  12 388
 566 611 510 162  55 541 516 474 499 564 660 426 549 543 701 459 468 466  71 527 453 546 461 359 573 416  78 560 418 283
 547 440 439 520 553 363 345 437 637 517 525 492 341 481 509 479 521 469 349 460 420 446 211 302 485 502 421 513 399 392
 556 430 450 400 495 321 866 476 297 356 583 328 503 493 654 505 530 456 309 394 353 305 304 571 565 518 477 411 387 222
 472 265 538 581 386 841 318 389 436 683 340 434 504 408 429 498 432 441 380 335 379 600 354 496 444 488 367 412 452 413
 346 410 768 497 522 728 709 256 333 465 478 300 385 332 294 490 407 777 515 350 390 361 369 451 365 419 202 298 860 438
 425 225 742 454 663 804 882 445 259 301 769 315 327 368 331 289 422 311 471 830 215 455 489 428 324 470 409 374 467 251
 381 227 783 896 641 847 722 344 373 326 867 263 343 323 179 372 764 264 271 684 206 244 417 620 219 268 233 314 753 371
 277 313 253 686 366 696 339 604 687 895 393 351 239 220 755 330 250 303 596 716 885 183 252 402 249 261 296 177 837 704
 799 247 811 584 864 317 240 282 210 213 834 360 123 762 859 279 845 238 329 155 316 423 176 849 276 293 207 231 672 721
 167 150 715 708 778 165 197 619 274 234 747 382 383 154 838 275 391 835 310 648 370 378 900 765 242 135 458  98 500 699
 270 146 664 627 658 639 812 827 846 616 415 254 226 217 816 260 267 772 273 130 170 205 127 364 342  92 677 736 308 759
 164 102 678 644 723 884 152 826 548 110 172 320 203 784 786  88 692 255 756 852 171 281 246 843 787 119 842  68 228 191
 319 118 865 894 582 540 534 814 334 248 632  72 724 803 649  36 235 209 129 100 290 182  83 785 831 886 362  97 512 650
 872 108 790 494 707 216 767 825 836 355 713  34 888 791 605  77 201  65 141 173  46 166 157 647 144  31 898 257 622 889
 774 193  13 871 653 738 603 878 729  53 655 224 134 876 703  67 184  59 824 107 168 143 104 855 198 136 869 890  82 732
 199 893 103 887 805 875 214 891 567 288 221 230 142 868 880  86 161 189 667 140  30 590 710 758 501  56 163  62 688 651
 236 486  60 897 863 113 796 892 853 116 158 112 223 788 689  26  66 883 763 870  33 180  69 671 739  84  75 125 750 899

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.88631e+06us (= 2886.31ms, 2.88631s)
Wall-clock time (full program): 2.94206e+06us (= 2942.06ms, 2.94206s)
Satisfaction error: 0
Number of search iterations: 1417
Number of local moves: 997 (including on plateau: 473)
Number of local minimum: 64 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12599
Total number of local moves: 7789 (including on plateau: 3771)
Total number of local minimum: 631 (including on plateau: 323)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 689  51 546 796 606 899 598  52  34 809  55  83 558 757  88 900 643 763 677 134 555  49  98 732 787 690  47  48  90 681
 837 852 762 853 798 687 881  53  37 612  56  76 605 602 105 673 693 456 670  62 242 118  50  93 662 833 121  32 883 111
 726  59 387 755  87 825 775 635 197 661 161 222 797 880  44 816 859 836 838 113 572 126  82  86 891 560 122 104  96 203
 877 135 177 770 137 738 774 659 129 698 103 207 620 715 154 696 759 616 720 117 679  36  81  80 871 819  38 851 185  74
 290 182 234 194 844 707 275 711  43 830 167 493 862 644 210 894 897 667 898 130 779 131 228  75 768 857  68 227 125  85
 183  72 246 718 205 380 867 570 223 808 826 521 827 575  45 676 849 651 792  58 753 474 208 269 215 742  65 192 336 169
  99 751 409 811 869 634 788 737 180 734 650 247 882 653 114 272 326 740 170 146 846 186 250 352 583 264 218 211 158 235
 238 147 587 317 132 706 590 893 232 863 213 261 561 892 273 231 664 754 149 145 716 520 721 193 782 875 202 241 221 196
 258 162 358 339 176 854 697 225 896 832 287 286 580 879 271 365 252 795 312 127 550 887 206 457 656 847  42 377 106 436
 159 292 675 230 872 666 360 248 346 251 276 730 458 868 366 301 331 766 497 293 878 341 723 288 267 304 229 367 658 475
 280 240 789 654 282 695 394 265 329 376 398 682 864 384 334 299 388 806 478 890 333 678 513 454 393 311 281 142 283 300
 487 243 332 313 414 592 274 363 652 325 386 888 823 285 327 330 266 501 884 296 835 419 249 622 340 310 406 442 429 482
 237 344 856 253 316 536 424 322 374 371 417 415 368 508 412 507 494 895 408 348 314 672 541 810 383 407 373 318 401 491
 889 543 422 392 529 506 445 472 295 451 308 307 362 410 463 486 443 405 370 476 298 446 484 425 418 389 523 397 841 320
 477 499 489 488 515 404 431 512 428 505 614 557 423 448 566 399 459 319 433 402 413 535 502 519 324 538 396 441 385  94
 421 449 450 395 364 390 426 382 471 498 467 378 437 473 608 427 480 568 525 372 462 526 492 361 438 479 391 530 416 439
 495 531 469 509 460 345 544 533 453 554 524 435 638 400  23 496 347 375 500 440 452 455 632 528 465 559 444 432 466  11
 565 381 270 613 343 338 627 124 503 468 522 562  60 470 485 447 577 305 581 631 490 260 551  22 540 552 685 420 607 516
 576 594 277 578 481 323 539 191 582 532 574  79 315 464 623 645 593 209 349 600   2 547 599 542   5 610 597 636 342 511
 563 586 262 548 625 359 123 671 642 646 139 195  46 573 517 585 545 173 430 567  41 713 663 256 660  77 626 504 609 571
 712 591 110 589  63 302 640 688 564 674 527 178  67 189 680 579   7 164 553 604   6 171 624 596 648 603 615 556 705 510
 174 829 245 699 655 190 112 184 219 153 588 692 163 355 684 534 744 102 619 629  70   9 483 769 694 584 767 641 224 704
  27 708 639 601  12 321 621 216 569 128 595 717 294  35 618 657 731 369 257 611 160 357 278 686 628  57 514 665 725 719
 537 748 649 150 784 166 217 350 778 107 633 630 263   4 764 297  21  95 739 733 201 805 306  40 379 140 791 714 724 750
  16 773 187 727 802 356  15 728 761 108 747 181  28 155 710 168  29 236 239 729 143 760 637 549 254 461 722 771 758 765
 777 701 284  33 743 144 212 156 804  92 741 745 188  78 756 152 136 116  54 794 255 776 785 700  91   8 824 803 746 821
 772 860 268 115  71 179 198 749 865 141 801 279 172 220 709 434 783 259 109 817 702 411  17 858 148  39 843 870  13 813
 353 328 518  64 736 120 119 799 786  18 157 828 839 165 866 200 100 233 101 668 617 669 848 691   3 226 807  14 820 822
 781  24 800   1 303  84 214 876 289  66 752 861 354  31 845  30  73  97  25 790 842 703 814 815  89 175 873 683 351 874
  20 840 818  10 291  69 335 151 834 204 831 780  61 403 855  19  26 244 138 793 309 735 850 647 133 199 885 886 812 337

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.39704e+06us (= 2397.04ms, 2.39704s)
Wall-clock time (full program): 2.45129e+06us (= 2451.29ms, 2.45129s)
Satisfaction error: 0
Number of search iterations: 1130
Number of local moves: 818 (including on plateau: 282)
Number of local minimum: 46 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9028
Total number of local moves: 6161 (including on plateau: 2069)
Total number of local minimum: 498 (including on plateau: 167)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 379 238 279 136 252 790 738 764 872 254 884  56 190 676 876 820 795  11 878 814  71 311 842 796 284 143  93  41  63 169
 860 831  31 848 634 857 859 464 818  62 792 282  53 210 834 349   2  32 879 837 272 259 761 662  23 193  42  39 644  86
 743 283  19  22 785 829 863 780 797 145 804 191 273  16 736  55 748  84 720 835 280   5 765 706 799 140  57 849 152  34
 781   6  48 216 824 812 737 729 722 268 817  67 111 674 386 246 707 168 865 803  69 160 894 704 838 185 428   7 116 127
 673  61 547 811 113 742 809 731 854  12 858  51 490   9 808 178   8 206 701 642 261 291 823 853 699 334 214 627  18  91
 702   4  59 784 715 187 694   1 751 509 647  89 222 607 768 269 763  15 828 466 370 387 725 771 897  17 146 365 638 119
 630 666 189 789 690 697 709 778 574 700 623 361 247  66 281 620 159 657 696 608 336 134 570 164 567 156 142 186 347 173
 810 629 316 496 760 611 563 220 671 733 579  80 107 688 346 170 590 555 752 575 531 293  68 705 125  45  99 686 533 179
 617 341  77 619 639 661 588 745   3  38 603 267  21 650 194  36 594 599 786 681  58 529 754 791 668 244 355 457 651 249
  30  76 172 819 679 675 569 524 732 598 708 507 226 712 231  74 633 171 495 631 430 115 522 485 583 202 242 672 898 104
 648 312 613 458 734 518 728 558 516 559 264 184  90 610 294  25 489 576 578 582 124 320 585 637 586  46 375 669 561 276
 601 486  85 550 162 502 568 534 600 505 500  28 103 614 167 369 551 440 537 566 689  72 577 404 494 587 491 636 557 540
 670 530 595 482 564 237 517 390 653 549 525 298 338 626  50 503 364 385 423 592 605 343  83 330 536 554 399 333 535 506
 545 123 596 581 465 612 693 275 443 521 479 572 667 402 257 277 597 470 435 419 410 256 609 221 499 415 436 383 431 426
 520 450 552 573 474 409 337 463 437 556 478 307 469 417 183 487 481 416 381 527 433 510 362 508 380 480 455 539 456 475
 538 424 460 606 513 618 461 432 444 358 477 422 497 591 286 646 378 376 251 359 274 389 628 512 498 492 372 528 398 287
 449 413 565 769 483 360 323 454 392 340 451 493 374 344 476 448 442 395 405 367 484 407 445 321 883 723 232 391 315 571
 331 353 730 439 354 301 325 265 393 394 348 665 695 710 726 584 240 452 453 263 324 468 310 544 289 713 543 504 327 472
 302 345 526 235 366 467 420 373 756 396 243 511 368 300 900 844 427 203 441 306 721 462 438 225 218 645 602 459 250 766
 377 278 401 350 403 414 270 161 304 397 716 890 827 352 658 832 196 421 296 874 755 532 211 308 253 351 616 130 317 625
 260 861 788 388 326 318 285 677 515 319 322 664 772 299 711 841 303 406 200 228 356 580 271 473 233 363 523 371 314 548
 230 384 329 239 174 816 357 328 309 425 411 649 429 236 262 896 870 546 295 418 833 856 248 199 101 593 685 207 339 851
 188 714 656 305 217 313 258 855 181 826 138 777 867 176 446 825 245 255 213 288 807 869 128 121 175 800 652 408 223 589
 106 762 622 266 209 177  88 131 219 757 224 798 741 110 691 654 154 813 149 215 434 866 205 802 118 805 687 109 717 886
 153 680 749 120 297 180 108 126  43 148 204 635 739 158 655 640 703 845 560 182 724 727 157 150 782 873 899 290 212 776
 198 698 641 241 447  37 139  27 165 773 147 660 541 852 553 514 740 783  24  52 830 604 141  73 129 335 744 864 871 692
 227 770 815 163 888  98 105 779  35 684  44 787 663 839  94  40 192 678 112 208  49 501 400  97  82 758 893 877 746 891
 234 621 488 135 102  33 229 117  10 862 122 840 753 892 100 412 137 821  95  26 643 881  92 750 843 775 615 850 155 882
  81 382 682 880 114 197  96  60  14 144  78 822 875 659 471 342 201 847  13  87 718 846 735  70  65 801 719 887 836 793
 632 794 885 195 132  47  79 774 292 683  29 562 767  20  75 519 806 889  54  64 624 542 166 133 868 747 759 151 895 332

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.26795e+06us (= 2267.95ms, 2.26795s)
Wall-clock time (full program): 2.32297e+06us (= 2322.97ms, 2.32297s)
Satisfaction error: 0
Number of search iterations: 985
Number of local moves: 635 (including on plateau: 187)
Number of local minimum: 57 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7041
Total number of local moves: 5582 (including on plateau: 1821)
Total number of local minimum: 253 (including on plateau: 128)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  15  18  19 321 818 861  27 842  12 868  21 790 863 830 806 847 588   1 142 792 247 855  22 245   8 832 757  33 681 354
 145  38  34  67 781 824 118 163   9 841 165   3 778  20 831 766 429 835 851 734 762 335  83 866 744 836 856  23 454 124
 151 651  54 133 785  25  24 772 160 341  28 750 821 812 344 787 572 840 103 791 223 826  45 800 780 844 735 224  10  84
 232 843 759  70 686 803 397 650 809 399 156 150 798 158 268 625 676 370  65 310 849 837 227 678 846  26  17  31 721  59
 153 723 725 117  73 359  32 743 688 833 233 768 775 234  96 712 503   2  77 720 599 789 763 278 777  56 739 149 711  88
  47 610  80 283 782 742  55 719 751 834  35 647 646 375 193 788 214 595 119 767 267 551 236 713   6 784 726 178 722  50
 239 700 765 162 645 745 198 410 619 640  66 655 621 148 602 679 218 727 166 379 116 633  64  11 653 578 636  91 797 552
 627 746 663 555 658 756 140  49 639 634  46 662 738  74  13 754 130 652 100 661  37 671  16  63 716 699 770 170 553 523
 657 667 543  61 618 184 102 680 564 559 390 717 632 288 146 606 180 718   4 337  44   5  36 674 769 736 710 593 728 567
 480 698 707  93 706 562 253 740 616   7 285 504 629 104 128 600  57 659 112 367 453 684 421 755 558 594 580 471 582 110
 398 478 542 532 546 733 194 601 472 581 306 677 548 240 637 447 208 500 187 339 177 538 439 120 505 591 566 444 690 279
 369 608 604 435 643 596 403 514 598 584 515  29 520 275  92 556 325 603 322 207 255 516 257 105 617 631 613 517 592 614
 524 386 597 346 509 540 222 656 473 426 575 560 508 311 525 583 242 438 589 188 216 635 544  89 565 434 394 457 436 547
 422 522 506 430 431 495 287 474  51 486 550 452 497 535 615 380 507 526 327 428 252 376 607 432 423 574 484 536 470 440
 570 451 449 561 442 433 360 530 298 487 349 414 468 385 541 448 437 382 499 371 539 427 549 396 537 417 383 412 579 401
 455 569 402 519 378 467 611 387 319 479 665 272 330 489 364 498 691 510 408 482 373 477 466 488 219 483 462 490 465 297
 459 355 351 353 405 324 557 501 511 889 312 323 424 531 418 481 577 512 416 675 352 235 368 388 307 464 528 732 513 254
 573 463 326 415 251 263 568 450 338 316 696 469 660 361 336 217 878 291 697 460 443 461 377 249 395 374 289 363 870 666
 343 476 828 381 419 300 693 301 342 521 814 794 271 609 356 458 329 269 475 328 331 413 682 304 502 340 357 358 425 496
 534 365 210 704 389 400 630 280 411 348 393 248 318 705 303 264 654 779 879 813 238 308 485 347 407 317 332 366 314 774
 174 221  81 694 282 276 585 292 113 872 673 441 350 620 764 404 808 554 848 749 493 159 281 293 420 199 362 748 173 586
 266 231 888 823 345 230 760 290 805 273 315 286 294 865 334 284 708 215 795 134 819 862 628 305 302 191 372 274 392 229
 446 196 185 703 135 320 683 877 225 211 897 246 258 605 852 141 664 241 277 689 456 228 816 801 313 406 874 384 136 250
 729 333 200 811 181 648 649 220 108 183 626 295  68 867 825 176 850 167 898 518 838 157 262 815 164 137 243 783  69 695
 692 144 169 807 213 212 880 101 147 309 587 115 109 571 827 206 672 299 873 409 527 172 854 529 860 161 265 731 179 895
 817  87 122 687 296 237 896 189 155  58 802 201 260 758 563 244 590 786 491 256 641 171 623 883  39 858 182 752  95 776
 715  94 168 820 138 270 730 822 890 204 857 869  42 205 685 152 192 127 701 261 761 226 875 492 892 111  14 894  99 209
 702  79 900 638 114 533 893  62 886 107 670 197  43 669 576 195  71 829 796 121 871 259 737 773  53 126  52 642  76 845
 771 882 839 804 132 175 709  75 884 143 747  90 186 203  30  78 154  48 753 123 724 624 899 129  41 644  86 793 885 864
 810 881 799 190 714 202 859 125 622  82 741 891  60 668 445 139 391  40 545 106 612  85 853 494  97  72 131 876  98 887

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.02854e+06us (= 2028.54ms, 2.02854s)
Wall-clock time (full program): 2.08293e+06us (= 2082.93ms, 2.08293s)
Satisfaction error: 0
Number of search iterations: 867
Number of local moves: 662 (including on plateau: 168)
Number of local minimum: 30 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6300
Total number of local moves: 5501 (including on plateau: 1849)
Total number of local minimum: 165 (including on plateau: 134)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 898 865  55 743 124 759 134  85  75 541 711 608 555  42 839 168 623 132  96 892 251 159 741  87 856  72 598 679 850 277
 148 115 862 794 140  79 821  99 798 710 353 639 649  34 544 136 860  47  52 321 150 676 813 868 761 146 851  26 849 174
 131  73 702 100  29 776 853 153 847 135 558 863 817 147 231 111 657 854  65  80  51 792 790 893 674 269 688 125 880 171
  62 625 876 686  74 791 341 119 160 782  92 832  97  48 845 167 885 193 319  93 801 553 758 223 864 142 712 617 275 483
  25 804 184 733 882 562 838 286 725 650 293 664 114 107 682  49 837 488 287 178 230 220 810 161 799 896 308  54 458 191
 122 883 444 182 103 737 192 222  69 731 104 760 828 233 678 179 765 186 554 889  57 723 695  46 620 547 781 656 365 164
 177 328 202 784 877 190 768  66 835 578 245 780 831 581 706 129 900 214 145 105 213 262 736 228 261 830 834 227 101 382
 346 289 266 194  30 613 158 846 239 848 610 869 875 204 824 374 300 895 373 225  77 163 590 379 235 596 899 240 809 149
 201 255 250  39 369 728 326 358 888 840 323 871 279 417 740 292 242 329 123 128 210 827 666 217 237 709 745 891 207 808
 362 172 272 110 301 130 306 290 259 881 897 602 861 295 751 211 594 314 438 396 779 333 692 263 327 722 874 311 199 573
 859 505 276 878 238 894 343 271 106 183 887 707 431 212 769 208 331 354 288 886 246 336 663 339 205 668 316 409 257 450
 356 312 495 715 364 278 359 432 701 763 383 270 334 347 315 340 317 394 628 337 472 236 757 497 485 645 636 370 283 694
 252 291 139 767 704 420 371 344 302 378 360 342 533 452 873 556 502 747 244 281 348 322 684 256 539 629 501 697 267 414
 345 490 401 890 385 411 176 449 393 543 496 749 510 441 367 583 884 480 436 536 402 320 445 349 418 357 203 462 218 376
 475 392 307 399 424 687 391 355 330 524 405 313 363 440 459 258 397 588 324 506 631 618 471 532 448 570 351 538 426 593
 296 468 400 435 398 453 514 466 457 465 407 512 522 491 442 476 421 366 571 463 456 427 467 423 481 484 520 447 410 377
 576 528 614 469 464 565 579 515 661 416  63 413 638 198 493 549 386 303 443 380 479  91 268 403 406 600 408 551 535 521
 384 564 477 633 550 486 592 519 474  38 368 335  89 517 540 455 513  86 606 700 714 460 548 489 381 173 297 575 454 498
 350 375 530 595 635  60 437 599 559  78 612 298 719 560 500 546 499 434  43 494 626 504 415 616 742  45 461 523  71 589
 511 470 529 265 537 708 662 482 430 112 108 545 361 644 534 640 604 422 446  19 527 492 309 120 586 187 574 561 705 425
 439 584 651 563 746 526 713 577 433 531 412 294 607 637 118 503 234 632 642 696  28 552  40 585 673 387 165  53 487   7
 605 806 646 654 580 557 658 603  58 188 667 138  18 732 143 518 180 648 786 647 260 137 282 738 569 274  70  37 516 800
 655 630 507 200 419 175 572 451 724  90 404 109 627 795 156 587 390 689 189 730 652 748   2 653 601 155 126 566 681 232
 773 659 611  95 721  44  68 727 665  59  41 152 567 822   9 754  83 643 823 634 615 772 113 224 641  88 249 685 670 508
 778  31 785  33 621 395  16 753 582 299 787 196  12 735 127 764  98  84 624 197 226 691 389 752  15 815 372 774 789 775
 591  14  22 280 473 305 766 241  13 429 716 144   1  76 310 771 151 762 699 802 669 671 157 855 304 750 254 734 739 816
 819 352 209 243 672 660  94 857 680 325 478  81 720 796 170 683 619  50 867 844 866 525 166 181  56 248  20 729 284 221
 597 770 264 338  35 141 717 812 215 273 154 121  67 858 229 811  64 622 755 805 870 675  27 836 133 726 332 542  36 690
 814  23 841  21 843 216 744 718   4 318 793  61 102 829 116 818  17 756 797  32 783 206  10 693 195 703 253 428 509 872
 568 842 698 677 777 169   6 820 833 807 788 247 388 825   5 879 162 803 852 219 826  24  11 609   3  82 117   8 185 285

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.71386e+06us (= 2713.86ms, 2.71386s)
Wall-clock time (full program): 2.7679e+06us (= 2767.9ms, 2.7679s)
Satisfaction error: 0
Number of search iterations: 1490
Number of local moves: 743 (including on plateau: 301)
Number of local minimum: 98 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11088
Total number of local moves: 7899 (including on plateau: 3888)
Total number of local minimum: 529 (including on plateau: 277)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  65 862 189 819 114 146 548 180 876  70 282 546 126 785 258 108  67 846 614 833 877 737 203 675 786  68 575 633 110 517
  85 878 155 831 221 112 896 746 774 160 892 434 194  53 642 864  96 681  64 243 855 813 206 106 705 158 741 799  35  76
 295  77 350 856 123 667 895  78 893 166 632 860  89  52  63  91 107 781  58 817 162 665 154 883 899 274 644 888 866 130
 261 820 132 881 854 240 889 815 115   2 771 570 592 128 247 752 157 151  99 872 797 134 120 358 514 109 885 690 292 268
 152 168 303 809 873 208 704 193 762 201 581 776 100 176 103 842 174 784 229 802 169 890 145 792 179 844 603 683 165 105
 476 875 181 765 793 836 246 142 138  81 697 656 156 190 543 725 196 825  54 857 137 898 161 200 708 808 231 582 183 175
 150 858 894 868 164 122 900 172 173 832 245 658 191 471 397 244 386 216 288 219 141 847 795 729 232 235 887 794 260 147
 209 202 159 577 617 251 891  79 884  82 593 800 355 870 118 262 327 255 237 829 301 228 621 863 730 225 798 743 182 227
 742 313 526 756  88 353 318 277 801 334 236 823 256 835 328 205 472 264 198 188 273 732 195 882 760 149 871 838 280 222
 516 300 578 622 652 239 226 837 272 886 242 432 302 344 869  92 185 215 335 506 501 325 865 212 897 207 534 687 438 199
 148 789 861 541 259 368 279 433 417 416 289 848 396 859 418 354 379 367 470 769 223 403 322 402 338 257 653 565 349 343
 119 361 560 523 491 393 220 422 395 320 290 814 316 480 525 285 265 430 853 269 816 356 783 745 796 323 307 558 186 314
 599 315 717 486 720 399 296 400 336 298 218 880 849 332 375 566 270 510 414 278 481 369 352 879 304 398 333 504 266 371
 287 297 321 648 436 250 845 387 452 366 562 660 420 359 348 401 453 460 347 319 518 331 533 564 623 502 382 339 341 764
 522 299 372 553 360 487 467 291 224 415 450 275 496 419 406 515 559 494 252 520 408 488 755 474 469 380 521 410 532 702
 363 392 447 340 310 427 329 394 641 311 413 423 579 376 443 468 351 377 455 493 661 485 428 630 512 478 550 528 482 429
 411  40 445 442 346 499 388 629 457 602 605 217 645 511 492 568 596 462 342 619 435 463 490  32 529 464 444 507 461 374
  50 580 513 373 571 527 459 677  17 451 409  93 139 608 634 441 551 449 748 556 384 524  62 484 567 446 437 495 604 666
 456 668 197 305 686 531 557 554 624 669 583  33 508  43 431 535 636 479  10 357 601 489 475 440 659 249 253 116 709 662
 284 458 267  38 572 473 563 540 788 555 184 407 647 391  86 587 439 454 611  55 726 497 542 500  42 703 627  87 588 804
 545 104 177  20 547 591 679 509 640 530 140 143 606 584  94 649 626 598 616 569 129 597 590  73 585 483 370 326 701 694
 811 691 609 330 620 131 192 589 113 612 607 163 719 498 505  34 670 674 561 706 646 538 234 465  59 618 230 144 689  57
 383 537 233 317 389 700  25 503 728 749 552 412 519 637 536 693 684 539 651 695 241 613  41 101 153 635  12   4 639 594
 754 664 477  49  51 777  28 293 713 770  98 276 625 738 711 685 735  18 766 263 810  95 631  90 178 733  31  69 724 663
 791 750 650 421 715  39  83  75  22 306  45 167 574 692 654 699 787 657 826  24 676 308 698 723  97 544  84  29 573 806
 839 133 712  48   1 812 170 807 655 309 682 187 822 775 751  15 780  47 466 378 778 102 718 381 385   7 127 390 643 595
 772  44 365   8 600 758  71  61  16 761 615 210 671 707 734 688 840 821 610  30   6 135 678  36 171 867 672 121 731 716
 843 283 628  56 364 576 828 779 286 757 736 254 759  60 404  27  26 111 768  21 721 125 727 136 248 841  80 638 753 680
 805  13 673  19 740 773 211 850   9 714 852 426 818 117 549 424 874 337 739  23   5 204 710  74 324 747 362 345  11 767
 782 744 824 214 238 830 312 803 294 790  14  72  46 425 851 696 827 213 834 405  37 124 281 586  66 763 271   3 722 448

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.30106e+06us (= 2301.06ms, 2.30106s)
Wall-clock time (full program): 2.35454e+06us (= 2354.54ms, 2.35454s)
Satisfaction error: 0
Number of search iterations: 1037
Number of local moves: 899 (including on plateau: 352)
Number of local minimum: 22 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8279
Total number of local moves: 6518 (including on plateau: 2445)
Total number of local minimum: 274 (including on plateau: 177)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  15 232 726 833 728 797 822 217 310 112  39 832 867 305 129 189 806  71  41 841  51 767   4 397 843  62 754 722 803 200
 240 677 777 759 789 718 830 861 173  37 736 858   5 152 151 194  63 235  43 674 220 599   6 402 761 165 354 862 847 327
 733 753 249 798 765 863 804 825 329 275  47  45 784 705   3 196 102  59  20 859 690 141 864 356   7 140  26 840 723 514
 747 127  14 836 873  29 814 730 206 506   2 823  18 125 132 704 222 729 800 787 183 756 734 261 707  40  52  61 742 755
  19 683 276 762  69 763   8 842 281  81 447  16 845 720  78 169 115  85 538 689 681 835 834 280 620 450 809 612 838  70
 630 237 662 799 688 555 724 770 633  77 622 659 871  49  56 171 238 164 564 639  94 697 775 234  38  60 635 427 616 131
 868 721 184 807 661 758 682 780 207 138 692 560 725  25  97  73 137  46 642 819 174 128 525   1 854 149 773  32 648 609
 657 284 433 550 602 782 109 717 157  57 646 343 818 104 158 120 614 317 672 801 185 583 596 326 578 279 713 632 606  76
  96  13 117 748 653 727 640 227 319  83 786 573 684 708  21  17 587 182 515 796 468  27 619 585 654 167 676 605 631 591
 559 531 524 593 451 641 693 493 130 135 293 671 503 126 255 588 741 204 613 571  86 216 618 344 627 250 527 236 623 673
 570  87 394 610 572 382 246 505 124 486  65 590 548 415 547 764 715 349 581 638 528 523 404 545 533  64 466 211 424 629
  24  36 225  67 425 611 479  99 552 496 594 544 462 398 481 670 598 452 644 469 574 430 459 628 491 422 615 597 389 584
 467 554 405 323 582 480 600 201 626 436 508 562 483 465 429 526 418 114 553 634 663 163 589  28 536 258 565 302 441 604
 621 667 212 413 540 580 456 365 522 556 601 464 498 359 363 387 567 579 426 557 706 168 649 101 475 283 445  31 529 395
 551 446 362 658 563 381 384 607  48 489 268 270 434 532 516 423 484  23 507 455 324 694 490 474 417 367 537 647 561 603
 300 482 378 444 497 439 407 535 342 558 511 443 286 477 488 373 512 586 504 403 494 453 306 703 358 643 375 348 399 471
 521 254 318 376 510 458 416 463 341 370 419 495 539 530 431 889 420 617 408 372 390 409 438 500 470 472 509 368 517 295
 388 383 779 320 449 309 364 437 442 298 879 460 371 440 401 366 501 645 257 337 386 679 357 857 353 435 410 637 272 303
 301 277 793 339 269 315 411 199 678 331 332 518 322 414 828 355 361 826 215 226 502 519 391 651 288 624 334 711 304 881
 345 744 719 264 296 392 374 314 299 369 811 289 428 396 701 273 400 221 308 229 350 595 175 699 492 432 899 650 294 757
 884 520 680 241 278 259 311 746 794 499 263 136 665 191 636 393 202 669 247 360 244 256 290 768 461 592 338 265 478 849
 195 771 541 106 253 328 377 346 877 805 335 321 233 882 888 274 187 844 266 123 513 870 242 190 485 774 267 655 282 285
 139  93 543 421 297 325 271 866 745 691 224 146 252 892 716 872 340 776 700 180 208 291 313 738 330 668 178 827 213 260
 251 898 896  89 103 352 851 566 846 821 412 179 316 148 575 218 894 406 248 209 739 347 203 848  74 675 287 850  22 192
 448 750 824 150 219 549 111 223 839 769 230 186 119 752 687 740 810 772 351 142 855 113 105 193 893 778 307 454  30 116
 685 177 695 214 210 153 159  35 788 751  88 712 122 197 568 880 714 569 155 380 808 188  54 831 686 890 243 577 205 781
 292 853 262 487 154  66 161   9 336 886 133 760 118 698 816 817  68 820 815  12 795 379 792 735  79 876 473 145  53 625
 791 576 312 107  84 239  80 385 664 891 812 878 181 652 813 534  95 860 156 245  92 743 887 457  90 865 696 134  34 162
 702 147 160 231 737 166  75 110 176 852 883  82 228 875 885 732 895 749 897  10 802 874 785  50 143 869 144  44  91 121
 476 542  55 170 198  98 856  42 731 660 837 100 790 783 666 608 709 546 829  58 710  72  11 333 172 766 108  33 900 656

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.813e+06us (= 2813ms, 2.813s)
Wall-clock time (full program): 2.86652e+06us (= 2866.52ms, 2.86652s)
Satisfaction error: 0
Number of search iterations: 1585
Number of local moves: 683 (including on plateau: 258)
Number of local minimum: 91 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12326
Total number of local moves: 7288 (including on plateau: 3152)
Total number of local minimum: 673 (including on plateau: 246)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 773 561 671 793  54  30 117 462 495 140 881 684 238 797 899 201 147 894  44 146 132 859 816 494 236  76  36  85 856 898
  98 788 426 833 839 106  84  79 240  32 548 753 108 774  87 714 723 655 148 153 150 645 772  94 821 703 363 841 878  60
 141 845 136 796 862 866 831 861  93 149 449 743 853 755 872  45 277 623 298 139 162 705 700  73 107  38 336  47 516 197
 214 864 243 448 221 334  96 183 104 686 667 778 131 764 121  33 126 875 195 889 661 783 619 706 176  42 837 725 827 167
  72 202 890 702 900 212 574 160 693 219 682 695 868 419 186  61 425 812 337 876 190 185 819 154 152 775 815 122 269  49
 282 156 824 790 415 834  62 263 626 138 877 804 245 604 216 129 101 851 225 237 312 664 537 849 761 315 180 252 855 111
  65 618 428 750 370 599 882 222 842 155 874 367 142 672 297 124 227 823 159 846 217 264 766 459 290 215 120 654 738 330
 767 830 799 681 731 134  66 897 258 326 658 794 205 591 311 191 352 742 172 746 267 361 829 116 328 272 127 318 342 304
 300 838 710 665 566 338 256 158 826 125 789 814 475 867 276 255 247 792 242 199 208 811 820 171 275 168 213 587 396 128
 218 279 464 511 325 135 331 198 832 896 836 323 362 888 288 308 533 344 382 232 721 397 798 496 302 458 348 663 246 401
 314 529 715 741 802 295 329 192 439 403 690 259 375 414 364 254 393 301 567 795 320 207 728 379 455 408 317 893 388 249
 143 486 353 621 828 680 586 355 291 369 557 598 161 435 442 569 193 178 891 368 422 460 250 497 399 461 340 751 400 431
 358 508 565 472 675 418 384 204 211 558 572 345 650 385 360 280 376 691 251 563 880 283 395 341 390 372 200 892 491 445
 373 536 493 500 817 386 235 463 412 377 858 514 324 895 306 457 293 349 465 347 468 504 270 296 776 278 335 503 281 404
 303 416 474 454 409 424 857 365 351 453 528 392 605 405 525 583 452 378 470 316 322 432 406 487 265 420 544 526 484 469
 477 413  53 505 635 510  17 512 339 398 507 669 541 423 559 499 285 451 560 549 518 446 502 521 609   8 473 519 535 482
 411 556 319 427 144 538 175 564 726 590 226 356 350 163 727 450  25 573 652 262 466 513 443 498 553 501 488 657 673 489
 530 371 417 606 381 332 542 387 478 492 584 389   4 407 440 410 730  56 429 476 527 506 602 485 520 434 515 490 359 616
 588 509 433 430 624 374 615 402 678   6 174 447 676 543 649 689 592 634 103 579 273 642  40  52 577 614 589 523  19 441
 524 551 203 287 307 582 268 471 531 522  35 754 545 309 596 366 625 585 539 444  63 437 177 562 601 436 467 613 438 677
 759  82 555 292 239 736 456 708  27  70 294   9 576  21 813 540 610 421 636 554  77 640  39 620 570 480 659 719 716 597
 740 333 305 130 383  95 770 632  80 786 210  69 713   3 594 707 852  81 679 739 660 179  50 552 600 578 670 112 580 633
 617 607 481 220 380  74 687 638  78 683 170 752 622 274 685 630  58 231 696 668 688 571  26 608 102 734 733  88  83 631
 656 724 299  43 181 701 575 768 787 760 166  16 781  31 840 534 483  34  22 286 747 662  51  10 639 581 546  46 711 835
 479 612 357 173 327  11 763 165 784 722  99 145 517 115 850 745 593 119 704 674 595   5 194 735 321 822 825 343  68 653
 843   7 603  15  37 720 611 887 346 284  24  23 692 310 188 765 641 313 863 628 744  86  92 801 651 228 648 123 643 699
 732 189 187 289  14 873 865  20 807 749 266 224 808  75 137 729 806  28 879 629 568 184 253  90 698 748  55 647  97 869
 646  13  89 182 803 627 860 532 206 757  29 394 777  64 779 848 810 391 886 109 644 110 694 780  57 785 113 261 164 105
 844   1 241 100  12 697 550 884 223 800 151 209 169 354  41 762 769 157 791  18 666 717 118 718 547 809 805 244 233 885
 248  91 782  59 234 854  71 883 712 870 114 196   2 758  67 637 771 133 230  48 847 257 709 871 737 756 818 271 229 260

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.36887e+06us (= 2368.87ms, 2.36887s)
Wall-clock time (full program): 2.42342e+06us (= 2423.42ms, 2.42342s)
Satisfaction error: 0
Number of search iterations: 1039
Number of local moves: 690 (including on plateau: 243)
Number of local minimum: 57 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8629
Total number of local moves: 6374 (including on plateau: 2419)
Total number of local minimum: 350 (including on plateau: 171)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 879 227 843 201  43  83  89 302 677  69 810  40 844  66 892 146   2 183 833 886 303 873 851 326 856 832 871  14 308 166
 866 101 714 292 826 285 789 155 859 224 386 358   7  34 644 248 149  45 839 834   5 894 330 104 791 783 840  36 298 779
 737 229  92 170 798 767 822  50 890 174 720  15 319 813 821  53  39  64 829 880 175 836 688 195 860 835  51  20 451 122
 668 139 794  26 766  58 741  10 705  98 805 145 796 817 811 431 764  65 680 831 131  41 222 136 758 745 112 283 878  59
 725 150 694  18 340 854 824 250 812  90 695  72  77 629 723 323 769 284 793 610 223 503  54 269 641 309 634 571 557  22
 692  25 807 160 780  67 667  78 595 473 699 645 857  12 803   1 771 159 403 670 119 245 594 647 734 111 774 553 240 134
 716 684 746 218 762 722  96  24 825 351 760  85  46 527 608  68 599 260 728 755 165 756 338 176 262 364 814 141 719 200
 669  82 788 193 703 625 507 127 656  81 754 707 108 818 559  42 801 675 739 606 172 226 257 249 743 275 717  79 341 216
 538 655 712  52 144 506 724 230  30 744 742 654  95 786 733 619 560 147 590 651  13 726 422 288 585 186   6 636  93 648
 541 125 727  62 687 627 671 639 522 124 660 576 621 546 663   3 748 616 587 631  99 214 191  88 685 251 622  76 320 593
 558 525 574  21 588 531 678 689 556 564   4 535 554 549 485 605 658 346 278 690 324 545  19  27 533 287 548 528 234 482
 696 602 604 371  75 615 517 702 416 609 365 181 497 589 586 513 736 376 537 499 356 204 311  91 551 580  32 566 168 570
 624 526 447 348 561 543   8 496 596 521 565 437 633   9 463 492 396 519 252 493 297 401 395 512 344 642 423 429 562 581
 478 600 439 514 626 544 520 617 453 524 385 441 154 491 572 578 661 414 116 486 472 217 630  11 268 428 536 443 476 421
 467 579 539 370 505 445 612 412 419 479 583 516 484 434 458 325 613 389 427 487 444 468 328 460 457 542 435 339 261 238
 232 382 550 508 511 509 446 432 650 480 253 442 518 331 502 523 440 598 489 483 393 410 387 390 436 706 375 355 384 400
 490 498 409 623 398 466 373 504 501 449 582 342 474 379 418 378 359 448 280 475 568 461 481 477 277 465 392 584 372 592
 407 335 573 628 329 471 494 488 381 291 333 555 430 399 529 279 394 731 470 299 643 782 426 686 369 301 194 312 575 411
 343 374 352 547 304 362 405 254 274 787 413 454 313 455 347 402 408 380 870 456 424 781 659 322 397 614 334 360 896 228
 417 266 353 846 420 315 210 404 263 515 876 540 868 450 241 464 123 221 289 377 852 459 775 770 270 256 192 307 883 293
 462 282 258 759 276 102 296 171 884 367 305 290 295 197 391 869 206 388 406 148 895 632 888 637 336 672 273 882 337 611
 246 239 354 784 569 167 300 189 225 383 425 361 316 368 205 740 350 649 247 236 877 715 777 710 318 704 264 790 662 345
 164 806 243 816 635 196 126 899 208 332 109 701 730 120 190 773  38 679 178 321 802 433 900 603 203 729 231 244 357 749
 213 752 235 698 438 188 366 682 152 861 179 151 156 184  87 681 327 799 220 185 665 143 577 898 215 265 897 845 721 735
 130 820  97 841 202 867 169 823 117 674 140 129 207 199 255 317 306 827 242 212 415 132 607 800 864 709 804 271 530 809
  31 837 142 850 858 310 182 763  73 452 180 808 105 114 161 862 259 893 209  17 872 495 828 875 153 281 162 697 363 683
  63 591 115 500 237 848 855 792  16 711  55 847 751 819  48 768 272 620 106  47 830 103 135 761 187 219 532 853 601 233
  70 693 177 666  33 267 158 842  60 797 638 863 757 640  80 510 865 795  74 121 652 118 198 534 157 314 552 889 110 885
 107 700  37 776  57 294 732 713 567 673  23 887 750 891  29 664 874 173  86  35 676 646  84 708 128  61 113 815 469 747
 286 691 100 657  44 881 138 778 133 618  71 738 753 849 211 838  28 772 718  94 653  56 163 765 137  49 785 597 349 563

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.74679e+06us (= 2746.79ms, 2.74679s)
Wall-clock time (full program): 2.80133e+06us (= 2801.33ms, 2.80133s)
Satisfaction error: 0
Number of search iterations: 1458
Number of local moves: 896 (including on plateau: 488)
Number of local minimum: 68 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11696
Total number of local moves: 7671 (including on plateau: 3567)
Total number of local minimum: 587 (including on plateau: 278)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  94 124 855 117 212 734 622 846 896  82 866 792 848  84 670  37 753 106 807 799  95 529 565  57 738 772  52  35  63 265
 233 726 816 890 104 389 132 887 187 103 595 546 714 193  66 121 886  97 883 844  40 130  73 815 871 609  55 219 438 853
 725 839 183 101 779 862 758 808  91 577 783 282 596  36 150 841 589  28 888 590 123 181 136 195 231 728 153 535  77 650
 882 845 656 858 164 729 137 245  62 135 503 392 813 253 147  34 757  67 825 796  64  99 182 216 870 748 900 118 256 762
 227 474 793 273 805 893 201 784 266 171 852 763  96 177 158 875 869 205 720 659 128 424 107  92 591 486 244  76 263 843
 790 243 879 222 207 842 162 722 100 339 899 327 786 159 895  53 817  27 860 428 109 562  68 225 791 736 286 236 114 631
 180 560 298 861 168 683 898 730 881 163 824 469 741 206 261 199 189 296 291 832 210 682 346 406 647 835 228  65 120 246
 285 745 747 279 778 859 344 139 111 167 749 828 891 525 141 264 235 218 240 701 230 698 223 351 289 787 830 316 271 274
 211 773 770 202 213 534 873 214 301 380 847 536 769 615 257 232 242 191 496 575 308 885 188 303 567 781 270 224 363 395
 220 771 311 268 645 690 765 173 185 897 179 528 829 278 302 320 237 250 374 417 894 767 342 251 811 822 313  78 234 364
 217 353 638 426 343 724 727 129 248 215 688 550 367 277 868 445 323 272 280 892 482 563 513 455 735 584 325 423 154 299
 370 385 377 304 383 671 293 365 582 340 519 889 540 602 275 458 174 436 675 553 358 806 400 335 281 549 337 288 317 653
 262 390 459 357 483 702 598 160 354 294 300 564 413 527 430 375 512 494 397 611 495 511 419 425 437 559 415 867 312 393
 287 509 421 520 470 660 338 473 255 407 396 420 570 348 332 427 618 355 450 331 414 269 624 398 433 480 318 260 856 876
 360 330 336 172 517 556 593 456 440 439 484 362 505 518 408 707 462 627 532 373 516 403 443 399 441 574 451 292 267 552
 435 478 569 583 429 334 341 522 322 384 592 588 510 142 576 477 446 401 586 402 345 581 410 498 606 538 442 259 386 333
 558 572 359 326 545 463 409 502 466 667 252 247 382 629 381 349 613 405 372 481 447 411 499 155 493 387 422 672 530 521
 479 431 507 352 544 378 178 492 472 636 557 138 673 329 464 306 571 541 391 501 555 297 487 526 454 347 467 594 533 315
 626 600 578 610 476 404 276 488 497 531 686 258 489 465 634 633 621 514 113 551 543  98 361 490 126 290 649 448 453   7
 679 661 585 625 617  41 305 603 623 524 156 203  81 461 460 717 568 614 605  22 655 208 712 579 238 432 608 376 554   3
 685  12 573 616 743 283 612 696 695  15  70 152  80 704 457 658 143 755 644 677 547 369 500 776  71 204 663 548 566   1
 226 412  13 711 161 176 635 356  86 664 718 239 537 309 697 523 721 468  88 680 475  56 668 662 314 157 646 689 744 684
  69 115 471 539 561  54 366 125 737 601  79 241 434 674 599 709 692 630 328 105 654 733  25 666 388  72 652 643 797 756
 694  74 184 691 705 254 122 780 542 819  33  46  14 321 731 719  90 818 651  87 699 394 723  48 491 110 764 628 642 641
 657 146 112 716 144  59 508 834 607 665 102 192  50 693  47 821 637 740 580  32 587 371 706 148 880 307 620 850 678  26
 789 149 116 752  29 140 310 865 739 801  93 194 127 814 840 151   2 788   6 134 669 681 708 676 485 131 800 798 710  18
 878 506  42  16 166  49 715  17 766 648 186 803  44 809 221 746  11 639 119 190 851 700 837 874  10 209  20 864 759 820
 350 449 619 200 632  58 751  23 750 742  30 775 368 782 444 838  89 826   9  39 319 774 687 827   4  51 713 504 857   5
 872 768 165 133 760 249  31  60 418 785 416 379  19 754 794 284   8 884 108 170 854 295 802 804 198  85 169 777 597 877
 175  75  83 795 732  45 515  21 836 324  61 812 229 831 810 196 640 823 197  43 849  38 761 863  24 145 703 833 604 452

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.12957e+06us (= 2129.57ms, 2.12957s)
Wall-clock time (full program): 2.18369e+06us (= 2183.69ms, 2.18369s)
Satisfaction error: 0
Number of search iterations: 971
Number of local moves: 722 (including on plateau: 272)
Number of local minimum: 30 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7136
Total number of local moves: 6080 (including on plateau: 2406)
Total number of local minimum: 174 (including on plateau: 187)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  16 851 136 205   9 363 226 421 846 330 879 873   8 405 181 101 855  10 135 464 832 790 129 860 818 820 779 178 169 826
 837   3 214 297  71  75 127 788 748 876 699  30  87 771 326  42 852  48 389 325 843 794 719  79 821 768 735 190 398 563
 839 834 635 289  18  86  11 803  57  12 875 861  96 114 710  83 778 763 134 236 793 784 827 813  49 849 685  62   1 418
  44 512  33  92 776  22  27 848 772 857 823 836 147  26 332  88 817 740  47 162 814 728 109 734 829 744 807  54 337 358
 575 747 230  24  80 111  85 791 700 789 850 867 104  38 403  14 716 227 648 660 833 805 180 690 703  21 612 168 198 646
 792 758  56 262  35 256 267 614 597 863 866 767 305 718  32 698 595  29  28 384 765 303 306 643 616 800 557  78 139 386
 346 707   6  74 645 414  94 588 741 804 729 684  31  19 175 654 676 399 137 590 754 777 838  13 658 840 746 240  90  46
 185 672 733 218 739 221 112   2 628 579 727 141 720 433 637 666 775 669 802 571 702 580  20 454   5 507 665  34 161 157
  84 673 617 237 548  68 420 659 186 712 608 611 566 678  53 620 603 667 517 143 435  15 503 547 680 714 613 156 493  89
 706 631  23 691 528 314 232 653 736 210 342 604 206 633  39 564 586 674 664 132   4 605 542 705 541 661 675  77 184 353
  73 560 683  55 677 568 317 606 544 696  51 511 615 448  66 743 749 671 582 212 638 504 266 452 426 546 644 273 187 152
 194 642 447 339 434  25 470 554 607 404 468 574 623 593 522 459 587 526 550  76 663 601 166 634 440 553 444 172 510 238
 333 311 530 600 622 287 286 581 624 239 515 488 467 570 584 478 583 561 270 619 271 499 117 415 520 537 486 424 481 217
 484 594 555 655 453 458 416 476 341 428  65 500 269 656 681 372 370 549 460 281  17 502 525 621 495 397 532 630 538 195
 329 462 657 456 487 383 451 463 473 461 395 385 599 331 562 506   7 417 531 496 687 396 573 409 505 450 345 536 429 334
 425 565 497 377 527 513 529 439 524 501 610 472 534 489 347 540 400 374 279 322 432 441 535 509 362 482 335 408 387 360
 632 466 365 835 310 431 868 284 249 518 402 589 474 483 519 455 572 282 490 390 359 352 569 469 246 263 309 391 494 449
 380 381 382 731 438 479 545 344 292 321 368 552 602 299 366 290 253 798 298 704 401 392 533 373 427 491 327 369 508 871
 436 465 294 865 480 640 477 596 257 724 516 176 378 197 215 188 357 442 809 815 308 361 471 288 191 412 324 786 636 411
 559 375 315 883 393 627 556 328 254 302 738 445 307 319 419 213 242 647 219 890 320 364 697 291 371 165 350 795 709 422
 423 233 283 682 216 845 485 208 296 388 413 312 258 446 761 235 231 831 349 693 592 247 877 250 340 300 367 591 695 668
 825 338 732 443 323 618 701 183 888 148 164 410 265 316 884 313 343 204 406 598 394 842 278 144 182 234 222 822 686 609
 514  43 774 688 301 717 806 872 243 251 199  99 756 154 797 229 430 223 853 745  72 128 893 202 293 264 193 780 304 692
 354 189 878 577 379 457 897 722 207 295 173 245 376 830 585 192 142 856 260 766 200 122 203 721 252 167 261 639 679 891
 626 275 355 711 356 887 899 158 130 737 106  67 751 177 900 862 268  61 163 752 272 110 351  97 886 241 105 808 662 742
 159 755 801 318 880 498 651 174 123 274 138 277 764 819 708 781 280 146 894 126 228 782 551 102 133 116 170 567 757 543
 539 120 713 196 881 625 523 119 407 211  70 149 896 179 492 785  45  59 895 150 113 244 769 255 874 870 224 824 730 558
 762 225 858 248 859 847 670  36 131 125  69  52 521 854 276 882 171 725 760 437 475  58 160 885  63  60  98 783 773 652
 759  37  64 889 841 811 641  50 799 259 576 151 892 750 723 650 124 796 118  82 145 348  93 753 689 140  95 864 336  40
 285  91 649 578 209 869 726 155 115 201  81 787 898 770 220 812 108 121 828 694 153  41 715 107 100 103 810 816 844 629

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.32064e+06us (= 2320.64ms, 2.32064s)
Wall-clock time (full program): 2.3739e+06us (= 2373.9ms, 2.3739s)
Satisfaction error: 0
Number of search iterations: 1013
Number of local moves: 612 (including on plateau: 126)
Number of local minimum: 59 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8231
Total number of local moves: 6382 (including on plateau: 2494)
Total number of local minimum: 251 (including on plateau: 171)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 114  96 898  46 757 597 109  53 875 144 695 798 736  44  59 141 834 676 799 894 113 838 885  56  93  48 863 209 150 895
 878  88 564 277 570 670  97 762  99  49 854 778 817 103 195 119 549 701 107 708 484 715 179  45 145 121 846 828 388 779
 428  71 517 155 876 690 647  87 133 796 473 793 105  78 183 185  80 832 100 754 704 574 881  52  84 686 839 868 159 685
 389  39 845 891 880 110  70 882 824 123 709 869 229 112 219 129 128 648 831 650 281 861 746 688  85 181 167  69 795  65
 329 253 900 244 711 776 192 294 774 168 866 852 106 163 210 238 231 888 171 169 797 856 142 184 266 841 794 241 193 666
 887 165 879 187 489 810 258 149 282 800 591 508 120  42 208 251 874 609 599 280 678 694 101 254 545 122 693 349 304 787
 227  76 245 140 867 747 849 104 257 740 436 729 194 116  67 284 178 865 242 823 847 822 471 897 136 170 871 226 154 735
 205 117 111 314 612 658 350 892 423 816 505 346 118 307 275 311 872 675 434 236 588 632 521 335 644 237 661 483 298 539
 158 276 889 289 758 750  86 200 890 285 535 724 415 138  77 221 398 830 833 305 884 252 330 177 223 769 585 333 175 730
 625 327 515 161 728 808 259 348 313 753 745 536 199 332 804 222 270 272 196 443 896 358 445 342 412 263 513 370 225 835
 341 135 477 273 567 812 182 186 373 837 893 300 176 204 712 374 224 322 344 899 575 395 235 278 302 420 703 780 345 851
 382 487 115 228 660 334 317 533 462 524 581 697 157 355 408 297 265 361 559 414 842 456 402 230 401 768 579 850 465 386
 853 634 201 351 523 578 406 267 306 336 557 440 424 404 718 347 482 546 356 447 652 416 584 522 478  95 663 372 309 248
 375 380 480 400 531 556 343 419 365 437 551 326 268 442 510 369 528 576 431 498 858 409 628 457 308 368 485 378 413 426
 363 274 328 696 540 448 496 288 461 472 571 544 422 519 379 357 292 454 520 407 488 565 430 451 550 439 541 339 387 494
 410 514 474 418 500 385 213 391 511 518 582 493 411 595 504 301 331 396 240 653 604 596 438 459 573 262 399 479 512 353
 554 548 492 467 377 707 446 516 427 532 381 525 529 608  32 497 403 507 299 723  92 376 476 371 425 325 367 552 491 470
 589 610  89 537 362 486 558  20 627 323 390 337 499 618 732 460 639 433 455 441  37 421 635 464 561 655 291 495 553 198
 151 503 189 646 312 452 614 501 475 643 247 469 630 340 626 543 481 657 164  15 261 633 286 466 583 534 295 592 641 566
 239 761 429 562  83  72 572 624 719  54 432 463 601 682  18 621 605 393 684 502 180 468 669 764 629 453 264 152 602 218
 555 490 620 580  74 188 616 706 364  61 352 547 638 698 654 586 124 642 360 689 394 590 613 659   7  98 212 568 664 166
  82 674 687 563 127 234 637 593 147 587 256 538 607 526 615 569 802 197 623  90 318 173 530 622 716 649  13 354 784 202
 819 542 662 737  64 321 744   1 598 594 190 246 636 631 279 560 717  27 417 749 172  50  94 699 700 449 271 756 651 139
 815 789 705 458 366 153 777  21 725 683  26  14 765 870 806 775 290   9  40 722 162 102 671  23 748 790  75 296 713 126
 791 645 137 783 319   2 741 771 383 665 249 232 617 603 215 577 702 146 600 677  63 131  47 656  58 611  57 738 680 619
 667 673  43 710  24 283  17 681 668 506 132  35 527 811 826 803 770 148 733  34 160  79 781 755 640 679 287   6 721 316
 191 883 217   3  68 130 444 763   4 338 134  11 873 731 801 860 509 211 766  29 734  30 672 233 886 743 450 739 742 320
 359 859  25 864 384 269 836 857 250 125 293 310   8 805 782 862 692 260 767 203  60  28  12 843 786 807  31 220 877  41
 720 785  55 691 324 174 825 751  66 214  73  22 840 820 788 827  38 143 809  10 435 752   5 760 772 206 397 792  16 405
  19 821 727 844  62 315 814 855 714 392 216  33 848 818 813 829 207  91  36  51 156 243 606 773 759 726 303  81 108 255

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.63104e+06us (= 2631.04ms, 2.63104s)
Wall-clock time (full program): 2.68584e+06us (= 2685.84ms, 2.68584s)
Satisfaction error: 0
Number of search iterations: 1419
Number of local moves: 1043 (including on plateau: 403)
Number of local minimum: 62 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10725
Total number of local moves: 7077 (including on plateau: 2875)
Total number of local minimum: 520 (including on plateau: 214)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  18 106 480 555 314   6 855  50 790 822 363 757 791 254 806  81 710  92 795 838 271 255 339 146 172 825 127 296 833 768
   1 789 428  11  53  78 816  39 712 828 100 839 588 244 133 150 741 823 752 740 117 383 867 745 756 728   4 170 750 130
 147 232 820  14 359  15 805   9 819 513 135 844 787  37 774  23 269 786  56 847 145 696 693 803 794 708  60 608  19 698
   5 785 726  80 333  21 616 251 645 761  69 744 549 218 781  87 196 776 636 691 132 220 701 742 797 760  44 152 818 179
 264 582 160 773 832 155 854 192 711 633 177 737  48  71 729 808 809 747 719 733 114 248 614  94   2  43 736 210 700  20
 575 606 227 723 535 439 714 141 654 694 119 775 671  93 195 763 104 481  88 579 317 836 829  41  45 799  59 554 798  61
 656 849  64 755 128 338  31 138 675 672   8 634 648  29  89 699  16 830 735 644 313  47 527 281 599 577 792 312 676 753
 621 680 164 642 558  82 727   3 578  34 134 662 686 388 159 758 762  10 626 640 215 221 151 565 788 612 665  42 639 703
 658 679  28 652 722 253 770 619 589 717 174 311 378  55 594  36 666 197 550 655 110 330 131 629 509 613 649  62 638 541
 274 556  26 670 495 376 490 702 570  25 375 661 678 458 506 605 592 315 767  96 334 148 514 596 587 609 569 167 610 144
 571 412 559 653  99 233 627 635 706 492 358 533 572 242  38 597 681 724 557  77  32 109 260 499 650 669 525   7 721 677
 576 659  66 424 546 448 664 470 526 520  65  12 674 622 783 580 689 229  84 586  22 120 562 667 496 568 487 224 539 607
 420 536 521 471 462 158 387 295 630 429 393 459 643 371 410 544 440 399 466 531 441 442 516 341 573 553 477 391 305 511
 223 530 343 529 390 373 465 455 583 501 547 498 517 519 515 431  17 500 137 604 432 434 510 660 379 628 451 401 449 494
 405 403 478 456 464 454 444 488 337 443 505 518 483 560 484 268 360 598 453 430 447 581 489 421 377 603 169 475 528 394
 345 563 423 357 482 324 370 461 427 400 545 353 601 463 356 479 438 413 381 493 416 522 593 504 507 469 485 859 288 198
 707 414 419 369 425 523 885 367 263 474 715 491 486 285 896 252 374 411 409 595 287 512 407 532 354 473 301 225 452 212
 335 397 865 460 422 417 540 340 396 238 368 344 584 382 304 380 437 552 364 325 683 731 720 892 270 372 321 508 276 292
 181 436 537 673 336 433 322 328 258 450 687 812 472 418 395 615 362 734 426 294 538 777 293 631 267 189 291 543 468 349
 286 392 871 265 886 800 283 647 415 316 824 366 323 386 435 332 361 497 261 406 651 843 331 290 199 318 282 804 156 289
 398 329 602 347 882 704 402 298 408 899 365 300 266 524 168 327 351 299 350 284 879 801 695 303 346 245 272 796 355 320
 273 326 851 201 234 618 319 821 877 204 389 206 222 889 247 302 214 697 275 219 872 600 827 243 216 228 863 841 250 191
 862 307 856 116 739 668 154 188 310 348 743 277 230 813 184 730 897 211 239 161 858 884 149 257 180 685 187 772 125 385
 209 446 779 404 262 807 162 748  54 166 713 153  74 782 881 352 236 240 457 171 769 309 793 445 202 249 766 817 217 852
 780  90 476 259 185 883 256 784  70 143 754 175 241 467 203 183 725 566 585 111 815 611 237 887 890 279 165 732 121 842
 738 190 567 810 623 716  33 765 235  97 876 280 103 692 173 840 874 123 163 688 814 534 231  83 870 182 207 617 186 205
 561  57 684 888 861 835  85 746  91  68 749 107 845 811 342 564 105 208 102 306 751 637 113 246  98 193 898 657  73 834
 682  51 157 868  86 718  67 873 122 641 591  76 200 880 551 850 590 136 894 112 548 574 226 831 108 126 893 124 764 176
 866 900 308  27 663 869 194 802  40 278 826  49  13 705 759 101 384 846 297  35 502  52 118  95 620 140 895 646 632 853
 878 213  30  63 139 771 178 860  24 709 848 542 142 857 625 778 115  75 891 624 690  58  79  46 864  72 875 503 129 837

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.00925e+06us (= 3009.25ms, 3.00925s)
Wall-clock time (full program): 3.06483e+06us (= 3064.83ms, 3.06483s)
Satisfaction error: 0
Number of search iterations: 1622
Number of local moves: 1159 (including on plateau: 672)
Number of local minimum: 54 (including on plateau: 63)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12903
Total number of local moves: 8267 (including on plateau: 3771)
Total number of local minimum: 724 (including on plateau: 291)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 877 282  89 711 737 146 828 754 707  52 597  87 132  49 815 110  86 870 885 145 112  69 788  38  57 583 651 565 799 894
 890  58 581 176 691 715 751 863 777  97 577  34 156  70 702 801 161 157 871 107 106 361 883 159 138 408 644 500 771 310
 502 163 208 137 898 190 854 768 855 130 136 719 620  50 873 645 287  65 746 150 116 895 682  99  55 580 463 679 729 221
 867 360 222  80 808 148 891  93 860 207 378 178 784 168 655 869  64 242 114 690 141 888 880 100  71 461 886 490 756 164
 548 312 277 899 633 328 766 368 864  79 152 122 656 304 288 761  88 714 884 896  36 192 881  28  74 201 195 823 772 374
 723 301 227 842 575 144 405 172 591  67 875  54 661 524 798 843 143 187 810 140 280 183 632 226 841 229 218 706 847 271
 462 859 311 767 709 261 203 477 637  62 281 387 634   9 698 824  48 225 786 131  59 233 782 858 170 321 649 625 856 191
 775 435 147 314 592 173 889 893 516 251 275 253 671 831 806 235 246 243 296 285 250 306 779 439 252 609 638 762 231 123
 827 753 728 219 349 260 371 217 878 129 175 188 832 313 341 205 388 272 351 181 428 849 369 379 249 619 819 544 833 449
 214 586 900 182 336 234 730 212 315 892 267 254 750 329 474 228 350 400 202 256 897 268 868 305 259 582 727 648 542 308
 724 647 327 298 396 332 105 403 879 630 211 295 740 320 263 366 390 284 179 232 520 392 741 279 354 821 809 789 412 377
 519 536 174 206 317 426 223 303 834 270 340 874 692 646 440 326 257 506 550 278 269 372 839 410 290 476 765 606 355 416
 601 804 248 352 423 238 385 331 732 467 441 198 807 629 309 470 255 316 291 204 399 245 483 333 273 787 845 802 404 443
 424 530 469 375 389 531 297 318 216 545 466 492 419 358 539 498 563 621 363 406 386 446 444 319 450 590 742 418 393 508
 323 431 307 617 493 401 445 266 339 380 720 322 417 491 509 513 345 475 382 642 488 588 599 422 456 353 325 700 334 432
 457 409  60 413 538 415 335 471 472 611 342 433 525 397 473 370 605 489 628 451 398   8 537 560 666 517 427 604 540 364
 639 438 543 348 568 494 527 529 484 486 612 383  98  63 447 613 598 558 556 485 738 569 346 460 480 120 411 139 481 302
 442  10 703 559 455 507 184 546 668 510 518 573 357 571 511 534 367 356 600 555 495 454 162 551 503 501 283 197 391 452
 402 293 557 526 414 394 459 240 189 421 650 535 180 688 514 584  43 574 512 528 384 733 258 795 420 479 407 194 564 578
 430 213  83 561 478 608 589 689 101 579 126 614 337 244 570 533 662 541 694  78 482 616 274 739 721 299  51 343 602 658
  68 610 553 615 262 678 566 624  24 338 104 505 115 635 497 663 562 657 673 496 623 576 153 593 699 108 111  61 674 672
 215 437 708 636 567 652 554 710 196 547 659 743 165 395 239 640 701 660 381 631 596  35 118 693 654 128  73  84 499 199
 125 300 676 704 135 549 797  72  66 725  56 683 158 760 594  31 726 552 748 736 764 695   1 665 680 236 200 185 149 747
 177 425 607 734 618 643 359 769  27 840 681 587 169 186 113  13 776  44 755 731 677 749 133 626 675 362  76 142   7 814
 344 124 722 641  16  90 826 622  41 836 572 585 523 705  94   4 846 365  53 800 627 292 276 696 791 448 347 264 171 794
 224 796 713 119 155 816 103 670 465 684 109 758 167 521  46 735 685 773  82  18 866 595  91 718 865 667 265 151   5 653
 436 717 210  22 790 759   6 230 154 793 822 669 330 697 117 286 818  39  17 825 763 686 294 882 805 373 757 134   3  81
 241 532 522  85  30 783  26  42 468 603 664 785 429 853 237 712 803 774  77 770 744 716  75 193 687  32 247 289 209 887
  37 376 830 515  47 820  12  25  33 850 872 453 487 852  95  92 835 811  15 876  23 464 102 829 861 781 324 220 166 812
   2 778 813 862  96 780  29 838 127 434 837 752 504 857 458  11 817 745  14 792 848  40  45 121  19 844 160 851  20  21

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.9208e+06us (= 2920.8ms, 2.9208s)
Wall-clock time (full program): 2.97446e+06us (= 2974.46ms, 2.97446s)
Satisfaction error: 0
Number of search iterations: 1470
Number of local moves: 788 (including on plateau: 309)
Number of local minimum: 86 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12409
Total number of local moves: 7356 (including on plateau: 3325)
Total number of local minimum: 677 (including on plateau: 258)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  40 585  44 182 175 866  80 735 137 123 646 655 606  33 127 836 716 791 559  69  42 651 877 653 558 879 855 876  85  34
  56 851 692  81 725  29 600  86 106 840 353 841 720 131  55 869 147 770 697 196 134 857 835 832 116  59  99 894  52 792
  35 824 887 257 204 642 595 872  76  71 183 662 883 152 153 628 882 852 669  78 627 794 143 789 136  46 159  67 254 895
  61 843 519 859 548 741 863 719  92 730 163 694 118 441 157 185  75 758 779 494  50  96 861 799 129  48 631 689 166 207
 259 778 816 885 712 205 860 575 176 167 848 839 318 148  18 771 198 731 830 178 763 155 294 424 160 141 218 678 130 240
 168 833 235  98 822 900 237 556 109 587 639 392 687 203 113 206 612 850 740 114 640 279 249 667 477  53  88 881 234 846
 337 854 202  63 624 484 814 457  51 262 172 543 227 230 177 161 765 893 679 232 621 231 191 853 834 165 320 291 898 884
 174 867 324 214 590 314 253 241 145 858 891 746 149 277 302 223 275 650 875 173 562 286 683 750 892 344 190 812 213 242
 313 372 415 292 753 802 154 290 880 471 512 708 219 221 555 403 342 189 793 225 705 288 456 220 837 269 350 356 874 251
 170 184 226 247 732 260 296 340 299 820 888 871 391 374 387 421 261 591 762 188 699 379 307 749 890 236 676 311 310 250
 380 435 769 396 711 659 297 657 276 438 647 784 263 304 186 321 293 312 838 829 593 367 366 244 390 412 316 345 416 271
 544 450 224 274 284 523 365 733 282 265 488 896 722 268 283 281 423 323 357 401 797 432 306 596 886 347 335 222 319 889
 169 303 359 398 355 684 410 668 433 464 899 645 743 430 483 246 332 216 377 597 827 369 385 436 315 245 677 317 273 460
 466 395 492 434 409 393 341 499 402 439 469 334 381 501 264 451 878 541 583 475 461 394 386 455 493 506 429 351 511 382
 329 309 644 564 343 327 520 389 328 378 522 420 426 331 437 449 458 496 383 540 619 508 346 422 408 418 362 897 348 594
 534 531 550 517 529 406 411 557 400 417 371 405 463 217 454 376 542 404 502 532 476 478 336 514 255 566 473 470 384 445
 338 427 552 482 567  68 364 238 524 370 115 330 487 497 440 447 495 373 505 468 489 397 580 586 654 588 425 560 515 634
 490 563 525 354  91 604 601 103 611 479 453 603 537 527 570 695 498 126 442 658 301 742 509 215 546 577   7 578  30 480
 760 474  47  93  43 572 549 233 553 428 248 414 194 503 486 620 518 521 375 513 266 448 690 615 609 462 491 661 568 561
 755 605 700 625 538 267 652 618 656   2  66  84  27 507 528 576 737 526  54  23  49 569 636 504 101 649 616 571 592 682
 617 444 467 707 108 112 672 138 547 516  57  20 574 443 660 510 199 171  70 459 535 630 598 500 551 536 664 723 674 613
 641 119 610 465 124 102 648 481 726 734 110 197  38 681 704 817 626  97 122 485 111  41 751 407 637 579 200 717 847 698
 539 608 706 688  45 287 554 144 671 782 530 211  58 643 431 104 663 622 164 533 132 368  13 360 714 632 298 691 686 638
 665  79 150 582 333 121 808 258 774  10 573 180 151 728 767 670 744 623 156 635 228 599 602 181 229 748 589  24 701 607
 804 107  83 614 308   9 565 252 680 759 545  36 326 815 785 800 764  26 187 736 322 745  95 142  12 775 738  21 761 703
 757 192 718 727 873 201 419 788 272   1 280  65 685 675 826   4  16 729 289 786 193 821 756  87 752   3 796 140 633  31
 709 117 673 842 864 702  77 388 862 352 798 243 806 773 868   5 452  25 295 721 358 766 339 195 105 819  94 133  60  74
 772  28  37 693 270 629  22 696 828 739 325 209 715 831 845   6 305  62 162 787 285 710 803   8 256 811 780 158 724  19
 823 128  72 747 363 805  89 790 865 300 278 349 776 813 584 666 179  39 146 581 849  15  90 239 361 795 783  64 844  82
 810 210 777 135 472 801 399  14 754 713 446 139 825 818 870 768 120 208 125 809 781 100  32  73 212 807 856  17 413  11

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.31129e+06us (= 2311.29ms, 2.31129s)
Wall-clock time (full program): 2.36604e+06us (= 2366.04ms, 2.36604s)
Satisfaction error: 0
Number of search iterations: 1079
Number of local moves: 710 (including on plateau: 257)
Number of local minimum: 52 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8152
Total number of local moves: 6083 (including on plateau: 2207)
Total number of local minimum: 316 (including on plateau: 171)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 627  81  96  54 707 795 183 882 875 194 171  44 730 846  64 789 112 764 508 570 842 722 639 740 200 141  66 132  72 869
 770 491  78 879 854 782 146 772 586  94  68  70 714  61  50 810 897  82  52 685 729 417 147  58 101 784 816  38 765 719
 866 203 900 257 798 868 117 189 746  77 381 128 833 831  43 776 421  49 153 701 566 870 587  71 107 120 212 817  85 743
 826  90 457 885 742 111 511 892 814 616  65 109 186 827  83 813 131 839  88 758 794 105 617 116  57  93 876  40 279 695
 851 895 873 227 720 881 244 546 726  67 145 280 861 157  69 780 211 735  45 874 871 195 129 110 287 452 246 136 161 741
 893  99 198 176 166 752 340  97 676 209 800 305 479 574 190 760 155 649 139 732 825 788 877 113 878 174 122 192 261 896
 850 898 342  41 890 783 623  80 715 324 245 104 739 829 197 567 328 629 188 738 492 269 150 193 808 205 143 335 164 646
 670 230 119 177 207 294 234 812 703 303 332 225 865 264 289 834 253 561 223 836 727 867 883 201 133 830 255 229 202 757
 678 175 206 365 240 108 267 674 886 154 233 356 731 273 853 219 236 845 222 891 894 880 811 359 284 543 249 298 314 271
 579 182 306 347 348 313 204 568 618 856 716 393 644 315 532 243 366 805 309 572 673 786 832 196 167 622 235 325 213 250
 406 299 268 889 318 802 353 840 389 337 887 265 692 402 210 385 379 737 214 338 671 270 254 262 297 755 156 361 355 724
 504 522 258 322 341 519 354 595 598 281 345 311 360 316 277 409 140 763 822 349 655 278 413 428 382 858 351 552 809 403
 565 304 445 357 455 380 377 710 449 431 308 259 605 448 472 310 358 404 501 599 563 247 398 489 523 884 488 516 396 274
 312 444 899 295 285 408 596 542 418 352 300 888 438 296 458 430 462 496 461 420 578 362 327 484 454 628 329 319 344 490
 391 419 331 422 374 292 576 700 615 505 350 260 582 370 548 575 571 334 364 407 564 425 372 323 321 483 526 272 690 553
 288 588 434 424   8  29 480 460 436 527 459 426 497 433 439 558 556 427 498 620 317 506 667 559 443 478 440 604 400 514
 405 415 383 283 580 469 634 493 367 495 450 476  16 515 368 601 346 612 451 416 453 432 487 528 470 510 149 544 631 536
 399 660 475 456 466 539 635 124 471 474 650 535 162 401 486 375 638 184 513 307 386 540 590 412 614 369 562 509  62 521
 231 187  17 668 538 606 645 473 330 551 429 446 442 581 609 463 694 524  42 276 388 592 447 502 591  48 477 661 589 468
 376 633 531 464 373 594 390 517 333 503  20 554 326 583 507 600 624 237 688 320 216  35 652 485 632  86 691 550 771 224
 137 672 557 541 512 621 677 239 251   9 749 642 252 611 343 533 815   7 806 178 482 534  51 656 664 179 679 371 687  60
 121 659 697 569 709  63 636 411  56 499 680 530 282 148 619 573 637 180 665 290  79   2 712 607 603 529 754 648 384 173
 560 689 657 666 159  73 640 286 293 641 683 555 170 718 675  39 708  36 753 208  14 125  76 855 713 435 704 777 465 142
 238 702 682 686 625  11   6 163  59 799 717 577  89 221 844 191 134 643 801 126 242 745 684  10 585 494 796 751 756 138
  37 549 790 733 593 441 681 584 547 706 736 630   5 748 769  27 103   3 653  74 226  87 721 761  15  95 711 728 115 647
 130 608 363 610 160 597  34 437  98 775 537 734 301 819 696 144 863 339 693 127  13 602  55 651 792   4 848 747 518 220
 106 835 102   1 699  91 768  24 168 698 256 849 158 662 767 199 860 500 821 291  47 414  46 785 778 395  22 773 774 626
 135 663 467 118 232 654 787 217  28 818 803 862 241  32 843 151 705 525 820 266  18 185 263 852 669 804  84 481 759  33
  19  75 791 779 114 613 520  23 172 397 725 864 392 181 387 336  31 228 215 423 169 841 218 837 847 859 766 797 744 152
 545 248 793 824 302  26 857 165  92 823 275 838 723  53 828  25 781 378 807 123  21 394 410 872 100 658 762  12 750  30

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.26574e+06us (= 3265.74ms, 3.26574s)
Wall-clock time (full program): 3.32379e+06us (= 3323.79ms, 3.32379s)
Satisfaction error: 0
Number of search iterations: 1382
Number of local moves: 958 (including on plateau: 374)
Number of local minimum: 58 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13328
Total number of local moves: 7485 (including on plateau: 3204)
Total number of local minimum: 930 (including on plateau: 250)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 201  40 899 812 805 825 105 220 768 645 459 865 747  32 116 584  82  21  69 875 123  80  67 878 664 841 677  76 869  70
  98 423  64 885 696 725 690 621 834 175 486 863 761  68  58 654  63  43 226 138 302 861 236 895 102 852 624  83 778 211
 234 868 183 210 508 772  72 130 665 126 891 897 855  71  44 766  87 104 153 103 809 626 111 777 494 835 798 531 736  59
 160 219 845 818 127 672 202 154 225  94 134 862 135 152 754 815 110  55 141 686 771 828 662 788 140 876 886 108 800 296
 157 112 188 746 650 849 871 147 193 542 180 501 813 753 257 199  22  41 560  89 683 853 260 840 881 842 767 235 192  92
 190 161 128 708 823 481 216 224 727 555 115 239 893 605 181 738 237 121 182 223 751 212 757 735 892 887 606 146 660 122
 248 218 271 231 118 821 745 124 313 262 295 879 251 743 232 819 159 332 261 100 870 142 794 860 668 233 581 256 846 843
 214 375 149 750 187 769 836 833 780 221 101 203 179 519 213 620 322 195 684 205 567 259 866 706 600 589 838 200 351 184
 228 185 174 243 827 752 824 270 894 568 209 206 357 707 208 844 263 194 240 143 730 831 155 647 796 171 615 279 793 162
 368 336 129 376 848 789 337 246 733 900 282 207 286 594 358 191 321 222 773 543 880 300 335 898 362 284 811 266 299 241
 388 217 276 341 776 628 349 354 273 586 801 526 330 653 323 864 272 317 762 301 391 291 399 596 310 722 630 258 307 274
 400 369 847 303 424 569 252 247 455 806 297 787 346 404 803 319 608 378 320 363 348 396 405 517 755 306 325 397 409 360
 377 308 457 344 327 889 370 281 425 689 385 365 345 850 366 382 398 383 612 283 290 361 856 532 492 540 453 475 364 316
 416 318 367 355 331 502 550 473 265 820 510 387 406 343 433 464 514 427 340 412 379 338 280 642 439 469 830 334 312 859
 326 478 373 401 350 392 407 491 474 476 525 456 445 505 428 452 394 507 527 410 438 553 449 339 480 547 533 443 417 499
 563 489 496 437 468 444 458 403 554 509 479 381 462 384 446 420 395 422 460 440 454 430 413 347 441 415 599 485 432 389
 580 418 450 390  73 436 521 506 518 538 411 426 545 466 544 565 549 570 493 477 431 655 546 227 470 566 167 120 471 386
 522 564 530 503 497 414 595 512 442  93 558 536 592 186  15 537 583 523 156 529 590 535 463 374 133 619 482 465 419 548
 576 447 490 451 633 408 249 498 511  84 429 372 559 264 495  24 520 487 277 472 658 513 597 371 571 435 278 681 534 631
 483 285 500 667 617 342 607 710 582 204   9 618 579 636 551 552 524 587 359  54 585 611 515  35 561   8 402 640  12 680
 652 516 613 673  33 294 578 541 556  25 573 113 635 311 574  85 637 627 165 656 269 669 610  50 298 670 253 609 632 598
 659 575 663 488 593 139  11 693 173 275 701 625 726  31 467 697 356 810 577 638 562  99 644 539  91 197  60 639  88 699
 602 739 694 691 641  51 718  57 604 328 700 629 504 245 748 158 603 783 393 649 106 614  78 304 169 144 170  56 666 671
 588 712 675 622  19 178   2 679  45 717 716 643  29 448  79 109 759 703 688 695 238 723 770  20 244 702  37 785 267 623
 674 698 704 166 646  10 732 709 591 287 661  95 779 196 720 176 705 742 528 729 137 715 114 119  36  74  27 867 714 164
 741 721 756  49 678  23 711 799 314 648 651 145  65 731 758 572 724 719 421 873  39   4 198  42 229   6 163 808 242 685
 854 657 713  90 150  96  86 786  81 380 795 333  26 132 802 288 676 792 740 760  52 634 784 177 557  46 309 874  38 807
 775 804   7 136 148 131 255 781 168 749  30 215 790 797 764 352 872 791 734  16 250 293 774 117 851   5 254 890   3 763
 888 829 826  28 230  17 682 737  47 329 315  34  13 832 896 268 883 837 858 839 125  75 324  77  61  18 189 744 692 822
 353 434  48 601 292  97 484 289 305 884 817 107  62 857 882   1 877 782 816 814 687  14  53  66 728 616 151 765 172 461

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.60575e+06us (= 2605.75ms, 2.60575s)
Wall-clock time (full program): 2.66121e+06us (= 2661.21ms, 2.66121s)
Satisfaction error: 0
Number of search iterations: 1415
Number of local moves: 868 (including on plateau: 374)
Number of local minimum: 62 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10690
Total number of local moves: 7217 (including on plateau: 3085)
Total number of local minimum: 446 (including on plateau: 228)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 529  39 134 787  27 155 853 697 878 837  34 245 272 104 824  49 226 358 830  82 158 836 826 804 237 888  56 872  28 850
 604 877 841 842 415 833 636   9 840  68  38 566  88 162 814   7 835 455 482 140 185 885 811 323  78 799  86   6   5 785
 319 831  20 817 196 801 781  30 876 232  22 726  92 127 857 789 538  31 748 225 223 815 383 401 711 793 142  10 150 829
  71  18 663 895 378 742  37  29 803 749 186 790 188 136 868 870  43  54 722 195 301 243 743 117 336 812 366 758 728 674
 376 765 832 810 144 238 862  35 747 210 118  32 207 316 590 844 848 116 662 132  41 688 192 322 311 491 178 766 795 847
 244 752 740 708  25  19 534  59 718 617 148 680 295 382 773 794 123 121 610  36 296 683 776 339  17 756 216 592 750 712
  26 741 699 679 754 696  61 622 648  74  40 818 217  62 735 691 713 527 644 255 320 204  90 229 170 576 181 634 689 720
  45 736 780 638  60 714 686 113 700 701 549 619 198 107 555 532  65  24 557 214 290 347   1 507 574 822 288 706 666 721
 294 761 692 179 676 584 422 673  23 650 228 704  12 108 632 626 365 613 625  96  79 693 607 177  16 800 236 624 643 677
 129 553 612 707 464 672 559 665 715 278 645 304  13 535 324 552 130 414 550 194  67 664 605 307  11 623 363 554 744 562
 106 729 536 655 522 578   3 291 509 609 386 524 633 369 651 586 581 375 533   2 381 635 642  97  84 640 235 545 514 564
 199 483 608 380 513 563   4 597 539 433 596 575 639 374 603 447 515   8  14 432 594 518 684 399 512 353 161 618 543 611
 502 537 473 341  33 477 187 499 528 531 657 595  87 540 462 329 547 314 410 308 487 523 570 561 681 598 334 510 441 453
 408 338 587 516 488 463 356 583 591 602 601 506 467 530 371 450 446 489 326 449 354 526 497 520 454  15 184 370 558 470
 459 344 384 542 471 417 180 685 505 439 379 418 479 420 503 428 350 486 492 508 480 404 475 405 571 495 392 440 521 443
 445 481 419 431 451 519 504 427 448 349 501 360 303 494 458 277 647 517 258 426 407 687 628 476 398 434 567 411 425 367
 409 297 478 330 298 560 394 293 600 496 264 456 403 209 372 421 331 767 240 620 694 242 879 641 281 808 565 292 452 423
 500 444 468 265 289 279 884 368 263 490 548 413 390 397 460 377 205 208 637 723 682 438 262 671 709 318 525 890 164 248
 745 389 310 436 359 361 406 391 333 312 412 828 599 469 306 388 393 737 854 435 649 313 400 461 191 342 568 346 345 437
 768 472 317 348 364 189 283 511 352 724 668 239 387 315 429 249 834 869 309 661 784 267 321 615 234 424 716 233 282 351
 734 466 474 247 395 457 544 357 355 856 465 280 819 396 224 362 416 887 325 585 385 219 149 572 759 373 588 343 332 151
 788 271 402 299 821 218 231 792 222 300 266  73 886 796 241 493 141 695 261 782 430 858 337 710 892 246 705 171 131  57
 725 328 230 269 227 287 139 485 213 105 220 865 889 880 285  98 864 193 137 731 546 442 852 630 823 201 582 816 270 183
 616 252 119 268 859 256 675 284 163 173 838 698 825 873 302 254 197 855 340 846 659 166 670 276 783 221 579 156 165 147
 631 305 327 159 849 845 573 797 250  64 614 202 732 769 335 110 593 871  58 757 200 182  42 551 738 126 606 251 176 802
 577  80 109 152 813  99 656 167 122 702 874 168 764 807 203 882 658 791 169 772 760 120 100 556 259 172 751 275 894  63
 580  46 145 569 762 143 154 654 133 861 786 621 498 763 146 746 866 805  66 589 719 115  53 755 484 128 899 124 257  48
 211 253 883  89 843 190 274 897 114 891 753  83 653 867  50 160  69 717 157 851 827 135  81 775 770 111 777 896  94  44
 669 875  95  55 733 260 774 727 174  85 798  51 820 541  72 629 273 125 690 739 678 646 212 112 779  47 771  91 893 101
 806  52 138 102 286 900 863 778 153  77 881  76 660 667  70  75 703  93 809 730 839  21 627 206 652 103 898 215 860 175

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.2195e+06us (= 2219.5ms, 2.2195s)
Wall-clock time (full program): 2.27243e+06us (= 2272.43ms, 2.27243s)
Satisfaction error: 0
Number of search iterations: 862
Number of local moves: 745 (including on plateau: 237)
Number of local minimum: 26 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7761
Total number of local moves: 6158 (including on plateau: 2176)
Total number of local minimum: 258 (including on plateau: 158)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 610  38  72 849 549  80 870 888 894 735 135 814 617 764 118 871 659 107  53 102 178  92 692 817  94 856  63  28  39 831
 854 875 843  56 818 811 675 136 890 688 572 106 718 153  33 884 815 706 108  32 661  51 127 239 878  69  54  64  31 568
  25 214 845  47  57 591 862 110 773 892 696 865 588 650 156  95 160 877  49  74 853 830 424 396 217 159 230 898 308 574
  68 185 132 855  91 304 597 670 783 896 499 616 710  87 229 796 825 621 147 384 158  45 165 860 281 545 899 188 152 727
  62 162 859  34 889 197 732 184 362 794 491 797 886 768 233 826 139 220 211 769 881 111 195 703  79 587 130 164 851 199
 207 202 141 216 212 868 848 201 893 844 840 191 673 309  73 292 224 869 124 125 847 171 267 771 887 500 148 558 209 805
 174 140 221 151 724 895 618 149 861 756 739 361 780 791 286 251 880 299  99 154 278 648 314 784 404 155 290  93 519 701
 218 189 347 390 303 461 556 806 681 520 296 846 874 117 215 263 168 795 280  89 339 535 841 777 270 857 245 180 291 766
 240 258 244 177 208 448 570 273 879 608 331 813 751 253 399 204 354 528 348 319 852 891 799 276 196 808 121 360 782 225
 100 187 478 363 182 790 693 297 642 529 835 312 858 779 243 234 241 302 366 298 716 729 656 425 536 391 231 761 203 138
 351 265  98 475 260 169 638 441 400 272 785 277 820 882 411 330 310 375 313 633 416 252 671 352 876 627 350 787 248 431
 346 249 401 223 275 371 565 315 646 897 406 837 733 866 364 333 261 394 548 259 547 674 583 340 378 344 320 422 329 289
 324 328 507 450 317 326 741 393 367 398 285 323 662 282 460 316 210 553 373 359 615 786 900 306 382 462 255 714 332 789
 440 506 358 379 445 455 563 334 438 412 318 510 415 294 301 465 605 469 850 250 321 418 485 376 446 433 484 883 335 527
 369 464 504 885 453 381 582 585 414 268 356 353 357 486 496 457 515 402 341 387 514 531 349 368 355 429 459 435 557 463
 377 458 480 397 516 374 641 546 426 505 444 413 439 449 479 428 530 395 336 389 288 542 420 470 513 456 492 380 544 388
 454 508 407 370 113 173 325 472 427 430 579 561 423 385 573 517 410 437 343 564 498 163 338 497 474 647 632 562 613 620
 538 482 483 601 593  77 247 600 494 502 541 501  86 409 518 471 503 161 586 403 284 417 104 481 626 567 602 490 552 596
 612 589 467 537 599  41 123 466 554 254 115 451 172 669 488 611 614 477 533 744 473 603 279 643 619 405 728  67 468 114
 555 522 392 578 452 622  90 476 581 521 271 487 421 609 523 584 678 560 577   7 432 194 566 715  15 128 539 525 383 512
 569 664 256 559 713 654  22 625 144  40 658 575 134 666 511 707 645 635 447 571  17 639 176 213 630  27 651 695 629  43
 580 711 590 576 550 532 337 754 181 232 222 624  42 524 722  84 322 770 372 594 145   2 131 509 699 443 640 327 749 551
 705 526 698 604 819  52  75  44 262 126 150 295  23  18 721 631 746 637 677 816 680 489  16 606 763 300 660 689 668  19
 657 793 663 634 832 649 493 684  11 105  83  81  70  78 676  14 628  48 778 667 687 419  82  29 742 266 694 682 598 672
 702 709 623 697 807  13 137 717  66 293 274 683 235 283 839 759  12  55 730 740 386 198 543 269   1 408 829 700 781  26
 873 238 827  21  35 723 305 652  59 206 731  46 112 143 824  71 686 690 775 653 129 655 800 748 738   5 116 726 736 192
 802 636 758  30 828 788 227 592  76 119 193 146 175 540 109 774  88 708 679 704  36 712 665 365 803 246 311 534 685 186
 822 864   3 804  20 734 166 264  24 434 765 205 345 122 838 120 307  96 809 863 755 720 442  37 595 836 747   4 167 607
 872 834 757 745 752 753 157  65  50  97 133 190 170 495 810 691 801 228 821 743 287 200 760  58  10 792 762 257   6 219
   9 719  61 812 103 183  60 776 237 142 772 236 226 644 867 436 179 101 842 823 242 798 725  85   8 767 833 342 750 737

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.79342e+06us (= 2793.42ms, 2.79342s)
Wall-clock time (full program): 2.84632e+06us (= 2846.32ms, 2.84632s)
Satisfaction error: 0
Number of search iterations: 1556
Number of local moves: 867 (including on plateau: 374)
Number of local minimum: 105 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11613
Total number of local moves: 7184 (including on plateau: 3031)
Total number of local minimum: 642 (including on plateau: 215)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 834 807  75  72 851 169 142 843  79 855  60 227 873 840 825   9 566 859 425 832 233 202  14 120  69 796 822  94 812 110
 815  15 505  71  21  23 739 817  37 281  22 684 854 810 872 793 742 311 800 700 773 203 362  13 373 868 105 858  32  16
 763 821  25 612 375 149 776  77 106  38  41 759 804 609 794 845 251 738   2 841 769  88 125   5 254 695 413  39 849 852
 359 104   8  64 746  28 801 765 766 363  35 570 865 753 870 878 166  86 667 827 818 154 243 266 114 690   6 708 198 597
 877 798  50 307 249 744 743 758  24 111   3  96 689  67 844 725 323 145  40 350 831 767 764   7 680   4 724 733 317 745
 730 286  57 303  47  76 795 811  78 314 697 507 808 722 686 598 220  42 785 678 712  30 117 140  36 772 713 755 265 735
  61 660 651 398 259 100  65 694  52 377  10  19 692 638 623 633 541 714 549 644 833 782 183 462 230 544 779 664 156 502
  68 777 673 209 189 672 676  12 496 234 639 819 702 791 594 663  97 647  18 671 683 188  82 275 305 123 705 587 168 752
  31 631 729 218  74 655 707 613 318 185 577  89 645 510 704 698 223 160 682 710 593 212 262 351 552 601 607 445 211 522
 555 727 629 165 119 624 369 803  56  29 547 621 650 536 582 646 164 508 571 217 675 636 200 333 177 585 548 400 215 628
 247 677 640 240 564 756 551 595 658  99 186 606 665 558 637 575  66 206 553  44 652 619 563 301  11 499 574 527  55 591
 181 473 657 102 415 542 491 634 728 199 561 497 662 481 579 643 116  91 661 560 754 513 276 353 103 654 339 520  43 687
 546 401 518 530 480 532 556 376 538 364 343 437 107 614 604 417  27 435 268 635 611 128 519 321 465 581 537 679 477 469
 484 485 421 493 449 431 330 452 506 573 460 426 338 464 516 352 504 618 483 395   1 605 282 386 514 528 525 479 458 557
 681 503 540 500 429 356 668 588 482 533 511 354 455 433 584  34 310 466 336 239 559 596 337 388 366 442 412 472 396 545
 347 382 468 419 269 378 427 381 494 385 589 856 627 360 334 471 365 367 492 402 509 424 580 653 418 572 600 250 440 256
 602 420 501 486 439 476 422 416 456 408 441 453 329 757 340 299 294 583 487 721 454 390 459 461 393 414 372 451 394 397
 816 444 341 750 749 384 345 344 432 411 434 368 498 404 346 443 838 392 270 319 328 313 410 592 387 210 191 474 835 447
 403 283 446 741 374 290 253 289 327 526 693 531 295 521 304 298 751 489 869 358 171 423 829 512 534 244 184 405 734 438
 236 278 280 599 312 272 470 315 467 778 701 245 326 529 271 316 847 615 274 383 309 550 515 608 809 463 187 430 731 399
 380 273 379 900 391 139 232 322 478 565 406 826 320 192 201 861 719 237 260 342 888 291 770 784 688 133 875 226 257 180
 288 348 109 703 361 285 252 899 562 691 370 332 293 409 277 302 837 267 193 371 136 848 617 630 806 221 214 287 783 824
 626 153  85 736 761 182 349 389 642 586 205 224 246 122 194 231 894 896 780 172 263 893 836 737 569 335 196  93 814 306
 616 134 264 786 774 771 876  59 331 622 799 324  84 146 248 174 895 428 850 297 213 284 357 887 603 255 132 225 874 207
 475 436 325 524 709 898 190 127 886 197 880 828 129 308 170 150 590 292 141 300 159 699 726 632 842 884 121 279 523  95
 175 740 789 610 891 871 113 163 696 641 670 787 118 235  45 144 775 723 179 457 138 219 490 488 706  26 883  53 517 173
 495 195 802 830 649 866 176 157 790 797 823 659 238 261 112 242 539 450  80  98 115 216 864 448 853 228 860  46 543  83
 208 258 897 578 229 879 161  51 648 885 204 137  81 152  17 167 625 747 857  90 130 669 715 656 355 296 813 889 567 554
  48 882 846 162 620 820 748  33 716 576 890 126  73 158 101 148  87 222  62 792  54 711 863 867 535 674  20 762 788 131
 568 124 805 407 720 147  92 732 666 892 718 108  49 135 241 760 143 781 881  70 151 862 155 839 768 178  58 685  63 717

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.96663e+06us (= 5966.63ms, 5.96663s)
Wall-clock time (full program): 6.02126e+06us (= 6021.26ms, 6.02126s)
Satisfaction error: 0
Number of search iterations: 4130
Number of local moves: 1045 (including on plateau: 607)
Number of local minimum: 358 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 33701
Total number of local moves: 11152 (including on plateau: 6544)
Total number of local minimum: 2789 (including on plateau: 504)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  39 866 820 860 224  43 147 473 121 828 178 740 831 246  55 812  24 857 762 204 868 780 839  14 129 115  16 735 455 434
   6  26 816 113 237  20 809 270 228 858 265 323 838 244 777 768 883 799  18 776 761 843  53 245  96 221 193 801 349 879
 649 754  10 770 174  13 830 262 292 750 130 692 782 191 810 847 736 836 461 110 772 791 426 294 131  60  41  22 852  27
 822 737 760  48  12 200 829 365  70 757  59 107 767 172  45 723 741 792 684 310 709 835  15 183 354 206   3 733 786 691
 615 848 646 711 441  79 827 256 205 811 109 103 841 408  58 846 713 783 779  85 814 759  98 218  67   1 123 305 687 279
 707 749 748 738 119 639 706   5  40 652  23 272 682 227   4 373 864 631 727  51 804 793 676 238  19 118 211 142 763 794
 704 795 683 538  71 620  38 120  65 854 105 168 672 389 606 636 807 753 638  75 301 642 666 196 201 599 179 318 578 498
 607 528   9 611 384 212 765  90  95 329 577 563 645 104   8 724 608 728 718 263 698 663 514 632 470 213 534 125 716 382
 720 665 560 659  64 268 547 210 156 494 149 654 743 360 614 569 621 532 774 472 537 545 668  78 137  25 590 160 576 368
 671 725 584 540  29 653 612 116  93  62 719  92 330 223 565 726 530 699 680 627 640 153 658 596 132 624  81 600 520 235
 695 602 561 610 189 579 660 111 686 575 215  91 677 117 626 623 352 522 696   2 512 648 630 580 233 669 144 286 474 150
 619 656 420 495 362 628 521 293 574 570 496 219 542 316 448 546 392 594 450 463 564   7 489 517 438 555 529 157 519 136
 557 572 468 531 335 539 457 300 502  34 358 411  83 491 622 482 729 503 488 559  88 585 634 510 480 593 499 533 541  31
 613 617 487 423  17 513 458 493 509 485 388 550 702 428 490 544 445 484 356  11 401 396 486 345 466 492 476 387 497 556
 447 511 525 377 674 518 283 355 471 478 500 475 371 339 399 526 391 403 306 353 437 536 508 505 419 432 573 451 535 417
 543 506 527 566 456 415 548 446 516 427 398 464 481 483 351 312 465 405 431 275 414 554 504 477 364 424 453 394 523 393
 436 407 878 410 675 317 479 589 250 449 409 308 320 515 406 367 452 390 460 307 267 299 348 369 647 376 567 346 815 657
 333 552 416 386 507 363 359 701 601 412 383 258 501 591 443 242 315 571 422 469 255 429 604 253 731 366 425 685 324 618
 321 278 454 444 597 325 314 869 273 400 374 842 395 805 332 313 209 338 897 297 304 397 553 637 251 296 433 430 347 790
 379 375 264 290 551 462 319 598 439 370 756 587 341 693 418 225 344 380 385 894 361 459 232 340 282 350 797 467 334 823
 186 226 295 342 746 276 106 865 381 880 271 326 145 817 378 322 402 274 413 833 845 372 248 635 705 885 199 661 311 170
 291 277 288 236 667 703 280 778 798 207 890 781 124 655 259 257 266 169 287 861 252 616 343 241 260 824 714 681 261 249
 164 188 421 247 789 664 208 605 874 440 281 849 197 583 327 177  76 138 435 800 176 302 155 751 679 717 730 697 167 678
 231 240 180 331 603 269 899 633 870 229 581 285 220 755 216 148 128 190 337 876  80 100 357 863 745 784 643 769 187 766
 162 151 289 234 895 192 303 715 785 214 893 825 336 712 198 217 134 222 159 818 173 126 230 689 900 764 821 650 184 524
 171 154 254 152 625 775 185 747 773  87 892 808  46 568 708  68  44  30 298 771 309 690 867 629 898 888 752  57  94 175
  99 161 803 872 889 819 146 609 582 133 549 670 592 796 734  72  47 141  86 758  37  50 722 806 891 243 641  89  74 404
 853 127 122 143 700 813  97 855 694 112 896 850 102 562 873 182 871 239  52 165 195  33  61 284 881 877 688 844 163 181
  49  82 158 194 739 742 710 651 732 586 837 166 101 662 859  66  42  35 114 442 887  28 875 832 721 203 673 139 862 328
 826 140  69 644 744 856  73 135 840  32 834  36 108  63 886 802 884  77 202 588  54  84  56 558 788 595 787 851  21 882

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.60235e+06us (= 2602.35ms, 2.60235s)
Wall-clock time (full program): 2.6565e+06us (= 2656.5ms, 2.6565s)
Satisfaction error: 0
Number of search iterations: 1394
Number of local moves: 736 (including on plateau: 215)
Number of local minimum: 76 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10375
Total number of local moves: 7542 (including on plateau: 3384)
Total number of local minimum: 396 (including on plateau: 256)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 256 313 884 148 845 888 109 744 174 262 782 854  84  38 198 621  92 539 746  58 796  89  65 552 766 840 748  70 860  94
  36 139 764 189 872 789 849 238 804 123 750 710  67  77 718  29  79 104 803 175 848 763 597 709 167  75 787 281 892  81
  28 195 639 757 220 880 817 878 675 144 773 685  86  35 214 170  82 194 780 524 173 125 131 870 682 107 818 874 847 112
 510 891 752 896 759 875 797  47 124 290 867 503 171 161 762  93 274 627 889  88 781 103 102 266  71 158 827  56 703  72
  78 464 756 119 618 676 761 259 879 250 678 540 199  31 883 566 137 315 885 150 347 122 172 630 837 461 808  85 647 162
 181 898 853 155 777 798 140 188 204 362 864 758  76 159 717 657 157 517 232 211 749 225 120 619 842 190 729 115 747 275
 382 229 620 373 377 894 899  22 739 257 800 185 179 183 721 663 138 375 790 169 187 191 386 852 268 514 735 234 881 272
 193 294 635 276 182 831 475 893 409 284 532 420 686 230 799 240 345 679 813 243 339 326 264 659  61 868 702 280 321 236
 145 632 722 291 192 287 303 519 887 111 288 325 648 147 665 629 302 331 247 367 292 895 406 543 305 814 738 322 828 334
 330 344 669 415 712 153 357 263 841 873 734 417 252 237 329 838 136 771 293 314 698 368 341 794 213 128 575 168 719 233
 480 371 569 184 283 196 388 273 323 279 897 775 166 328 265 859 301 713 613 876 212 254 405 822 186 352 793 361 653 338
 601 432 593 609 820 219 340 308 447 245 242 900 530 416 209 258 407 579 335 558 805 374 414 202 300 255 664 816 327 310
 857 622 563 154 319 364 324 318 512 346 306 349 278 477 350 742 337 317 332 769 736 394 442 825 402 223 701 251 378 527
 296 298 381 253 387 390 886 437 523 697 434 429 376 469 562 649 372 403 730 379 436 511 355 400 359 418 550 473 224 438
 399 356 507 285 428 696 651 468 348 307 465 353 354 482 490 470 677 424 397 391 336 743 205 441 529 365 638 520 410 380
 427 312 456 595 443 466 401 395 422 363 505 458 591 481 342 453 454 460 440 535 496 343 383 537 549 602 360 309 366 571
 207 472 295 462 488 433 484 498 509 614 560 500 668 435 555 525 118 235 557 487 444 449 398 299 508 452 393 521 580 369
 311 423 483 578 228 463 459 572  43 694 542 384 333 451 626 554 492 227 504 556 411 526 544 616 502 491   6 660 200 636
 604 637 431 533 476 239 724 673 297 568 547 471 641 426 149  26 485  63 248 561 596 516 538 577 531 495 135 706 133 489
 518 446  59 608 421 628 582 430 662 617   5 134 583 786  96 534 605  23 559 244 615 553 573 222 457 687 201 600 493 574
 450 699 370 643 478 216 606 623 667  57 267 121 640 689 486  60 666 210 404  30 515 598 551 467 541 711 277 501 316 656
 585 494 269 581 592 611 270 646 584 545 612 117 650 625  83  52 445  98 455 726 320  15 546 146 586 634 474 528 536 690
 564 751  51 727 419 497 548 261 783 661 448 163 164 714  91 513 740 304 241 594 385 680 160  80 644 631 260 754  45 642
 700 100 479 589  69  73 392 576  62  48 271 590 684 645 108 522 672 692 707 671 567 791 741 412 215 610  50 599 226 654
 823 141 217 693 683 603 716 607  64 728  95  24 286 695 725  74 760 624  37 565 439 809 836  54  18 655 127 588  41 788
 795 890 180 708 499  27 176 772 778 570  12 413 863 705 142 143 833 801   2 652  32 785 753  90 810  16 151  40 101 776
 715 674 152  42 732  13  14 688 218 830   8 221 745 834 658 165 821 850 197 670 156  97 723 408 704 206  11 768 389 806
 869 282   1 770 106 177  10 784 208 755  49 774 802 832  68 733 835 856   9 720 116 178 844 105 587 792   4 351  33 865
 779  25  66 843  46  19  17 132 126 811  53 130 862 861 737 858 871 826  21 807  55 815 681  87 765  34   7 829 506 846
 396 691  99  39  44 114  20   3 203 824 129 812 851 866 767 819 882 358 249 425 633 877 839 231 110 731 246 855 113 289

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.0702e+06us (= 3070.2ms, 3.0702s)
Wall-clock time (full program): 3.12543e+06us (= 3125.43ms, 3.12543s)
Satisfaction error: 0
Number of search iterations: 1568
Number of local moves: 1168 (including on plateau: 564)
Number of local minimum: 61 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12857
Total number of local moves: 8840 (including on plateau: 4628)
Total number of local minimum: 542 (including on plateau: 322)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 127 617 738 620 109 250 120 900 654 174 541 894  71 657 436 687 718 842 731  46 761  61 897 783  44 870  41  43  21  62
 208 514 799 749  63 216  53 847 829  36 655 893  27 809 335 670 848 101 898  40 716 820 690 167  85 762  80  22 516  67
 165 700 887 824 154  82  87 805 619 178 766 899  78 723 686 536 857  26 518  35 220  65 892 888  47 869 750  38  79  42
 125 505 711 539 149 381 144 785 697 188 814 891 297 879 529 702 808  55 201 106 796  75 616 818 215 219 835 134 139 162
 100 772 787 874 890  24 509 263 748 389 851 872  59 768 812 771 669 230  81 115 883 113 630 223 163  69 148 184 204 314
 126 333 611 845 156 878 239 861 875 267 495 794  68 679 621 547 793 209 103 889 182 135 726 123 868 206 190 274 177 245
 302 767 479 791 140 386 146 166 715 605 843 218 172 792 429 678 758 567 275  72 811 258 624 865 199 559 271 194 264 169
 221 880 863 212 111 282 242 708 248 353 526 673 666 659 692 810 737 285 247 293 866 173 183 270 313 334 833 291 283 261
  60 324 618 193 259 557 255 213 871 640 656 217 246 789 828 822 746 287 339 305 886 876 867 189 228 232 330 195 370 117
 276 348 753 207 806 532 262 798 707 839 763 191 279 556 741 864 260 405 222 424 192 315 841 268 319 296 281 266 226 278
 311 435 396 884 155 735 515 340 345 769 882 317 310 364 635 368 415 531 342 578 695 374 338 443 332 238 312 327 431 398
 418 379 667 328 308 777 410 896 366 584 535 244 378 438 844 349 256 367 895 476 358 337 588 352 543 309 273 249 299 292
 369 647 322 363 420 698 506 254 272 446 564 440 406 627 496 736 298 451 430 306 395 179 855 437 404 500 527 428 295 444
 399 391 411 233 377 881 346 483 569 612 461 401 307 456 471 394 580 359 356 284 512 384 341 523 478 423 400 774 558 351
 375 454 360 499 460 422 477 445 508 472 540 392 412 354 447 414 596 480 498 425 373 474 571 403 594 325 355 468 421 501
 545 475 441 467 487 361 466 517 372 513 390 419 549 433 416 614 417 503 380 382 393 482 408 152 629 344 427 490 448 595
 544 455 497 721 587 231 426 488 519 143 303 459 610 343  10 579 502  33 538 336 537 577 572 524 484 458 485 599 548 407
 625 432 294 453 507 265 650 449 712 632 214 641 170 323  98 504 560 491 465 593 286 489 145 290 442 528 561 563 622 511
 450 607 452 470 574  34 469 694 397 131 388 608 590 371  97 150 566 645  51 615 591 550 171 486 434 542 413 631 639 699
 551 510 225 626 628  89 562 159 668 211 464 493 653 269 138 198 603 689 582  31 613 462  32 494 682 717 552 554 568 492
 684  50 175 321 565 316 633 604 521  45 210 555 648 241  56  66 347 719 693 362 164 677 644 696 581 685 534 671 530 522
 585 661 130 583 597 463 573 481 161 701   1 187 759  25 409 136 147 598 387 623 779 570 168 646 790 402 457 643 102 751
 802  39  15 203 764 586 602 229  58 227 243 642 601 320  84 121 181 649 651 636 706 575  18 665 637 662 713 742 705 439
 533  49   5 525 304 782 116 675 720 676  14 606 520 122  95  74  93 803 691 838  77 727 609  92 660 114 592 817 846 740
 634 318 197 108 672 235 703 224 202 663  16  70 600 137 329  88 153 823 728 807 141 546 331 773 757 638 724 733 576 589
 760 714 251 365 819 288 744  90   7 473  30 129 816 553 234 350  11 734 688 709  83 652 376  19 743   2 704 722 710 739
 837  57 107   8 873 821 858  28   4 357 756  13 832 237 200 104 128 784 185 776  91 775 160 674 729 755   3 770 815 778
 725 157 862  54  99 253 795  20 119 658 118 176 856 180 732 800 186   6 825 830  12 680  37 849 765  48 786 142 885 860
 854 813 205 326 681 840 730  64  23 781 236  76 852 110 827 289 196  17 383 747  96 834 133 252 277 745 158 754 385 831
 804 112 257 124 801 850 877  29   9 752 240 105 683 301 788  94  86 826 132 836 300 280  52 151  73 664 780 797 853 859

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.91859e+06us (= 3918.59ms, 3.91859s)
Wall-clock time (full program): 3.97117e+06us (= 3971.17ms, 3.97117s)
Satisfaction error: 0
Number of search iterations: 2598
Number of local moves: 726 (including on plateau: 274)
Number of local minimum: 187 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 19430
Total number of local moves: 10446 (including on plateau: 6424)
Total number of local minimum: 1147 (including on plateau: 482)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   3 240 776  25 858  18 554 862 124 822 827 791 848 108 202 765  34  77 774 796 849 826  35 854 220  14  27 361 816   9
  10 355 841 750  23  17 111 853 190 787 860 120 564 414 839 871 212 587 224  22 743 762 809 870  30  59  87 618   1 886
 795 352 535 751 704 413  89 814  49 417 781  36 850 273 216 638 195 786   4 264 342 740 745 766 227   6  15  24 821 867
 888 637 865 231  52 369 631 820  41 832 694  39 831 104  88 768  82 169 690 574 834  56 159 645 100 127 285 367 722 815
 738 753 813  37   2 723  64 710 156 225 777 764  63 725 349 321 142  96   7 749 775 760 577 732 137 418 198 204 665 835
 782  85 767 706 620  91 648 730 149 724 789 698 758 121  12 134 307 133 811 779   5 771 153 741 395  16 191  86 662 651
 172  76 570 716 691 695  58 742  43 627 783 728 674 671 580 175  44 661 640 792  51 736 642  65 126 132 329  45 692 559
 780  79 754 744 707 623  67 699  38 817 797 653 287 713 148 256  47  48 718 578 668 353  26 634 244 176 280 252 654 675
 677 168 678 714 592 667 643 711 327 373 325 673 603 709  73 243  57 684 686 729 505  75 569 242 271  32 229 141 590 529
 756 659 549 646 581 377 689 636 415  94 523 530 721 616 139 164 265 610 626 604 591 312 629  28 157 250 253  13 594 488
 672 579 547 703 576 630 544 286 358 508 160 612  40 600 550 146 489 601 666  62 635 188 552 682 189 284   8 644 531 473
 573  19 351 632 467 572 510 501 254 450 534 533 650 611 152 503 536  21 558 683 548 522 639 727 201  33  70 598 563 504
 720 541  11 241 565 606 520 494 481 655 509 392 571 381 545 525 551 217 562  20 385 524 360 519 331 314 270 588 557 560
 465 502 295 301 362 483 474 506 183 513 521 464 584 334 540 500 376 447 466 305 586 621 486 512 379 390 278 484 619 539
 538 431 472 347 468 410 507 469 462 495 463 475 437 258 398 499 459 370 460 517 438 386 493 326 561 543 365 490 441 537
 402 476 435 354 470 449 457 595 542 317 479 416 518 455 511 448 300 451 439 453 405 461 454 497 421 567 458 394 482 409
 427 445 296 313 440 515 290 371 566 233 328 444 492 597 514 393 446 366 426 443 478 391 487 384 532 553 696 879 406 364
 432 830 345 425 477 322 382 408 527 452 396 528 790 434 343 423 292 388 412 389 332 330 276 419 628 875 737 350 166 407
 348 430 299 602 442 845 279 306 641 397 401 593 422 310 433 357 660 346 298 378 424 261 480 235 526 663 615 828 372 324
 323 294 403 341 336 836 303 308 339 232 498 368 428 344 757 693 399 356 387 785 302 679 859 304 575 681 555 272 275 283
 363 829 411 485 215 268 255 319 625 889 179 297 263 337 556 843 856 210 291 267 899 315 165 383 496 676 599 712 230 282
 633 236 375 173 248 784 807 161 491 309 277 340 249 471 705 700 794 311 186 266 207 891 199 316 622 801 624 881 196 262
 333 222 193 318 219 197 281 436 755 873 274 211 237 260 838 885 687 182 864 184 288 609 851 335 596 583 772 658 234 140
 247 223 135 338 456 289 887 246 778 194 607 245 251 238 868 680 719 824 163 259 239 833 205 877 818 731 516 226 130 293
 143 664 158 114 151 733 269 131 702 218 214 806 110 810 613 652 656 883 154 115  66 208 825 649 892 735 837 697 174 136
 181 893 185  95 900 187 752  72 898 585 144  93 138 209 701 320 842 857 884 759 746  74 118  61 897 380 890 404  50 200
  97 793 804 846 819 206 788 122 878 178 112 688 109 657 400 213 605 802  99 171 128 102 228 180 726 852 896 799  92 125
  69 614 429  80 147 221 803 106 880 107 203  98 192 812 582 257 874 847  81 103 177 546 685 359 747 866 869 116 769 876
  54 420 145 748 119 840  83  46 800 150  31 763 101 170 708  53 872 617 855 608 798 123 162 105 589 863 805 669 844 374
 894 670  78 739 808 129 770  55 823  42  29 117 734 773 155  90 717 568  84 861  71  60 647  68 882 895 761 715 167 113

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.16588e+06us (= 3165.88ms, 3.16588s)
Wall-clock time (full program): 3.21909e+06us (= 3219.09ms, 3.21909s)
Satisfaction error: 0
Number of search iterations: 1567
Number of local moves: 1178 (including on plateau: 520)
Number of local minimum: 64 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13868
Total number of local moves: 7910 (including on plateau: 3466)
Total number of local minimum: 818 (including on plateau: 253)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 827 751 793  69 387 367 242 236 818 544 769  29 156 873 835 272 821 423 819 193 418 843  44 774 737 174 115 119  25  42
  70 730 780   7 393  27 161 760 424 807 862 861 290 880 740 811   2 325 848  82 800  99  52  13 691 813 250  50  34 853
 172   5 378 727 416  72 539 158 805 855 795 831 188 786 839 136 759 726  17 113 783  16 745 198 788   4 264 496  63 841
 490 733  64  68  71 189  21 822 764 707 777 829 277 770 828  22 398  60 492 138 867 624 261 757 705 643 225  18  31 864
 784 328 779 107  91 230 714 749 114 794 618 738 153 782 761  19 162 729 166 182 744 145 609 191 617  30 330 309 704 836
 748  77 758 177 170   9 685 417 816 804 709 792  54 863 845 656 106 657 787  79 799  92 797   8   6 814   1 169  20 600
 693 671 371  12 320 252  51 755  32 681 802 551  43 663 645 815 552 629 631 209 603 104 652 315  96 662 147 190 680 688
 722  33 661 728  55 126 286 384  37 703 611 642  78 823 563 847 543  74 695 289 599 689 429  14 648 676  24  88 647 801
 610  49 697 677  85 295  10 598  53 690 669 664 140 649 687 684 613 524 573 226 646 143 632 152 682 501 282  73 692 519
 591 421 521 638 327 294 605 533 112  26 615 473 640 504 630 523 284 484 582 216   3 601 700 285 583 641 279 299 569 536
 710 267 556 508 562 173 529  76 503 596  28 482 604 534 667 483 651 331 614 311 607 589 509 262 570 316  40 167 713 557
  11 518 439 602 558 400 472 412 506 696 475 356 606 679 428 505 636 520 706 257 564 415 560  75 527 500 224  84 547 237
 426 471 433 554 584 336 579  47 507 548 639 489 347 522 586 535  56 464 561 322 620 302 581 276 488 637  61 513 588 443
 479 455 304 574 144 399 597 498 296 248 531 675 578 159 481 413 468 449 555 456 567 420 502 221 470 463 659 305 673 476
 323 435 362 545 382 390 516 414 422 445 881 526 410 404 326 495 432 442 491 450 466 453 517 319 477 444 259 577 353 559
 409 388 374 480 339 538 571 335 372 499 380 487 332 265 532 462 440 465 425 434 379 876 376 474 590 565 338 568 355 467
 406 403 460 550 546 593 454 366 572 288 530 458 542 350 478 344 357 497 419 430 451 383 310 457 438 227 720 381 859 246
 431 317 511 436 389 580 408 702 447 318 394 405 441 397 359 301 334 716 253 595 461 271 812 893 377 345 392 373 363 494
 307 721 809 213 874 553 448 718 212 452 306 402 281 341 493 391 694 135 541 486 385 592 178 346 238 313 762 625 298 401
 278 342 333 343 735 775 208 885 240 256 217 280 608 220 251 337 773 763 370 515 437 176 164 658 180 446 865 723 287 850
 207 587 360 268 633 887 151 364 260 549 183 375 771 396 243 233 660 525 234 767 879 616 292 469 308 411 781 627 349 130
 314 776 361 273 674 756 141 187 851 386 222 263 686 249 258 427 711 766 185 644 352 825 206 872 122 395 765 368 348 132
 283 514 725 354 856 634 871 878 148 329 154 732 824 247 324 139 407 540 160 575  45 293 858 459  57 228 854 895  94  38
 791 365 118 369 734 668 739 137 832 117 303 266 747 351 205 181 109  98 175 736 171 820  83 837 890 202 708 653 300 810
 291 142 219 254 163 510 868 297 870 195 528 340 666 168 270 852 186 752 218 670 239 312 621 698 817 184 869 743 215 358
 274 321 199 778 877 537 840 101 123 566 124 157 790 100  67 882 678 210 229 889 244 192 232 635 200 857 628 897 842  46
 884 121 128 654 772 742 849 623 245  93  36 204 223 133  15 120 834 197 712 892 150 701 102 715  86 891 485 896 883 129
 134 886 830 846 665 754 626 275 585  65  95 146 719 125  66 724  89 717 105 785  87 203 898 875 211  80 844 576 235 269
 231 899 111 838 512 683 155 116 753 127 214  39 699 241  35 741 110 194 803 768  90 894  62 655 108 798 750 833 860 196
 619 789  81 866 201 746 179 672 796 131  48  23 622  41  58 165 650 103 149 806  59 826 731 612 808 255 594 900 888  97

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.94645e+06us (= 2946.45ms, 2.94645s)
Wall-clock time (full program): 3.00232e+06us (= 3002.32ms, 3.00232s)
Satisfaction error: 0
Number of search iterations: 1728
Number of local moves: 872 (including on plateau: 372)
Number of local minimum: 112 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12662
Total number of local moves: 7748 (including on plateau: 3265)
Total number of local minimum: 691 (including on plateau: 235)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 863 803 808 869  31 254 870 802   3 793  34 163 171 832 302 848 131  17 118 852 151 829 799 865  15 103 177 220 784   8
 679  83  61 152 835 818 247 743 191 187  82  30 827 789 343 700  35 881 779 872  39 806 820 875 146  29 876 190 116 284
 761  41 339 811  27   6 867 807 164 772 132  32  99 834 193 693  79 736 306 859 307 866 840 675 147 215 178 303 780 646
 796  23 628  57   5 753 842 705 229 694 281  90 238 752 242 786 718 158 677 355 211 809 759 824  19 192 721 111 836   4
 846 717  56 758   7   2 342  72 331 841 204 385 203 706 387 790 728 283 660 800  20 738 670 795 367 136 241  38 734 658
 712 748 766 741 805   1 417 257  16 740 309  77  28 770  59 701 776 105 742 782  13 676 769 690 167 141  45  14 610 838
 576 719  91 577 645 620 405 231  11 584 153 640  22 710 205 837 792 608 765 845  10 711 763 117 120  26  43 198 817 674
 707 713 135 691 580 697 208   9 260 683 188 777 185 639  62 783 692  63 196 559  86 552  73 616 596 618 651  87 655 754
 735 590 727 680 202 565 265 326  12 647 195 624 351 593 139 709 656  97 663 648 636  36 681 597 134 560  46 133 599 669
 632 578 581 604 128 536 587  84 294 476 358 633 276 603 104 631 598 113 471 687 311 601 773 532  25 657  50 388 539 665
 696 641 582 688 512 619 537 362 338 531  92 528 352 498 142 605 579 110 494  53 638 614 564  78 507 611 267 102 685 490
 548 434 571 553 524 546 652 170 244 517 436  21 337 549 108 515 666 671  65 634 463 739  60 627 672 615  54 496 567 461
 499 470 527 586 572 485 101 409 291 519 526 541 100 562 448 501 617 504 644 365 246 445 366  51 542 533 493 503 535 534
 516 418 438 502  80 563 399 408 451 474 547 426 506 529 412 469 467 511 224 457 462 415 520 518 429 433 489 583 419 450
 464 622 488 377 384 492 395 612 621 396 551 509 487 589 568  49 386 525 557 514 285 459 403 138 398 483 466 407 347 543
 290 456 570 373 424 521 298 500 505 420 389 465 314 390 659 481 422 744 334 486 458 554 510 406 454 381 413 452 453 393
 442 473 439 375 421 522 383 816 538 446 585 508 391 449 431 333 437 480 427 441 414 317 440 444 315 345 606 491 435 371
 336 477 344 382 243 372 787 760 635 410 392 460 550 401 794 186 328 472 801 325 626 484 353 425 286 268 468 497 340 313
 430 245 287 346 350 368 746 428 642 360 349 324 682 250 661 397 300 839 814 335 455 316 274 380 756 400 695 411 305 370
 262 332 308 106 269 318 595 566 704 482 821 273 720 323 781 354 348 402 364 871 329 207 320 668 602 715 374 757 143 201
 292 240 275 310 261 183 689 513 530 889 684 272 662 129 630 378 379 540 212 301 654 447 404 312 216 327 850 751 359 826
 218 730 266 319 217 264 144 853 810 394 575 321 815 296 864 280 363 833 357 279 423 724 236 140 726 443 233 768 369 255
 249 227 304 159 702 830 804 874 629 197 732 288 722 591 664 256 271 258 181  69 851 253 237 299 297 797 823 723 121 107
  48 199 860 179 219 289 896 495 416 184 899 731 733 214 209 361 175 637 182 123 854 126 112 891 828 774 749 703 194 235
 165 278 210 248 729 206 270 222 898 239 764 259 813 172 643 230 156 200 844 594 893 322 569 478 886 747 475 556 295 154
 148 223 725 124 884 252 160 293 791 169 625 750 812  70 849 130 161 819 588  68 544 176  98 479 775 856 861 755 173 157
  33 149 376 892 858 600 356 282 771 263 767 831 879  44 868 232 277 228 607 127 785  40 330 213 649 778 180 737 226 137
 189 897 894 234 857 162  81 166 686  75 623 847 573  67 558  94 880 561 174  55 855 150  64 119 885 432 592 887  96 762
  42 900 714 114 862 798  47  52 788 109 613 822 545  88 523 115 221 895 251  85 653  66  58 168 678 155 825 555 890 883
 341  89 145 708 882 873 125 698 716  24 609 888 122  76 667  71 877 225  18  74 843  37 650  95 878 745 574 699  93 673

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.1065e+06us (= 3106.5ms, 3.1065s)
Wall-clock time (full program): 3.16031e+06us (= 3160.31ms, 3.16031s)
Satisfaction error: 0
Number of search iterations: 1721
Number of local moves: 774 (including on plateau: 293)
Number of local minimum: 124 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13594
Total number of local moves: 9259 (including on plateau: 5100)
Total number of local minimum: 730 (including on plateau: 374)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 742  78 151 824 835  57   2 739 175 798 777  22 145 761 885 868 105 831  69 189  34 805 881 237 489  45 733  72 779 387
  12 640 110 364 298  29 826 825 224 866 841   7 162 819 758 728  60 748 290 106 316 801 849 123 829  33 407 789 514 141
 671 181   4 412  73  10 773 726 780 850 542 776 381 814 827 817 215 855  58 113  86 218 621  30 833  54 879  17 784 115
 764 142 701   9  53 241 799 763 705 856 791 839 102 236 796 546 268 672   5 173 326 649 832  59 822 718  18  24 495 111
  32 647 752 716 140 636 641 862  96  21 592 454 193 810 869 508 205 717 210 221 253 120 703 309 633 816 844  31 235 249
 577 295 131 743 650  77 720 820 768 848 782 625  62 700 587 375 227 571  37  87 186 317 710   3  25  47 842 787 788 128
 818  76 169  11 708  63  27 736 666 723 696 811 251 692 731 595 229 560  38 234 662  42 669  94 695 762 516 667 307 267
 664 623 137  55 663 609 794  46 744 660 630 648 154 735 652 754  67 638 184 127 209 619  56 199 580 242 523 694 738  71
   6  49 146 657 706 551  15 775  91 613 624 681 177 778 566 665 216 729 296 688  19 709 583 254 753 563 567 691 147 200
 727 122 629 602 707  99 603 645 715  14 656 675 226 693 550 536 103 599 225  84 653 586 532 324 677 687  13 506 203 124
 614 118 455 617 579 465 631 529 411 498  28 538 114 684 534 524 376 463 258 632 519  89 679 361 544 600 661 654 100 240
 528 496 539 594 597 540 644 745 561 414 418 325 459  40 482 503 262 444 119 464 481 212 582 323 559 478 620 443 166 477
 535 349 589 591 541 452 699 150 390 578 133 395 335 438 500   8 531 441 321 424 413 549 491 420 572 555 468 554 483 610
 510 445 521 447 436 480 501 417 634 568 419 584 409 674 565 511 345  97 485 484 313 437 515 371 430  23 383 415 488 608
 472 470 400 585 545 517   1 596 562 616 548 490 410 384 451 588 527 492 232 286 474 655 449 329 475 487 377 505 116 476
 422 346 304 479 494 628 533 334 460 526 547 556 530 471 493 416 680 433 618 368 473 379 406 352 359 450 446 292 327 393
 466 457 370 435 426 365 389 518 382 467 421 581 456 442 319 425 552 396 750 385 330 408 351 590 358 469 374 504 790 339
 353 573 427 830 453 301 312 398 300 512 428 439 575 557 214 337 342 372 497 434 297 749 499 543 278 363 404 676 712 340
 308 520 401 887 185 366 338 264 332 373 282 886 697 378 593 320 553 255 793 299 208 689 306 607 448 486 318 182 347 894
 391 294 423 178 525 271 360 399 152 328 757 397 766 279 388 863 760 261 673 895 311 803 394 576 247 356  64 265 513 626
 252 737 276 627 277 502 392 266 201 161 303 574 670 270 250 280 893 362 878 293 896 507 432 606 283 461 367 402 668 429
 350 759 243 305 840 291 289 336 259 244 248 112 867 852 220 343 802 287 741 843 310 882 187 569 348 256 314 331 405 682
 322 686 792 380 275 354 269 612 704 239 462 257 601 263 223 196 558 274 711 865 854 355 174 770 246  74 233 357 635 774
 698 288 659 136 165 781 847 190 838 315 207  79 813 238 192 180 302 386 800 725 231 570  81 658 721 108 222 875 403 807
  90 344 873 765 191 858 611 153 897 168 148 281 857 109 149 198 702 217 458 828 795 341 369 889 678 285 121 157 130 853
 260 871 845 158  68 714  88 144  92 605 183 117 690  48 273 284 746 179 431 747 719 615  80 892 272 870 230 859 837 598
 125 756 755 509 188 806 564  82 138  95 159 172 643 194  85 139 732 815 876 683 772 163 155 783 156 888 900 245 333 604
 751 646  43 537 836 884 126  83 206 219  75 211 809  50 213 812 637 129 872 228 804 107 874 846 134 823  66 522 164 808
 204 740 899  26 170 734 651 195 171 143 642  93 860  65  98 135 898 160 821 880 785  35  16 685  20 877 722 202 864 724
 851 767 771  36 891 834  70 167 861 197 176 890 101  41  52  61 622 132 769 730 786 104  39 713  51 639 883 797  44 440

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.34425e+06us (= 2344.25ms, 2.34425s)
Wall-clock time (full program): 2.39746e+06us (= 2397.46ms, 2.39746s)
Satisfaction error: 0
Number of search iterations: 1131
Number of local moves: 670 (including on plateau: 247)
Number of local minimum: 86 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8343
Total number of local moves: 6507 (including on plateau: 2741)
Total number of local minimum: 300 (including on plateau: 203)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 484 110  42 841 103 843  92 432 105 799  78 866 757 554 210 862  17 851  96 793 198  32 809 806   1 779 842 252   7 854
  41 319 819 375 302 262  18 400 118 721 424 861 830 877  14 807 771 745 196 594 312 304 785 378 141  16  54 749 403 879
 772  21   9 837 814  19 681 296  75 704 159 787 829 802 683 717 813 703  27 737  69  66  12 231 229 786 762   3  80 792
 201 193 835 770 622 778  59 282 218   8  36 834 899 648 303 795 874 347  65 769 247 177 803 205 134 860  56  30 743 724
 223  97 731 744   6 627 632 204 254 836 238 593 729 845 120 759 665 341 183 342  62 124 723 674 101 268 766 727 154 747
 248 289 701 790 165 797  53  22  11 626  49 867 726 706  45 687 798 129  24 777 169 138 174 735 466 828 692 826 361 616
 233 446 748 641 320 708 338  86 152 715 234 369 808 823 353 718 780 157  70 515  31 164 732  47  94 671 796 450 575 741
  33  98 733 672   2 781 650 125 656 489  15 702 633 642 621 697 469 709 126 115 476  77  38 742 136 805 689 800  88 696
  95  46 666 566 132 614 613 286 166 142 602 598 705 693 698 707 691 346 153 216 222 273 624 452 173 734 688 664 477 473
 307  13 600 654 314 563 667 150 156  67 711 634 411 678 573 669 713  91 225 557 188 583 584 580 168 516 579 380 538 646
  83  61 612 540  71 609 492  81 488 658 474 607 740 690 657 596 638 659 570  10 116 265 574 552 180 520 461 677 214 620
 208 431 482 514  29 542 610 541 564 569 442 487 586 553 558 518 572 483 310 194 458 145 386 615 281 419 534 513 555 416
 562 472 605 630 230 601 576 355 556 106 502 463 568 491 589 434 525 388 521 108 460 531 551 490 257 533 391 464 160 396
 497 448 504 418 578 510 242 326 637 457 437 647 385 331 364 412  74 548 603 423 465 439 433 625 409 509 425 454 430 485
 443 585 597 370 545 547 373 471 462 301 417 345 318 447 451 350 587 475 479 470 428 527 441 544 407 389 478 532 359 377
 306 429 503 449 524 893 404 537 508 398 414 435 263 517 494 495 360 382 493 507 379 511 422 356 486 333 283 523 467 444
 406 528 278 438 381 512 608 440 390 383 501 539 468 459 372 530 348 421 453 402 591 399 315 550 885 340 339 366 543 330
 820 455 700 365 588 358 329 629 357 270 500 506 498 284 401 505 810 299 316 334 343 362 880 427 561 363 413 285 190 367
 649 863 264 397 529 445 311 309 857 344 271 590 519 288 294 186 559 260 332 335 374 875 392 571 599 395 337 456 354 560
 652 755 376 426 730 258 298 628 291 274 840 322 405 410 250 300 277 764 496 791 235 595 236 182 662 287 565 290 536 384
 349 716 200 102 644 327 684 635 191 408 245 653 261 325 324 321 387 831 645 394 617 631 308 305 680 753 175 436 736 232
 679 812 371 240 695 243 228 767 526 393 297 161  60 203 219 295 275 789 872 619 871 676 328 199 751 251 227 336 839 293
 890 720 317 211 582 171 181 892 237 292 825 117 368 207 768 187 176 763 661 618 546 323 811 313 783 259 112 114 815 256
 606 351 253 212 685 255 900 592 889 267 239 151  93 217 858 220 246 280 891 269 887 673 881 756 670 279 266 197 226 206
 699 623 189 130 773 876 172 818 878 883 719 143 352 140 651 209 499  87 761 244 873 752 121  40 481 272 241 185 480 224
 827 636 122 135 856 144 139 722 801 639 750   5 100 148 739  44 163 104 775 846 794 838 119 221 804 895  90 127 848  84
 195 728 109 817 155   4 549 415 640 859 754  23  43  85 133 158 113 738 870 249 660 832 852 178 822 146 604 886 714 184
 710 567  63  82 522 123 865 712 725 107 849 137  72 215 213 162 167 179 833 420 784 758  58 864 655  89 682 844 782 276
 611 882 894  73 765  57 896 668 847  26 850  39  52 202 897  28 128 535 581  79 776 868  55 746 824  50  99 898  25  64
 686 821 192  76 853  48 855 694 760 774 643  34  37  35 663 147  20 111 888 788 884 577  68 131 675 170 869  51 816 149

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.99832e+06us (= 2998.32ms, 2.99832s)
Wall-clock time (full program): 3.05256e+06us (= 3052.56ms, 3.05256s)
Satisfaction error: 0
Number of search iterations: 1579
Number of local moves: 802 (including on plateau: 261)
Number of local minimum: 150 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12580
Total number of local moves: 8157 (including on plateau: 3609)
Total number of local minimum: 890 (including on plateau: 282)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 205 720 648 900 878 887 889 270 825 563 560 235  58 696  93  42 471  69  59 840  71 662  46 137  96  50  36 877 893 739
 554  16  85 882 138 708 624 585 763 808 774 583  76 892  60 869 614 157 158 775 109 118 237 588  26  47 188 741 625 715
 573 862  28 864  84 891 885 656  62 804  40 858  95 556 183 147 790  70 154 732 189 875 143  98 421 449 103 896 880 127
 759 818  57 457  51 165 764 626  53 475  49 849 117 852 104 152 728  72 126 881 131 191 132 824 211 529 868 758 850 866
 600 254 731 681 867 246 125 834 114 839 284 838 351 810 106 890 751 169  54 770 272 171 110 149 480 107 160 228 689 835
 647 847 578 672 115  43 677 860 120 826  34 517 172 148 194 199 753 180 829 836 108 173 151 184 886 204 166 718 899 779
 249 215 691 623 121 282 326 745 823 294 130 241 555 357 307 195 895 863 283 717 242  83 207 870 553 253 288 897 373 837
 803 584 586 692  75 879 341 898 201 772  94 267 226  86 324 394 805 206 361 230 353  89 269 155 661 654 295 652 746 817
 816 315 781 685 310 271 278 711 821 587 153 213 258 308 323 340 330 321 255 742 322 841 164 289 793 664 247 381 740 256
 822 316 782 622 223 225 168 713 374 832 390 312 264 359 227 161 857 391 599 675 861 231 217 298 520 234 293 276 894 379
 337 419 756 800 352 327 363 620 216 734 552 354 163 314 229 297 679 380 250 641 437 402 192 384 768 855 273 277 705 439
 406 328 796 686 286 170 252 305 809 382 260 240 251 325 722 287 412 343 737 239 371 425 243 799 778 611 812 370 508 362
 261 336 523 604 453 567 304 317 347 535 418 430 483 367 248 435 564 723 666 442 485 429 415 280 757 828 319 232 436 311
 851 383 399 281 408 300 446 358 401 467 433 431 423 806 461 385 472 865 350 409 414 329 395 313 368 398 378 787 366 438
 460 292 566 651 506 594 597 372 262 348 386 291 396 356 478 413 301 452 388 443 309 482 447 819 466 572 470 516 458 424
 410 403 489 490 376 422 602 411 427 491 299 534 465 416 557 440 462 320 448 511 551 498 464 441 331 526 303 484 540 404
 519 527 342 393 522 541 397 581 619 649 259 497 515 501 513 432 477 420 481 244 364 716 445 474 451 185 487 345 119 500
 547 459 405 400 528 502 507 575 595 369 488 492 129 434 514 392 318 346 518 473 339 546 509 605  90  99 627 562 539 608
 495 532  45 266 463 544 525 628 510 224 580 167 454   7 596 577 275 456 365 486 389 479 721 645 122 615 576 643 496 634
 134 568 196 279 407 542 531 616 504  79   5 499 469 592 548 660  74 650 159 537 565 629 589 536 571 468 476 494 503 635
 193 455 177 238 704 493 697 218 735  10 601 530 744 538 593 687  56 637 550  64 613 632 667  38 186 444 631 505 197 682
 190 198 209  17 609 699 561 156 574 653 570 617 729 559 683 669 112 673 222 360 665  37 663 621 426 640 693 610  33  67
  31 642 290 179 524   1 700  24 569  88 776 771 521 646 676 549 265 618 690 579 603 695 811  44 333 178 755 582 236 139
 135 709 257  63 591 671  19  65 302 598 688 101 747 706 762 701  61 630 639 212 785 726 791 558 136 668 644 174  91 285
 636  13 335 377 760  15 543 274 263 203 607 750 698   2 606 633 123 375 724  82 727 657 752 788 684 655 612  55  21 545
 332 712 428 176 703  35  29 349 658 142 798 210 674 795 789 133 144 888 638  52 678 736 659 233 754 512 794 141 296  27
 355 765 146 245 738  32 533 344 815 208 845  39 872 761 876  25 670  23 780 200 846 707 719 710 214 306 450 116  73 102
 802 725 590  81 124 831  30 150 730 187 797 767 874 182 714 820 105 733 334   9 748  77 694 814 338  48 777 175 181  78
 387  22 769 100 766 773 784  92  12 220 844 680 883   4 145 743  97 783 842 113 749 813 871  14 268 843 786   3  41  68
   6  80 830 111 833 859  18 162  11 128 801 202 853 140 884 848 854 702 856 221 219  66 792 807 827 873   8  20  87 417

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.9028e+06us (= 2902.8ms, 2.9028s)
Wall-clock time (full program): 2.95664e+06us (= 2956.64ms, 2.95664s)
Satisfaction error: 0
Number of search iterations: 1641
Number of local moves: 836 (including on plateau: 309)
Number of local minimum: 104 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11353
Total number of local moves: 7014 (including on plateau: 2900)
Total number of local minimum: 612 (including on plateau: 212)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  69 740 839  20 778 404 670 441 256 141 148 853 205 783  92 137 856 344 250 870 394  60 389 216 827 452 799 759 688  35
 802 775 138 694 812  24 155  22 846 220  66 834 176 739 278 765 786 841 235 785 774 741   7 199 355  12 186 502  43 703
 817 647 702 766 795 667  75  81  10 350  18 204 105 820 122 723 862 255  53 823 322 711 755  47 848 244 115  72 730 776
 745  39 720  48  40 713 214 151 858 650  58 782 247 736 202 809 860 248 241 854 866 764  86  73 624 213 113 728 801  32
 794 672 704   9 857 800 233 123 768 695   1 840 310 629 410 674 727 239 171 652 642  91  93 111 223 130 196 395 556 770
 756 525 353 754 758 686 614  80 698  65 108 430 160 619 264 826 630  31 443 831 787 735 281  82  98  63 661 295 158 724
  34 604   3 832 640 798  16 743 784   4 120 663 146 425 187 134 716 734 181 748 429  64 811 319 733 562 422 362 690 611
 660 590 226 699 633  36 449 110 722 737 112 687 252 732 164 836 615 117 218 520 334 726  95 240 744 677  11 301 689 583
  83 696 339 669 428 592 641 541 638 368 553 665 297 753  13 568 708 119  56 706 330  27 678 416 460 271 524 156 618 602
 635 707 328 598 570 564 447 545 636 675 292 627   6 645  29 589 504 150 367 654   5 620 519 245 490 487 222 142 536 681
 572 609 136 513 789 626 587 684 691 625 578 215  41 646 129 717 527 170  52 600 581 565 680  88 540  67 168 182 666 471
 637 656  38 427 599 529 560 683 613 639 400  21 463 612 563 436 479 234 473 434 648 538 585 140 543 286  50 153 442 634
 555 588 631 547 571 591 561 653 439   2 533  15 346 373 554 453 361 465 551 420 184 356 381 211 658 579 685 200 475 577
 594 500 484 510 617 456 496 491 596 303 466 532 370 461 535 455 476 440  85 628  90 365 499 360 488 531 492 450 366 379
 462 431 605 495 342 523 597 387 251 514 454 315 576 331 489 477 575 296 537 409 335 582 418 354 486 340 542 558 375 459
 411 498 438 534 601 497 539 503 386 324 374 621 384 505 603 567 464  57 406 448 283 509 231 407 371 445 528 517 512 552
 393 380 676 557 284 506 813 390 385 530 437 508 311 515 417 559 306 270 859 131 474 317 195 518 468 415 521 446 451 483
 388 269 750 364 352 372 391 472 871 819 482 413 622 280 398 327 314 480 305 396 697 424 414 550 412 345 273 701 402 232
 467 293 682 458 351 432 392 304 421 772 485 850 616 359 263 294 481 405 403 376 780 276 312 544 262 751 419 710 261  96
 382 172 803 457 383 470 397 320 347 494 863 752 793 323 243 227 325 363 408 258 401 444 321 608 338 426 835 838 287 237
 378 326 664 300 309 209 100 435 369 469 790 516 843 282 845 106 219 874 791 279 189 259 265 718 349 584 246 548 830 423
 198 329 651 358 337 336 343 230 876 238 341 433 729 206 844 316 201 865 815 511 549 348 145 595 333 742 649 526 298 173
 180 268 126 277 139 178 900 747 212 807 763 307 867 291 725 114 197 569 769 190 761 125 885 878 165 163 810 607 229 266
 318 194 842 332 228 242 828 757  61 847 289 290 824  37 731 236 177 861 749 207 566 274 143 891 191 712 829 285 272 302
 161 175 399 174 225 851  23 897  14 254 814 668 586  97 883 898  28 501 887 135 154 808 299 632 879 157 580 792 167 377
 805 267 253 188 888 224  42 715 185 221 719  78 714  44 610  62 159 662 644 257 797 104 746 659 852 816 288 705 118 693
 147 149 217 880  54 864 877 779 249 643 721  55 679 210 673 894  76 821 709  17 275  79 796 872 208 804  30 522  49 166
 357 893  71 760  68 144  19 203 193 101 869 152 573  89 606  51 777 593 788 128 692 890 833 849 133 875 855  70 260 623
 169 478  26 179   8 107 881 896  94 700 899  87 767 192 837 103  84 773 183 121  77 818 882 825 124 493 892 109 889 822
 546  45 671 116  59  74 655 132  46 308 762 102 507 781 806 162  25 738 886 127  99 895 771 868 313 873 574 884 657  33

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.61237e+06us (= 2612.37ms, 2.61237s)
Wall-clock time (full program): 2.66782e+06us (= 2667.82ms, 2.66782s)
Satisfaction error: 0
Number of search iterations: 1297
Number of local moves: 881 (including on plateau: 408)
Number of local minimum: 62 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10581
Total number of local moves: 7973 (including on plateau: 4238)
Total number of local minimum: 382 (including on plateau: 318)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 898 891 808  24 794 896 870  22 328 475 796  75  66  83 712 725  41  37 175  29 514 151 822 813 846 669  52  36  99 768
 861 895 827  91 674 709 579  85 843 187 442  72  23 144 687 306  46  86 832  19  92  53 749 814 748 772 218 147 885 629
 863 141 888 174 327 643  49 361 873  73 800 301 364  81 137 771 124 103  25 670 176 678 756 171 776 521 878  77 833 881
 849 627 663 470 112 679 393 105 876 842 590 115  20  21 770 715  84 747  54 102 229  62 639 501 759 494 882 136 108 871
 711 540 868 300 892 730 169 214 626 860 330  10  56 104 789 155 202 252 260 244 797 788 602 172 894 900 162  95 145 648
 621 159 817 228 856 701 182 114 275 683 444 226 279 222 879 818  93 170 506 128 310 571 802 857 548 865  65 232  97 767
 757 243 612 263 795 812 127 240  98 246 810 292 287 233 773 288 197 167 216  45 739 823 565 831 883 576 130 298 317 852
 836 224 605 254 286 781 886 816 622 217 769 239 303 429 274 294 248 120 400 148 190 853 467 887 732 273 340 132 194 696
 380 775 688 256 357 620 869 236 897 210 313 320 119  68 329 408 179 265 259 344 840 421 593 874 636 411 352 366 280 850
 880 727 682 220 386 293 368 338 655 791 164 241 755 257 323 844 309 122 264 370 877 180 845 163 707 272 276 203 261 742
 399 746 884 312 302 367 270 245 282 266 609 331 347 420 659 387 337 374 419 758 223 324 745 702 559 652 289 299 268 740
 872 305 563 714 178 458 296 383 343 574 321 527 339 242 336 568 733 319 394 255 433 581 614 291 713 325 322 341 422 753
 396 346 641 297 348 430 454 398 235 426 360 251 893 304 376 350 528 890 436 371 311 447 354 508 631 334 401 899 525 375
 875 443 425 369 351 382 449 397 326 378 284 377 390 295 468 415 889 489 381 388 570 373 539 358 835 391 459 402 404 413
 403 315 455 451 734 365 281 516 392 479 389 278 372 505 407 481 435 472 427 529 498 556 597 496 333 537 500 445 439 428
 512 491 283 424 499 448 457 409 453 488 547 441 423 637 349 588 416 478 384 345 355 564 469 405 517 495 456 285 410 487
 440 332 253 480 555 485 558 490 502 335 518 212 587 462 562 434 542 543 507 535 515 604 461 460 154 110 538 446 510 385
  47 483 363 450 611 582 573 497 536 634 362 544 484 700 534  27 437 237  15 511 522 532 452 580 249 513 509 569 567 395
 139 195 269 545 578 633 541 379 533 618 557 583 493 718 465 549 550 577 107 551 635  79 225 476 191 617 466 653 589   4
 463 658 258 133 624 492 585 524 152 560 473 625 418 572 477 595 486 431 706  96 685 598 221 554 157 125 721 552 526  48
 464 353 160 676 616 438 610 519 608  58 161 630 531 697 523 553 530 592 680 234  34 645 406 142 153 660 566 650 586  40
  28  70 207 671  90 199 691 615  74 414 561 735 632 716 672 584 471 806 640 662 774 135 412 591 177 116 623 504 628  17
 150 654 143 647 649 193   9 101 198 474  60 607 675 763 596 690 417 600 793 606 692  76   1 503 200 738 693 726 792  69
 186 308 250 638 646  64  14 689 213 694 599 764 741 729   3 644 520 613 677 704 185 723 230  94  89  82 699 681 722 314
  43 665 231 783 657  11 717 839 318 111 594 661 705 656 188  31 736 698 743 825  38  59  33 121 238 720 664 673 619 138
  67 307 140 766  18  80 118 752 777 719 651 668 173 737  44 106 760 841 765 804 724 782 271 247 184 215 432 762 603   2
   8 708  78 316 129  87 728 855  57 744 192 862 686 754 731 819 778 807 779 824   5 156 168 206 209 784  30 798  51 166
  39 785 277 838  26 227 809 851 126 684 146 826 801 342  63 189 830 837  61 803 761 703  32 356 100  88 201 575 780 359
 117  16 165 859 267 109 821 710 546  71 667 848 695 790 181 131 750 829 811 828 642 134 262 219 290  55 805 666  35 196
 211 113  12 866 158 601  42 815 751 204   6 854 858 834 208  50 847  13 799 787 149 864 183 123   7 205 786 867 820 482

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.43212e+06us (= 4432.12ms, 4.43212s)
Wall-clock time (full program): 4.48503e+06us (= 4485.03ms, 4.48503s)
Satisfaction error: 0
Number of search iterations: 3042
Number of local moves: 954 (including on plateau: 333)
Number of local minimum: 230 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 23035
Total number of local moves: 10066 (including on plateau: 5244)
Total number of local minimum: 1709 (including on plateau: 398)
Total number of resets: 10
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 862 888 120  49 344 761 894 777 868 892 786 647 811  83 160 118  99 684 747 110  42 103 478  45 591 826  19  50  63 598
  37 368  39 451 151 859 897 650 667 749 846 656  82 738 213  46 839 309 762  66  20 365 167  65 708 131  52 883 891 808
 845 887 864  96  92 860 655 899  64 668 711  67 588  89 105  47 835 830 885 102 121 203 136 772 725  70 144 889 140 126
 735 701  75 163 164 795 893 788 855 166 642 221 460 869 185  38 663 510 865 464  80 348 691  25 752  58 880  85 148 196
 611 712 226  78 890 764 896 736 832 748 697 722 695 104 578  93 183 212 867 154  69 150 262 174 551 844 134 199 139 195
 613 829 243 142 275 843 423 900 228 219 877 837 873 123 576 125 237 153 661 141 240 288 672 608 882 158 267  95 115 872
 592 605 186 205 239 156 803 679 297 600 698 562 782 109 444 249 252 878 821 214 184 170 231 686 727 181 208 215 750 792
 623 594 217 169 247 220 238 879 347 848 827 800 809 333 457 211 884 187 704 188 375 232 717 518 675 250 201 194 313 258
 751 815 343 328 235 264 225 624 813 310 503 340 526 316 716 198 278 874 433 210 245 851 895 305 674 302 289 277 291 284
 773 604 324 271 875 263 311 724 304 898 566 665 350 168 628 229 334 817 266 299 260 265 745 202 775 312 251 374 317 345
 677 852 268 206 389 285 253 652 244 720 401 645 452 326 836 287 272 690 416 398 223 402 767 339 881 335 322 320 376 281
 819 329 445 486 261 505 351 639 342 807 550 349 331 794 870 359 355 768 280 341 248 353 620 290 404 430 517 303  71 298
 636 408 409 330 319 377 534 529 429 485 354 360 824 338 822 528 387 633 337 385 391 380 556 580 373 300 386 356 366 403
  54 361 418 491 415 315 321 602 392 530 417 397 383 443 378 542 406 853 346 589 425 441 440 474 336 496 806 372 693 379
 367 454 371 412 465 469 395 519 548 410 405 400 537 384 489 435 446 543 494 437 438 399 434 525 419 396 453 493 522 456
 436 439 323 490 484 172 596 307 450 540 394 422 455 427 539 414 502 382 515 523 421 532 527 488 508 512 358 381 467 511
  55 388 473 536 462 426 122 390 318 541 495 587 466 506 499 481 463 553 477 449 634 631 458  57 411 471 569 472 476 649
 579 564 480 270 549 557 570 301 498 470 516 468 182 479 175 559 533 483 428 643 597 292 308 209  30 554 520 524 565 612
 352 586 442 571 606 447 116 393 683 492 294 733 200 448  40 546 595 504 420 609 584 603 332 173 100 560 407 599 497 583
 246  73 535 582 671 555 561 161 625 357 190 459 296 614 111 615 552 617 666  74 531 545 507 413 124 501 513 619 658 544
 132 241 627 703 563 637 577 254 593  17 257 114 685 558 276 461 575 117 688 567 475 487  60 521 179 632 626 670 585 638
 135 218 659 653 654 726 682 133   9 127 568 108  79 719 306 710 590 547 641 572 651   6  91 610 138 574 696 635 648 630
 314 629 660 847 721 573 729  18 687 293  22  41  21 718 273 707  87 286   1 715 644 616  28 676 180 689 700 741 159 740
 274 129 728 756 673  10 369  61 755 204 622 713 424 681 193 662 601  72 236 664 776 657 283  36  68 694 640 709 678 147
 130   5 743 825 618 106 137 234 514  76 216 706 224 757 765 754 723 364 189 737 705 702 739 680 222 177 699  11 730  27
 255  81 774 812  29  16 759  90 732 162  32 607 758 789 282 783 242 259  77 734 818 823 538 781 233  48   4 850 785 362
 178 325 790  62 763 714 101 256 327   2 145  97 191 791 858 778  12   7 112 744 838 742  88 793 230 746 370 861 810 784
 500 149 856 854 760 731  59  56  44 279   8 128  51 766 363 849 787 227  53 669 798 295 828 834 171 831 799  43  35 692
 769  84 779 820 119  23  15 107  24 753 207 155 804  31 797 805   3 143  94 841 842 801 146 866 802 816 814 432 431 192
 165 197  98 857 482  86  33 157  26 152 269 509 176  14 581 886 780  13  34 876 840 833 771 770 646 621 871 863 796 113

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.83139e+06us (= 3831.39ms, 3.83139s)
Wall-clock time (full program): 3.88615e+06us (= 3886.15ms, 3.88615s)
Satisfaction error: 0
Number of search iterations: 2352
Number of local moves: 859 (including on plateau: 330)
Number of local minimum: 163 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18333
Total number of local moves: 9422 (including on plateau: 4823)
Total number of local minimum: 1191 (including on plateau: 381)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 766 117 747 894 612 513 877 712 531  28 772 155  26 842 600  51  81 545 136 840 748  56  16  69 373 849  92  71 744 652
 828 875 364 791 687  64 546  83 617  79 888 648  31 710 734 595  70 654  62  27 846  93  17  95 114 896 475  77 657 892
 104 887 856 751 743  38 853 859 169 113 162 167 110 610 790 621  67 830 179  45 736  57 149 144 776 261 109 873 663 793
 895 120 138 765 850 126 768 128 825  40 425 689 188 762 879 549  68 585  75 133 885  84 212  21 837 112 854 127 711 664
 185 159 224 897 677 163 864 142 845 182 869 363  61 794 606 561  65 581 135 247 881 195 141  35 592 851 512 191 724 773
 168 119 178 780 870 783 774 118 582 171 223 509 265 841 228 771 193 789  99 289 693 647  76 164 893 111 473 153 756 799
 174 157 209 826 626 177 836 137 863 258 233 560 279 674 692 740 416 721 107 231 823 158 278 288 186 285 703 243 898 737
 173 468 190 650 801 251 211 131 518 337 275 199 210 786 665 812 172 627 204 249 742 214 868 407 283 238 656 714 809 655
 234 148 206 680 719 227 338 266 806 217 192 281 291 685 739 876 717 781 313 254 372 872 325 346 268 134 899 170 590 569
 682 271 245 645 815 848 328 216 891 294 183 465 240 332 754 599 506 883 274 255 658 276 218 198 304 237 811 230 229 628
 253 290 722 651 588 250 257 708 350 273 900 847 624 272 267 709 668 296 184 368 277 309 196 354 252 260 784 339 470 797
 286 341 303 666 433 882 329 270 787 557 358 728 284 323 292 573 428 295 369 578 308 374 319 318 833 336 697 348 302 598
 241 483 738 629 641 865 798 314 453 441 391 299 405 488 429 362 401 409 400 269 424 403 357 371 414 344 327 380 419 620
 355 353 413 396 331 361 293 889 399 384 490 297 342 460 430 767 406 392 387 381 359 422 746 383 479 609 375 567 667 382
 437 397 412 454 461 485 551 415 343 388 379 439 370 455 367 386 474 442 843 427 418 417 440 537 515 525 564 389 420 365
 390 307 489 423 315 523 408 452 394 378 500 493 499 484 539 298 351 495 486 434 443 467 570 507 469 487 438 494 520 462
 547 404 540 366 451 457 435 393 632 511 482 145 505 481 330 115 264 597 449 347 496 510 497 466 571 477 431 572 566 478
 432 491 445 256 448 521 447 463 565 517 459 213 530 528 464 322 458 349 498 544 535 471 587 580 450 541 376 446 556  23
 562 619 436 287 502 524 476 593 222 584 421 536 576 508 563 262 187 176 395 591 215 501 480 604 526 534  90 543 646 356
 633 611 574 221 189 640 522 623 103 615 514  18 532 631  63  98 398 140 516 538 555 519 586 637 533 613 686 676 410 121
 558 660 583 317  33 607 618 614 649 492 635 146 504 527 244 306 552  20 643 638 385 769 577 679   5 553  88 662 106 345
 696 661 542 219  82 669 579 690  73 698 630 123 723 147 596  85 402 165 608 589 161   3 568 713 603 639 688 701 226 236
 602 659 695 242 377 705 116 503  54 529 675 232 636 259 235 156 741 108 683 644 642 616 426 702 622 605 130 745 124  52
 672 782 681 105 202 735  32 684 334 700 726 472 601 132 203  29 760  37 575 625 324 673 731  89 758 634 312 550 263  94
 753 694 777  41 175  12 653 730  80 749 759 699 559   7  78 151 456 152 671 792   9 755 761 704  97 678 305 732  42 444
 752 874 102   6  19 548   4 715  58 802 757 718 813  43 139 225 844 200 838 729  15 814 707 775 727  11 333 706  44 197
 311 750 800 352 160 340 194 716  91 821  72 818 857  48 411 554 834 720 795 803 239 832 827 788  36  25  46  53 220   2
 725 770  13 101 201 691 205 880 310 804  30 670 763 320 122 301 779 326 855 785  87 860 778 839  60 807 248  50  10 125
 100  14  74   8 300 360  22  24 817 733  49 764 829  86 166 831 871 316 878 808 180 866 816 835 143  39 805 852 594 335
   1  34 819  96 207 150 181  47 154 820  66 822 862 280 890 810 886 884 858  55  59 282 246 867 796 824 208 861 129 321

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.86592e+06us (= 3865.92ms, 3.86592s)
Wall-clock time (full program): 3.91907e+06us (= 3919.07ms, 3.91907s)
Satisfaction error: 0
Number of search iterations: 2308
Number of local moves: 1075 (including on plateau: 541)
Number of local minimum: 166 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 18532
Total number of local moves: 8313 (including on plateau: 4238)
Total number of local minimum: 1305 (including on plateau: 344)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 888  84 814 797 898 846 549  77 134 717 127 784  45 180 540 617 145 124 761 697  91  97 240 158 193 865 149 816 188 894
 782  39  88 220 599 741 872 639 131 868 755 195  87 257 852 536  93 560 801 213 881 215 128  48  89 720 125 685 869 427
 668  59 730 104 897 794 827  90 791 849 691 887 108 110  41  52  95 112 758 845  51  62 103  46 137 900 265 879 817 747
 502 105 799  47 744 893 168  99 607 811 467 209 143 113 252 485 132 777 889 712 855 638 228 117 126 863 129 836 207 562
 700 223  56 296 735 873 895 165 183 860 745 862  79 867 267 844  76 286 208 330 299  94 227 774 322 892 164 153 212 828
 716 884 186 119 663 259 859 136 173 843 202 687 151 724 271 263 185 824 866 222  81 384 147 682 842 497 249  80 588 732
 612 197 142 371 597 196 875 201 157 377 389 692 269 260 280 864  50 699 891 705 192 448 251 847 266 853 570 224 219 821
 683 641 279  86 704 184 438 882 345 630 673 786 144 486 233 765 237 522 236 874 174 338 750  70 305 858 176 313 320 383
 608 264 321 150 760 615 287 230 841 787 886 460 199 703 140 878 210 792 204 857 357 885 189 116 314 239 200 255 303 465
 324 241 171 317 763 272 757 327 355 346 392 759 315 295 203 621 235 706 350 861 820 416 839 309 406 331 367 380 211 826
 590 381 282 352 825 293 300 312 254 250 838 708 387 329 424 737 360 718 294 883 301 379 713 191 336 431 270 292 253 832
 851 347 466 344 275 447 319 242 328 566 449 356 388 686 323 504 368 831 701 256 415 409 679 463 373 412 298 182 471 766
 474 768 351 359 276 443 413 523 335 310 423 358 374 333 510 469 361 812 517 494 488 468 628 499 341 594 395 439 277 483
 396 896 318 475 348 410 278 261 408 378 290 458 365 429 554 455 779 445 354 506 456 404 899 555 539 426 325 205 470 433
 363 604 436 567 870 385 403 326 243 440 394 393 528 343 514 525 776 500 302 232 401 520 402 516 274 511 534 366 477 370
 453 284 454 304 311 478 498 398 480 508 592 340 435 484 397 473 489 512 542 411 505 479 591 614 291 437 451 390 464 450
 492 342 462 551 457 548 422 598 496 405 569 190 472  22 493 167 459 273 657 491 446 530 490 616 419 289 619 541 538 461
 308 501 372 533 582 738 102 524 571 418 559 441 600 558 400 425 618 550 561  92  25 154 156 481 428 633 572 546 635 432
 114 568 545 603 399 606 532 198 574 605 518  68 601 339 670  65 442  58 584 515 736 611 281 662 529 375 553 513 544 107
 417 622 564 482 535 595 675 430 664 106   1 613 434 262 519 121 656 178 476 653  24 527 421 581 654 444 557 577 589 138
 217 285 678 677  69 602   3 753 752 248 552  72 640 169 652 247 414 170 719  33 576 772 521 586 531 547 573 634 642 181
 509 625 620 647  96 563 627 593 101 800  63 146 537 495 587  64 649 155 526  73 709   5 349 580 646  67 707 624 629 723
 163 507 680 596  43  36 688  40 575 806  60  78 798 645  11 734 307 226 162 115 636 583 690 725 714 556 610 722 771 238
 218 626 671 578 187 693 118 795 748 364 658 306 780 214 643 244 728  49  42 161 775 715 631   8 623 135 809  55 644 297
 179 672 655 565  19  32 353 789 543  44  38 288 659 710 850 726 805 637 122 172 698 650 648  14 660  57 743   4 807 376
 194 727 721 669  10   6 749 733  34  27 362 159 822 585 665 175 785 818  82 283 676 833 332 661 731  21 739 813  18  85
 452 391 751 148 258  54 221 681 815  83 790 666 694 810 651 742 632 133  75 695 369 834 407 139 808 123  71 781  16 225
 382 778   2 788 337 152 234 767 762   9 216 711 854 764 684 334 754 503 689 231  66 268 667 804 166  74 674   7 740  98
 100  61 848 880 246  15  30 829 386  31  20 702 837 487 876 206 835 229  35 773 609 769  37 823 696 245 802 420 579 109
 160 793  53 890  12 746  23 877 729  29 796 141 770 856  13 177 840 316 111 130 803  28 871 830 756 120 819 783  17  26

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.58762e+06us (= 2587.62ms, 2.58762s)
Wall-clock time (full program): 2.64246e+06us (= 2642.46ms, 2.64246s)
Satisfaction error: 0
Number of search iterations: 1374
Number of local moves: 881 (including on plateau: 395)
Number of local minimum: 55 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10104
Total number of local moves: 7001 (including on plateau: 3123)
Total number of local minimum: 494 (including on plateau: 237)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 107 171 883 671  77  14 825   8 793 838 823 805  33  74 840 879 135 826 837 884  80  18 778 145  28  92 860 807 105  79
 305 100 877 275  19  13 855 153 834 863 788 747 507  68 827 752 413 762 772 209 294  11 133 106 748 150 760 270 686 218
   6 803  15 743 339 197 800 239  10 200 819 758 101  83 750 839 167 858 814 797 188  72 815 165 824   2 859 846 110 296
 801 777 779  39  37  36 718 215 235 832 732 843 312 136 798 694 116 813 771 406  97 128 790 708 734   9  48 373 180 358
  22 820 692  25 244 163 719 233 866 754 769 786  54 796 746 429 182 737 693 761  70 634   3  85 682  98 829 403 191  29
  50 782 704 484 103  12 730 121 619 862 763 699 115 715 608 689 142 799 504 784 146   7  23 728  44 220 787 357 281 637
 658 636 662 680 411  42  27 639 649 707 684 727 422 580 710 278 130 836 676 199 301 129   5 192 701 723 617 342  43 109
 594 652 656 628 325 117 597  38 625 741 678 632 229 702 713 272 112 620 633  62  75 592  96 164 603 683 703 688 183 102
 659 654 685 195 365 223 642 711 661 668 611 575  82   4 698 630 572 455 714 670 349 159 295 198 360 557 629 149 255  90
 667 672 543  88 369 156 613  30 473  20 571 691 219 675 720 404 569 601 584  53  91 539 623 487 578 610 570 598 643  58
 609 616 602 166 328 374 579 665 647 574 588 648 532 627 646 196 552 577 599 524 308 206 755  69 546 503  71 170 152  86
 564 706  16 631 208 155 423 607 522 434 475 562 362 595 568 186 555 558 582 437 230 497 606 559 641 587 418  56 499 276
 538 401 513 496 333 430 443 515 624 544 254 464 525 531 545 351 151 547 453 441 284 448 536 549 563 534 459 509   1 533
 398 397 519 561 346 567 618 141 560 514 387 494 498 573 444 399 541 381 445 424 318 535 435 432 511 551 605 449 315 157
 586 439 371 500 370 481 414  17 520 320 550 474 493 433 478 402 383 529 537 421 340 583 526 467 483 548 431 521 447 451
 450 379 466 389 440 506 456 452 776 460 427 380 359 518 477 364 446 417 465 376 850 368 391 412 436 356 438 377 458 426
 259 366 386 461 479 425 454 517 378 367 390 322 311 324 393 802 469 470 420 645 556 635 442 316 553 394 354 767 375 485
 306 408 468 480 523 488 273 482 327 576 396 363 892 385 313 621 392 490 217 330 660 492 329 462 361 347 472 726 428 508
 268 249 409 851 736 419 388 887 350 491 335 463 476 416 256 673 282 400 872 288 590 326 300 265 205 343 279 231 655 812
 310 345 355 352 510 875 331 697 123 289 495 304 395 337 314 792 297 321 303 817 528 248 236 501 540 240 405 895 554 806
 257 290 263 890 615 589 242 881 410 891 246 148 384 286 336 651 227 299 344 382 527 271 203 828 334 154 317 731 780 739
 283 250 293 291 542 811 353 302 898 189 415 267 614 269 181 626 865 262 228 867 756 176 323 764 237 292 307 842 372 640
 277 298 204 740 596 874 173 486 175 210 225 309 712 319 177 600 835 202 160 280 653 716 880 212 338 773 264 512 677 638
 852 193 179 224 687 735 241 530  46  57  99 214 585 348 238 213 657 222 234 705 783 795 663 897 190 785 247 243 896 757
 868 125 221 274 566 889 258 864  81 134 252 260 816 132 207 216 847 108 174 332 695 742 893 644 831 287 118 137 753 791
 809 253 266 581 721 565 245 759 194  66 201 169 724 187 140 104 845 131  32 407 725 808 184 869 161 765 768 471 696 669
 751 679  52 261 871 861  41 664  34 172  94 114 841 894 127 138 885  24 178 120 853 854 650 124 285 722 666  76 775 709
 143 111 489 147 733 766 770 341 857  40 251  87 593 830 144 211 674  59  67  45 749 804 744 781  51 818  78 810 622 700
 886 821 900 516 833 888 168 717 139  21  35  84 591 822  60  73 848 185  49  55 729 873 113 612  65 870  63  95 505 899
 232 122  47 876 789 844 119 604  89 681 162 126 738 856  61  31 226  26 158 794 690 849 745 774 882 502  93  64 878 457

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.56758e+06us (= 2567.58ms, 2.56758s)
Wall-clock time (full program): 2.62178e+06us (= 2621.78ms, 2.62178s)
Satisfaction error: 0
Number of search iterations: 1299
Number of local moves: 762 (including on plateau: 239)
Number of local minimum: 72 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10296
Total number of local moves: 7368 (including on plateau: 3115)
Total number of local minimum: 560 (including on plateau: 240)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 709 470  58 887  77 821  43 706 822 735 816  66  76  85  94 638 757  68  36  90 525  80 840  38  75 884 558 826 825 810
 432 890 856  53  44 748  74 702  82 781 849 717 754 138  78 751 133  17 524 654 673  81 742  26 142 102 659 794 832 187
 704 234 883  71 724 880 116 763 436 806 868 655  91  89 137 811 199  59 127 689 878 242 767 301 641  95 140 784 175 150
 677  72 100 899 888 788  39 879 153 675 891 300 173 197 154 627 259  92 192 700 791 854 872  48 285  93 552 449 690 126
 721 388 551 152  98 746  52 785 383 759 877 870 169 112 144 770 683 177  84 185 656 136 768 274 226 895 182 882 628 162
 619 251 218 200  83 644 141 705 172 587 853 205 294 881 225 837 835 119 481 228 738 235 873  50 844 254 178 680 778 307
 796 841 522 896 123 230 898 639 250 830 288 236 180 113 298 687 322 143 148 260 747 132 607 885 103 317 894 183 626 321
 315 519 863 161 207 892 334 900 257 889 666 109 775 325 145 807 625 342 571 258 820 151 231 302 333 125 114 241 364 874
 876 637 261 186 160 240 893 769 431  70 196 281 198 772 319 886 159 252 712 216 719 871 897 191 793 247 243 237 385 418
 667 836 597 262 212 852 371 419 268 693 194 866 328 339 189 593 222 217 458 220 468 391 630 105 289 483 536 827 591 392
 293 865 516 331 188 358 542 389 332 283 272 860 290 789 275 564 156 316 390 850 584 223 697 310 540 267 296 739 590 410
 504 490 843 652 518 409 354 284 213 318 365 330 532 599 435 338 404 366 280 291 736 286 411 539 631 421 350 398 731 487
 509 329 741 834 363 327 544 503 527 343 397 474 374 219 292 439 506 407 845 344 529 464 459 312 482 377 373 277 501 424
 335 586 351 309 361 399 422 535 507 526 305 502 579 401 425 489 869 454 376 340 417 345 429 543 427 379 430 347 510 617
 360 303 370 406 555 521 355 541 452 646 324 326 475 491 408 546 451 375 498 471 485 271 493 585 323 604 420 446 694 320
 605 352 357 304 299 494 336 466 463 505 476 523 495 511 282 480 473 500 433 499 538 496 308 574 311 508 478 488 594 367
 576 412 378 394 386 592 467 610 578 405 440 472 563 362 559 255 497 589 201 402 438 581 423 393 443 413 382 603 232 469
 101 253 462 580 486 670 565 313 238 416 520 545 368 622 672 295 648 513 107 492 400 426 548 600 460 762 461 380  51 561
 245 106 129 557 554 606 465 613 612 650 515 337 596 479 415 246 384 642 381 477 372 570 453 456 624 447 434 484 224 442
 615 147 149 455 632 534 728 562 441  87 121 549 566 671 533  28 737 688 679  31 273 567  61 595 618 755 528  11 531 623
  96   6 166 514 550 560 450 512 710 428 583  46 663 263 547  15 640 686 711 833  21 602  27 577 314 674 661 611 341 708
 195 601 444 786 817  55 395 170  64 517 771 727 229 732 643  86 553 651 797  16 359  57 445 614 629 678 556 179  42 707
 620 701 208 716 608  20 676  69 396 633 696  25 766 720 530  24   9 569 730 787 270 616 287 803 649 598 110  62  29 588
 146 572 636 635 653 575 437 165 135 233  88 658 838 733 818 448 684 734 414 752 204 269 356   4 718  40 750 139 582  99
 348 699 190 715 753 155 573 131 828 171 805 764 855  73 862  22   3 634 164 800 266 685 279 847 130  54 668 181 215 645
  63 206 681   5  12  41 692  34 703  13  37 848 756 227 808 306 568 713 669 813 163 647 118 831 780 725 790 349 203 714
 128 621 798 369 726 115 743  49 829  19  56 665 664 758 846 256 104 745 682 184  65 795 158 276 657 761  67 765 157 457
 209 387  33 239 773  23 819  18 782  30 120 221 859 749 744 264 691 792 824  32  45 723 122 812 174 760 801 875 248 346
 698   1 297 779 823 210 777 176 729 202  79  60   2 662 864 193 695 804 134 799 124 861 117 815  35 783 244 167 609 776
 353 740 857 168 842  10 214 108 722 265  47 278   7 403 774 814 249 851 867 802 211 858  97 809 839  14 660 111 537   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.11213e+06us (= 3112.13ms, 3.11213s)
Wall-clock time (full program): 3.16795e+06us (= 3167.95ms, 3.16795s)
Satisfaction error: 0
Number of search iterations: 1844
Number of local moves: 1176 (including on plateau: 629)
Number of local minimum: 89 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13369
Total number of local moves: 8376 (including on plateau: 3734)
Total number of local minimum: 677 (including on plateau: 290)
Total number of resets: 0
Total number of restarts: 0

Error: 0
