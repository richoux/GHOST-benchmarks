@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 364  17 306 882 854 219 849  44  98 258 399 218 839  41 867  70 257 864 823  43 818 244 832 473 495  50 845 232 855 359
 779 236 325 884 143 182 860 821 817 863 125  10 879  75 831   2 271 844 805 101 159 848 814 223  72  53 109  91 443 850
 122 819 247 856 862 319 215  52 787 798 830  93 840 145 765   8 112 767 806 183 224 705 771  65  14  82 118 283 789 838
 816 780  47 102 746 731 680 245 825 246 201  90 276 120 808 769  15 859 778 208  96 406 804 161 757 413  12  13 799 712
 766 790  94 701 116  60 355  89 828 762 229  61 243 784 800 743 153 748 259  38 661 345 725 106 751   6  23 777 755 747
 658 797 174 599 723  74 815  18 826 687 217  32 227 119 758 730 293 752 791 728  27 197  67 124   3 753 704  59 782 781
 660 300  83 432 714 737  63  28  24 710 142 656 138 575 720 745 654 711 682  84 733 192 754   5 729  79  77 724 668 696
 619 648 196 327 688  71 238 200 694 673 131 597  19 676  16 713 204 722 702 557  25 681 643 156 351 633 608 678 275 774
 740 604 211   7 615 103 178 692  26  35 252 744 652 644 689 697   9 630 157 645  55 571 686 107 616 672 715 573 683 507
 635 554 286  54  22 595 231 580 626  29  45 593 504 478 610 634 647 670 699 545 282 611  11 175 586 491 637 549 570 566
 588 344 292 214 521 621 185 620 583  92 267 279  85 581 695 614 584 540 577  66 468 663 582 177 592 528 505 578 518 556
 622 606 284  20 613 596 126 589 555 433   4 203 144 625 523 605 551 148 501 242 497 517 562 401 629 499 700 552 609 559
 561 132 277 350 535 572 476 537 375 526 228 638 547 564   1 574 541 486 428  21 464 546 533 440 553 511 458 494 520 627
 506 441 462 461 522 484  30 447 459 438 382 481 392 548 529 503 429 500 482 474 460 510 421 451 400 390 496 483 444 490
 457 469 424 563 316 442 530 317 389 531 405 502 414 576 418 463 489 467 313 466 363 456 465 509 426 415 524 366 568 472
 435 381 439 544 515 436 437 512 488 427 450 492 508 664 420 479 409 485 446 403 417 398 423 383 416 455 493 371 402 387
 470 454 636 323 430 318 419 410 396 471 379 538 516 357 519 475 477 487 445 367 395 397 411 434 453 889 431 358 380 480
 449 666 650 310 407 337 332 527 377 374 352 311 384 408 388 452 280 894 448 539 356 391 328 393 404 820 372 870 335 361
 303 376 600 322 339 329 290 347 667 353 617 543 346 425 386 220 336 302 370 550 360 739 368 847 813 525 304 422 890 226
 378 759 891 842 314 295 898 301 254 288 534 307 373 291 338 299 607 342 340 896 348 822 278 651 285 341 281 334 298 330
 315 690 513 602 269 349 786 333 331 877 631 296 785 251 235 305 843 222 320 268 900 827 309 618 273 270 261 230 263 343
 385 308 742 726 265 793 727 262 836 824 601 312 721 297 326 369 717 205 180 764 207 707 256 669 186 239 260 209 135 287
 274 264 693 671 237 802 841 750 146 253 567 878 272 198 248 212 835 147 194 569 640 164 897 795 249 221 240 206 166 886
 216 579 532 590 199 137 321 677 354 162 796 858 706 184 225 234 684 127 876 812 735 160 255 875 168 760 868 172 202  51
 171 195 657 176 294 187 603 851 732 190 718 188 594 895 266 169 811 179 213 809 893 833 233 639 558 170 155 837 149 150
 108 128 587 324 887 734 624 772 141 736 679 498 591 810 173 134 665 191  58 768  88 151 154 792 123 763 738 788 158 152
 121 140 775 741 115 871  48 210 241 612 719 662 761 189 181 110 807  64 646 365 872 129 709 655 852 783 866  78 117  76
  86  99 362  57 653 749 598 883 394 139 874 801 623 412 675 770 542  73  95 846 703 136  62 756 100 829 193 794  97 114
  46 899 873 585 514 698 111 685  81  69 888 861 105 892  68 881 130  33  39 289 628 133  49 632 776 167 880 834 565 104
 865  40 857 250  87 674 649 716 165 659 853 773  31 691  37 536 163  56  42 869 641  36 113 803 885 708 642 560  80  34

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.3109e+06us (= 2310.9ms, 2.3109s)
Wall-clock time (full program): 2.36269e+06us (= 2362.69ms, 2.36269s)
Satisfaction error: 0
Number of search iterations: 1290
Number of local moves: 772 (including on plateau: 236)
Number of local minimum: 58 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10191
Total number of local moves: 6396 (including on plateau: 2274)
Total number of local minimum: 504 (including on plateau: 279)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 272 323 167 207  98  62 816 647  35 799 855 832 795 882  44 824 263 797  17 866 375 858 140 198 163  61 773 146 775 425
 199  37 759 105 708  50 193 267  43 803 814 811 813 741   3 714  45 794 144 771 822 303 133 847  13 807 752 861   5 158
 117 801   2  53 793   8 493 304 132 108 809 869 804  69  51 766 282 594 243 763 782 843 137 841 145 302 764 112 778 750
 209 872 187 369  39 510 699 742 172 232 762 808 731 284 109 683 151  19 122 815 110 868 255 863  76 823 416  32 757 800
 181 756  68 732   1 216 747 686 125 677 802 768 737 698  25 693  88 712  33 725 700 653 123 720   9 820  40  27 785 168
 715 761  42 353 721 139 655 104 266 276 711 629  54 285 229 641 701 753   7 608 723 668 142 738 346 687 780 155 603  23
 186 696 695  41 660 100 411  46 268 675 716 560  52 363 692 718 135 769 178 733 368 681 260 432  87 770 663 190 664 706
 116 787 247  22 724 526 694 188  73 545 710 755 728 191 617 703  81 746 646 685 717 370  10 767 200 184 682  64 678  59
 120 661  56 707 630 474 644 633 179 669 580 659  26 622 684 606 113 643 350 578 557 428 454 607 143 372 500 180 616  24
 581 702 627 504 749 574 566  48 407  11  66 671 470 224 487 674 550 713 527 604 473  31 111 559 433 265 798 314 652 124
 480 506 519 639 619 525 614 562 430 605  14 598 584  29 489 657 471 673 349 460 590 220 273 522 204  96 544 326 341 576
 546 638  12 496 469 676 565 634 296 654 468  15 593  85 680 538 556 502 475 517 628 317 201 459 271  86 727 308 478 625
 509 586 412 444 609 551 395   6 422 486 438 542 371 656 497 436 488   4 461 477 623 554 423 610 515 228 540 170 442 620
 642 495 600 367 445 463 553 149 457 498 499 596 548 347 396 462 357 467 382 472 591 589 366 501 327  47 381 379 521 618
 441 383 539 338 466 451 450 518 431 307 530 458 512 373 491 485 599 481 516 420 397 447 443 390 531 424 534 434 446 280
 490 398 299 417 401 790 344 365 476 324 374 339 456 464 543 885 449 479 394 437 505 426 404 298 533 318 354 408 455 690
 378 399 567 421 385 453 270 333 513 331 722 405 880 452 435 359 388 400 250 572 293 537 558 345 552 561 514 571 334 337
 415 227 387 439 277 274 414 240 595 342 427 549 419 291 376 348 547 887 258 508 624 413 511 689 286 448 828 555 306 635
 403 212 418 883 246 215 294 310 611 279 402 164 392 726 364 237 484 343 658 315 751 667 573 295 615 704 406 730 429 389
 214 360 319 523 283 340 632 791 783 325 577 377 297 252 235 241 251 409 281 894 829 744 568 356 570 563 259 532 410 300
 234 134 597 335 648 352 254 393 483 890 380 529 386 729 316 507 248 311 264 322 784 649 719 355 645 786 213 492 330 230
 287 221 361 852 148 336 825 821 602 301 239 329  77 862 236 253 865 152 856 126 238 898 827 169 792 612 217 588 223 202
 830 210 332 812 233 391 320 249 569 175 161 177 262 846 836 261 789 192 328 196 309 482 494 351 891 740 289 626 290 874
 269 226 705 672 206 362 878 662 734 524 211 231 313 173 776 208 739 222 871 244 106 321 849 879 670 195 275 745  95 154
 853  90 867 840 147 688 166 876 651 805 182 150 358 582 242 245 585  89 884  16 171  93 583 176 535 592 127 760 292 870
 743  84 636 185 205 864 160 774 601 141 183 156 174 440 848  78 650 875 893 159  97 130 837  79 859 881  94 845 165 679
 844 892 818 138 219 860 312 189 754  92 520 119 257 225 288  75 621 197 895  36 114 128 735 157 788  91 817 850 897 587
 796  74 806 758 665 631  20 873 772 613 194 103 765 810 842  34 888 102 640  55  18  65 709 136 889 503  72 384  80 218
 666 877 834 748 886 777 101 564 854 129  38 256 579 278 833 121 305 162 697  71  67  49 838  58 736  21  99 831 465 575
 779 107 637 115 835 857  30 541 781 899 131  60  82 536 851  63 826  28 896  70 153  83 839 118 691 528  57 900 203 819

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.50893e+06us (= 2508.93ms, 2.50893s)
Wall-clock time (full program): 2.56169e+06us (= 2561.69ms, 2.56169s)
Satisfaction error: 0
Number of search iterations: 1409
Number of local moves: 861 (including on plateau: 275)
Number of local minimum: 65 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10837
Total number of local moves: 5909 (including on plateau: 1825)
Total number of local minimum: 608 (including on plateau: 250)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 350 811  85 713 804 869  80 878 735  66  26  42 361 332  40 798 607  22 818 561  93 776  59 812 187 882 693 883  81  51
  73 172 424 444 819 880  48 624 758 701  79 153 525 703  90 797 775 896 692 215 861 689 161 827  28  49  39 646 248  99
 814 626 557 806 157 839 847 237 593 119 134 422 714 664 202 577 822 887 399  65  53 644  68 207 849  95  56 870 120  72
 888 663 563 884 164 114 306 275 478 600 729 189 534 721 219 152 890 898 239 240  30 874  96 526 228 160 770 845  84 156
 133 765 681 487 612 206 336 222 718 717 343 538 489 287 121 796 889 825 763 122 169 726  18 359  43 546 166 668 185 585
 129 761 857 620 785 824 163 844 395 304 725 262 184 256 108 855 604 171 140 629 241 803 251 782 769 174 139 125 225 390
 297 749 891 699 236 233 375 691 613 231 381 505 817 257 147 170 553 267 772 842 141 856 282 707 360 285 177 809  34 138
  74 688 670 779 149 834 392 885 200 652 216 175 258 523 101 897 254 582 247 795 264 677 315 894 165 427 289 411 270 432
 218 461 685 731 104 245 348 404 737 201 261 323 778 403 805 886 260 214 801 791 105 872 238 351 755 276 250 335 322 355
 272 900 587 794 234 789 420 694 876 212 223 296 221 327 196 210 299 249 830 358 852 288 334 895 384 493 354 230 213 485
 340 341 738 324 253 408 103 696 892 316 879 829 784 712 454 453 314 266 204 774 319 382 274 369 418 394 195 376 330 378
 277 329 719 356 286 396 220 507 850 877 320 893 377 302 881 211 389 421 532 780 467 510 259 347 401 226 244 393 480 265
 353 388 484 413 374 307 370 762 598 379 242 773 407 303 481 371 451 269 522 539 416 698 380 284 837 357 443 414 583 317
 417 429 477 899 506 597 441 292 517 349 535 808 439 595 425 318 456 410 362 433 519 440 283 273 405 431 300 310 466 383
 364 570 409 426 469 544 293 684 372 579 368 419 639 365 428 313 558 509 328 391 434 490 495 366 833 295 430 301 619 224
 497 338 504 325 541 460 437 449 474 438 565 455 402 209 462 309 571 500 650 326 482 373 442 545 473 511 471 518 508 280
 520 475 367 118 337 345 672 168 305 521 575  50 661 246 447 605 611 458  67 552 503 498 625 415 610 662 476 463 601 562
 720 608  87 592 550 573 491 102 158 679 633 128 131 197 529 594 540 150 617 524 459 423 479 655 734 527 542 658 167 268
 386 589 188 596 559 659 333  60 599 615 502 578 109 111 512 457 176 385  54 435 674 468 636 398 560 496 682 548 581 569
 515 203  27 528 603 412 514 492 446 651 602 452 107 186 576 488 531 483 551  36 654 400 465 136 556 501 486 590 649 675
 537 130 232 217 632 621 787 321 116   3 516 697  24 115 647 586 530 494 695 580 387 308 622  88 472 574 631 564 648 741
 568  70  23  52 584 572 733 243  46  63 667 588 680  76 113  58 533 666 752 665 549 279 566 710 513 656 445 690 728 627
 716 645  45  98 711 110 591 555  82  33  71 606 638 643 660 155 609 746 499 630 614 142 702  44  47 543 750 635 567 628
 777 339 554 235 536 715   2 436 124 640  21  94 352 854 747 173 642 732 618   6 634 192 751 255 736 657 448  57 641 547
 858  32 281 298 100 727 786 127  41  78 700 470 759 868 673  25 162  17 198 637 848  11 766 687  62 783 860 106 832 723
 730 623 199 208 144  64 864 182 363 859 704 744  83 767 678 312 159 686  20 205 739  35 851 346 464  89 748  19 792 838
  61  31 311 148 745  97 826 708 290 291 807 252 294 853 722 756 143 450 676 653 180 145 709 135 742 760   8  55 831 836
 840 683 764 126 815   5 862 117 344 871   4  91 757  77 873 154  12  16 112 263 813 132 866 743 754   9 828 705  14 865
  38  10 835 193  37   1 151 768 179 799 841 863 800 740 781 229 146  75  15 331 788 190 816 178 123 790 802 278 875 843
 753  86 271 406 669  69 724  92 616 671 846 820 191 823 397 810  29 771 342 137 227 194 706 181   7 867 793  13 821 183

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.89166e+06us (= 2891.66ms, 2.89166s)
Wall-clock time (full program): 2.94699e+06us (= 2946.99ms, 2.94699s)
Satisfaction error: 0
Number of search iterations: 1532
Number of local moves: 821 (including on plateau: 345)
Number of local minimum: 96 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12322
Total number of local moves: 6082 (including on plateau: 2180)
Total number of local minimum: 860 (including on plateau: 269)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 757 716  72 879 242 875 117 119 632 564 633  96 556 887  43 143 169 773 655 842 796 184 624  84 112  81 799 800  69 196
  74 885 864 534 612 560  91 892 764 130 896  39 159 895 179 863  57 567 839  55 519 198 570  82  93 213 163 778 900  44
 128 666 114 803 847 772 151 211 821  61 801  70 248  97  68 144 623 212 693 639 829  80 683 886 118 785 233 888 745  99
 199  60 182 865 818 669 241 546 832 878 837 145 234 129  83 752 160  75 615 631 636  73 614  94 585 731 899 797  77  58
  78 180 136 670 890 694 157 882 700 312 897 226 140 249 100 770 158 849 375 110 883 168 584 178 289 893 844 665 272 166
  92 726  64 871 610 449 205 814 779 884 696 141 308  85 148 208 898 512 579 214 859 138 677 120 881 271 293 709 149 135
 279 750 333 174 544 278 874 838 794 253 538 646 181 209 344 153 650 736 835 267 833  89 843 219 268 370 177 634 167 239
 360 245 283 822 645 891 314 749 701 808 641 424 235  76 258 111 813 190 515 231 326 766 894 275 218 354 274 820 139 137
 240 826  79 706 751 854 236 207 448 742 703 172 734 188 191 263 420 328 470 396 687 889 383 346 187  53 368 587 876 185
 336 440 281 338 744 727 410 299 798 873 823 204 517 152 345 295 828  67 469 358 869 220 704 341 589 246 230 711  95 206
 389 452 221 320 855 743 292 227 300 266 573 422 817 325 297 353 202 264 710 340 443 858 762 315 497 313 403 656 350 550
 385 429 355 732 305 372 363 774 761 296 626 848 406 261 286 581 465 310 880 394 352 379 753 251 243 229 485 342 270 382
 386 547 513 421 356 702 393 339 269 309 627 301 877 402 514 400 323 553 491 334 466 349 527 690 223 287 367 411 806 332
 500 335 441 518 395 444 620 543 506 472 225 431 259 412 446 351 442 381 413 480 662 426 617 384 524 602 416 495 357 418
 486 494 502 503 493 366 460 438 291 476 364 427 575 256 479 401 536 280 490 373 463 667 407 347 507 651 559 337 377 510
 475 276 390 521 262 397 482 451 492 722 505 423 433 365 428 572 528 532 285 319 435 462 459 574 474 445 317 380 540 571
 439 171 625  20 464 318 467 414 369 628 484 327 216 483 329 613 478 717 392 473 361 415 569 554 432 457 692 496 586 526
 454  50 362 548 525 516 635 481 468 430 417 508  17 489 678 425 607 123 250 447 511 499 104 580 577 594 561 542 541 576
 477 348 388 404 609 155 664 555 498 539 195  41 558 834 533 679 578 552 165 530 434 583  59 461 523 487 408  52 601 605
 409 371 588 622 398  87 763 113 387 343 376 529 621 565 456 603 311 437 244 108 509 680  45 471 535 504 698 549 611 582
 647 455 771 597 331 277 488  19 150  31 324 419 657 453 608 616  49 654 695 545 265 658  56 660 724 591 682 121 522 450
  88 663 592 304  28 618 668  65  14 126 399 775 629 606 595 531 723 643 222 728 183 557 127 718 619 596   4 154 756 784
 737 124 816 192 217 224 691 501 134 458 193 638 101 590 788 768  66 652 284 810 201 232  30 294 676 747 714 194 684 759
 604 630 758 156 210 200  29 637 173 659 197 713 648 600 566  16 109 681 697 653 260 644 273 436 599 685 598 238  21 825
 735  54 754 730 203   5 705 391 175  33 102 520 780 674 712 707 247 699   8  98 105 688 307 851  15 733 741  86 867 790
 568 725 755  26 551 303 675 103 298 671  27 719 321 767 836 147 787 861   3   2 189  63  47 846 673   1 661 237 860 793
 776 322 689  46 186 254 649 740 316 132 115 783 176 739 720 107 802  11 125 812  13 715 288 856 791 721  90  35 640 866
 853 708  18 161 302 255 146 257 116 642 122 857 845 868 811 330 593 807 804 815 131 374 290  34 686   9 765  12  32 872
 795  62 792  10  71 228 781 746 359 562  37 840 405  40 850 827 870  25 306 729 133 789 378 738  48 106  36 537 563 852
 769 805 777  22  51 282 748 164 170 215 142 831 862 819 824 786  23  24   6 782 162 672 841 830 809 760  38 252  42   7

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.10054e+06us (= 2100.54ms, 2.10054s)
Wall-clock time (full program): 2.15745e+06us (= 2157.45ms, 2.15745s)
Satisfaction error: 0
Number of search iterations: 935
Number of local moves: 754 (including on plateau: 227)
Number of local minimum: 27 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6836
Total number of local moves: 5547 (including on plateau: 1473)
Total number of local minimum: 202 (including on plateau: 162)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   8 725 789 809 851 143 131 263 135 830 101 774 780 292 775 784 863 856  20 237 126 304 378 826 778  93 183  83 220 358
  19 377 869 227 857 850 269  40 103 241  72 701 260 116 814 769 799 781 800  38 737 827 740 720 810 111  41 153 288  86
 822   2  37  68 615 815 308 218 244 172  53 760 714 659 871 865 840  96 704  90 858 831 837 787 270 169 294 171 154 191
 144 253 819  44 801 647 105 127 178 788  88 364 147 747 820 849 876 748  26  15 707 832 824 749 686  21  95   7 232 776
 249   1 764 699 108 758  39  52 100  55 713  85  94 734 744 782 648 813 804 706 658 626  43 632 825  56  91 772  74 790
 606  24 607 711 342   4  33  92 346 681 721 355 333 674 526 838 623 682 729  71  34 854 605 796  23 195 338 770 180 722
 446 187 718  60 152 654   3  25 679 731 313 302 684 700 875 797 765   5 728   6 802 687 665  14 694 221  54 812  66 670
 123 282 660  11 293 821 176  45  98 710 805 568  97 662 783 672 585 735 622 695  16 642 141 613 726 224 692 641 314  63
 197 121 650 808 136 578 601  30 419 540 716 242 102 443 603 553 719 524 746 727 639  13  36 413 460 291 556 688 267 697
 496 475 523 566 276 379 576 208 483   9 575 170  22  29 661 708 555 742 529 248 368 604 664 552 621 322 668 479 283 724
 119 192 551 535 404 618 521 295 469 738 561 319 115 741 560 492 455 542 516 426 600 633 612 550  18 188  51 637 478 579
 225 298 463 447 290 277 230 228 689 385 500 186 610 627 477 416 614 519 501 509 517 482 629 562 513 311 583 532 229 666
 636 522 597 677  32 657 549 332 619 181 534 428 399 461 456 429 425 317 495 510 442 142 574 691 427 376 155 520 548 384
 476 423 434 504  67 351 403 343 433 569 559 390 397 471 490 435 468 394 430 536 512 422 696 531 558 402 453 511 497 360
 421  76 518 458 530 431 584 381 491 405 499 498 373 480 383 310 505 398 557 493 386 502 543 439 539 367 508 527 506 407
 470 432 380 415 441 325 467 594 445 259 464 807 466 347 412 417 309 472 573 631 538 537 546 328 353 473 438 268 484 424
 593 369 598 596 590 457 437 444 418 251 481 580 836 371 374 359 450 488 608 393 599 348 256 306 336 528 330 331 485 303
 300 409 202 401 683 887 372 842 414 375 595 362 592 396 387 451 273 354 349 582 544 515 238 297 474 554 352 389 611 315
 705 545 448 395 411 586 345 588 440 174 462 643 278 420 337 279 609 275 855 507 335 388 640 365 318 646 766 161 382 212
 795 400 489 321 449 182 324 541 563 307 757 743 680 591 299 357 320 486 391 219 884 350 366 334 222 570 261 247 205 862
 828 733 245 284 736 356 698 894 137 625 252 753 240 296 120 620 312 341 280 289 874 329 173 274 204 653 823 316 630 200
 257 635 118 339 843 487 755 678 577 436 406 616 656 287 408 327 285 286 246 250 209 859 271 370 264 752 867 231 634 166
 572 835 201 811 567 159 340 465 732 833  59 690 834 852 262 125 236 254 210 175 109 392 881 149 184 638 363 130 564 893
 565 651 190  65 305 215 882 900 771 846 179 281 791 877 113 206 203 255 114 323 158 234 223 886 503 715 777 361 816 110
 888 818 301  78 712 667 649 773 602 243  77 829 168  50 164 107 211 196 885 762 112 459 266 150 892 898 703  27 671 157
 525 617 235 669 768 133 883 759 216 326 177 344 730  81 258 138  99 122 272 870  89 163 793 198 214 589 841 839 723 844
 645 785 134 890 454 151 452 845 880 673 156 628 571 217 239  80 106 792 226 872  84 132  48 194 213 817 873 514 798  46
 128 655 675 861 124  62 848 895 193 148 860  31 717 587 207 117 162 897 189 786 167 185 581  69 624 663 146 652 739 547
 494 879 140  73 145 853 756 754 896 751 889  49 750 265  87 129 139  70  82 702 644  58 199 685  57 866 410 868 761  64
 763 794 160 693 533  12 779 864 745 233 891  17  79  42  10 104  61  75  28 847 767 165  47  35 709 806 803 878 676 899

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.49843e+06us (= 2498.43ms, 2.49843s)
Wall-clock time (full program): 2.5524e+06us (= 2552.4ms, 2.5524s)
Satisfaction error: 0
Number of search iterations: 1336
Number of local moves: 741 (including on plateau: 208)
Number of local minimum: 81 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9008
Total number of local moves: 5805 (including on plateau: 1601)
Total number of local minimum: 430 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 878 732 715 218 153 628 536 583  50 104 246 836 894 125 863 283  54  37 873 199 719  43 717 822  91 141 849 801  67 258
  71 899 267 823  87 790 851 569  61 134 795 777 893 159 629 399  62  65 162 636 747 560  66 731 118  52 735 245 840 292
  31 216 625 574  92 811 859 197 889  56 123 874 205 143 884  32 138 203 651 865 663  93  51 834 806  30 753 891 898  28
 121 738  63 493 135 775 361 875  70 231 460 249 749 599 886 107 181 824 120 870 697  75 126 861 177 142 650 890 160 830
  94 243  83 644 506 774 113 563 148 300 833 239 868 465 866 103 189 188 882 620 829 265 242 754 132 847 885 229  46 565
  97 827 278 772 221 883 154 646 115 285 781 192 606  72  89 867  82 124 860 876 809 254 273 608 887 187 752  73 152 693
  35 828 214 789 173 712 879 667 194 151 818 428 759 128 316 305 102 298 896 857 796 272 145 880 198 248 892 146  79 310
 379 256  98 782 175 571 313 500 170 241 630 434 705 289 174 877 358 190 845 308 797 180 850 701 451 106 626 355 306 848
 279 344 261 703 222 729 296 363 831 381 841 288 661 467 182 511  96 281 900 337 627 319 293 594 322 386 618 353 161 869
 396 274 362 671 122 721 262 490 271 793 881 237 575 301 346 524 235 317 621 895 290 244 334 365 423 349 737 206 453 820
 390 299 139 798 417 266 339 284 287 345 756 269 668 856 286 716 350 471 527 740 304 356 312 846 232 369 531 360 257 745
 207 558 219 638 411 433 275 653 410 395 330 888 567 769 209 415 548 251 476 767 333 163 338 408 185 766 760 326 547 270
 420 357 658 598 532 581 370 307 347 469 392 496 535 808 277 812 309 223 770 324 329 352 238 294 311 858 541 391 325 291
 505 320 544 592 372 416 512 297 380 442 501 302 498 268 897 449 437 234 622 167 529 331 448 472 515 528 645 397 376 519
 282 388 389 554 540 378 530 605 412 359 480 454 211 440 477 432 443 403 507 497 459 518 393 407 570 373 510 613 508 383
 607 486 550 487 612 398 368 406 489 421 446 435 538 374 502   8 377 672 375 385 436 430 504 414 542 537 335 404 551 426
 503 520 484 351 371 514 597 101 494 609 534 419 394 213 201 478 572 582 485  47 576 666 604 458 509 461 315 405 464 588
 614 664 555 280  78 495 468  80 526 455 427 466 456 482 431 110 424 382 327 413 491 328 533 589 552 543 438 635 727 546
 479 700 602  42 402 439 196  36 562 452 463 137 204 401 670 517 690 499 457 522 590 695 445 429 481 462 247 593 662 441
 475 488 686 364 564 545 447 130 473 611   9 492 250 168 631 450 303 656 215  29 762 523 640 549 655 474 111 559 678 578
 722 577 685 212 557 580 639 240 595 539  74 155 354 183 699 321 751 743 260 157  12 587 525 144 648 681 253 704 694 224
 601 632 684 340 610   5  13  81 615 692 633 677 178 263 757 171 710 659 384 553 172  23 652 233 803 616   7 675 422 654
 709 584 643 252 647 156 688 193 679 573 116 561 195 776 689 728 768 513 166 332 169 674  60 225  95 773 314 642 556  39
 724 683 736  99 617 149  22 669 665 634 387 750 470 748  59 566 725  41  64 100  76 702 676   2 649 586  90 794 623 409
 680   3 579 444 771  24 779  49 730 585 184   6 220 603 761 336 641 726 105 698 127 746 784  77  11 596 129 807 714 600
   1  18 691 191 862  17 140 720 516 707 226 568  84 660 366 682 802 733 624 179 483 853 591 295 718 739 131  45 637 236
 843  25 673  57 825 228 696 814 687 217 136 800  85 230 158 713 821 816  55 425 108 780 832  34 813 521 318  38 734  33
 765 723  26 259 778 200 872 758 276 839 619   4 400 817  88 711 706 755 119 343  16 842 255 418 764 792 227  14 114  15
 788  21 742 165 799 147  86 835 810 708 208 741 176 871  53  40 855 785 109 164 367 826 805  27 838 342  48 791  20 348
 819 112 264 323 864 150 854 804 763 787 186 341 117 837  69 852 786 844  58 210 202 815 783  44  19  10  68 133 744 657

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.55825e+06us (= 2558.25ms, 2.55825s)
Wall-clock time (full program): 2.61184e+06us (= 2611.84ms, 2.61184s)
Satisfaction error: 0
Number of search iterations: 1380
Number of local moves: 840 (including on plateau: 240)
Number of local minimum: 54 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10323
Total number of local moves: 5877 (including on plateau: 1770)
Total number of local minimum: 578 (including on plateau: 220)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 153 776  70 891 855 133 121 582 642  71 712 831  75 694 114 218 659 116 594 580  94 601 748 100 779 830 818  37 123 498
 822 372  76 887 655 876 112 318 761 870 299 519 885 856  79  41 722  50 445 119 260 765  45  73 106 882 581  63 193 783
 109 863  28  31 754 848  56 781 729 652 255 232 128 899 136 223 740 210  90 161  88 710  61 755 791 872 214 520 854 725
  78 737 226 895 686 719  22 362 897 421 104 886  87 613 182 143 786  49 230 175 821 772 723  81 146 790 589  38 364 893
 156 879  66 158 859 704 688 159 880 423 172 205 196 851 142 164 804 203 201 682 154 807 304 552 204 894 715 237 262 794
 647 814 898 120 824 726  69 571 707 705 665 220 241 178 149 277 884 130 110 207 881 839 275 728 596 134 271 180 321 148
 809 752 288 888 825 693 900 602 736 645 228 259  58 283  77 306 600 242 117 845 285 812 197 637 179 315 258 264 165 250
 212 741 256 247 698 254 216 857 883  57 525 169 295 177 150 385 703 170 166 162 787 734 896 844 469 281 878 122 289 892
 152 718 273  54 687 760 202 286 745 473 261 835 246 757 219 245 375 206 853 278 103 803 300 847 325 257 817 782 432 224
 270 614 229 361 628 323 200 780 625 808 732 243 191 320 111 301 274 248 721 338 646 470 796 805 333 368 280 293 412 795
 176 609 486 341 499 463 310 384 739 788 877 366 291 455 215 209 773 225 272 491 240 386 548 766 290 227 173 322 850 744
 410 472 453 468 553 527 441 332 551 673 697 358 199 137 233 351 331 357 777 449 415 312 537 837 549 330 404 324 279 759
 414 465 307 183 617 442 378 483 648 460 547 369 749 188 494 496 266 731 371 350 778 348 664 563 495 373 294 474 252 316
 543 518 574 461 566 336 407 292 401 268 507 319 889 302 501 329 562 487 535 397 380 418 305 606 517 558 381 420 354 382
 532 379 446 416 515 666 406 573 433 530 479 356 400 503 462 471 467 314 352 374 408 344 447 513 595 376 342 383 355 678
 502 426 624 422 430 297 531 599 367 389 402 621 458 429 454 516 570 222 500 482 545 309 436 360 533 437 649 337 497 171
 569 504 586 424 343 475 714 484 514 489 459 409 444 396 466 550 521 427 434 443 276 522 456 392  89 405 590 217 425 492
 528 335 464 480 451 641 353 636 308  96 249 490 510 578 334 438 508 538 565 339 603 534  83 509 568 526 419 439 349 644
 591 345 388 394 139 610 403  91  59  52 431 575 457 623 674 593 328 684  85 488 634 690 576 512 399 615 597 450 592 440
 493 572 560 611 263 653 626  48 108 253 102 685 612 622 635 554 709 567 296  30 561 346 639 144 523 627 662 556  68 390
 619 577 605 546 269 417 618  84 267 559  44 157 452 587 727 435 151 762 363 585 282 485  47 395 668 683 669 413 679 370
 720 340 631 579 190 129 834  74 478 620 234 700 542 598 758 540  80 838  82  36 557 265 347 391 724 747 147 656 643  35
 189 192 638 564 198  93 708  53 145  64 654 629 661 633 816 676 187 555 536 871 608 211  40 327 770 544 317 588 671 377
 746 287 691 667  65 506  20   1 186 583 529 827 735 797 607 505 140 539 767 630 298 105  24 359 632   2 141 789 860 477
 785 126 640 651  39  51 792 660 221 131 692 849 476  23 689 711 387 713 699 658  18 135 743 185  19 481  60 820 398 663
 763  67 717 244 448 181 701 411 167  98 584 101 604 764 864 750  92 672 784 677 284 115 541 326 890   8  72 840 716  34
  62   3 675 524  25 695 733 670 132 775 231 802 706   4 756 875 680 829 155 873  99 251 184 238  21 826 657 858 160  16
 681   7  12  10 194   5 841 702 127 823 650 303 861  95 842 751  86 738 819 867 862 138 833 236 768  43  13 428 774   6
 769  14 798 874 213 118 800 771  17   9 801 168 235  46 793 616  33 828 843 113 806 125 852 239 511  55 696 799 365 208
  15  11 810 124  27 174 313 869  42 730 393  32 832 107 836 846  97 865 753 815 742 163 868 195  26  29 811 866 813 311

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.14861e+06us (= 2148.61ms, 2.14861s)
Wall-clock time (full program): 2.20389e+06us (= 2203.89ms, 2.20389s)
Satisfaction error: 0
Number of search iterations: 989
Number of local moves: 700 (including on plateau: 189)
Number of local minimum: 33 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7293
Total number of local moves: 5376 (including on plateau: 1356)
Total number of local minimum: 297 (including on plateau: 175)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  83  53 855 129 671 872  69 164 472 874 861 865 848 813 851  14 346 185 271 376  48 721 807  23 806 146  30 798  35 429
 183  12 856  32  16 834  57   8 831 846 847 833 858 818 870  15 850 269 853 200 693 485 191 134 849   7  20 873   4 171
  66 845 864 201 137 857 326  10  46 838 771 835 822 844 765  25 646 180 824 219  89 518 774  56 866 722 182  24  64  99
 228 825 796 332   3 759 162  80 788 661 760 742 794 738 362  27 190   2 128 687  76 378 377 262 740 793 218 733 799  75
  31 772 786 132 156 817  13 748 707 779 781 739 763 785 780 149 328  28 355  17 314 698 802 268 127  82  52 677 751  78
  62 821 663 161  90 737 158 754 694 756 805 726 724 702 836 651 104 315 580  77 210 253 747 157   9 684  36 711  59 233
 232 703 728 204 331 713 170  22 718 744 683 653 695 745 216 192  92  67 769 509 250 264 680 235 709 714  84 621 620 152
 212 599 699 167 214 255 160   1 700 768 691 650 669 667 334 195 155 290 705 221 138 617 743 287 658 644 690 572 627 187
 335 629 741 143 676  21 624 697  33 660 688 492 704 657   6 668 110  54 578  73 275 649 584 295 674 541 637 648 350 273
 307 574 567 205 609 601 666 642 540  41 605 327 670 652 113 491  44 313 591  29 505 344 573 283 547 639 608 610 616 203
  11 602   5  18 463 600 686  74 641 587 538 612 330 548 595 245 154 560 647 516 320 679 550 293 626 589 656 625 532 213
 349 568 645  81 460 593 606 531 520 511 447 215 513 594 517  26 534 561 554 597 367 508 521 507 529 133 341 575 323 289
 300 498 564 310 431 603 549 569 514 570 581 571 503 527 551 526 539 562 494 535 469 311 504 322  47 530  61 579 284 111
 145 614  19 459 475 592 473 566 478 487 484 552 480 411 301 495 398 523 536 525 555 387 444 451 543 454 519 477 442 230
 585 455 474 500 486 266 488 497 208 386 450 468 524 438 501 479 439 428 382 537 430 421 403 437 545 452 424 358 544 510
 446 453 407 414 483 427 467 465 565 440 496 499 418 481 476 512 553 413 462 422 329 636 457 406 296 470 417 435 458 312
 883 352 345 441 426 466 434 410 416 379 449 405 436 425 464 375 399 448 632 357 395 292 628 640 461 423 353 364 419 598
 456 365 333 655 401 338 354 363 317 400 433 383 420 393 369 381 563 715 396 356 412 876 371 623 390 366 384 402 588 712
 542 252 361 443 385 409 370 270 308 408 432 557 415 272 306 359 348 351 782 404 619 675 885 558 309 324 837 318 373 643
 672 281 347 445 285 316 899 294 299 302 360 342 388 303 764 337 877 368 256 773 596 804 234 635 325 380 397 263 141 832
 731 336 343 880 249 226 389 237 247 340 305 225 239 231 701 900 776 659 854 246 522 830 274 604 374 240 392 254 278 633
 582 177 282 736 277 757 251 267 875 153 321 556 243 242 257 241 682 841 193 775 878 758 288 725 197 207 279 304 493 678
 723 244 291 719 236 172 894 696 260 297 131 280 248 169 607 783 211 792 202 797 812 206 881 767 139 224 319 261 490 664
 842 124 178 749 746 286 166 791 662 209 106 339 163 229 586 867 753 800 227 843 734 100 181 391 179 259 816 144 372 673
 681 265 298 755 829 528 888 546 276 126 217 151 174 238 223 583 622 665 727 654 136 184 159 762 482 394 859 194 189 710
 784 869 130 826 730 112 716 852 119 114  34 168 117 150 199 611 613 735 116 692 808  95  68 862 176 471 717  71 828 732
 489  51 103 890 790 109 895 770 123 634  88 121 108 196 615 868 559 638 142 778 887 120 198 506 220 175 729 689 258 766
 823 165 630 884 761  60 897 871 840  91  39 101 105  42 125 810 147 188  86  38 882 590  93 576 173 803 814  97 886 898
 839 122 107 809 879 102 502 787  96  65  40  45  94  70  85 863 706 750 115 685 618  37  55 819 708 860 752 118 891 896
 893 889  98 795 820  87 186 533 222  49  72  63  50 135 140 827 777 815  58 577 148  79  43 631 811 789 892 720 801 515

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.41814e+06us (= 3418.14ms, 3.41814s)
Wall-clock time (full program): 3.475e+06us (= 3475ms, 3.475s)
Satisfaction error: 0
Number of search iterations: 1804
Number of local moves: 978 (including on plateau: 341)
Number of local minimum: 102 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15755
Total number of local moves: 6394 (including on plateau: 2035)
Total number of local minimum: 1201 (including on plateau: 232)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 349 495 173 841 866 534  81 719  12 856 778 848 308 210  88 266 204 804 768  11 755 749  16 113 122 317 653 820 741  18
 376 385 855 836 871 154  68 342 763 276 792 808  42 828  61 721 239 752 305 331 612 756 148 782  94 166 775  52 222 103
  78 647 246 127 415 131 789 740 332 191 786 844 179 776 170 716  66 812 860  25  49 770 108 748  29 121 659 437 796 868
 725 761 773 350 797 102 850 672 846 675 700  71  80  56  14 111  54 765 621 136 473 760 358 133 800 107   6 225 798 696
 238 816 702 831 419  48  72 788 832 772 697 685 704  10  89 116   9 857 589  53  22 785 142 237 682   3 713 681 253 670
 664 735 717 766 594   1 845 693 835  30 643 163 115 608  92 109 175 651 754   2 343 695 157  91 780 264 692   5 538 758
 577 784 811 642 512 141 360 660 684 634 599 489  55 680  39 270  74 718 265 214 292 158 196 486 661 244 689 805  34 742
  77 801 690 859  79 314 563   7 558 521 767 181 791 648 606 125 707 663 293 164  13  15  19 560 481 219 620 615 746 813
  23 628 501 714 691  73 732 581  20 547 576 515 666 633 598  50 668 671 658 584  40  57 605 665 570  87 124 613  43 582
 575 545 557 724 687 138 744 637 710  21 468  31 514 699 476  64 698 137 105 641  69 777 190 561 793  59 539 390 359 607
 536 488 617 571 446 294 494 597 541 333  17  27 601 593 499 701 491 176 249 471 396 525 503 299 442 206 739 540 527 596
 535 549 600 537 290 449 631 559 544 464 470  70 588 492 626 573 632 146  75 439 394 416 474 461 616 311  51 572 322 629
 624 500 405 567 462 212 738 586 459 135 630 614 388 482 574 465 603 118 475 395   8 532 583 531 421 167 295 523 519 504
 679 401 441 469 683 291 451 493 516  82 368 425 619 371 529 507 178 169 592 548 457 618 321 363 636 407 480 510 477 434
 498 552 652 400 484 410 412 383 398 346 288 438 448 420 677   4 456 580 375 678 564 472 453 578 404 386 478 422 409 450
 604 611 463 543 518 550 335 369 426 497 736 429 546 445 279 566 302 458 235 297 397 485 384 513 252 522 387 436 402 528
 374 240 502 205 565 444 854 432 873 315 479 340 411 352 455 487 460 799 324 344 336 490 313 509 556 414 467 304 505 366
 764 379 435 180 417 348 380 452 430 555 520 802 408 511 431 391 823 354 569 433 454 365 193 327 377 506 440 392 466 413
 424 551 319 372 815 579 282 345 370 822 312 806 423 192 364 447 428 362 323 227 562 289 353 361 267 662 427 769 644 418
 341 260 356 382 283 727 306 287 329 627 877 273 280 338 301 406 399 189 825 869 602 243 646 730 257 657 307 524 610 284
 309 325 318 753 256 711 221 216 211 795 186 896 839 530 381 263 208 656 895 650 508 242 300 339 285 803 517 393 241 268
 207 114 217 245 274 654 638 296 888 649 220 272 184 231 110 821 373 337 655 334 688 787 705 853 320 726 876 262 328 251
 837 143 215 183 261 810 298 790 347 595 554 269 286  62 757 733 218 542 259 330 676 351 893 774 145 840 174 277 731 165
 149 316 326 229 161 890 885 254 201 483 248 213 849 281 177 851 591 247 278 706 625 271 862 886 275 712 781 198 367 203
 197 224 100  97 233 674 195 171 159 228 188 187 858 870 847 807 779 389 899 852 590 120 722 156 878 728 234 747 303  83
 838  99 255  65 889 745 162 153 310 609 123 809 200 526 827 833 759 258 357 751 750 194 737 112  98 729 378 623 236  90
 182  33 151 900 147 783  63 892 226 883  58 709 202  38 834 640 814 129 117 762 673 104 686 232 533 826  60 230 734 874
 818 209 881  67 106 743 119 140 101 126  36 645 865 879 887 694 715 130 132 585 842 720 703 128  37 867  76 880 185 199
 667 898  85  28 144 794 863 168 553 403 355 160 172  46 897 139 723  24  95 864 443 635 884 891 829 587  35 223 824  86
 250  26 152  32 150 771  84  93  41  45  44 496 894 708 830 639 669 622 568 819 882 134 861  96 875 872 843  47 155 817

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.08014e+06us (= 2080.14ms, 2.08014s)
Wall-clock time (full program): 2.13433e+06us (= 2134.33ms, 2.13433s)
Satisfaction error: 0
Number of search iterations: 901
Number of local moves: 710 (including on plateau: 154)
Number of local minimum: 40 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6869
Total number of local moves: 5343 (including on plateau: 1415)
Total number of local minimum: 249 (including on plateau: 159)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 631 174  80 835 713  46 716  45 161 883 666  59 777 132 258 805 738 860 173 686  31  22 766 182 824  20 820  54 795 563
 767  30 870 865 157 461 814 736  40 797 481  79 828  47 678 864 822 830  52 153  89  96 110 229 772  64 879  71 705 129
  48 142 180 655 107  49 799  61 160 873 720 388 853 121 768 890 754 894  77 789  66 661  67 550 856  57 587 532 684 127
 195 812 784 898 122 101 115 207 189 662 178  94 834 100 798 621 785 724 117 854 817  92  81 589 833 228 507 144 884 150
 526 278 527 803 744 855 243 214 650 620 763 179 882  32 264 866 544 671 133 613  73 109  78 710 553 547 130 126 658 124
 692 188 168 787  51 868 201 301 118 896 773 206 808 183 580 840 752 722  62 231 319 233 139 584 697 176 730 268 837 105
 456 249 141 600 203 218 897 361 164 701 880 619 653 273 726 698 616 877 128 253 387 219 204 899 645 216 366 292 165 409
 435 200 546 565 297 542 759 359 221 627 656 284 316 236 806 198 774 757 425 858 272 199 895 739 241 355 169 331 194 259
 791 114 733 582 248 298 843 335 696 675 832 192 647 197 624 323 815 288 181 861 336 521 250 783 277 234 305 112 286 136
 761 271 370 568 302 786 819 802 321 485 818 222 254 477 811 317 504 327 149 212 889 256 193 851 270 257 235 349 293 346
 611 548 715 702 318 841 333 626 251 519 465 209 328 265 852 205 505 407 437 712 224 367 245 360 745 312 369 324 309 411
 687 371 125 741 191 287 539 598 368 494 381 900 439 238 295 299 522 267 859 764 391 433 351 874 424 269 378 290 358 382
 396 354 862 562 282 230 408 776 457 501 450 384 453 332 310 364 404 577 492 635 423 888 276 478 389 353 418 362 320 379
 455 376 325 545 275 557 225 538 405 513 454 533 585 484 377 392 892 348 442 490 340 403 440 386 520 441 488 383 497 406
 402 446 493 431 380 428 459 432 458 341 486 471 347 473 451 452 329 445 394 410 543 375 462 878 564 474 436 476 304 475
 330 482 469 401 466 413 414 468 561 596 390 434 285 463 541 444 524 517 363 422 398 537 489 356 595 326 412 499 429 491
 574 296 549 303 495 514 372 535 496 558 447   7 415 597 420 615 487 449 438 147 448 283 555 559 373 594 467 503 540 479
 523 682 419 357 352 427 470 393 603 252 525 464 345 239 399 607 556 531 511 591 529 509 516 460 618 339 119  15 554 610
 102 337 579 344 508 247 612  13 648 397 668 552 502 578 530 426  99 714 263 604 640 572 569 131 103 590 566 515 623 483
  84 575  36 210 472 659 601 202 602 315 156 614   8 480 170 417 573 500 639 534 608 506 593  17 664 838 609 571 583 679
 291 681 338 294 654  27 592 140 570 430 560 421 725 625  55 685  37 633 599 636 154 343 672  26 536 657 683 765 528 158
 350 775 175 281 711 649 617 314   9 187  86 680 719 651   6 172 208 184 670 146 742  11 700 606 567 576 756 673 586 708
 155 646 667 106 893 196 641   1 190 260 634 665 642 643 123 111 215 237 769 334 632 622  14 629 660 217 551 703 690 669
 699 652 280 177 637 727  68 510 628 167  53 143 240 706 732 588  98 279 707 581 300 676 749 120  35 677  33 737 770 746
 138 735 630 162 743   5 255 704 778  72  91 691  25 875 145 734 223  43 721 498 674 663 794 185  19 644 694 755   3 816
 313 782 729 151  18 306  60 779 695 213  69 709 152 849  90 211  44 311 753  65 689 863 762 400 226 747 807 836  42 844
 385 718  82 395 750 416  23 823 605 163 220 751 262 788 365  41 186  39 693  97 804 867 688  63 108 723 809 793  12 846
 887 731 113  70 847 790  75 885 728 135 244 891  21 810 322 246 227  58 801  76 796 518 760 274  74 881  16 342 116 781
 821  28 717  38 839 780 374 512 857  95 232 826 166 771 758  50 134  24 638 159  29 871 266 308 242 827  93 869 443 748
  10 842 813  87 740 792 171 845 886  88 137 848   4 850 261  34 148   2 829 104 872 800 831 289  85 876  83 825 307  56

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.11269e+06us (= 2112.69ms, 2.11269s)
Wall-clock time (full program): 2.1687e+06us (= 2168.7ms, 2.1687s)
Satisfaction error: 0
Number of search iterations: 935
Number of local moves: 775 (including on plateau: 234)
Number of local minimum: 25 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7205
Total number of local moves: 5715 (including on plateau: 1553)
Total number of local minimum: 235 (including on plateau: 206)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   6  47 190 467 520 810 200 854  70 822  90 277 171 846  45 793 318 827  63 201 776 325 717 778 770 729 840 794  58 111
 424 425 265 801 749 817 250 752  96 738  25 493  29 820 173 818 728 837  21  75  24 306  28 501 772 763 123 744 806 112
  99 115 184 700 745  67 780 826 269 782 224 863 713 859  79 759 732 802 113 151  61 498 741 696 172  76 522  13  78 796
 129   7  95 330 803 124 548 620 174  73  53 255  51 832 797 790 742 823 720 122 758 602 251 769 597 131 814 734  23 748
 767  18 244 707  44 125 702 785  69 705 109  19   8 847 807 673 391 722 743  41  35 723 750 761 549 295 701 719 234 222
 704 681 566 771 795  12 475 791 144 831 764 655 240 580 148 179  64 768 362  56   4 552 712 730  91 170 811 708 135  16
 756 101 302 726 695 824  37 699  81 653 183 593 121 716 724 679  49 754  71 155 781 231 574 267 787 739 765  57 384  11
 773 169 189 715 753 659  89 342  92 736 128 798 557 537 693 360 143 668   5 320 454 334 727 683 531 657 629 649  82  43
 656 529  38 652 686 596 126 644 480 676 164  93 147 642 606 163 289 661 669 263 664  14 562 645 709 725 627 638 141  10
 757 718 181 414 678 610  36 584 208  31 296 608  74 598 611 103 600 508 500 118 643 165 674 631 737 540 521 588 356 427
 590 478 375 577 458 687   2 310 444 554 199 575 622 516 571 305 117 461 530 287 677  33 551 572 365 497 760 616 145 641
 579 624 236 499 646 591 651 654   1 519 564 102 615 731 592 670  32 471 469  39 398 107 390 476 442 474 460 640 412 431
 423 449 225 354 543 482 202 433 281 488 703 489 114 518 563 547 459 635 270 357 634 539 637 313 470 538 527 419 503 400
 617 411 430 443 526 439 314 457 445 740 370 609 371 455 426 619 420 432 569 353 601 326 544 393 487   3 472 428 407 408
 315 505 399 352 477 515 650 452 463 542 386 436 663 421 447 323 517 491 378 338 434 280 510 512 387 441 374 496 466 545
 464 468 417 410 568 560 479 349 573 358 380 633 532 513 298 533 381 438 481 245 553 413 494 506 351 348 321 514 473 462
 437 555 372 363 561 388 451 453 282 404 435 492 337 249 456 418 383 336 350 446 440 882 221 883 890 416 322 364 379 550
 396 828 376 246 344 403 392 628 347 401 612 377 429 361 409 525 368 369 891 666 275 415 335 343 389 367 485 327 341 870
 260 556 825 524 405 256 747 465 603 319 316 293 541 509 333 216 838 332 511 595 382 833 309 259 227 262 220 331 586 662
 308 848 614 636 292 152 490 307 639 276 486 156 311 242 346 706 746 237 359 869 504 751 373 689 397 230 254 483 604 210
 340 885 605 406 194 328 623 258 583 484 394 279 422 303 291 278 884 546 299 697 535 786 300 207 297 288 285 286 565 867
 257 133 842 252 177 211 680 215 559 283 853 839 312 209 271 582 783 274 385 844 247 898 264 187 284 843 166 241 647 777
 196  30 835 395 339 191 774 450 821 248 607 805 692 137 355 698 784 304 261 694 217 214 874 268 228 866 324 106 599 203
 239 243 816 273 140 329 448 197 887 366 721 266 804 345 219 567 690 235 850 852 149 779 212 829 193 253 108 204 671 630
 272 880 688 223 138 813 845 198 685 136 711 290 812  97 226 558 585 178 213 660 301 665  46 206 892 809 158  77 836 317
  50 710 672 175  48 830 714  86 894 167 667 507 819 229 895 139 691  98 735 766 168 587  94 104 153 800  80  83 762 792
 185 851 675 849 186  22 495 581 648 232 862 589 733  34 159 188 626  42 192 841 875 176 625 116 162 100 861 536 879 195
 872 294 523  40 134 218 534  88 900 238 658 154 868 182 899   9  68  87 755 855 146 613  15  85 205 864 897 881 576 857
 788 815 808 150 799 878 160  17 889 119 871 110 618 132 896  84  27  59 877 834 893 402 127  54 105 161  26 682 502 632
 856 142 528  65  72 578 621  20 888 594 684 860 789  55 180 233  60 120 873 775 886  66 858  52 876 130  62 157 865 570

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.53786e+06us (= 2537.86ms, 2.53786s)
Wall-clock time (full program): 2.59129e+06us (= 2591.29ms, 2.59129s)
Satisfaction error: 0
Number of search iterations: 1369
Number of local moves: 755 (including on plateau: 194)
Number of local minimum: 83 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9848
Total number of local moves: 5822 (including on plateau: 1591)
Total number of local minimum: 565 (including on plateau: 222)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 892  47 103  37 804 821 879  84  35 788 865 138 816 276 806  87 102  98 718 119 672 712 849 773 812  65 101 825  71 120
 889 897 890 153  28 178 160  66 600 717 578 186 789 677 634  73  79 104 819 100 692  76 783  30 587  23 110 840 861 896
  60  67  57  49  52 834 520 140 775 176 725 698 850 666 787  61 112 181 842 161 130 751 762 109 814 688 730 686 148 884
  68 168 895  64 122 899 213 768 193 852 733  43 790 801 832  34 208  90 813 419  32  80 877 175 728 646 141 708 232 891
  94 249 449 714 880 893 508 135  91 281 156 209 851 885 705 131 155 517 860 127 200 863 167 143 826 629 236 593 124 844
  81 162 676 386 282 900 645 385 184 670 857 355 145 639 687 166 116 794 658  92 894 118 190 150 555 752 248 690 689 349
 144 230 458 544 269 764 706 182 195 774 660 121 304 649 888 254 191 292 746 319 831 147 170 841 673 870 198 681 164 250
 180 204 216 745 205 301 313 878 318 246 873 222 231 604 830 255 207 295 836 219 838 827 346 237 887 595 312 874 201 220
 339 218 703 526 287 323 467 187 883 341 754 407 329 815 348 251 368 274 590 283 307 767 258 272 809 683 243 869 358 256
 217 212 684 668 192 342 360 308 454 882 868 253 306 716 337 465 460 245 299 354 797 244 822 316 627 659 326 622 214 266
 325 344 224 780 371 189 322 275 221 291 881 320 496 769 799 321 202 380 335 848 238 875 310 365 843 270 542 620 366 393
 262 260 779 805 373 172 665 432 203 235 537 886 297 811 505 314 247 702 317 324 483 778 433 210 430 740 303 311 332 369
 361 383 737 374 285 375 759 391 280 727 525 589 453 290 340 252 289 617 662 429 444 350 416 372 573 615 347 415 438 427
 293 443 352 512 472 509 898 387 336 302 637 428 435 507 418 362 394 364 395 541 379 605 446 403 499 450 490 357 497 404
 240 273 482 431 392 381 585 424 401 376 495 650 455 652 500 489 384 426 487 396 474 533 405 331 664 439 476 377 436 461
 470 602 459 548 456 133 447  41 553 582 518 532 440 421 469 412 437 498 565 417 527 583 603 521 477 406 547 442  20 389
 422 567  96 523 481 351 569 486 136 370 278 608 408 397 445 561 378 511 420 423 425 648 559 488 382 566 538 363 654 462
 504 501 485 233 545 586 506 491 452 457 441  85 390 398 601 576 546 502 484 574 492 549 475 356 242  39 298 513 554 640
 558 560 107 171 473 572   8 736 529 478 535 808 534 126 359 577 612 480 581 519 503 571 633 597  70 123 515   6 695 479
 657 575 177  19 540 552 607 388 550 528 300 584 510 199 158 606 636 564 448  45 722 536 551 522 315 134 592 294 563 643
 579 494 338 263 638 539  72 653 748 543  48 471 743   9 466 707 530 556 288 644  31 588  21 750 330  89 411 531 824 611
 626 796 610 132 628 524 268 735  55 516   3 562 642 197 196 618 709 616  15 557 691  40 613 641 137 259 693 206 621 609
 568 704 215 729 694 619  36  62 772 667 163 669 149 599 185 663 697  99   2 719 580  75 125 739   7 229 651 594 723 781
 635 699 188 271 798 624  50 614 570 656  74 744  97 152 265 701 741 675 239 655 261 451 630  16 284 241 749 183 661 591
 758 792 632 682 724 468 598 837 685  93  11 402  14  69 151 820 625 327  56 763 765 264 696 115 227 277 786  12 839  27
 791 726 305 493  13  95 623 760 710 146 328 738 711 279 165 721 807  42 114 742  22 228 747 829 157 674 731 139 596  83
 795 793 864 409 846 353 679 776 803 111 410 334  24 173 108 817 753 856 105 225 713 113  58 761  25 414  29 267 855  46
 818 732 399 770 777  86 464 169 771 413  17 720 463  53 223 757 810 800 128 802  59 367 333 785  33 234 678  10 756  88
 845 700 872 853 106  54 434 858 257   1  51  38  77 400  82 680 854 876 514 828 309 129  26 833 159 847 823 142   5 862
  44 117  63 631 782  78 154 867 755 296 194 715 766 286 226 784 866 734 179 871   4 647 211 835 343 859 671 345  18 174

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.33038e+06us (= 2330.38ms, 2.33038s)
Wall-clock time (full program): 2.38652e+06us (= 2386.52ms, 2.38652s)
Satisfaction error: 0
Number of search iterations: 1149
Number of local moves: 697 (including on plateau: 235)
Number of local minimum: 57 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8701
Total number of local moves: 5826 (including on plateau: 1737)
Total number of local minimum: 386 (including on plateau: 237)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 582 110  47 897 608 728  67 140 880 604 549  89 884 814 148 836 838  98 481 672 225 871 879 121 259 689 194  20 156  29
 288 532 190 178 747 767 792 168 835  48 139 501 197 719 296 175 890 849 615  59 234 895 869 736 104 346 195 208 744 199
 896  70 776 150  97 520 167 124 196 894 303 209 819 162 692 772 878 539 636 101 476 887 757 118 727 378 171  28 877  95
  71 122 143 899 145 628 153 106  63 105 889 796 883 708 138  35 885 891 657 694 174 786 648 176 228 782 570 876 165  99
 287  86  88 115 898 866 154 411 830 449 789 231 163 845 710 157 759 179 827 847 671 714 777 159 100 713 111 200  90 289
 152 102 634 893 749 716 112 203  53 170 778 256 166 269 569 186 361 207 592 882 875 503 787 285 892 590 900 243 173 217
 374 258 117  85 834 758 629 826  60 860 602 283 579 873  76 524 764 850 556 134 342 701 421 218 343 649 223 123 137 316
 334 205 684 426 865 867 500 723 126 306 600 131 204 240 820 158 729 242 843 821 282 554 656 233 317 886 109 237 181 236
 136 246 730 273 311 603 232 881 805 848 667 371 272 251 810 277 276 364 740 807 187 248 733 400 241 734 185 387 271 229
 448 413 686 286 314 797 597 264 249 611 752 360 505 322 418 664 214 275 389 440 825 661 652 436 293 680 368 191 114 291
 253 284 769 215 365 824 352 130 341 837 874 331 247 313 206 631 470 326 864 405 219 756 745 270 160 802 265 305 376 580
 395 537 660 211 254 562 330 790 464 477 861 239 325 479 774 817 435 307 425 456 394 525 416 446 257 429 410 336 142 362
 366 339 662 250 310 493 841 353 292 252 295 496 788 328 832 372 347 872 653 635 262 610 367 522 184 408 318 280 308 480
 315 383 748 423 437 385 754 538 548 274 414 281 260 487 751 638 377 302 497 543 161 619 494 504 133 705 399 382 354 409
 222 576 567 623 688 384 432 332 460 427 263 575 412 453 420 462 510 513 337 422 458 345 613 381 309 574 419 393 417 528
 514 406 380 403 388 359 473 715 407 397 323 564 637  68 489 415 468 444 544 441 526  11 478 588 618 428 565 469 507 490
 644 439 445 502 455 512 402 442 355 472 485 454 450 351 536 568  51 560 685 396  16 511 329 488 457 492 491 533 495 499
 698 551 255 516 483 369 227  21 669 612  94 392 639 531 108 482 587  79 712 682 690 424 519 542 594  49 340 578 545 527
 358 350 202 474 321 571 461 670 614  18  80 699 583 586  45 434 404 529 467 349 659 333 486 534 572 593 463 624 447 589
 471 125 192 632 703 304 506 675 800 401  65 585 132 521 563 294 598 278 147 546 555 390 235 498 627 299 530 691 553 599
 642 443 640 430 557 169 755 547 709  34 149 677 438 616 607 475 540 466 363   3  92 116 591 338 679  27 711 559 625 517
  82 854  56 650 721 107 268  38  72 633 183 601 673 743 823 120 515 666 182  50 433 518  17 844 833 335 523 750 584 641
 617 651 609 509  69 220 606 113 535 129  91  77 683 695 678 320 722  31 180 658 811 155   9 737 550 210 561 783 809 697
 726 665 681 645  15  87 508 312 643 702 164 888 646  36 198 459  39 780  66 244 595 261 484  41 762  62 815 581 693 717
 829 846 297 795 725   8 216 696  61 706 230 465 626   5  81 605  96 319  93 732 738 266  54 822  10 344 803 718 763 566
 573 687 327 647 724 177 704 655 552 290 226 621 663  24  12  78  73 798 213  58 768 300 119 654 596  13 775 622 735 831
 720 812  75 741  74 172 348 794 386 324 620 761 373 144 370 793 398  19 188 357 146 379  42 770 785 151 431 773 816 753
 700 853 862  46 201 189 301 779  30 839 577 739 141 851 279 870 221 842 193  32 766  57  23  26 859 731 855   1 630  22
 818 742 452  43   6 238 863 771 804 128 707  52  83 857 267 858  37 806  14 674 808  64 212 760 781  25   2 784   7 852
   4 828 541 558 451 135 765 298 676 668 746 791  44 224 799  40  33  84 356 375 127  55 103 868 245 391 813 840 801 856

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.30617e+06us (= 2306.17ms, 2.30617s)
Wall-clock time (full program): 2.361e+06us (= 2361ms, 2.361s)
Satisfaction error: 0
Number of search iterations: 992
Number of local moves: 583 (including on plateau: 161)
Number of local minimum: 57 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8532
Total number of local moves: 5213 (including on plateau: 1327)
Total number of local minimum: 451 (including on plateau: 156)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 502  23 205  37 466 858 878 659  18 486 795 866 881 187 805  11 874 879  72   9 872  41  96 787 169 777 219 162 865  16
 248   8  20  84  27 116 882 813 564 862 786 830 840  54 875 832 841 807 134  13 886 175 160 752  93 869  98  19   7 820
 361 871  66  86 153 809 816 799 125 863 847 783 658 195 180  60 745 880 294   3 797  39 157 739 211 781  52 242 818  85
  35 836  14 496  26 796 806 876 824 769 381 415 835  30 751 246  44 708  82  68 746   4 129 800  47 782 174 271 672 852
 123 808 249  51 212 790 779 755 218 634 712 695 727 256 728 120 812 693 164 194 773  21  87 373 789  58  22 201 700 771
 122 859 726  97 784  15 707  10 308 754 724 705 814  38 646  59 776 735 144 228 663 183 133 623 170 690 179 192 713 718
  92 778 717 184 591 772   1 676 293 721 747 640 709 112 716  49 678 811  48  56 669 324 193  45 671 733   5 159 600 725
 100 649 191  78 231 668 647  53  17 738 766 701 587  32 588 744 686 692  50 217 656 232 562 702 644 635 110 230 680 629
  28 720 239 257 208 666 734 615 117 742 586 636 627 335 326 731 571 565 554 269 558 354 660 675 102 614  61 226 674  65
 177 536 703  69 723 630 610 664 612   2 215 576 465 268 580 557 395 638 182 264 617 382 560  25 642 606 111 645 512 549
 352 633 119 307 412 553 254 460 250 525 121 604 596 578 487 683 445 543 479  70 628 261 547 589 662 279 550 304 641 583
 362 613 652 262 585 524 594 555 653 530 488 545 520 272  43 531 665 398 522 290 235 568 643 598 158 648 451  63  34 513
 380 624 622 338 469 462 542 475 577 515 608 456 518 567 551   6 455 529 485 384 609 478  31 556 346 224 443 482 210 573
 434 447 503 507 467 404  12 448 527 582 199 552 616 410 526 394 639 534 457 452 620 132 509 618 563 414 581 471 473  24
 528 444 521 411 378 538 463 490 321 450 400 468 440 422 492 474 349 429 508 372 419 498 358 476 403 480 506 383 491 603
 537 516 532 511 329 523 441 481 541 399 500 458 313 442 760 569 310 347 423 499 514 504 374 405 438 477 339 454 222 357
 540 389 367 561 821 386 342 464 459 544 421 340 433 661 470 408 593 431 320 495 316 579 425 379 336 274 385 453 484 439
 849 388 377 599 685 424 360 435 323 334 428 348 489 406 689 376 416 505 436 788 356 407 309 472 397 317 368 371 493 370
 602 260 331 595 625 278 350 351 764 366 402 868 330 437 417 483 283 280 601 759 375 802 292 418 247 590 353 299 494 263
 575 393 227 619 427 401 301 430 817 275 851 251 289 519 833 432 359 322 332 870 392 592 413 315 303 311 387 607 252 420
 698 446 344 657 291 273 510 345 810 884 300 305 341 409 390 265 253 156 333 651 584 711 343  75 823 276 706 654 355 327
 792 284 285 710 748 234 259 295 363 258 298 337 225 677 369 288 325  64 837 691 236 845 667  88 900 237 894 794 302 213
 559 286 762 679 267 243 196 838 867 206 207 140 241 694  89 798 155 209 277 729 266 655 829  95 822 328 896 546 391 245
 715  74 730 497 819 178 566 198 626 150 168 200 318 793 166 281 216 113 887 597 142 696 831 803 365 163 855 780 282 306
 768 203 856 684 223 885 127 185 396 297 364 141 118 826 220 312 161 190 743 605 176 688 736 270 574 319 854 673 146 775
 632 172 650 681 314  94 148 152 244 128 186 214 101 897 131 767 892 296 898 883 106 757 287 704 238 501 740 753 145 804
 756 233 517 888 873 189 136 104 426 221 204 137 130 853 255 774 229  67 732 535  71 825 861  81 850 188 722 891 197 570
 843  29 449 895 719  33 749 109 240 135  91 124 149 687 202 611 108  79 846 889  77 763 765 107 857 670 791 572 864  62
 750 165 842 848 461 737 154 637 682  40  99 138  90 761  57 815 126  76 785 834  73 860 844  46 147 103 893 741 631  80
  55 828 699 827 181  36 151 143 533 105 621  42 115 697 173 839 114 539 890 801  83 139 714 899 548 171 770 877 167 758

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.13731e+06us (= 4137.31ms, 4.13731s)
Wall-clock time (full program): 4.19385e+06us (= 4193.85ms, 4.19385s)
Satisfaction error: 0
Number of search iterations: 2329
Number of local moves: 987 (including on plateau: 377)
Number of local minimum: 173 (including on plateau: 50)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 21118
Total number of local moves: 8289 (including on plateau: 3175)
Total number of local minimum: 1668 (including on plateau: 401)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 867 610  76 116 191 721 476 100  63 651 193 614 522 850 490 184 190 110 900 840  43 635 664 829  74 130  50 891 884 551
 750 232 142 887  62 701 858 665 103 801 718  73 560 813 316 838 117 167 621 889 492  27  79 749  29  39 169  23 892 703
 857  84 878 185 864 672 108  52  25 812  75 873 814 831 342 872 495 141 720 862 637 695  72 296 688 132  92 165 105  71
 848 733 121 148  96 786 143 187  61 870 730  82 725 885 712 252 897 196 773 865  36 140 595 578 171  54 777  69 871 114
 785 530 159 118 896 732 201  53 283 798  77 888 653 545 542 603 890 538 675 226 156  99 268 524 115 830  81 302 617 331
 787 680  46 222  65 866  87 263  58 645  32 593 855 803 629 844 861 234 899  67 715 186 667 893  60 203 860  37 146 212
 834 763 255 223 267 713 868 208 168 849 854 386 670 179 767 275 136 266 727 182 779 123 875 886 230 236 154 239 269 134
 294 832 139 224  91 736 209 869 827 863 195 605 581 709 841 284 244 762 877 180 755 337 424 237 198 399 251 126 206 220
 317 478 128 876 207 679 290 200 880 648 458 204 761 883 647 277 456 466 894 197 210 746 589 274 281 370 235 261 330 273
 293 740 150 282 173 690 361 374 228 879 339 489 661 486 649 219 225 347 350 416 825 307 882 822 355 286 315 881 242 249
 643 874 341 409 280 636 262 292 395 765 837 320 214 248 797 323 327 166 243 737 805 365 517 485 295 279 516 325 344 475
 397 640 384 407 328 657 404 411 276 314 260 898 467 405 714 357 272 630 535 366 772 437 510 484 421 369 213 338 468 381
 322 828 472 332 450 496 398 335 396 438 310 333 859 390 806 258 415 336 444 441 710 270 692 464 427 436 410 389 349 309
 666 677 481 178 329 529 479 497 454 326 417 383 539 477 752 354 802 360 451 160 681 312 394 379 463 363 334 699 387 192
 364 382 408 358 592 570 500 552 346 414 340 895 321 406 345 356 474 658 457 400 549 391 525 509 554 377 419 298 499 256
 480 245 465 455 359 569 324 518 571 531 432 764 448 426 550 376 430 507 442 353 305 498 459 380 367 429 265 491 564 512
 439 138 393 412 501 453 514 392 311 443 537 155 513 418 131 449  89 521 573 689 493 613 246 719 608 527 580 446 557 655
 289 482 532 575 494 304 447 536 471 413 708  57 343 548  42 615 576 120 423 533 553 633 300 584 403 523 502 483 440 586
 587 170 567 506 469 205 678 435 591 555 612   9 211 702 144 460 504  90 515 706 574 505 385 508 559 579 562 606 462  59
 566  83 568 487 628 194 540 634 693 543  19 547  94 488 151 696 601 470 163 473 285 534 731  68 565 372 745 452 503 622
 199 352 618 561 704  80 375 597 433  41 600 291 620  44  88 619 546 301 528 663   8 652 402 425 744 596 556 526 783 563
  22 299 654 544 582 172 624 520 422  49 780 577 157 623 362 697 585 638  95 729 313 104  66 111 594 722 511 662 685 616
 646 388 519 698 742 119 734   1 691  24 684 588 318 124 259 756 632 572 162 631 278 371  15  86 541 769 650 707  51 759
 428 145 823 598 641 164  18 754 816  12  17 792 101 686 306 644 431 604  93  85 308 659 133  26 808 626 809 676 625 687
 189  78 758 639 738 445 683 656 401  20 748 233   6 149 112 127 717 768 238 747 177 558 700 183  21 674 660 726 583 781
 202 217 602 705  28 351 790 253 774 106 671   7 373  40 319   2  38 789  35 694 137 770 611 751 842 711 799 297 782 819
 158 231 609 739 843 102 627 793 818 257 250 271 107 175 461 590 135 788  98  14 188 776 642 673 668 129 152 815 682 724
  55 153 833 775 716 109 743 757 378 174 771 303 161  47  48 147 794 826 240  13 766 176 846 264 817 824 839  64  56 820
 227 723 795   3 811  34 741 804 735 229  16 851 254 125 348 241 420 856  97  70 784 760 221 113 796 753 218 669  11 810
   4 728 599 853 368  30  33 807 847  45 835 434 607  10 845 800 216 288 247 287 181 836   5 215 821 778 791 852 122  31

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.14943e+06us (= 2149.43ms, 2.14943s)
Wall-clock time (full program): 2.20537e+06us (= 2205.37ms, 2.20537s)
Satisfaction error: 0
Number of search iterations: 978
Number of local moves: 780 (including on plateau: 295)
Number of local minimum: 32 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7430
Total number of local moves: 5708 (including on plateau: 1733)
Total number of local minimum: 274 (including on plateau: 230)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 258 114  44 899  70 109 710 100 685 704  68 898 643  90 167 147 353 288 609 817 510 890 758 836  39 846  37  71 887 868
  51 819 203 788 608 126 103 110 814 324  35 397 387 834 702 108 635 569 829 692 317  94 727 873 808 534 886  21   1 120
 566  91 882 158 879 806 200  59 465 748  96 267 187 254 226 118 543 474 442 706 101 493 885 252 658 680 370 586 503 820
 815 134 673 540 157 678 832 276 433 884 174  89 140  22 284  85 561  30 724 839 679 245 766 262 149 741 757 159 631 756
 855  67 597 282  34 843 875 309 560 837 121  74 148 352 128  60 623 674 264 867 125 154 794 889 151 581  95 495 802 859
 810 250 809 800  19 880 866  63  54 183 155 251 230 233  88 205 835 897 672 403 280  73 596 862 864 654 223 240 553 467
 793 616 670 593  20 824 406 295 759 455   4 239 751 197 869 703 657 789 732 129  26 161 489 856 175 863 170 152  47  75
 318  46 709 427 784 838 153 900 206 688 227 218 234 383 142 169 274 701 861 796 172 347 728 300 213 677  81 287 844 792
 123 265 713 463 785 684 219 332 883 359 479 275 268 166 124 348 776 735 831 478 384 446 854 173 260 779 208 291 520 294
 437 753 512 840 330 707 547 602 736 248 160 135 244 505 438 389 773 630 847 355 407 190 545 315 298 426  78 209 374 485
 301 350 459 895 492 700 313 319 601 719 356 394 613 286 311 365 261 500 533 271 133 390 737 242 310 589 369 453 375 878
 722 469 763 827 345 665 296 458 768 781 256 544 220 238 246 430 424 517 477 471 351 490 636 305 249 399 382 225 127 434
 354 755 749 448 841 625 588 396 607 179 647 535  33 293 329 237 721 303 217 326 302 508 604 491 415 358 428 550 340 336
 229 327 669 409 193 600 283 364  53 349 734 131 417 404 891 377 473 823 451 224 322 497 881 799 504 360 420 531 537 263
 551 475 435 362 460 373 290 400 398 335 519 339 605 681 611 610 693 379 391 742 587 486 449 483 539 285 488 526  17   6
 357 196 408 563 466 281 385 494 518 620 210 413 552 557 439 117 393 893 502 627 425 892 342 554 361 594 314 410 307 325
 214 308 376 432 499 412 496 622 542 380 368 527 272 530 186 484 888 194 686 522 579 468 462  76 524 711 440 328 603 386
 591 431  52  48 507 107 521 621 501 619 516 452 402 790 444 598 136 236 320 255 536 514 277 717 667 523 416 436 577 705
 411 580 456 618 599 297 419 642 270 470 595 480 606  97 304 660 343  79 648 481  62 687 168 575 876 546  40 541 624 341
 573 558 509 192 464 104 650 646 231 691 668 482 414 639 556 590 141 615  99  69 641 813  16 445 653 572 487 165 644 188
 461 564 423  66 549 278 811 567 119 447 513 770 113 525 532 388  82  72 337 739 568 877 253 115 570 316 661 645 562 592
 683 746  84 247  12 498 614 299 363 145 574 774 450 850 651 801 102  50   7 783 675   9 422 529 777 202 663 628 666 211
 163 538   3 571 582 333 637 405  45 762 771 640 676 548  56 515  41 321  58 559 664 662 279 367 443 576 638 718 578 366
 143 632  10 144 690 476 273 137 830 176 778 865 585 652 752 506 671 633 146 171 401 528 105 392 612 181 584 870  61 511
 780 738 177 292 629  15 689 744 112 346 723 694 418 649 772 656 185  55 259   8 725 726  32 204 222 201 243 764 874 583
 696 828 184  87   2 232  28 132 378  57 857 782 747 791 767 745 697 695  38  86 807 565 138  25 775  27 851 822 441 235
 698 215  13  43 731 182 712 825 116  65 761 344 655 765 743 729 715 472 804 189 720 760  23 371 191  18 812 714  36  93
 164 798 429 323  83 659 312 754 896 180 730  98 797 733 842 872 156 454 122  11 750 338 212 269 111  49 821 787 139 626
  64 457 699 372 852 178 195 818 241 740 803 555 860 162 199 795 106 216 228 769 845  14 306 858 207 150 682 849  29 266
 334 395 805 786 833   5  92 826 331  24 617 853 848 289 716 708 257 221 381 130 421 198  31  80 894  77 871  42 816 634

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.70075e+06us (= 3700.75ms, 3.70075s)
Wall-clock time (full program): 3.757e+06us (= 3757ms, 3.757s)
Satisfaction error: 0
Number of search iterations: 2311
Number of local moves: 851 (including on plateau: 212)
Number of local minimum: 198 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18058
Total number of local moves: 6926 (including on plateau: 1950)
Total number of local minimum: 1390 (including on plateau: 272)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 127  14 431 126  12 271   6  57 742 820 866 752  16 798 844 868 869 272 672 851  10 228 867 109 175 613 857 861 214 167
  15   3 686 777  54  88  29 180 850 243 807 830 805  56 791 246 821 724 719 744 793  47 871 198 835 192 147 285 464 215
 118 721  37 108  52  61 746 277 164 731 738 837  85  36 831 509 794 782 477 845 735 342 607 268 846 717   2 730  89 230
  80 808 799  18  79 445 219 419 648 102 833 693  60 812 776 157 780 859 764 856  22 123 816  32 773 828 314 205  71 124
 174 601 852  51 466 163 728  83 727  27 737 842 265 715 838  48 809 666 762 720   9  87 761 162 632  17 768 411 363  31
 208 733 743  59 327   7 417 641  58 236 557 756 803 750 608 302 695 827 688 823   8  41 848 120  39   5 561 316 636 703
 306 681 732  90 133 239   4  74 736  86 656 579  98 564 790 256 673 680 687 864 184 270 765  73 849 862 644 132 662 146
 369 587 647 775 165 273 661 379 493 374 372 766 734 590 537 718  81 684 658 621 138 213  25 203 726   1 630 218 667 210
 159 597 741 556 380  62 627  94  95 116 707 542  44 510  49 610 525 599 786 625 696 465 446  53 711 739 640 119 645 577
 326 528 596 518 161  76 758 631 606  11 637 447 804 817 749 252 589 706 671 324 545 104 498 296  13 582 679  30  72 489
 242 722 440 692 255  21 233 135 628 674 529 407 635 651 389 583 524 456 139 105 443 429 624 401 373 678 654 196 676 581
 275 614 549 497  23 329 629 450 594 347 609 618 386 492 495 526 620 650 563 483 335 319 480 330 508 496 515 546 211  26
 368 593 383 683 295 457 748 555 543 569 539 544 331 565 519 186 420  91 586 387 453 130 190 359 488 612 237 470 626 588
 567 253 460 468 240 346 455 548 122 520 403 534 410 378 442 469 439 479 521 364 552 283 553 551 603 459 448 503 554 591
 562 494 385 435 436 356 550 357 540 512 547 371 437 201 491 405 451 454 506 485 611 568 532 592 321 370 486 234 354 472
 527 505 392 573 619 538 404 348 351 340 294 362 533 290 471 504 523 390 452 622 476 574 484 482 481 325 499 328 580 248
 559 395 297 301 745 578 531 558 416 305 449 652 286 424 576 438 566 615 258 366 391 516 500 536 263 426 434 514 197 423
 473 388 350 279 517 710 879 173 462 262 274 408 585 384 458 818 250 865 432 300 349 467 396 418 304 367 247 355 882 463
 660 430 352 291 639 810 320 307 414 774 353 876 179 375 394 895 315 131 843 235 402 487 415 770 193 183 151 796 298 227
 697 269 475 502 675 663 341 723 413 530 478 343 143 382 225 646 221 323 376 897 393 664 200 433 333 890 293 264 365 358
 682 400 441 177 633 699 308 337 425 694 444 254 202 381 223 757 427  67 322 406 490 522 345 595 398 421 747 729 677 312
 643 282 238 344 461 779 507 704 881 751 310 251 339 260 701 222 377 288 317 110 318 691 261 600 338 145 266 659 617 855
 584 886 191 832 716 792 207 894 229 412 299  24 884 176 572 311 281 361 289 129 249 605 501 795 332 153 170 702 284 655
 700 182 887 149 819 877 771 772 428 336 292 280 885 276 144 893 111 245 422 107 187 623 231 399 309 212 140 826 755 257
 713 209  68 232 690 535 115 841 117 760 244 195 653 172 136 708  70 158 121 178 840 802 125 814 860 874 824 199 409 853
 813 303 226 858 638 649 169 870 259 834  43  99 883 101 166 847  35 241 148 150 740 822 154 769 100 313 267 220 900 898
 714 137 789 878 875 689 788 541 171 725 155  28 185 152 142 114 194 216 106 278 797 668 204 781 634 112 899 657 188 698
 787 806 217 709 825 602 224  97 616 513 168  78 863 604  50 141  63  34  96  84 815 783 113 669 134 763 872 880 156 753
 670 334  65 778 712 829 287 685 598 705  93  19 181 836  33  66 103 575  92 511 642 888  38 896 160 360  69 560 839 891
 397  40  46 759 873 571 854 785 189 206  82 128 801 767  75  20 889  77  42  45 892 754 665 811 784 800  55 570  64 474

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.27586e+06us (= 2275.86ms, 2.27586s)
Wall-clock time (full program): 2.33322e+06us (= 2333.22ms, 2.33322s)
Satisfaction error: 0
Number of search iterations: 1005
Number of local moves: 770 (including on plateau: 227)
Number of local minimum: 32 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8150
Total number of local moves: 5481 (including on plateau: 1632)
Total number of local minimum: 346 (including on plateau: 190)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 895  67 219  50 142 592 614  68 808 444  84 583 529 725 845 850 848 682 415 876  40  81  58  96 816 832  47 887 268  54
 749 491 145  93  88 872 609 683 463 674 642 107 515 721 503 886 148 754 115 156 731  90 140 120 885 501 478 165 449 542
 248  34  55 132 198 859 607 186 735 128  24 143 587 835 833 675 612 763 562 109 375 660 149 865 713  91 635 273 888 541
 289  79 891 894 185  66 712 138 867 686 230 110 629 671 261 745 124 789 827  85 639 153 167 878 768 559  63 324 131 555
 166 108 170 211 840 871 646 643 869 518  99  36 719 482 736 139  87 896 105 594 624 251 119 174 882 849 397 116 625 543
 659  29 718 217  45 757 665 294 751 750 204 182 756 884 802 239 215 897 203 100 570  77 317 234 809 863 175 159 129 815
 147 221 161  89 168 480 488 196 685 677 228 265 819 792 271 195 717 899 144 279 771 177 761 900 212 691 654 270 312 846
 256 216 233  76 392 190 722 868 780 616 647 172 767 207 193 160 179 838 269 135 764 253 883 226 875 553 898 189 286 672
 264 184 218 499 442 322 892 254 788 641 866 303 364 205 123 180 879 327 246 400 206 893 307 285 208 748 608 851 282 730
 231 873 328 308 152 283 881 214 304 770 450 292 353 255 401 242 259 245 410 335 890 238 465 753 290 800 726 300 877 590
  98 293 418 371 526 360 860 383 224 584 831 715 257 345 127 839 187 531 340 811 567 338 470 435 368 348 423 210 861 395
 373 330 497 247 229 344 812 387 506 576 684 489 496 281 484 346 310 305 461 469 727 377 276 385 275 698 742 272 426 711
 318 202 408 302 200 326 747 243 455 765 358 406 707 296 306 295 667 597 390 381 755 334 464 399 199 661 874 379 267 814
 476 459 367 284 421 864 795 363 536 507 309 369 539 490 347 378 388 380 370 858 441 453 560 404 376 411 220 479 314 357
 538 417 299 475 350 320 534 451 386 412 359 428 427 456 409 519 447 528 262 438 365 445 610 452 372 163 854 398 889 512
 278 620 366 241 880 632 336 329 487 420 508 502 697 339 568 446 343 432 582 403 483 313 419 474 374 355 407 437 413 431
 434 443 500 540 544 668 209 352 424 436  38 510 349 468 563 494 394 687 656 613 176 593 393  42 605 402 477 448 535 522
 550 588 578 513 579 504  78 589 280 325 495 521 617 422 389 557 457 472 492 473 126 561 466 554 547 244 342 440 575 181
 485 581 462 384 573 549  39 618 416 514 669 157 569 505 467 493 509 362 321 481 603 591 566 596 297 356 122 619 537  74
 638 704 524 601 627 644 194 558 604 106  30 577 486 171 548 546 650 655  19   9 277 354 382 634 628 564 425 574 523 263
 572 782 637 586 533 517 298 657 511 460 134 527  11 121 545 708 552  92 630 710   2 520 141 631 689 191   6 794 723 235
 738 700 676 565 580 623  49 695 162 405 266 498 102  82 720 516 598 227 600 595  70  21 653 663 746 223 288 855 551  48
 104 429 666 758 743 706 197 803 183  52 810 769 113 114 585 799  71 192 626 729 337 776   7 556 681 433 571   3 651  51
 818 652 648 645 169 260  10 640  37 232 658 133 670 611 786 633 752  75  69 778 316 636 828 323  94 341 688 615  65 333
 773 693 701 856 760  15 414 791 158  53 784 759 213 702  72 662 843  22 716  18 201 741 703 714  16 178   1 532  73 351
 775 830 740 679  12  13  97 690 621 225 779 680 151  61  17 772 733  95 777 315  35 862 699 130 112   5 709 837 673 391
 813  57 823 471 696  44 361 301  59 458 732 853 396 599 111  26 694 252 744 739 331 836 188 622 274  64 319 821 785  46
 766 829 137 824 781 101 249  43 136 118 664 822 291 103 678  86 804 287 737 805 430 844 793 692  31  14 525 439  32 454
  60 762 847 870 826 705 236 237 125 173 150 820 240 798 817  27  23  80 602 801 857 250 807  56 332 728 530  33 117 606
   4 842  83 734 834  28 164 841 155 790 783 787 146 774   8  62  25 154 825  20 806 797 724 222  41 649 311 796 258 852

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.15266e+06us (= 2152.66ms, 2.15266s)
Wall-clock time (full program): 2.20607e+06us (= 2206.07ms, 2.20607s)
Satisfaction error: 0
Number of search iterations: 974
Number of local moves: 734 (including on plateau: 212)
Number of local minimum: 30 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7171
Total number of local moves: 5582 (including on plateau: 1613)
Total number of local minimum: 234 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 416 115 850 132 853 108  88 251  56 778 160  63 892 860 885 777 822 272 868 385 376 768 107  26  94 646 183 844 143 697
 876 329 330 425 598  36 242 202 155 167 828  51 825 792 863 156 831  93 821 687  98 726   2  61  17 826 718 875 872  13
 870 837  67   5 706 137 246 795 211 773 830  90 769 767 866 784 809  77 771 206 652 186  39 743  47  45 234  21 171 761
 799 790 362 121 659  31 836  33 213 165 818   9 654 729 807  40 864 240 739  25 118 191  22 857 192 621 886 699 763 232
 783 841 305  70  11 142 805 694 776 318 104  10 668 710 609 774 700 267 303 169 128 532 119 723 637  55  80 713 744 725
 873 764 319 696 851 391 810  41 157 692 741 214 815 742 736 683 738  83 150  19  81  97 196  69   4 704 243 595 636 375
 600 686  59 130 628  62  14 106 701 715 838 629 657 703 758 747 649 352 579  58 122 158 314  72  15 691 200 848 735 689
   6 707 235 224 781 222 593 650 760  91 734 558 714 762 103 663 607 100 290 114 457 670 228 705 194 571  42 634 645 455
 556 678  48 255 334 288 745 193  52 270 656 291 746 588 717 690 436  84 537 605 581 227 423 615 300 662 521 552 603 262
 660 651 182 306 274 268 661 509 420   1 653 332 576 485 604 731 721  49 658 133 667  64 256 730 366 674 554 622 676  32
 560 536 178 642 597 483 644   7 426 264 590 147 568 546 592 632 620  73 542 225 639 508 298 573 253 648   8 494 677 545
 518 511 477 461 619 409 665 497 484  18 553 626 464 640 525 531 647 616  71 481 204 586 577   3 344 478 524 580 190 216
 492 564 141 471 671 340 512 187 451  76 505 424 506 612 540 570 617 429 337 561 236 515 261 479 387 611 643 591 587 199
 437 563 514 499 263 379 565 324 450 238 392 299 495 363 544 534 569 517 371 575 486 549 513 635  12 504 583 418 490 434
 467 589 393 584 516 320 488 350 422 419 625 528 452 675 380 401 325 281 510 396 470 489 413 394 189 551 585 441 430 432
 641 383 614 327 415 448 361 539 446 501 439 373 453 493 463 357 280 578 555 377 381 406 469 523 529 466 476 356 410 456
 859 384 405 252 427 538 472 459 503 496 468 480 428 328 386 346 421 390 502 445 354 382 411 462 543 221 458 431 897 367
 498 369 345 341 408 548 442 364 412 372 335 304 482 407 522 326 443 900 388 682 309 343 630 440 788 342 402 368 378 627
 374 358 438 397 447 606 444 785 315 547 331 286 475 336 333 302 339 400 759 359 789 782 655 449 530 210 311 297 295 566
 491 473 775 349 289 399 283 433 360 867 880 398 254 389 271 292 164 613 282 417 454 284 801 338 557 355 835 149 365 698
 102 219 582 308 681 562 201 533 323 881 395 666 229 293 278 351 321 798 507 752 727 296 370 435 414 162 740 249 347 793
 140 215 712 312 220 884 277 770 786 404 275 247 241 310 294 250 188 814 861 301 791 894 550 244 852 322 151 266 348 596
 185 231 877 800 138 610  57 245 248 719 307 794 179 148 709  99 808 500 223 813 198 832 720 177 816 203 688 233 812 146
 260 174 520 722 684 633 847 559 170 353 258 854 139 181 209 218  54 602 125 806 685 772 843 116 601 159 833 101 217 820
 161 269 896 756 317 526 152 716 208 519 287 669 176 109 127 891  20 846 487 316 834 285 757 572 874 136 172 748  16 673
 313 163 787 811 110 845 134 205 856 276  87 797 184  74  53  38 175 708 144 623 711 273 608 751 829 840 259 899 817 145
  60 120 702 893 212 779 279 732 737 638 111 803 173 124  85 123  29 865  37 827 574 618 527 882 680 664 890 129  27 195
 197  35 230 780 754 869  50 728 839 679  34 888  46  78  65 237 265 750 883 733 166 226 749 465 695 849 535 135  95 460
  82 895 541 879  24 887 724 842 823 804 113 796 180 117 112 153  23 594 126 753 824 257 802 105 898 207 693 131  86  44
 239  66 631 567  28 765 878 766 755 474 168 889  75 154  79 819  30 624  89 672 403 599 855 871 858  92  68  96  43 862

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.06738e+06us (= 2067.38ms, 2.06738s)
Wall-clock time (full program): 2.12468e+06us (= 2124.68ms, 2.12468s)
Satisfaction error: 0
Number of search iterations: 872
Number of local moves: 627 (including on plateau: 167)
Number of local minimum: 27 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6595
Total number of local moves: 5334 (including on plateau: 1305)
Total number of local minimum: 190 (including on plateau: 151)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 900 887 152 104 206 839 717 149  88 548  32 644 115  26 878  89 130 144 762 155 882 869 694 111 200 781 816 159 866 572
  60 212 129  94 880 682 196 725  92 552  19 544 123 124 876 172 100 133 846 863 488 654 746 893 884 724 736 148 262 558
 153  46 462 105 879 830 210 209  34 193  23 688 535 107 786 300 132  40 891 574 659 850 841 754 287 646 683 871 145 582
  21 161 797 889 244 624  41 838  66 693  33 778 120  64 787  84 140 307 795 217 814 509 764 892 565 692 560 194 139 687
 875  42 157  18 506 723 165 865 640 125  67 713 138  90 877  75  68 655 811 221 606 208 890 453 820 855 759  52 179 862
 141 103 151 176  77 532 220 826 142 897 617 817  81 180 888 146 102 168 860 162 352 752 845 835 896 815 766  51 190 727
 173 175 112 246  86 883 519 229 788 273 126 808 258 247 702 134 169 553 663 170 660 769 894 743 292 235 804 158 881 765
 318  50 218  27 198 697 243 874 320 259 638 793 375 313 336 254 322 275 821 473 551 859 639 721 195 689 776 310 192 779
  87 331  83 429 319 799 872 270 895 223 864 406 147 265 397 156 163 255 828 467 738 886 357 629 384 698 744 216 204 403
 253 234 271 228 232 609 299 739 857 899 314 753 416 121 381 345 431 201 329 741 479 707 369 602 446 277 266 364 740 612
 385 304 340 276 215 672 225 260 586 450 843 312 350 316 373 245 185 402 341 898 699 363 309 675 279 714 719 775 197 807
 438 272 237 333 365 584 294 371 767 256 423 873 470 445 321 203 227 870 334 701 782 347 291 576 489 472 622 281 191 680
 498 264 290 425 376 649 885 239 822 441 261 405 432 514 424 293 847 380 323 549 696 399 392 377 317 338 324 466 481 408
 354 269 346 447 435 527 242 685 571 539 537 633 430 480 356 492 625 351 619 274 478 546 417 486 306 529 436 493 286 326
 454 465 540 358 382 370 401 500 394 651 433 567 538 536 440 280 591 283 522 485 367 484 496 409 348 457 510 573 386 295
 339 647 413 588 311 389 360 513 387 404 410 525 597 455 526 332 511 426 400 505 452 581 390 531 342 143 415 652 559 412
 523 448 418 419 461 491 344 469 512 556 483 421 328 555 477 596 427 337 335 391 268 250 464 463 439 487 608 566 451 528
 349 422 578 614 600 248 458 542 561 589 583 468  59 601 407 530 533 118 393 236 263 691 224 327 474 643 494 499 516 495
 569 524 459 383 361  61 676 476 599 653 623 520 374 598 362 607 515 420 177  48 238 181 508 534 618 645  22 730 636 398
 690 679 634 590 577 411 507 497 637 379  12 166 517 568 442 670 545 587 557 150 378 708 502 257 278 616 211 308 372  70
 550 709 686 585 428  76 504 611 635  47 388 615 564 684 603 595 648 579 521 108 395   1 628 178 575  69  99 667 518 249
 554 630 809 650 748 301 592 580   9 785 668  15 695  14 594 547 610  95 490  74 202  17 720 366 677 297 213 705 669 189
 605 641 661 626 501  62 627 657  28 109 794 183 673 656 710 810 471 827  82 184 305  56   7 288 715 570 171 704 664 128
 449 671 789 620 503 414   6 135 757 771 355  80 482 840  29 745 642 658 289 733 298 674  96 303 665 122  57 593 666  73
 812 678 703 833 563 444 475  49 127 825 604   5 729 700 106 837 758 711 154 784 285   2 222  38 187  78 207 718 750 131
 792 761 734 823 819  30 632 230 716 117 712  11 763 732  65 735 631 772   3 796 114   4 241 437 800 167  20  98 541 219
 858 836 768  97 621 233 330  72 396 188 790 282 829 783  54 849 777 832 199 681 119 267 296 214 164 182 543  71 728 456
 562 834   8 813 803  85 798  53 770 174 252 137 856 831 231 801 773 848  55 722  13 443 136 160  93 186 315 613 791 359
 737 460 726 852  63 205 853 110  79 861 806  10 774 802  44 751 662 854  91 851 116 113 101 226  25 353 251 749 284 706
  16 760 844 867 756  45 824 742 240  58 805 343 747 868  43 842 780 434  24 302 818 325  36  37 755  35 368 731  31  39

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.23495e+06us (= 2234.95ms, 2.23495s)
Wall-clock time (full program): 2.29219e+06us (= 2292.19ms, 2.29219s)
Satisfaction error: 0
Number of search iterations: 950
Number of local moves: 779 (including on plateau: 263)
Number of local minimum: 29 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7899
Total number of local moves: 5365 (including on plateau: 1546)
Total number of local minimum: 374 (including on plateau: 183)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 665 146 828 202  81 135 847 200 714 787 896 220  78 891 459 119  61 775 195 822 444  60 861 155 749 186 886 858  83 112
 801 878 654 833 207 133 245  35 821 528 104 201 141 675  27 616  95 516 877  96 893  98 770 704 165 644  74 756  44 884
  85 158 866 138 497 815 753 226 733 742 123  73  66 792 456 233  41 604 628 811 899  64 736 103 301 772 885  46 768 101
 797 117 579 789 258 746 174 782 826 870  82 209 124 809 143 118  23 563 154 758 700 159 802  52 110 889 880 798  72 132
 804  75 122 130 785 873 678 661 235 751 342  77 199 829  56 865 113 857 282 583 674  69 754 241 872 898 105 248 197 140
  91 162 171 237  76 728 874 676 795 841 175  59 328 824 163 238  58 856 692 769 814 164 729 196 890 892 225 373 382  37
 139 170 571 239 897 336 879 816 261 522  84 425 144 214 699 161 152 774 657 777 447 448 844 900 393 334 244 869  71  48
 750 397 859 168 242 216 296 760 384 800 450 218 318 106 732 348 269 863 526 438 796 227 453 276 887 794 193 281 343 125
 731 240 790 272 360 327 544 256 341 871 315 330 294 192 221 355 314 752 300 765 895 860 609  79 322 304 266 781 344 485
 263 247 308 190 498 368 650 287 735 831 551 379 259 375 361 350 307 791 434 570 747 377 645 836 638 411 217 437 148 305
 285 442 252 346 260 356 693 299 677 420 894 436 295 273 793 354 837 706 807 332 405 270 698 268 619 142 278 319 433 326
 358 388 398 371 347 457 786 853 655 337 286 392 230 353 596 414 182 556 830 476 708 309 888 277 529 254 280 316 189 500
 352 284 243 395 478 771 424 298 401 403 469 365 423 553 429 338 552 409 827 480 542 381 734 467 484 541 333 329 427 383
 386 464 483 867 575 449 293 487 426 389 188 345 331 419 396 470 539 646 378 495 511 408 481 391 372 506 514 380 496 430
 454 501 580 349 477 489 366 564 472 443 283 363 623 402 410 462 535 421 482 465 400 605 515 519 428 279 228 374 560 466
 351 490 586 435 262 357 479 422 567 364 359 512 385 339 520 559 416 507 540 538 387 569 561 717 302 224 491 412 600 264
 440 407 370 537 494 441 587 446 250 191 598 589 149 508 543 325 521 461 432 413 292 390 369 633 367 653 593 504 509 503
 505 627 649 613 578 455 594 492 166 534 473 131 452 431 445 415 652 289 317 167 257 660 222 460 147 599 550 615 614 406
 555 608  50 439 471 635 145 617 642 546 557 757 595 639 157 523 417 204  42 310 194 574  18 458 739 536 530 524 306 727
 547 622  38 592 493 687 232 740 636 709  68 707 518 554  12 451 601  21 267 324  89 573 288 588 129 606 486 531 799 607
 697 641  65 510 558 626 682 618 611  51 585 651 672 620  88 602 513 291 335 234 340 533 246 591  36 176 584 151 549 659
 683 577 499 568 716 576  67  17 548  25 685 525 695 710 376 612 532  93 565 183 114   3 185 640 102 621 603 566 684 745
 694  16 705 629 720 475 206   5 109  20 590 468 669 681 323 100 680  39 362 290 251 805 312 721 656 643 825 107 767 647
 711 851 184 730 311 679   1 662  62  26 773 562 755  86 502 597 624 136 212 208  94 722 115  33 812 488 702 517 788 572
 690   7 762 670 634   2  34 394 215  40 527 637 713 764 876 779 748 177 474 198 236 686 127  10 265 582  63 625 817 763
  43 703 783 743  57 696 172  99  49 320 712 868 701  70 666 744 843 229 178 116 581 271 126 630 223  15 813 610 766 688
  80 737   6  97 691 463 169 725 213 179 778 632 820 111 648   8 784 121 658 819 275 741 173 803 818 205  11  31 864 855
 108 840 852 545 671   9 255  19 128 134  14 664 854  92 759 810 842 399  54 780 203 832  45 875  32 187  90 715 862 845
 137 882  13 120 668 160 723 806 663 631 719 881 850  53 883 726 418 303 321  24 297 808  28 219 404  87 718 231   4 738
 313 838 249 761 153  55 667 253 180 210 835 839 834 150 776 823 846 156 689 274  30 849 181 673 724  47 848 211  29  22

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.19609e+06us (= 2196.09ms, 2.19609s)
Wall-clock time (full program): 2.25241e+06us (= 2252.41ms, 2.25241s)
Satisfaction error: 0
Number of search iterations: 974
Number of local moves: 767 (including on plateau: 192)
Number of local minimum: 27 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7543
Total number of local moves: 5258 (including on plateau: 1398)
Total number of local minimum: 334 (including on plateau: 186)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 432  34  81 147 844 820  83  14 363 206 806  95  46 632 788 841 860 331 143 864 884 168 826 161 823 318 799 118 770 218
 434 845  32 104 706 775 153  29  71 668 124  64 704 262 866 762 872 507 289 847 858  52 117 138 854 879 803  11 590  99
 816  13 504   4  39 340  23 857  61  92 271 286  33 166 672 822 766 729 178 763 869  51 769  57 682 827 833 324 870 798
 311 321 477   5 868 649  35 661 396 114 731 495  53 760 648 804  37 453 850 836 807 330 698 157 883 177  17   6 654 282
 792 596 219   2 553 793 354  28 737  73 751  69  56  78 856 734 116 169 694 778 786  54 862 280 612 772 784 102 790  25
 678 135 239 159 821 728  38 718 628  49 229 101   8 111 675 713 735 171  26 732 645 616 813  12  31 736 800 738 659 771
  70 573  66 158 663 394   3 655 559  97 589 127 100 746 609  44 693 125  47 488 665 651 782 591 561 725 767 667 634 666
  22  60 107 232 817 677  19 814 647 625 705 776  10 106 752 773 715 234 225  30 727 730 674 204 656  42 764  36 627 709
 133  91 184 352 633 512 489 722 251 196 642 592 669  65 163 741 702  94 721 621 723 221 560 181 644 131 720 660 533 569
 554 148 680 174 829 273 267 724 641  85 112 653 607 103   1 497 630 319 695 470  16  21 491 555 801 538 601 692 753 585
 205 546 224 245 416 671 360 603 523 151 128 551 494 469 347 548 223 217 562  72 566 685 664 503 582 579 578 711 626 466
 476 527 305 568 650 287 315 662 586 241 657 292 382 691 207 540 623 285 509 689 288  24 132 274 549 519 541 617 471 608
 397 428 572 443 587 506 355 313  96 276   7 517 726 493 198 409 522 526 547 638 518 536 576 389 570 406 615 473 458 418
 496 643 499 483  41 388 398 387 537 361 558 372 598 385 295 513 366 190 478 636 613 556 629 467 369  59 577 505 528 588
 464 314 532 481 716 373 371 490 461 348 381 511 435 543 349 487 552 399 482 334 567 525 442 472 233 502 446 563 426 316
 501 887 595 427 402 417 516 392 524 597 480 420 514 341 492 376 359 574 433 379 437 281 335 425 450 454 455 353 263 436
 871 356 447 440 350 539 529 370 431 510 377 336 343 575 530 419 818 848 337 323 430 413 401 407 429 230 264 403 422 367
 362 375 479 414 384 831 774 460 452 468 465 259 719 486 837 395 310 521 290 404 410 307 611 423 485 400 201 459 176 358
 357 249 544 699 374 408 640 247 750 686 463 320 474 255 580 338 339 610 802 386 298 824 180 462 424 421 297 256 391 441
 888 306 683 747 383 246 606 254 351 457 889 787 162 789 364 236 365 733 195 275 322 878 123 564 451 293 238 308 277 345
 531 390 535 614 283 584 754 759 346 781 852 344 393 797 619 189 304 599 120 342 484 448 265 284 411 309 257 380 326 215
 444 327 708 673 303 240 779 252 785 593 167 299 296 851 445 332 508 652 897 272  76 756 187 658 300 761 220 192 130 412
 210 758 317 635 832 213 646 108 188 679 605 312 843 261 405 164 228 861 895 415 329 449 867 794 242 165 243 235 291 325
 222 830 859 819 202 545 899 154 439 681 278 260 780 877 631  82 214 710 237  98 149 810 294 438 211 144 172 670 208 602
 328 258 838 783 268 894 740 140 620 542 156 739 270 269 302 757 248 583 333 714 150 199  80 892 160 743 170 880 250 209
 809 186 520 846 191 182 805  74 368 796 203 791 811 835 226  77 266 378 200 121  87 742  79 898  75 301 185 765 808 890
 812 863 618 279 113  55 456 212 119 696 885 624 882 197 475 109 755 700 594 136 126 873 840 550 173 129 146 684 183 231
 600 712 194 875  20  67 622 839 688 815 142 874 825 253  15 110 122 193  88 139  50 571  43 703 744 701 896 639 141 834
 216 891 581 865  93  90 637 749 152 777 155 881 717 604 105 676  40 795 900 534 137 244  86 690  62 697  58 893 145  45
  84 853 876 842 134  18 849 828 745 855 707 768 565 515  63  27 227   9 748 179 498 500  89 886  48 557  68 175 115 687

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.19704e+06us (= 2197.04ms, 2.19704s)
Wall-clock time (full program): 2.25272e+06us (= 2252.72ms, 2.25272s)
Satisfaction error: 0
Number of search iterations: 1003
Number of local moves: 710 (including on plateau: 246)
Number of local minimum: 42 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7626
Total number of local moves: 5591 (including on plateau: 1426)
Total number of local minimum: 300 (including on plateau: 147)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 207   9 789 433 283 851  47 865 259  40 843 781 101  90 715 882 825 786  60 741  26 150 723 178 771 248 811 809 168  24
 111 491 834  79 100 858 226 783 395 380  13  17 827  49 780 891 878 694 852 874 816 765 267 212 191  62  22 832  33 183
  20 200  67  82  96 179 861  23 776 738 729 335   4 810 862 867 733 793 872 218   8 797 792  15 794 136 824   2  75 807
 145  39 173  54 230 304 227 271 795 133 744 826  92 736 808 728 649 440 873 821 216 617 652 531 759 132 125 813 104 478
 319 680 835 109 815 727 234 767 484  29  45   3 806  30 836 857 634 812 148 870 722 746 677  84 359  19  16 403 265 184
 134 761 690  72 217  34 193 695 673  25 507 423 779  58 704 737 678 814 692 803 153 519 762 298 244  66 766 556 121 341
 239 688 721  76 245 674  36 683 672 202 796 640 747 329 830 734 742 693 296 752 849 671  21  91  52 209 112 396 167 152
 332  43 681  93  78 679  69  37 701 668 651 758  64 240 754 696 472 606 636 689 482 625 663 238 186 249 632 582 600 311
  11 774 605 140  10 682 314 660   1 655 687 691  46 131 714 580 659 700 486 629 618  18 748 609 233 162 481 777 559 135
 164 587 571 473 525 685 169 516 564 192 339 455 409 174 646 633 697 710 635 724  74 614 537  31  14 470 465 669 446 327
 336 675 566 509 589 532 147 647   6 575 165 637 120 272 522 645 712 538 598 502 726 535 530 255 129 143 601 591 568 144
 385 602 501 428 686 583 505 638 503 593 540  94 720 527 495 425 398 574  63  27 560 613 542 534 232 274 642 630 196   5
 391 594 404 432 623 457 553 545 468 370 515 434 185 579 489 421 517 666 662 222   7  44 567 443 181 287 622 599 585 653
 345 536 555 447 529 716 665 461 513 499 223 576 349 444 500 543 426 235 493 323 718 414 610 325 399 347 139 562 113 510
 374 469 437 569 504 518 524 549 420 388 490 541 318 417 334 418 317 204 544 389 546 584 624 590 464 281 427 514 441 320
 479 523 408 520 416 474 467 631 449 526 588 460 498 453 548 338 497 340 592 413 387 231 442 330 438 337 393 451 508 378
 521 366 384 436 512 494 476 364 506 361 290 328 496 621 829 331 889 375 392 368 462 354 308 376 435 539 288 533 450 431
 572 268 406 412 358 379 439 383 483 381 371 382 719 422 407 299 616 846 291 390 326 305 400 756 699 603 343 386 362 511
 650 363 260 360 253 282 639 367 411 410 487 838 488 333 257  99 295 277 897 577 837 243 252 717 477 611 452 608 424 351
 641 394 430 459 306 324 627 429 866 197 619 284 643 448 355 293 289 458 241 558 353 203 401 745 657 551 419 266 346 713
 475 242 157 828 799 215 620 369 791 749 373 214 307 750 225 278 190 221 357 356 310 160 254 755 578 648 246 463 879 706
 561 263 219 840 769 466 350 344 528 313 377 322 454 801 103 236 297 273  77 309 708 880 365 725 581 884 276 302 228 664
 604 286 206 676 847 294 552 886 188 187 833 471 869 158 189  35 303 372 118 348 182 177 887 711 563 702 220 176 707 768
 740 596 151 607 300  98 415 264 199 751 315 195 876 823 251 312 237 321 280 122 820 352 258 855 586 868 269 247 763 644
 658 175 208 802 285 888 764 292 213 211 670 159 250 782  32 166 172 301 270 261 753 115 110 877 848 684 842 198 757 772
 760 800 194 785 256 128 892 161  42 565 201 790 127 822  71 149  57 123 573 883 171 170 154 819 570 900 896  55 698 703
 805 229 885 480 709 804 628  89 155 854 180 798 210 818 106  70  56  53 654  81 864 397 156 275 557 626 445  85 899 547
 856 146 898 859 893 130 262 116 615 894  95 138 735 142  38  41 141  86  73  83 105 850 612 279 860 831 224 845 773 895
 841 863 117 667 732  48 770 126  61 739 705 817 784 595  65  68  51 107 731  80 119 881 114 656 342 871 730  28 405 402
 839 853 163 788 550  12 844 554 778 890 124 108 492 661  50 743  88  97  59 102 597 485  87 205 316 775 787 137 875 456

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.50168e+06us (= 2501.68ms, 2.50168s)
Wall-clock time (full program): 2.55762e+06us (= 2557.62ms, 2.55762s)
Satisfaction error: 0
Number of search iterations: 1310
Number of local moves: 715 (including on plateau: 235)
Number of local minimum: 74 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9951
Total number of local moves: 5748 (including on plateau: 1941)
Total number of local minimum: 533 (including on plateau: 229)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 792 371 195 235 153 278 818 674 776 870 254  52 427 821  42 680 702 860 809 846 170  87 231  11  13 594 813 871  53  17
 754 133  30 442 814 784   5 185 212  29 823 103 693  79 460 291 761 691 804  24 853 137 304 769  81 798 746 857  16 837
  15  23 842  77 786  20 735 749 486 366 575 808 228 750  75 835 697 815 709 306 755  62 308 353  40 752 208 398  55 687
   7  86  49 856 825 666 793   4 300 290   9 771 720  28 330 847 148 882 711 729 763 113  68 310 789 712 834  19 158 698
  70 373 836  33 349  14 777 751 744 403   8 790 346 110 810 658 181 855 233 621 692 524 679 325 288  18  90 863 332 742
 734  41 102 668 848   3 652 286 670  84 736  66 690  64 200 647 172 757 759 774 681  51  56 587   2 614 756 781 203 831
 689 240  25 768 743 616 122 635 305 731 817  34 147 643 134 820 194 707 715 688 714 328  97   1 241 710 767 733 104  47
 585 624 800 619 713 701 572  12 292 590 659 780 168  92 232 700  65 613 599 637 739 280  46 611 155 623  38 748 150  72
 675 610 657 457   6 717 705 523  26 393 461 706  60 737 289 283 601 542 633 466 479  59 136 645  37 454 527 656 322 653
 642 661 548 563 588 695 664 671  27  22 627 622  58 557 359 250 444 662 654 581 597 463 160  45 161 628 667 577 143 179
 725 186 485 552 512 644 530 111 108  76  10 471 483 724 521 615 192 727 708  21 655 528 209 495 649 574 629 481 244 650
 578 536 560 638 413 475  63 472 218 470 385 400 164 549 229 279 576 410 760 648 596 152 592 583 573 602 372 498 180 544
 443 640 476 584 459 505  73 191 529 112 568 570 397 534 440 242 361 418 618 639 484 535 434  32 617 682 537 554 315 526
 482 408 446 497 423 636  67 586 565 456 438 439 507 409  39 492 453 543 420 561 598 541 516 487 360 431 556 345 447 367
 411 425 515 493 631 558 455 452 502 402 255 428 429 553 451 248 559 436 404 504 435 562 469 551 399 335 416 441 448 348
 488 525 421 593 467 468 589 417 449 344 491 540 511 311 508 422 430 387 356 329 509 394 374 494 496 406 506 307 605 378
 886 458 252 237 703 334 336 277 806 272 473 766 386 424 432 412 316 445 382 338 119 849 363 340 897 339 390 357 545 381
 501 395 312 419 301 389 282 365 805 606 533 321 538 571 564 802 433 480 333 375 276 426 331 377 352 362 380 884 555 247
 284 274 388 303 547 464 326 876 550 879 253 124 775 546 579 517 309 465 368 258 263 600 355 828 347 391 238 224 694 490
 317 407 510 779 323 239 370 267 719 354 287 396 625 337 477 478 822 401 851 811 299 175 296 415 320 293 437 522 630 358
 234 677 341 342 343 251 257 782 840 878 302 140 741 222 726 144 271 295 266 187 898 268 829 801 819 176 178 230 672 405
 275 791 106 265 324 392 519 787 858 217 379 531 827 213 318 294 376 139  91 207 812 699 595 797 788 225 198 364 678 450
  82 297 384  83 115 738 159 841 778 604 314 129 260 327 591 728 634 264 285 246 210 877 807 259 626 850 319 245 794 669
 783 740 193 350 383 206 867 532 135 732 204 261 803 223 665 770 298 166 162 205 120 262 676 890 796 197 795 156 762 183
 824 214 862 826 107 721 313 499 142 816 220 256 182 130 683 489 874  95  96 165 151 660 889 216 414 269 651 174 861 716
  57 722 773 686 873 149 514 351 520 184 859 154 641 854 646  54 202 109 273 171 219 895 745 869 249 121 236  89 718 582
  78 157 883 899 169 163 211 190 114 833 875 270 145 569 888 138 620 146 127 474 101 567 892 503 612 196 891  80 843 881
  31 772  94  85 117 105 723  93 131 141 747 896 608 607 580 201 764  44  88 887 177 893 753 799 872 227  99 894 866 221
 243 885 864 123 281 704 500  36 539 758 188 839 730 868 785  61 215  35 128 685 100 832 632  48 684 865 116  69 513 189
 830 844 566  43 199 880 518 900 369 603 765 852 226 663 462 118 845 126 173 132  50 696 673  74 838  71 125  98 609 167

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.26994e+06us (= 2269.94ms, 2.26994s)
Wall-clock time (full program): 2.32555e+06us (= 2325.55ms, 2.32555s)
Satisfaction error: 0
Number of search iterations: 1025
Number of local moves: 690 (including on plateau: 218)
Number of local minimum: 44 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7407
Total number of local moves: 5329 (including on plateau: 1405)
Total number of local minimum: 314 (including on plateau: 184)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 709 138 221 793  58 179 125 112 791 869 141 621 735 152  91 888 778 673 584  54 237 787 685  61 751 295 335 659 102 891
 804  77 760 113 260 162 677 209 892 717  36 604 165  97  53 886 894 610 666  66 426 887 721 103 504  59 281 118 882 786
 765 642  99 807  94 100  67 270 140 670 149 678 801 169 164 846 135 757 633 142 447 900 828  43 779 150 511 893 161 675
 829 109 564 108 880  89 129 600 859 843  32 625 805 210 171 232 156 834 704  49  83 719 838 217 186 287 637 747  95 878
 615 794 266 865 571 168 239 241 877 809 598 657 669 120 204 194 308 731 246 219 159 727 692  90 200 170 175 866 160 885
 870 665 599 331 538 618 163 106 783 873 782 745 724 153 263 325 253 283 107 442 158 333 706 297 821  81 269 749  92 386
 136 290 324 148 539 176 884 133 898 712 734 553 708 259 864 199 890 716 207 236 323 224 328  69 497  98 680 761  96 833
 177 527 370 302 513 234 111 309 897 519 777 844 218 137  68 225 693 842 889 322 226 806 318 215 875 146 273 701 286 695
 432 694 580 332 767 365 203 605 837 188 262 861 423 346 336 178 455 463 208 147 201 702 826 289 419 334 267 510 404 881
 654 849 451 249 667 185 272 143 231 883 785 815 240 381 104 593 300 338 509 182 879 284 312 303 876 397 213 285 268 867
 481 531 835 314 557 469 276 134 617 238 750 691 438 282 387 578 354 351 863 359 565 479 337 197 299 456 385 558 340 394
 582 720 501 216 851 401 313 349 472 634 464 470 352 278 222 421 367 895 555 254 512 327 353 311 319 649 189 715 375 448
 403 839 339 411 590 408 503 301 214 330 635 626 899 449 619 413 489 855 422 363 530 306 316 390 326 307 279 304 243 406
 803 862 668 293 305 398 378 382 514 310 350 482 345 852 320 329 416 356 392 484 458 358 541 244 462 437 247 739 418 372
 454 517 427 498 475 444 573 298 255 360 342 537 412 414 640 800 563 396 425 223 344 446 364 552 528 384 664 524 436 220
 467 460 629 546 461 315 228 376 499 429 453 459 388 431 371 393 688 430 554 466 424 574 500 355 468 684 410 485 192 380
 292 395 474 547 151 441 622 523 391 493 586 366 581 383 477 540 126 433 661 707  48 561 650 490 435 559 502  40 507 534
 585 369 452 409 245 529 566 587 522 415 473 190 508 549 575 417 533 131 379 476 487 491 631 516 755  62 520 155 589 399
  35 250 443 613 230 551 518 601 602 663  28  13 572 521 526 630 579 544  20 799 543 596 606 656 496 568  26 166 525 595
 445 144 145 569  93 343 641 639 697 550 713 242 700 450 570 486 280 291 614 211 480 206 655 609 562 296 620 227 545 492
 275  11 457 577 181 696 478 841 402 180 616 274 672 686 556 483 597 645  82 646  70 648 505 542 117 624  64 567 682 341
 588 495 119 723 288 729 608 594   8 536 583  45 643 671 762 591 872 105  33 592 676  78 535 488  73 440 611 174 603 252
 277 172 132 789 248 823 758  16 548 737 506  19 368 465 607 532  30 127  44 718 679 660 191 742 658 725 714 271 638 321
 362 373 139 628 374 636  65 740  34  42 732 434 627 797 515 769  50   1  74 699 770 576 743 847 124 698 710  71 687 198
 662 420  10 471 651  15 780 560  38 121 235  51 251 623 741 744 874 193 792 722 845 167  79 813 173 705 632 261 831  55
 653 772 195   5 347 788 647 773 205 264 123 202   9 494 853 674  47 294 733 766 784  57  18 802 154 771 820 407 819  39
 128 652 822 400 726 811 818 681  63   7 110 439   4 816 763  56 854 183 187 814 703 116  21 752 361 736  60 612 798  22
   2 101 857 683 730 850 808 738  29  72 746 348  17 764 825  24  87 377 840 759  41 212   6 830 357 748 774 790  25  75
  27 389 827 690 860 824 233 858  86  37 130 196 229 754 157  46  52 405 775 781 689  31  88 856 756 896 776  84 868 115
   3 258 810  85 265 768 832 796 114  14 644 428  12 812 711  23 795 256 317 817 728 257 122 836 184 753 871  76 848  80

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.24253e+06us (= 3242.53ms, 3.24253s)
Wall-clock time (full program): 3.29841e+06us (= 3298.41ms, 3.29841s)
Satisfaction error: 0
Number of search iterations: 1760
Number of local moves: 630 (including on plateau: 203)
Number of local minimum: 135 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14665
Total number of local moves: 6120 (including on plateau: 2056)
Total number of local minimum: 1081 (including on plateau: 284)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 788 870 859 160 233 157  34  87 104 598 539 871  52 879 706  85 860 857 118  76  44 864  41 345 731 900 727 726 108  96
 890  92 823  42 196 744  15  74 114 830 750 838 159 139 798  69 794 753 653 167  99 135  28 182 883 893 632 792 891  40
 134 144 885 124 831  56 635  93 131 816 692 633 171  63 416 120 806 807 701 117  31 184  30 865 769 579 694 766 852 370
 121 168 715 854 867 627 560 434 165 872 678  21 119  66 594 229 101 771 523 189  82 772 218 887 723 241 834 828  55 201
 122 112 770 130 886 458 745 127 126 861 536 888 138 178 757  50 109 163 749  54 142 848 690 873 684 479 781 741  47 271
 174 804 767 143 847 892 227 175 173 791 898   3 223 256 703 303 149 644 738 179 641 811  38 877 350 243 577 663  27 199
 244 293 752 881 366 531 259 882  57 329 728 204 212 155 880 252 282 739 589 408 158 447 105 897 843 376 519 785 181 161
 274 342 809 237 235 611 862 814 234 216 894  89 102 563 765 240 396 884 863 330 136 123 286 309 866 238 621 712 258 206
 185 275 310 835 265 742 656  84 361 239 736 230 371 386 899 245 267 719 856 344 231 875 146 673 263 194 737 876 220 295
 341 283 740 756 332 699 707 276 228 660 657 254 600 634 509 298 188 319 776 170 392 786 290 378 221 306 674 640 211 190
 302 281 851 215 747 334 383 364 896 687 426 377 321 340 587 569 895 691 465  33 316 631 315 236 232 269 354 773 266 359
 842 414 628 424 264 572 339 242 820 308 581 421 317 356 889 505 288 202 322 347 311 444 571 393 279 783 373 325 607 348
 367 314 570 395 593 369 826 301 606 878 343 349 388 592 280 320 599 278 248 639 351 338 352 573 417 326 845 365 331 362
 394 420 610 841 462 415 249 318 372 484 357 527 277 473 486 463 576 467 419 542 304 553 596 485 436 401 440 336 335 477
 294 333 406 312 387 391 445 584 337 475 548 450 480 375 488 497 457 504 500 514 521 261 305 451 423 425 833 543 544 432
 380 374 469 428 438 449 526 529 324 515 360 474 575 323 461 389 442 459 384 490 582 533 382 381 550 522 498 363 557 358
 422 568 470 565 525  24 410 608 520 412 346 404 285 255 297 549 399 491  43 492 670 516 604 430 537 532 506 448 609 578
 561 556 328 616 402 287 478  78 409 379 622 368 763 483 353 405 489 429 355 437 511 296 562 476 433 508 496 443 510 482
 431 630 272 524 456 169 559 435 400  91 176 530 390 407 403 618 452 494 385 471 558 453 651 518 654 541 208 460 517 662
 567 487 214 502  86 200 619 411 503 595 583 643 454 636 147 446 612 441  83 413 597 257 564 666 588 507 148 209 535 802
 655 614 133 638 603 207  13 534 685 493  29 418 605 682   7  53 683 659 141 540 698  61 647 615 844 671  59 210 613 705
 693 648 455 679 495 466 299 629 551 637 150 645 661 695  98 711 545 162 154 708 110  79 586 439 106 680 113 186 580 555
 665 591 153  25 732 327   2 846 754 574 205 601 824 760 164 774 623 501 222 625 668 677  12 152  23 468 219 191 624 513
 733 566  90 669  32 111 398 650 590 427  94 602 658 538  46 779 552 197  45 675 810 649 724 313   9 664 224 292 617 761
 702 652  95 307 676 585 642 714 734  16 115 797 472  58 300 554 729 151 253 547 819 193 869 103  97 710  88 129 720 688
 755 716 180 689 132 777  77 700 782  75 137  68 626 789 246 818 681  18 225 801 840   1 751 713 100  81 183  26 735 793
  60 836  22 268  19 697 250 646 803 187 217 764 837 780 140 775  49 213 620 815 787 546 759 116 262 721 397 125  36 768
 709 795   5 226   4 696 743 790 198   8  62 172 805 829 821 667  37  65 748 784 778 273 849  48 128  39 251 481 672 832
 704  67  70 746 686 850 730 291 725  51 203  35 762 808  80 858 289 260 512 812 800 192 822  14 247  73 464  10 499 855
   6 270  64 284 718  72 827 799 813  11 853 839 868  17 195 874 166 177 825 796 528 717 722 107 817 145  20  71 758 156

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.72953e+06us (= 3729.53ms, 3.72953s)
Wall-clock time (full program): 3.7865e+06us (= 3786.5ms, 3.7865s)
Satisfaction error: 0
Number of search iterations: 2354
Number of local moves: 878 (including on plateau: 327)
Number of local minimum: 173 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 17657
Total number of local moves: 6926 (including on plateau: 2399)
Total number of local minimum: 1248 (including on plateau: 289)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  57 869 892 841 815 659  83  88 749 146 709  64 416 760  29 121 759 600 758 733 638 770  67 516 746  99  63 160 276  32
 796 793  24 195 880 644 625  60  25 174 822  92  94 897  46 604 658 225 848 816 509 656 104  80 740 684 553 218 539 114
  86 182 888 101 878 727 158  38 183 113 710 745 562 700 123 296 703  37 664 766 685 707 119  79 252 898 143 900 206 866
 593 111 145 844 859 738 142  75 245 886 852 891 204 208  54 162 754  66 884 801 846 783 170  90 701  70 885  89 155 212
 519  97 211 164 774 804 265 156 237 877 889  48 184 280  96 722 896 139 806 734 573 834 323 520 842 871 207 226  62 159
 530 724 190 187 367 881 244 202 213 802 814 412 261 141 161 729 587 348 672 856 246 753 631 857 876  59  91 254 228 199
 714 177 130 674 110 789 882 309  43 185 853 893 281 775 887 330 617  81 255 499 614 230 565 832 678 176 247 117 214 358
 849 239 344 294 147 788 288 874   2 663 673 333 875 165 137 169 845 748 592 826 476 799 259 837 441 125 188 260 135 144
 655 287 345 248 809 328 262 298 798 191 704 189 779 203 353 843 824 354 807 549 229 883 371 209 894 374 148 304  98 179
 780 808 342 231 308 567 112 610 205 895 363 279 295 319 157 830 332 713 411 720 899 464 403 496 651 258 364 149 297 257
 819 198 100 134 318 380 167 268 307 140 687 271 240 349 501 864 682 637 771 828 863 378 335 890 868 314 393 405 215 193
 821 233 407 377 175 320 386 350 347 409 566 835 870 465 431 306 415 324 286 489 851 648 369 650 290 241 454 325 622 253
 732 322 557 385 216 585 468 300 321 273 413 266 544 603 507 737 488 762 194 568 574 397 528 401 498 426 283 494 223 450
 432 422 375 424 352 522 192 467 590 360 500 521 569 387 443 470 423 355 419 547 341 563 561 719 376 399 526 497 437 326
 299 513 552 427 201 525 458 635 402 541 434 523 311 267 512 445 451 624 481 705 408 483 484 269 486 543 417 428 357 334
 492 456 418 628 301 317 394 453 338 414 439 278 275 564 448 671 605 482 460 351 455 251 647 570 640 395 366 537 392 478
 425 391 487 398 343 461 471 459 584 613 514 623 558 475 339 462 546 429 548 293 315 370  84 524 249 683 421 449 420 581
 236 474 444 542 503 591 572 545 716  31 479 649 446 384 485 607 510  71 491 390 200 632 118 554 381 457 331 518 599 559
 173 463 372 388 452 533 495 711 447 630  65 480  76 556 438 601 577 645  69 316 166 627 757 327 227 346 670 529 636 743
 379 571 511 404 598 493 506 602 588 619  15 517 536 365 466 721 531 681 270 219 626 726  21  78 217 515 594 400 595 151
 103 641 469 596 527 490 800 589 551  93 505 702 612 606 629 472 136 699 477 235   8 440 534 152  16 550 686 578  22 597
 138 712 657 582 634 274 621 473 168 696  53 715 433 620 508 105  41 389 706 178  68  82 608 256 633 580 504 575 817 689
 302 755 731 540 667 122 586 406 785 224 340 680  77 560 579 688  27  61  45 232 263   4 382 717 291 611 747 679 831 583
 362 618 739 615 609 368  52 763 660 653 277  36  35 768 697  34 126 791 128  30 129 127 336 292 532 761 752 646 725 854
  47  14 730 777 723  23 767 616 756 654 250  26 750 693 736 186  49 691  39  85  51 210 669  28 154 675 858 735 805 718
 305 538 661 109 102 180 698 642 242 652  58 502 836 744 741 108 373  87 690 221 787 150 668 220  42  33 676 773 839 838
 410 329 694   3   7  44 872 677 803 778 243 131 823 436 708 172  20 794 303  13 666  11 813 238 313 812  19 639 865 879
 643 576 312 795   5 106 284 827 764 107  40 751 310  50 742 222 163 430 359 234 396 115 860 769 356 692 833  73 861 840
 383 337  12 792   6 132 847 825 662 695 153 781 535  55 765 782 181 810  72 264 361 289 862 790   9  18 285 786 171 855
 435 665 776 820 829 124 818 197 784   1  95 282 728 120 797  56 196 442  10  17 272 133 867 555 116 850 811 772 873  74

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.25969e+06us (= 2259.69ms, 2.25969s)
Wall-clock time (full program): 2.31641e+06us (= 2316.41ms, 2.31641s)
Satisfaction error: 0
Number of search iterations: 1125
Number of local moves: 678 (including on plateau: 223)
Number of local minimum: 68 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7977
Total number of local moves: 5584 (including on plateau: 1592)
Total number of local minimum: 340 (including on plateau: 190)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 889  37 766 112  26  66 873  93 888 707 156 818 709   7 697 704  69 192 856  77 689 841 654 726  70 208 879  72 585  49
 874  29 217 168  47  75 826 118 836 767 515 850 578 542 238 831 136 117 702 141 678 814  84 876  82 145 897  39 418 875
 213 110 102 892  86 182 872  50 894 233 224 740 849 880 394 835 164 199  56 828 748 754  68 266  52  67 895 144 896 822
 805  79  92 900 147 191 725  74 898 641  80 115 747  81 851 867 163  99 611  48 839 647 193 869 185 274 899 121 676 598
 795 225  98 122 865 204 608 634 759 426 108 827 837 239 582 769 243 125 104  91 781 657 161 854 170 378 227 262 534 830
 813 142 245 848 166 176 639 616 439 412 246 724 859 743 209 846 157 202  60 105 810 683 158 785 890 205 128 357 235 617
 793 526 212 130 885 248 882 369 632 471 223 393 343 422 596 757 139 175 206 768 251 646 151 258 181 881 219 207 815 736
 282 286 347 179 279 124 660 884 817 797 288 715 131 569 669 221 222 287 845 893 665 703 870 254 252 392 250 189 132 313
 226 552 362 887 180 231 752 718 529 807 283 843 253 800 763 853 159 126 259 366 373 436 303 716 138 162 409 329 377 323
 331 670 240 886 350 229 720 171 404 883 339 760 297 399 864 755 417 215 491 328 792 636 391 570 196 173 123 354 275 256
 484 322 332 465 739 420 415 242 602 351 326 762 388 280 751 321 257 232 307 770 291 450 316 588 692 298 186 479 798 651
 244 686 310 380 263 483 553 691 745 464 434 211 519 336 340 318 149 488 844 861 301 738 320 454 406 289 327 255 407 699
 230 365 278 429 228 459 642 765 656 364 309 722 446 384 382 341 461 866 419 218 395 595 408 456 523 290 427 487 504 466
 317 730 295 443 576 448 463 335 510 305 536 574 371 405 361 451 499 486 356 333 264 505 383 410 858 387 495 425 527 467
 549 802 345 302 272 481 509 334 372 433 363 261 468 511 568 370 462 359 265 496 312 528 562 550 452 424 430 554 580 601
 543 517 368 360 507 532 352 444 590 308 476 500 389 346 458 386 584 622 353 413 355 489  20 537 506 482 575 442 474 587
 645 447 325 470  10 385 397 667 306 514 411 541 557 338 475 490 453 342 441 521 626 401 349 531 503 234 522 502 545 567
 344 638 277 600 445 592 431 270 269 480 460  71  33 177 538 594 518 524 610 609 379 348 437 520 555 618 494 493 693 498
 375 172 508  62 546 682 281 169 477 591 677   5 674 565 155 540 563 512 561 548 478 403 432 127 658 497 367 708 603 579
 438 559 583 733 621 455 304 284 195 539  46 572 764  97  38 457 690 604 449 390 650 174 672 485 556 440  36 629 620 435
 623 271 717  15 643 615 324 200 249  28 649 501 473 547 577  57 633 619 472 688 201 398 784  73 628 530 744 666   4 586
 631  53 625  43 659 421 260 330  41 116 753 644 573 728 160   6 824 637 597 825  22 143 891  58 749 605 607 589 796 129
 513 680 516 525 695 566 119 791  95 593 721 285 178 581 267 337 719 533 823 103 599 236   1 492 698 558 612 428  31 220
 109 311 855 773 734 673  13 469 190 400 613 137 560  19 113 551 681 664  30 804  12 276 834 635 732 776 564 790   9 188
 687 535 640 713 662 679  63 571 111  64 710  25 630 723 423  44 663 774 183  14 711 106 684 133 194 771 735 655 414 198
 167 624 746 799 381 806 165 653 544 700 714 402  11 273  55  34 675 808 727 729 134 376 786 148 812  87  78 816  18 247
  96 731 777 706 782 783 187 712 268 153 878 146 614 293 292 314 606 374 294  32 203  16 852 696 833 811 197  90 627 152
 358 758 648 214 847 775 396 241  51 100 237 210 120 741 296  17 737 671 750 694 107  24 862 300 801 871  89 819 779   2
 114 838 832  40  45 778  23 840  83 652 877  21  85 701 661 299 685 860 809 154 761  76 705  94  42 868 789 772   8   3
  27 820 857 319 829 756  61 780  65 216 863 140  59 788 742 150 787 803  35 668  88 416 184  54 101 794 315 842 135 821

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.10775e+06us (= 3107.75ms, 3.10775s)
Wall-clock time (full program): 3.1636e+06us (= 3163.6ms, 3.1636s)
Satisfaction error: 0
Number of search iterations: 1787
Number of local moves: 866 (including on plateau: 410)
Number of local minimum: 153 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13303
Total number of local moves: 6730 (including on plateau: 2437)
Total number of local minimum: 892 (including on plateau: 276)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 191 833  59   7 814   2  23 858 872 514  81 255 201 114  38 831 816 293 823 593 797 840   3 207 796 747 880 147  16 864
 233 871 116 312 729 424 318 847 782 258  50 232 102 805 338 859 562 813 150 851 316 214  48 820 765 677 707  51 199  66
 231 834  70 129  79 274 100 145 188 771  57 128 144 843 256 866 665 861 822 693 868 768 212 681 208 817 815  74 735 181
  94 809 306 857 710  13 225  11 763 574 171  67  32 658 275 755 845 260 881 269 770 793 227 738 696 717   5  39 692 263
 143 873   1 798  33 163 137 671 862 267  21  37   4 764  20 745 752 435 723 720 777 300  97 395 794 663 788 730 675 127
 605 807 226 148 759  55 617 779 784 458   9  26  52  61  35 772 326 106 700 736 734 499 521  24 528 769 856 695 753  75
 699 588 327  46 626 152 164 716 679 649 248 224 136 713 142 775 773 156 721 624 559  10  83  17 774 785 568 803 705  53
 762 668  25 651 629 162   8  84 702 319 643  78 278 585 270 530 610 600 537 647 678 149  34 648 174 767 580 622 608 467
  65 688  68 667 719 170   6 557 741 213 572 250 684 552  92 547 507 173 669 653 633 284 175 264 795 829 607 596 561 178
  54 683 179 542 273 209 390 620 709  73 644 473 595 578 160 601 711 193 733 652 112 141 219 750 575 589 569 787 641  60
 131 551 611 666 329 393 308 616 594 469 151 323 606  15 198 687 625  90 613 534 325 672 509 110 570 645 500 515 691 468
 541 503 674 603 597 321 120 577 432 159 598 261 609 602 438 612 520 115 139 543 619 553 604 183 532 573 363 538  22 564
 554 496 631 599 419 243 223 581 590 328 296 229 442 583 563 371 592 215 493 526 402 483 539 398 410 506 635 350 431 387
 428 531 475 464 548 220 421 279 443 399 591 440 560 540 511 518  29 247 502 513 533 484 614 497 478 476 536 459 299 480
 444 465 567 320 357 388 416 242 455 494 451 346 397 501 461 504 487 634 413 324 508 372 479 555 457 621 441 408 489 519
 403 456 495 491 394 566 628 510 454 376 486 522 436 449 462 492 477 266 549 360 488 313 353 505 618 450 334 422 297 463
 426 389 349 415 366 474 512 365 529 737 517 335 373 472 420 437 790 362 485 340 354 471 356 434 418 400 322 877 378 412
 885 364 295 525 417 576 448 379 370 627 482 331 446 405 330 433 447 452 556 265 706 439 659 377 423 470 383 298 246 481
 336 307 427 351 374 828 656 240 385 430 407 890 429 466 391 401 286 776 347 190 900 445 344 406 409 343 200 498 414 639
 367 281 751 490 268 837 743 384 283 516 756 545 333 425 386 241 382 824 291 826 287 355 332 812 303 251 345 282 280 339
 760 352 657 676 892 728 587 257  93 650 404 732 375 259 853 153 252 848 289 348 342 453 337 818 130 211 204 276 238 341
 392 302 744 221 571 726 722 368 896 757 235 661 381 277 855 138 218 623 361 535 272 742 290 288 314 271 239 202 254 660
 783 134 189 172 262 630 686 884 228 704 527 689 740 184 664 133 292 854 396 294 315 703 825 799 180 217 185 157 380 309
 819  89 708 359 222 685 411 638 311 655 168 582 724 126 841 205 304 524 586 836 161 844 792 358  43  58 305 154 177 830
 236 140 565 186 245 584 895 811  80 754 865 835 234 182 715 253 244 727 125 167 158 237 654 544 893 230 119 210 888 739
 662 165 698  98 891 718 712 109  40 169 780 821 800 249 758 166 301 697  63  12 640 579 897 310 899  96 206 146  85 748
 808  95 682 802  49 642 889  91  41 194 869 875 874 849 673 317 124 550 117 187 107 761 894 197  86 132 103 839  31 637
 636  30 887 196 778 876 694 111  71 801 863 810 806 108 832  27  36 176 285  87  18 216 838 615 155  56  69 827 886 725
 632  88 850 878 121 786 690 105  62  99 731 804 852 781 789 118 460 523 104  77  72 203 879  19  47 135 860 646 546 558
 195 123 883 846  44 670 766 680  76 101 842 714 870 369 749  28  82 122  42 113  64 192 701 746  45  14 791 867 898 882

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.29382e+06us (= 2293.82ms, 2.29382s)
Wall-clock time (full program): 2.35019e+06us (= 2350.19ms, 2.35019s)
Satisfaction error: 0
Number of search iterations: 1086
Number of local moves: 644 (including on plateau: 233)
Number of local minimum: 59 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8512
Total number of local moves: 5503 (including on plateau: 1598)
Total number of local minimum: 429 (including on plateau: 217)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  58 862 132  63 825 781 143 659  98 793 223 322 176   2 768 832 844 865  91 868  53 434  37 137  41 856 107 810 822 813
 738 350 767 449 109 698  50 248 776 275 125 185  60 511 815 719 197 811 113 786  28 271 775  54  35 249 814 792 881 834
 761  39 528  19 773 106 765 238 784 303 345 774 254 356 724 837 262 826  33 780  83 298 506 266   9 268 718 387 713 760
  86 332 790 751 707 564   5 220 788  97 274  40  89 258 664 800 175 840 328 716   7  71 836 309  11 824 803 721 820 589
  90 211 816 311  10 643 763 685 389 121   8  14 173 677 690 818 307 517  92 641   1 174 799 735  85 794 717 710 771 753
 399 301 691 261 614  18 744   3 817  20 684 276   4 729 642 609 207 766 184 692 110  64 562 694 212 701 306 779 635 791
 762 264 675 194 673 732  96  22 706 401 667 796 604 529 612 607 583 600  69 217 344  16 723 187 674 286  76 101 725 574
 720 177 756  48 750 118 672  15 630 299 618 623 638 166 549 669 144 590 126 632 655  21  81 696 709 379  31 722 678 603
 324 272 777 221 704 755 695  55 352 411  12 625  75 188 619 645 358 626 208 663 595 145 665  46 778 699  77 629 681 615
 426 163 530 242 568 693 598 269 104  30 485 566 548 122 469 646  94 797 546 610 142 196 679 586 666 230 700 611 640 559
 472  79 572 578 661 584 433 509 234 138   6 606 613 479 504 697 503 471 533 736 524 547 468 726  26 133 169 567 448 499
 588 182 621  87 544 491 668 510  36 200 422 538  99  47 493 596 582 310 522 712 652 475 563 575 450 550 455 577 436 534
 210 270 526 444 591 551 477 497 147 313 576 644 492 115 622 602 500 347 518 384 560 364 508 593 594 281 513 398 476 402
 164 520 456 501 464 425 454 457 430 502 571 521 585 505 580 412 647 283  29 470 601 465 627 495 410  25 581 512 435 388
 539 403 554 423 463 617 300 419 486 537 482 453 290 439 597  13 417 341 599 592 442 339 628 414 555 519 354 427 294 579
 478 395 353 488 424 317 380 461 542 390 409 391 331 569 416 467 385 561 541 363 437 487 884 462 323 757 415 342 429 318
 540 498 418 527 393 565 553 404 460 671 392 489 441 351 516 573 375 514 305 408 340 349 447 413 359 371 440 361 558 484
 407 730 382 636 343 302 507 288 895 739 378 337 494 203 686 373 727 406 355 259 445 297 367 438 316 734 446 240 319 466
 657 859 285 639 490 432 360 405 420 789 804 218 458 653 334 451 833 376 556 481 346 330 198 245 291 362 257 431 251 304
 892 557 872 263 204 192 292 327 808 326 443 273 428 314 377 473 282 711 155 863 338 849 348 325 244 759 368 452 394 386
 483 742 372 648 867 312 374 741 480 315 801 365 239 854 277  72 201 459 688 186 633 843 243 237 687 335 400 279 214 168
 848 552 206 783 321 199 320 295 838 743 852 308 703 752 370 381 829 250 651 241 153 754 278 252 383 605 191 148  80 229
 103 631 193 806 357 253 280 887 496 827 715 369 798 885  56 189 650 265 620 289 178 587 860 216 293 231 889 180 157 255
 105 525  95 846 127 205 805 670 396 702 802 329 845 536 154 213 689 161 880 225 897 737 116 855 256 545 267 130 246 156
 898 535 235 634 179 366 227 809 515 649 215 866 236 858 171 226 260 222 662 202 608 616  45 740 890 769 474 124 167 117
 532 682 170 819 296  67 150 807 624 857 160 123 758 232 149 195 531 146 785 136 873 839 151 233 861 891 748 336 140 224
 190 851 158 900  93 165 129 284 141 731 172 879 708 899 287 108 896 219 772 134 883 821 894 733 782 139  84 135 209 119
 120 680 421 228  44 683 658 871  24 543 728 878 842 333  66  73 764  42 876 152 882 654  65 877 888 100 676  38 181 128
 893  23  52 523 853 886 770 714  17  88 749  70 787 875 247  57 114  62 850  34 870 812 111 102 823  49 570 831 656  27
  32 830 112 183  68 795 847 746  82 705 397 637 747  78  61 162 159 131 828  43 835 660  51 874 864  74 869 745  59 841

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.02665e+06us (= 3026.65ms, 3.02665s)
Wall-clock time (full program): 3.08392e+06us (= 3083.92ms, 3.08392s)
Satisfaction error: 0
Number of search iterations: 1646
Number of local moves: 740 (including on plateau: 300)
Number of local minimum: 117 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13448
Total number of local moves: 6441 (including on plateau: 2369)
Total number of local minimum: 918 (including on plateau: 280)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 892 768 893 798 171 141 760  30 776  47 859 834 147  41  63 140 154 108 731 609  98  33  43 196 762 839 746 854 109 873
 871 114 160 662 868 763 124 191 104 130 894 389 169  32  37 168 149 122 759  49 764 676 244 167 890 778 622 874 863 882
 221 115 895 832 208 597 853 772 142  85 835 166 809 151  74 148 209 110 805  75 229 717 157 838 898 660 822 206  80 806
 685 690 138 896 103 521 848 192 180 178 861  83 189 119 263 230 146  73 872 159  84 812 226 794 754 741 879 885 190 724
 586 623 139 736 897 656 747  76 279 237 818 470 608 242 293 177 217 132 721 202  66 797 618 671 648 107 849 128 300 475
 699 851  82 875 260 501 243 285  86 385 888 287 677 234 301 185 143 235 850  52 865 670 102 213 487 564 281 847 827 540
 276 845  78 672 211 134 886 268 271 272 701 780 755  48 327 254 232 261 294 292 136 594 325 876 580 601 783 406 723 634
 541 288 126 561 856 326 352 418  67 313 558 659 182  69 346 295 246 266 899  71 248 210 804 595 842 786 761 884 158 788
 549 889 224 734 524 250 174 262 215 176 718 649 862 473  70 116 150 251 238 308 412 846 343 183 855 636 520 303 869 716
 635 330 216 708 387 373 249 240 220 900 345 703 829 364 241 372 887 350 392 181 137 643 223 275 621 837 629 203 714 311
 883 309 258 490  88 347 310 891 135 259 414 817 681 164 478 375 306 197 253  53 381 821 247 825 565 765 748 316 329 810
 563 679 459 408 807 509 519 318 445 315 581 434 362 359 380 376 265 374 340 336 432 877 390 431 567 239 321 415 517 497
 255 280 404 686 269 820 599 388 417 227 562 813 858 410 187 348 411 371 423 476 403 370 446 317 632 396 382 302 712 351
 495 332 482 719 505 440 355 361 323 304 338 399 694 576 297 331 866 457 283 333 256 367 447 492 547 522 369 439 688 498
 638 397 320 430 225 481 441 559 570 529 349 588 453 452  14 510 480 573 569 637 591 467 458 442 542 357 511 368 366 198
 291 471 286 438 507 383 322 394 393 494 574 550 391 405 365 557 450 437 451 506 585 436 516 508 363 548 500 499 460 435
 298 398 515 339 400 484 448 463 454 483 443  90 474 624 537 422 386 663 378 472 560 640 379 593 278 528 426 384 465 491
 106 661 546 289 444 503 531 771 596 449 170 194 429 607 525 589 462 466 433 424 354 513 468 314 360 566 592 571 105 477
 555  72 615 118 228 527 578 342 504 464 535  16 512 668 678 696 583 419   5 532 324 407 603 610 335 604 455 421 653 456
 579 523 425 245 709  22  10 698 489 711 162  34  19 553 641 652 584 644 752 833 461 606 485 651 356 129 427 669 319 127
  99 605 657 290 533 667 496 617 769 486 645 575 120 619 673 630 401 674 680 554  36  27 539 538 222  96 270 416 307 274
 200 536 479 409 534  31 684 730  28 800 552 165 155 545 598 733 756 753  61 737 790 631 664  59 252 172  93 627 646  95
 184 113 816 551 628  87   3   1 614 612 121 218 556 793 710 732 655 572 639 840 727 518  15 689 214 568 179 824 219 117
 493 742 692   8 600 738 785 725 488 683 161 111  97 620 814 693 687 775 205 828 715  17 647 131 207 163  65 193 199 233
  81  55 625 188 582 750 611 469 751 633 175 402 502 602 577 770 757 626 728 781 530  18 704 413  20 201 305  94 420 145
 587 682 675 125 344  64  29 707 836 791  92 231  77 745 743 613 428 867  24 749 282 337 811 658 112 705 273 100 616 212
 395 377  39   6  57  91 590 830 857 815  54 831 642 799 881 650 766 801  26 823 654 101 264  50 257  21  13 341 787 697
 312  58 773  46  42 758 713 779 795 782  45 328 334 691 792 878 277 514  62 739 700 299 720 706 173 156 543  68  79 353
 544 526 702 133 744 777 204  12 870 152  56 880 267 844 808  11 740 729 358 826 852  25 767 236 153  35 144  89 735 296
   2 186 796 123 784 774  51 726 841 803   9 819 665 666 802 864 722 695 284  38 843  40 860  44  23 195   7 789  60   4

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.0858e+06us (= 2085.8ms, 2.0858s)
Wall-clock time (full program): 2.1427e+06us (= 2142.7ms, 2.1427s)
Satisfaction error: 0
Number of search iterations: 954
Number of local moves: 700 (including on plateau: 211)
Number of local minimum: 28 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6356
Total number of local moves: 5274 (including on plateau: 1223)
Total number of local minimum: 182 (including on plateau: 157)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 470  35 160 840  25  40 798  96 689  38 829 846 886 322 733  41 854 324 827 802 116 800 131 754 209  73  15 115 879 768
   1 531   8 830   4 706 318 109 747 166  89  51 781 273 826 801 769 267 839 851 378 881 264 762 841 350 188 133   5 746
 857  32  64 101  53 184 856 814 245  12 771 849 872 698 782 723 725 687 843 135 246 772 196 154 776  69  68  10 748 173
 861 119 822   3 644 727 845  30 737 155 759 783  78 653 599 541 774 167 799 807 122 878 204 758 213 161   6 194  16  60
 750  13 852 700 163 694 571  29 640 266  18 820 721 117  75 712 546  98 785 249   2 767  54 736 675  11 732 290 791 638
 862 180 632  14 684  66 796 156 751 130  24 784 313 281 765 677 569 230 836 760 342 703 405 722  72 302 112 176 873 298
 715  63 713 383 636 127  22 557 555 649 251 623 778 581 717 591 773 172 792 600 467 833 149 106 471 254  59  67 573 238
 308 111 631 589 718 516 585 370 663 153 309 620 277  28 665 590 605  70 745 811  31 518   9 739 674 199 680 171 611 519
 604 459 716 602 162 558 200 349 385 265 637 486 268 626 629 681 740 233 832 524 587  37 113 556 165 216 657  62 500 666
 645 612 766 368 567 641 523 151 551  83 661 616 110  48 443 420 812 186 392 464  55 536 566 592 284 397 678 128 617 603
 618 540 601 697 503 552 672 259 547 197 502 549  81 476 668 580 472 185 630 296  56 679  85 606 340  43 445 444 598 594
  26 183 520 457 507 656 539 100 696 530 537 499 247 495 572 533 501 208 505 646 294 582 627 545 452 509 272 240 575 462
 137 543 610 512 588 560 730 215 493 548 492 508 159 359 639 477 635 253 619 436 388 506 497 527  88 398 466 201 468 463
 583 461 542 406 515 423 528 458 586 326 613 484 390 553 449 411 633 460 410 334 429 485 465 414 513 339 469  23 362 451
 576 416 474 389 432 806 562 346 488 376 283 428 434 593 424 473 319 564 490 561 475 361 439 317 425 622 418 435 275 314
 608 514 329 529 510 550   7 538 344 364 596 525 367 437 568 570 624 402 489 544 403 521 341 526 480 517 387 301 381 243
 354 417 269 382 372 430 442 615 511 522 419 454 401 380 408 625 374 358 345 384 453 487 395 355 885 400 394 819 479 386
 813 352 491 504 391 844 481 498 409 353 295 379 642 399 393 494 300 316 365 292 478 333 671 305 356 311 447 871 336 396
 323 752 455 315 347 456 375 496 304 325 709 413 366 415 331 214 874 554 448 335 858 412 327 377 848 330 348 691 228 289
 261 351 306 369 337 287 299 597 789 842 888 256 288 271 407 174 237 790 250 859 574 532 664 218 258 821 433 652 328 177
 702 662 332 260 226 310 280 707 483 421  94 793 422 285 297 179 189 761 170 225 559 150 870 187 729 650 446 634 669 823
 235 686 276 210 223 220 578 643 577 780 257 282 195 817 357 274 270 658  93 123 795 182 876 241 877 744 708 685 360 293
 440 693 262 221 227 134 236 825 320 809 178 286 651 860 192 140 193 565 121 307 777  44 654 373 853 595 804 720 279 756
 158 743 234 248 207 148 895 719 190 714  79 147 867 363 660 102 152 427 321 164 441 145 868 775 670 818 805 893 224 338
 534 724 136 129 753 788 738 438 244 673 695 191 676 103 291 222 175 667 139 181 794 232 770 343 371 704 124 683 169 828
  34 797 278 741 899 157 231 786  95 763 866 198 692 728  20 168  21 863 212 144 628 217 563 255 450 890 816 815 138  50
  86 735 105 897 206 803  74 731 229 682 211  91 757 699  99  82  84 482  80 898 579  90 659 202 312 835 882 837 205 883
  46 701 889 834 900 132 104 535  33 808 726  92 431 864  19 242 107 850  57  76 847  77 252 705 114 621 810 614 887 142
  17 303 263 865 824 125 203 764 143 855 118 404 126 755 426 884  47 838  42  52 607 647 690 219  49 648 749 869 896  87
 891 787 779 120 892 875  27 584  71 710 609  58 239  36  61 894 141 880  39 655 734 108 711 146  65 688  97 742  45 831

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.4236e+06us (= 2423.6ms, 2.4236s)
Wall-clock time (full program): 2.47797e+06us (= 2477.97ms, 2.47797s)
Satisfaction error: 0
Number of search iterations: 1221
Number of local moves: 750 (including on plateau: 250)
Number of local minimum: 53 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8759
Total number of local moves: 5925 (including on plateau: 1705)
Total number of local minimum: 386 (including on plateau: 192)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  26 624 866  93 837   5 192 115 766 789 337 133  83 808 801 872 849 672 848  25 811 371 276 285 863 196  24 864  63  21
 136 152 693 119 254  87   8 120 293 809 794 724 851 812 836 835 702 796 814 153 201 169 765  61 177 274   3 846 317 714
 363 852 180 414 800 845  22 155  53 795 815 760 833 376 114 745 108 314 708 179 834 182 135 830 777 359   4 101 746 116
  69 351 185 576 779   1 713  78  23 649 822 740 242 732 394 810 704 487 682  14  18 163 703 719 823 145   9 771 797 316
 140 306 138 112  20 662 668  32 156 737 841 747 398 640 825 755 102 299 769 622 615  44 326 783 684  17  12 839 862 364
  98 307 653 799  13  72 355  70 103 523 853 758 429 831 785 791 280 528 162  11 634  36 793 701 775 159 199 820 681 296
 220 343 203  90  29 861 711  66 396 696 712 774 129 776 854 555 151 715 700 423 230 248 784  10 629 288 117 670 768 367
 131 154 654 631 687 749 638 210 166 558 757 603 514 626 656 461 100 651  88 204 639  55   2 754 731  65 647 716 600  68
  49 560  41 710 669 635 717 729  19 753 585 637  33 440 756 582 125  57 146 643 592 427 676 512 692 142 621  74 718 175
 588 589  46  80 495 728 509 504 150 623 636 686 321 542 473 617 677 674 186 161  77   7 699 599 443 149 529 618 574 535
 734 243 645  50 485 678 612 412 165 426 454 593 268 565 842 736 406 104 521 234  85 516 587 500 607 160 619  16 778 474
 652 211 577 673  15 553 546 620 235 526 379  76 176 451 493 431  64 602  43 488 401 517 608 571 632 445 644 628 697 561
 449 225 475 660 567 679 540 590 347 362 482 472  51 570 508 597 501 393 198 591 537 380 372 322 551 369 447  60 614 606
 432 580 569 452 468 562 413 170 422 552 510  67 464 402 575 467 557 698 463 520 532 418 505 471 601  42 384  62 578 579
 613 554 518 605 531   6 534 563 547 436 408 498 435 497 335 459 386 342 448 541 460 349 491 302 227 496 566 360 483 525
 506 375 346 374 594 543 333 484 403 489 370 507 494 469 550 409 442 503 455 292 544 421 478 437 385 444 391 457 404 616
 439 683 339 263 399 874 387 294 287 205 465 313 772 847 341 358 722 726 527 470 297 477 428 291 410 434 480 405 279 303
 727 827 378 415 200 361 430 338 300 538 350 499 383 328 270 344 453 586 707 655 357 458 390 290 476 884 568 365 218 420
 324 741 340 389 511 256 250 450 709 249 269 899 840 424 212 236 438 770 739 397 286 479 304 329 310 536 139 416 400 873
 407 685 308 255 425 282 298 348 549 356 900 519 381 388 581 441 395 377 229 648 462 625 481 246 419 751 856 217 433 253
 762 738 221 366 247 239 301 742 786 309 241 331 690 572 417 382 373 244 311 490 787 748 208 761 271 773 273 289 232 411
 305 564 826 857 611 267 132 277 892 265 266 240 609 187  96 157 782 802 334 354 573 821 252 318 172 667 583 336 295 675
 893 680 792 215 228 130 320 886 524 226 278 262 610 224 352 237 720 193 486 657 330 817 896 353 368 858 327 213  95 345
 283  56 238 807 844 259 257 819 627 122 126 875 688  92  91  97 513 178 392 764 191 816 890 859 134 869 167 522 214 725
 813 730 803 596 195 492 894 743 870 173 260 189 694 118 110 158 319 143 312 323 190 721 207 332 882 790 665 456 128 209
 867  71 733 584 885 141  82 723 630 171 109 121 735 174 181  73 888 223 197 663 650 832  99 691  58 245 889 895 272 633
 818 275 219 887 202 164 850 804 843 123 251 107 598 184 106  52 261 695 824 878 105 539  38 881 264 689 838 315  59 646
 258 127 144 168 545 860 897 763 706 148  84 222 188  94 880 781 767  27 530 705 898 661 111  48  45 806 871 216 137 828
 548 877 556 671  89 641 759 744 750  31  75 124 325 113  47  37 284 183  54 658 664 559 805 231  79 595 855 502 879 780
 865  35 829 604 891 883 147 666 798 876  86  39 281 233  34  40 446 533 642 752 515 659 206  28  30 868 788 466 194  81

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.5506e+06us (= 2550.6ms, 2.5506s)
Wall-clock time (full program): 2.60461e+06us (= 2604.61ms, 2.60461s)
Satisfaction error: 0
Number of search iterations: 1293
Number of local moves: 712 (including on plateau: 220)
Number of local minimum: 78 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9870
Total number of local moves: 5695 (including on plateau: 1752)
Total number of local minimum: 553 (including on plateau: 213)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 617 771 850 832 192  19  58 157 869 767 263 175  11 228 704 823  77 496 780 326 273  18 337 807 732  51  30 585 837 830
 241  14 866 875  12 681 654 306 836 754 808 341  13  55 864 833 100  23  50 667 817 190 791  76 165 308 508  26 847 794
 112 737 448 877 113 206 218 265 399 768 769  10   2  35 816 815 789 855 145 643 756 312  46 859 824  94  37  17 803 745
 636 721 317  43 129  22  75  52 784 615 736  39 102 178 759 703 748 828 323 324 706 335 226 783 731 180 818 123 752 727
  33 413 755 819  45   1   3   9 728 707 282   7 861  24 204 676 115 686 127 373 795 186 634 826 788 467 646 766 730 809
 315 746 822 838 147  27  99 164 662 692 607   8 757 174 785 827 729 620  69 243 774 189  57 723  29  66  36 689 776 845
  40 352 699 685 143  15 272 261 684 702 691 152 696 697 594 526   5 683 230 556 763  42 528   6 644 110 642 701 663 733
  21 599 715 621 596 252 239  16 611 738 619 171 666 150 679 777 640 487  85 304 600 236  31 665 633 172 622 716 800  54
 653  92 705 530 527 211  25  20  28 595 117 566 554 248 749 694 688 578 224 348 674 128 601 782 670 443 641 690 647  87
 591 616 632 569 564 238 227 587 657 447 631 240 580 148 584 514 605 466 235 139  71  90 637 652 465 409 425 455 433 608
 579 269 289 550 560 225 173 149 555 545  41 432 568 163 503 664 557 614  56 512 669 437 419 520 598 400 597 660 625 586
 460 442 451  64 577 573 130 534 651 698 285 271 410 656 626 583 536 489   4  82 417  80 638 680 629 309 682 383 457 718
 406 394 524  38  63 531 344 507 509 567 435 474 372 462 588 649 581 454 523 563 551 408 624  59 350 402 612 559 562 404
 565 463 549 659 281 431 397 478  47 364 303 398 532 444 501 590 262 661 502 401 589 424 429 558 511 464 546 388 541 237
 428 492 440 603 553 485 416 498 472 403 519 525 343 539 544 316 533 378 504 469 387 336 420 610 393 327 441 461 484 196
 427 415 313 479 347 386 865 488 459 439 491 436 367 552 470 480 521 395 515 475 321 668 381 358 482 385 351 360 613 276
 311 494 835 333 384 370 678 374 414 623 453 391 490 320 407 259 297 561 450 449 497 760 772 392 456 159 396 349 368 473
 500 434 430 366 542 618 535 295 346 361 280 574 477 302 423 481 371 468 244 804 356 547 483 266 354 499 856 517 293 493
 328 797 421 307 369 593 458 359 216 412 214 895 390 382 380 376 438 277 742 790 377 538 899 310 250 604 300 422 296 375
 418 799 476 572 825 362 672 338 340 319 893 570 270 345 389 242 342 379 639 758 411 510 325 426 124 606 260 286 329 290
 722 267 120 339 305 687 537 846 215 513 135 576 322 888 287 257 249 357 848 862 878 751 213 355 201 635 330 223 283 314
 274 770 853 405 516 811 522 802 879 275 765 301 762 805 245 114 207 256 231 122 268 709 365 255 185 806 294 299 200 219
 844 264  78 199 720 648 609 886 195 331 253 630 246 675 209 233 318 162 764 810 155 872 655 363 353 714 188 814 221 106
 773 210  86 179 792 292 471 717 258 278 229 628 193 884 284  96 821 197 898 787 232 495 900 894 298 887 137  91 176 332
 181 334 138 184 254 881 851 726 170 111 506 842 288 873 153 279 867 134 708 781 187 741 735 208 890 734 291 154 132 182
 796 775 169 166 719 868 575 889 220 217 747 645 205 582 118 247 222 896 695  98 167 505  88 160 677 870 798  83 202 116
 713  53 107 486 843 820 829 693 125  68 518 857 885 543 191 119 168  81 740 101 602 761 786  74 131 831 892 103 183 212
 151  49 144 743 724 852 840 812 133  32 203 700 445 712 198  97 750 891 801 446  73 673 251  70 126 146 744 841 158 710
 753  62 194  93 813 571 863 548 177  95 650 882 874 658 105 141 858  34 529 140  65 849 136 711  48 897 234 883  60 592
 627 671  89  61 860 839 880 739 876  79  72 779 834 793 156 104 121 109 854 142  84 725 108  67 778 540 161 871  44 452

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.18078e+06us (= 2180.78ms, 2.18078s)
Wall-clock time (full program): 2.23434e+06us (= 2234.34ms, 2.23434s)
Satisfaction error: 0
Number of search iterations: 983
Number of local moves: 752 (including on plateau: 186)
Number of local minimum: 26 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7241
Total number of local moves: 5588 (including on plateau: 1421)
Total number of local minimum: 231 (including on plateau: 164)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  94  42 696 590 842 187 280 242  76 196 856  77  62 827 886 269  37 357 814 234 496 123 804 887  24 671 876 762 440 768
 767 669 628 793  83 103  90 145 325 861  59 406 132 798 225 735  75 882 642 473 252  92 338 892 348 284 209 875 438 896
 832 150 891 169 883 100  39 776  98 140  52 553 450 894 374 739 380  82 786 732 335 414 619 665 114 680 879 344 101 244
 168 291 764 318 713  73 151 389 134  33  61 759 840 854 201 682 226 310 715 727 413  50 850 765 839 206 801 238 439 505
 135 158 838 866 829  86  84 183 218  80 803  97 724 260 584 636  85  89 855 615 365 781 189 749 870  28 485 867 316 640
 518 205 761 172 128 846 613 834 397 315 595 175  56 220 194 703 155 180 591 796 835  41 156 818 851 215 214 877 164 890
 133 243 775 754  72 627 858 710 810 197 223 143 110 722 860 274 152 216 160 744 720  44 837 561 224 845 299 571 112 519
  16 264 398 195 107 568 261 755 287 714 685 859 137 302 138 332  63  23 848 800 681 247 868 783 322 873 250 769 149 821
 217 675 811 213 340 245 402 864 819 127 222 893 319 236 154 609 326 116 493 742 593 863 203 331 847 221 487 306 230 611
 301 182 663 305 403 774 476 342 255 585 526 248 193 294 471 885 298 313 362 705 852 212 279 605 825 231 267 533 474 656
 237 117 760 108 292 470 528 283 200 624 240 386 692 219 208 900 895 210 308 878 817 268 278 617 841 780 254  87 198 820
 256 874 552 259 805 401 418 686 262  25 295 488 343 281 421 729  21 871 857 428 454 296 190 235 653 390 387 660 370 608
 547 136 490 678 512 317 419 480 509 353 263 368 621 412 391 448 373 790 599 411 708 311 290 104 501 872 422 392 364 434
 535 447 102 836 333 495 813 404 367 743 416 396 725 410   5  67 570 569 361 865 355 420  69 286 830 375 437 272 559 453
 472 514 383 314 359 534 475 497 530 111 670 121 831 884 511  40 465 388 504 178 560 546 549 346 525 360 543 405 548 352
 339 409 347 498 379 307 423 407 199 463 797 541 483 539 573 631 520  91 381 616 334 304 770 478 479 417 461 657 372 300
 351 458 432 748 494 604 192 515 430 345   4 469 565  17 503 327 579 558 516 358 650 456 554 622 610 550 477 444 366 321
 730 544 161 506 538 124 620 323 529 555 468 651 257 575 270 445 425 377 341 577 580 666 612 500 159 455 394  34 523 576
 464 634 564 297 654 163 426 507 171 567 489 109 508 588 113 188 431 452 320 288 589 888 824 499  96 513 556 601 758 258
 415  29 249 408 482 424 460 118 600 869 466 712 510 750 542 170 706 572 566   1 120 700 536 630  45 376 602 435 586 436
 462 777 139 647 521 207 540 399 532  38 563 583 144 562 688  65 718   3 719 228 467 551 587 282 239 606 702 638 427 481
 779 645 369 517 451 449 524 522 126 789 527 122 106 597 629 147 618 664 446  11  99  20 679 337 637 502 785 641 531 246
 598 756 457 736 632 596 557   2 711 607 689 677 745 751 701 285 578 690  30 202 186 676  18  78  27  26 177 582 694  51
 691 674  64 658 683 738 687 649 648 429 662  31 672 635 659 266 623 723 661 336 167 574 227 289 185  68  10   8 625 173
 603 807 142 581 667 799 697 646 537 443 592 165 791 644 766  49 673 747 146  14  70 740 251 393  35 441  55 153 753 115
 792 652 442 324 273 771 130  36 898 684 704 693 184  93 782 385 812 639 211 276 484 698 395 105 350 655  54 179 486 328
 833 794 125  66 716 795 752 491 897 728  43 741 733  48 371 787 809 695 119 545 309 232 303 166  71 141  58 844 174 129
 668 349  60 726 157 808  79 433 721 815  12 400 312   6  13 788 699 772  22 191 717 828 643 181 633 614 746   7 731 384
 233 204  74 176  19 131 784  15 899 802 707 763 492   9 459 881 849 843  47 382  32 880 356 265 709 363 806 253 853 229
 329 816 378  57 148 773 737 862 330 277 826 889 778  88 823  53 354 293  95 162 275 594 241  46 626 757 822  81 734 271

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.1858e+06us (= 5185.8ms, 5.1858s)
Wall-clock time (full program): 5.24029e+06us (= 5240.29ms, 5.24029s)
Satisfaction error: 0
Number of search iterations: 3492
Number of local moves: 1147 (including on plateau: 502)
Number of local minimum: 302 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 27162
Total number of local moves: 9377 (including on plateau: 3987)
Total number of local minimum: 2146 (including on plateau: 447)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 829 867 888 789 699 853  60  91  33  56  73 834 485  53 731  36 128 723  43  95  17  83 663  49 788 777 897 117 873 885
 878 869 868 695 151 800  88 470  46  63 177  84 138  86 746  48 490 662 844 191 134 119 863  57 768 725 896 111 626 822
 861 689 774 653 113 856 118 710 769  54 235 850  62 163 748  80 507 852 185 337 638 109 103  25 782 714 107 849 476  96
 570 137 683 838  75 398  93 568 142 112 593 835 609 890 123  99 595 703 126 139 193 865 894  77 487 795 831 292 647 106
 213 178 632 565 862 580 842 120 854 129  78 149 176 887 899 211  69 639 101 144 600 810 898 223 803 753  92 162 656 190
 594 210 736 264 133 891 154 812  76 159 563 214 132 194 858  79 688 817 143 248 783 173 233 866 784 715 790 161 824 221
 859 251 883 220 187 738 884 623 116 152 751 131 255 209 114 206 603 892 196 203 722 155 785 860 257 879 183 199 830 172
 524 228 893 192 347 694 284 798 167 186 823 313 610 168 837 238 661 872 287 256 269 286 466 505 236 889 181 253 825 227
 801 166 621 263 232 613 208 261 310 272 786 252 320 277 848 243 882 855  87 765 258 839 735 620 298 299 295 207 612 290
 709 311 539 833 540 607 390 241 353 245 510 303 704 219 775 217 721 672 216 212 730 260 201 678 343 281 294 376 630 405
 668 312 616 757 396 627 333 421 231 273 820 351 578 465 587 250 711 301 437 560 367 302 344 504 418 259 401 648 271 307
 424 268 531 412 179 611 283 836 225 346 819 780 278 254 326 267 523 338 469 763 778 274 355 684 322 340 328 692 454 356
 330 265 617 323 845 787 363 399 381 329 373 385 426 900 436 474 387 427 325 397 393 358 374 379 542 392 378 875 362 293
 549 761 350 411 414 561 377 432 324 448 482 479 581 413 419 431 553 306 493 304 400 495 886 452 352 357 508 197 391 389
 371 444 369 491 404 462 457 382 813 503 368 384 342 406 423 506 449 407 360 455 446 345 729 535 438 416 460 477 428 445
 434 501 492 463 300 558  61 547 440 394 447 536 453 548 408 365 530 500 557 410 468 512 497 442 464 480 494 361 450 403
 467 599 282 471 520 226 529 451 550 596 527 582 456  35 415 566 395 409 517 575 349 420 336 458 583 499 552 222 402 526
 622 556 314 459 522 334 483 472 519 543  94 554 383 513 478 489  98 511 289 502 534 509 619  47 521 496 546 339 571 598
 636 528 244 435 315 316 515 104 655 615 518 541  50 604 475 573 127 633 335 514 486 425 585 388 645 429 564 473 198 589
 202 576 332  37 537 296 481 153 696 624  10 439 484 654 516 631  90 660 691  74 671 605 422 285 562 533 670 364 574 646
 551   2 224  66 572 321 628 577 538 614 586 597  58 584 608 644 532 239 588 372  52 606 276 634 545 592 629 651  85 544
 417 652 215 756 680 308 676 125 559 675 297 635 242 700  40 755 164  41 682 555 601 102 441 331 687 171 658 618  82 650
 348 637 280 698 643  55 640  31 642 712 713 754 291 319 693 579  68 158 706 366  70 727  59 591 719 237 461 590  38 690
 247 686 184  29 752 305  21 679 737 674 375 602 569 702  72 657 359  67 716 195 665 673 443  12  89 741 525 717 288 734
  28 667   9 708 726 341 791 354 826 666 270 740 762 659   3 847 182  20  97 720 229 641  45 750   4 249 749 669  18 745
  30 764 175 724   8  81 681 275 697 773 136 728 760 767 165 776 318  34 809 766 718 170  23 649  15  51 744 771 174 733
 105 802 157  13   5 150 739 188 877 804 759 266 732 796 189 794 707 135 799 828 205 705 156 815 147 121  14 685   1 821
   6 430 370 148 758  11 743 747 874 818 180 110 814 130 279 797 664 146 701 857 488 327 567 805 772  65 122 498 246  42
 218  19   7 770 808  27 742 807  26 816 309  16 870 779  64 811 433 262 876 832 380 793 200 625  44 115  22 781 677 386
  24 140 230  32 792 108 851 841  39 864 843  71 895 141 240 846 881 234 840 880 871 827 317 169 100 145 124 160 806 204

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.95251e+06us (= 2952.51ms, 2.95251s)
Wall-clock time (full program): 3.01334e+06us (= 3013.34ms, 3.01334s)
Satisfaction error: 0
Number of search iterations: 1718
Number of local moves: 841 (including on plateau: 350)
Number of local minimum: 101 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13324
Total number of local moves: 6241 (including on plateau: 2148)
Total number of local minimum: 875 (including on plateau: 270)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  42 273 812  94 742 298 804 843  73 132 385  40 405 172 842 767 737 778 645  53 212  24 847  16 809 855 814 152 794  55
 871  19 793 823 176 278 795  99 144 142 146  49 748 127 831 821 749 744 852  84 240 722 191 281 120 849  12 681 332 796
 864 169 686 234 525 473 784 261 156 390 284  46 866  15 863  69 676 573 827 218 198 178  18   5 817 766 776 214 810 754
 824 355 872 164 331  92 478 634 161  41 288  88  22 105 724  32 689 833 774 190 352 302 750 143 745 841 442 602 807 834
 719  95 404 189 578  67 788 333  76  34 639  21 838 276 762 829 755 510 832 137 409  33 726 245 783  68 846  28 713 782
 134 122 764  14 669   7 636 257 223 428 589 605 802 263 773  90 584 647 627  86 112 765 787  23 108 738 701 611 684 666
 147  26   8 704 541  58   2 103 461 693 440 215 792 113 798 709 670 640 779  78 244 741 770 364 632 687 743 679   6 672
 136 322 282 324 516  83 734 587 463 624 309 548 655 130 706 460 707 622 677 121 207 682  29 320 590 570 619  89 723 680
 698 356  81 625 690 162 649 609  25 382 642 671 654 480 711  93 457 717 735  60  70  11 685 151 490 652 614  87 593 665
 594  51  39 586 583 694 661 651  82  45 304 514 768 174 591 486 620 196 688 266  74 725 617 337 289 675 585 155 664 801
 100  79  54 580 433 633 561 551 165 708  36 562 524 592 662 695 613 659 667 348 118 495 714  37 456 612 557 104 604 596
 600 512 185 546 630 635 576 574 310 517 558 615 459 163 648 492 462 361 255 306 432 537 526 123 376 566 455 133 420 543
 563 523 626 658 351  17 530   9 423 571 384 429 623 358 441 552 663 445 502 414 359 542 572 209 691 644 431 482   3 500
 637 608 616   4 377 540  63 418 383 287 553 522 451 325 386 539 422 506 476 489 349 501 535 343 528 484 579 559 527 508
 545 536 436 468 554 503 316 408 360 311 550 599 471 673   1 544 448 483 290 458 511 426 339 556 402 334 577 499 467 450
 470 521 373 340 507 410 555 449 519 549 362 487 533 444 391 247 520 378 454 466 531 497 280 475 538 392 491 401 375 560
 588 416 399 354 443 371 488 439 494 425 532 396 295 656 407 504 881 296 434 338 397 347 365 479 232 465 498 271 888 417
 293 485 297 317 400 335 607 231 582 368 781 430 868 350 388 870 606 294 380 699 403 715 327 496 145 453 268 393 299 435
 394 786 188 308 363 452 413 427 683 406 825 752 381 716 229 159 213 277 419 424 761 222 565 603 568 319 710 238 344 370
 272 746 879 221 845 274 283 342 472 315 692 292 285 303 446 447 312 369 415 729 857 326 421 791 262 216 205 884 328 286
 411 826 668 785 267 412 171 313 678 897 839 220 481 728 318 139 357 389 187 437 892 329 210 805 291 166 395 493 227 184
 581 747 800 374 225 366 336 203 464 228 211 265 353 739 239 226 202 850 534 756 610 860 869 631 345 259 251 505 237 249
 387 341 367 875  38 887 204 851 803 372 173 330 264 621 323 700 242 252 236 808 469 789 858 598 194 270 260 641 300  62
 657 618 595 195 780 718 650 697 757 305 193 346 314 509 243 150 279 197 233 703 893 865 157 885 219 248  57 575 307 170
 235 819 569 890 175 898  91 254 771 889 769 806 128 643 154 138  98 250 321 862 760 179  96 854 886 107 269 438  64 102
 201 702 199 192 876 790 186 116 896 811 564 816 125 763 111 883 275 153  48 733 751 840  77 799 149 200  65 836 141 217
 256 740 567 772 513 777  35 246 721 848 206 837 148 830  61 126 168 110  59 894 518  20 208 660 230 101 891 815 258 900
 180 696 124 818 301 874 129 867 797 182 253 835 117 878 379 775  27 732  72 736 712  13  85 828  75 753  97 873 241  66
 601 398 674 181  56 653 177 861 844 759 877 705 135 822  44 859  31 183  47 727 477 109 731 638 646 106 140 224 730  80
 515 628 158 880  30 758 813 882 529 856 131 474  10 547  43 114  52  71  50 895 597 720 160 820 899 119 167 853 629 115

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.91524e+06us (= 1915.24ms, 1.91524s)
Wall-clock time (full program): 1.97207e+06us (= 1972.07ms, 1.97207s)
Satisfaction error: 0
Number of search iterations: 772
Number of local moves: 649 (including on plateau: 185)
Number of local minimum: 20 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5606
Total number of local moves: 4773 (including on plateau: 1092)
Total number of local minimum: 154 (including on plateau: 128)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 898 503 636  61 108 149  94 790 626 104 619 886 855  65 257  35 121 862 114 153 812 705 115 123  46 875 806 771 795 531
 675 742 625  38 439 739 555 613 101 249 872 817 100 110 845  90  48 810 150 164 683 135 630 155 819 702 631 109  84 785
 761 821  31  32  58 167 166 693 734 145 881 544 141 743  55 188 346 787 700 621 183 698  50 895 173 735 783 117 447 820
 823 876 157 209 891  80  59 883 852 766 714 236  72  88  96  56 233 578 102 131 151 620 122 878  54 724 897 612 778 777
 665 887 250 350 307 894  93 832 860 189 134 880 146 199 634 213 106 834 304 148 120 352 331 252 159 893 668 238 824 753
 770 656 752 161 223  75 256 530 147 270 839 800 228 129 708 179 186 884  81 203 472 838 393 139 873 835 329 284 712 563
 721 889 864  98 163 218 325 679 312 730 119 720 191  43 247 221 825 335 265 309 362 871 272 816 162 811 276 279 786 606
 662 888 306 181 278 176 807 882 829 736 384 280 214 178 294 288 289 262 847 244 581 144 867  68 781 258 269 137 793 592
 608 627 899 293 706 216 241 560 857 763 125 874 180 453 798 277 248 366 340 197 301 885 321 235 112 245 726 310 437 315
 837 408 206 267 224 420 344 661 243 877 271 286 311 202 815 152 853 200 404 251 900 283 660 461 385 204 455 863 414 658
 566 488 237 791 822 174 391 890 254 128 828 666 210 234 774 229 638 349 285 879 266 369 615 387 193 394 441 264 445 308
 639 425 334 359 430 400 402 624 459 318 302 840 374 456 782 426 380 282 892 377 740 195 419 345 201 395 320 484 479 436
 471 709 477 422 364 281 442 390 360 431 423 473 896 330 337 399 599 501 260 403 870 351 554 333 227 451 327 440 647 347
 600 524 450 376 338 434 465 549 589 328 381 268 368 314 291 609 482 509 341 543 336 490 528 548 571 326 496 226 594 641
 567 357 458 373 412 478 428 371 217 542 158 506 406 429 518 510 585 497 568 372 469 485 502 370 417 525 605 339 672 379
 411 583 401 541 444 460 354 575 317 432 418 274 448 410 415 573 378 529 356 483 491 386 598 553 464 324 342 435 588 532
 416 521 353 546 421 475 499 470 659 522 545 367  41 540 365 526 443 424 392 489 569 165 468 474 457 389 535 516 466 462
 332 557 695 486 701 511 275 449  89 433 397 687 305 454 576 559 492 682 536 508 515 642   8 694 476 607 577  30  17 225
 255 538 556 504 584 405 580 438 547 427 498  76 480 361 713 633 512 505  74 388 558 677  42 590 261 703 514 467 487 142
 171 116 586 596  19 673 657  83 733 517  10 222 755 629 759 717   5 591 523  33 175 603 111 788 756 561 640 495 259 732
 172 168 604 520 616 719 650 355  53  25 570 118 716 699 170 582 602 564 552 637 396 623 140 669 617 652 664  67 363 232
 242 239  49 565 646 690 539 292  11  82 513 156 595 550 718 655 674 618 628 796 300 124 691 579 692 160 678 597 323 113
 322  45 711 463 481 572 192  97 653 684 671 654 757 551 220 138 398  60 632 614 143 643 382 207 797 622 587 725 231 263
 107 132 651 744 696  13   1 187 130  29 727 648 562 635  51 779 688 253 610 208 533 689 768 519 833 715 319 676 507 105
 246  66 710 723 802 728 645 154 184 737 670   7 534 667 177 494 686 776 290 738 644   2 789 593   3  22 198 814 205 211
  62  57 133 747  27  15 680  44 413 230 493 409 846 859 452 764 762 295 773 765 722 844 746 296 836 196 169 767  36  77
  39 358 240 754 794 775 848 313 127 851  99  91 574 745 303 750 663 126 704 792  28  23 707 731 861  86  37 850 194  52
  78 212   4 813 799 866 868  12 681 348 741 407 858 769 831 854 182   9 830 500  73 219  87  63 748  40  64 611 190 758
  24  20 299 697 185 869 856  14 729 780  34 297 601 865 298 801 287   6 826 760 849 383 772  69  95  47  92 649 527 784
 375 103 841 805 537 843 803  85 749 842  79  26 751 808  16 818 804  21 136 809 273  71 827 685 446  18  70 343 215 316

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.96446e+06us (= 2964.46ms, 2.96446s)
Wall-clock time (full program): 3.01834e+06us (= 3018.34ms, 3.01834s)
Satisfaction error: 0
Number of search iterations: 1501
Number of local moves: 634 (including on plateau: 154)
Number of local minimum: 103 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13076
Total number of local moves: 5554 (including on plateau: 1673)
Total number of local minimum: 931 (including on plateau: 196)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  91 636 809 156 100 135 520 822 867 498 279 643  61 675 881 807 852  48 180 813  38 120 652  84 806 851  71 108 104 808
  74 871 783 145 874 798  79 719  20 197 695 618 101 633  86 494 706 242 547 818 589 676 835  88 872  39  34  57 462 363
 885 703 900  49 797  13  69 496 883 113 561 842  63 239 173 760 155 873 549 730  89 600 777  55 205  50 888  76  30 892
 123  93 659 125 717  68 669 816 114 107 154 694 103 815 175 734 765 603 833 837 214 172 787 249 726  59 894 110 210 890
 146 847  78 170  22 149 812 772  99 189 598 823 227 395 124 592 825 844 846 770 111 116 667 475 899 486 118 192 853 270
 889 803 732 127 219 724 148 861 267 188 412 621 115 679 259 241 857 710 666 860 177 344 500 109 529 207 187 283 204 597
  97 262 660 278 117 128 238 773 324 340 834 753  56 574 166 768 201 220 821 868 212 751 744 895 891 151 174 361 203 655
 237 271 814  87 234 609 333 725 122 243 320 786 240 573 228 304 704 233 850 161 273 886 896 414 794 158 215 819 263 723
 138 785 687  72 152 311 370 438 893  83 877 684 887 750 231 628 318 296 422 316 194 898 755 216 511 143 349 159 307 645
  73 222 268 407 375 251 848 256 321 824 336 849 254 657 235 292 795 317 552 401 879 733 623 388 334 181 303 423 389 729
 434 308 341 275 310 309 347 323 820 294 731 368 288 836 301 811 377 515 291 880 391 752 564 411 305 255 264 293 328 793
 374 335 319 420 433 287 448 211 472 325 477 516 468 746 280 682 400 213 326 300 688 737 594 479 897 274 379 599 453 383
 440 276 481 460 478 442 784 265 343 360 339 269 741 790 358 668 247 314 348 366 394 641 620 884 372 302 248 387 585 313
 493 332 416 399 466 353 364 408 418 380 245 446 224 716 286 537 450 381 371 518 455 689 685 862 459 406 439 419 403 495
 484 562 376 290 352 337 454 758 350 519 409 393 517 378 567 425 428 447 429 586 445 315 476 392 449 465 369 530 485 528
 346 330 503 534 474 582 525 614 501 384 550 132 555 415 527 298 505 461 367 357 480 179 342 432 458 554 398 611 631 470
 430 354 504 351 431 382 435 410 436 467 543 572 514 221 464 506 646 473 619 566 499 359 417 355 202 362 452 559 426 560
 656 640 595 535 587 457  53 556 531 557 451 571  11 258 443 590 591 185 563 575 490 312 329 509 327 497 548 581 492  25
 649 612  81 542 540 444 508 195 541 610 510 246 385 396 533 150 613 402 289 365 507 488 405 483 624 147 437 583 629 601
 544 686 617 502 469 424 630 524 651 523  90  32 801   6 513 153 546 627  17 650 331 250 285 700 487 576 463 691 491 236
 767 553 551 696 539 607 413 404 635   7 577 588 584 140 664 144 578 712  82 157  26 397  85 569 536 521 680 538 596 169
 441 482  95 622 625 642 526 602  40 131  28 648 683 182 701 565 580 568  70 604 693 164 191 681 244 626 671 616 456 338
 654  35 129 672 421 697 471 160 532 705  21 105 749 176  98 217 665 615 558 141 545  64 522 754 792 670 757 692 698 200
 606 608 209 593 639 142  80 748 673 800 720  45 186 130 579 165 198 677 756 134 718 299 261  52  65 638 805 605 644 740
 112  43  77 763 663 356 690  37 840 781 728 162 766 232 721  16 137 711 804  15 658 225 199 736 297 774 761 183 775 253
 699 133 252 875   2 708 167 257 119 653 373 206 830 427 838  60  67 827 771  23 739 678  58 780 126 647 788 709 674  29
 727 184 570 799 854 843 722  66 855 802 208 229 632 266 791  19  36  42 178 277 829   9  27 817 106 864   3 735 743 282
 168 742 845 878   4 745 759 284  18 778 230 272 869 634 661 489  94 136 163 121 796 702  47 345  14 876 715 858 218  54
 856  31 102 865 782 713 306   5  41 826 512  12 841 386 863 662 171 779  51 260 832 637 139  75  92 870 810 714   1 281
 882 776  62 828 839 859 747  10 789 831 707 390 764 190 769 738   8  44 196  46 223 322  33 226  96 866 295  24 762 193

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.91577e+06us (= 1915.77ms, 1.91577s)
Wall-clock time (full program): 1.97195e+06us (= 1971.95ms, 1.97195s)
Satisfaction error: 0
Number of search iterations: 761
Number of local moves: 603 (including on plateau: 171)
Number of local minimum: 27 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5692
Total number of local moves: 4986 (including on plateau: 1110)
Total number of local minimum: 111 (including on plateau: 119)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 824 726  31 184 182  56 578 803 706  37  70 692  60  98 844 151 869  24  68 695 812 658 800 773 820 731 183  34 172 834
 900 260  52 781 111 221 637 616 791 603 754 886  61  81 756  83 732  40 176 193 894 722  80 725 101 774 174  93 365 853
 685 633 893 158 202 132 825 264 877 108 872 881 634 608 841  57 878 199 638  86 671  55 110 891 155 623  50 121 130 238
 630 642  92 896  23  64 677 152 766 120 555 823 116 106 738 185 703 114 169 733 571 887 122 828 675 849  65  94 223 897
 419 814 843 191 899  48 710 220 625 261 627 721 139 757 225  43 752 165 240 697 538 758 113 750 230 339 163 273 133 822
 599 888 268 204 557  89 589 197 673 207 567 892 167 334 195  73 719 200 720 802 889 622 118 830 821 845  44  88  67 251
 635 788  47 290  84  78 817 319 875 890 651 782 228 314 235  82 775 310 647 649 160 245 288 542 222 846 234 813  58 611
 708 764 262 109  75 461 810 868 833 324 898 318 333 715 190 276 254 495 298 341 885 210 259 650 827 418 194 287 137 316
 863 864 206 161 378 250 596 876 895 144 790 479 322 164 267 181 136 285 536 809 390 840 443 593 232 629 297 283 281 325
 724 806 196 208 336 317 730 218 266 744 767 382 127 271 327 326 331 300 350 883 831 386 444 711 269 852 289 416 370 338
 832 556 280 293 364 380 816 253 173 270 798 320 311 867 224 227 335 342 718 870 661 274 329 355 449 527 385 414 441 451
 771 558 265 308 696 373 456 354 216 353 621 795 328 753 401 357 170 219 818 295 516 523 421 258 496 563 458 423 402 348
 239 481 315 303 438 349 383 145 468 363 882 415 826 656 483 296 508 857 309 346 425 374 387 587 356 628 417 430 470 379
 304 601 506 340 420 448 532 369 368 330 428 358 460 547 372 602 360 463 408 366 707 307 462 554 427 471 437 312 409 847
 231 453 466 459 393 394 513 278 517 667 388 539 299 493 518 399 455 469 620 391 375 403 507 533 389 452 489 381 545 499
 447 564 371 475 321 609 511 440 367 359 412 347 487 411 405 580 406 639 432 595 488 537 522 491 474 407 433 284 396 305
 482 272 519 494 178 445 579 485 431 569 435 205 476 604 484 526 351 503 497 684  29 410 521 413 530 186 535 552 605 515
 138 398 467 498 566 560  87 446 486 553 424 520  26 154 524 690 549 159 594 397 306 742 561 478 454 490 377 643 565 663
 572 286 501 562 504 117 237 541 472 546  77 177 573 450 525 426 582 509  63 473  15 510 606 636 653 422 709 664 665 442
 141 275 598 528 529 395 583 551 544 548  35 570 592  21 514 457 392 662 209 189 540 672 626 337  20 376 676 680 615 640
  90 343 574 301  41 712 198 674 279  54 313 655 716 534 689 584 646 134  62  39 400 502 679 439 670 588 550 600 700 749
 153 150 648 688 654 848 255 669  25 763  59 659 575 263 345 799 597 704 683  79 168  51 586 277 619 180 612 465 705 236
 212  19 613 694 512 736 149 192 214 734 146 480 666 243 624 784 780 631 698 241  38  22  16 215 765 362 610 829 713 577
 166 226 585 576 618 746  53 740 607 686 123 140 776 162 691 492 179 693  10 682 760 645 568  13   6 247 755 717 762  91
 142 107 729 699 632 657  74 792 125 477  76  30 745 187 728 743 772 687 660  36 124 614 815 175   2  66 531 652 879 559
 294  45 702 644 737 701 248 778 119 668 291   7 727 807 129 880  96 797 741 156 102   3 723 242 217  14 641 590 873 543
 100 147  85  32 856 769  99 229 464 404 801 171 860 861 808 804 112 884 681 581 128 384  17  27 768  46 796 739 854   8
 244 213 837 751 858 865 361 678 148 143 352  72 323 783 126 789   1 811 759 617 249 188 747  69 819  49 735  12 874  42
 115 505 770 850 500 836 211 135 157 748 292 104 777 436   5 761   4 434 429 344 591 714 779 105 793 332 871 787  97  33
 855 131 794 838 851 859 201 233  28 842  11  95 785 835 302 862  71 786 282 246 252 257 866  18 256 203 805 839   9 103

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.49096e+06us (= 2490.96ms, 2.49096s)
Wall-clock time (full program): 2.54703e+06us (= 2547.03ms, 2.54703s)
Satisfaction error: 0
Number of search iterations: 1026
Number of local moves: 581 (including on plateau: 141)
Number of local minimum: 51 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9655
Total number of local moves: 5671 (including on plateau: 1902)
Total number of local minimum: 536 (including on plateau: 253)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 793 866  45 245 799 886 774 196 794 850 709 868 846 788 248  82 841 404 849  19   9 380 291 171 116  76 299  10 107 154
 207 478  29  46 422 791 204 163 814 808 878 877 766 837 374  84 869 752 237 836 136 861 277  57 126  56 215 804 425  86
  20   7 664 769 156 843 708   2 744 253 300 818 760 856  41 117 807 354 840  49 782 844 817 781  92 233   1 513 251  93
   8 854 238  69 138 119 232 216 771 261 698 826 789 718  16  26 745 643 754  36 842 825 762 772 761  37 128 763  27 441
 676 875  38  47  13  68  60  52 159 710 472 697 720 802 614 324 813  66 393  80 690 827 832 731 819 457   6 784 679  11
  39 809 303 671  34   5 590  77 462 606 381 757 314 735 361 712 835 395 740  23 603  73 703 659 150 214 105 694 729 736
 263 876  51 711 777 208   4 294 674 152 657 702 683 812  59 213 739 689 161  58 684 716 634 108 732 227 109 633 209 680
 330 601 566 767 122  67 691  15 618 368 447 234 624 724 713 181 652 142 148 595 492 639   3 484 668 365 599 524 557 579
  17 798 541 399 655  24 675  79  87 186 568 635 490 551 151  55 662 329 580 621 532  83 699 758 677 102 612 591 653 705
  22 577 646 592 596 658 219 311 636 439 693 631 721 598  21 183 717  14 146 667  78 571 317  70 706 256 569 487 701 673
 522 554 135 613 559 512 583 272 575  42 185 528 630 589 438 460 597 141  88  94 510 570 626 338 650 224 576 707 593 604
 455 401  25 602 648 661 656 442 558  32 637  35 529 521 611 310 468  53 166 610 734 534 271 586 649 346 548 506 456 465
 623 511 502 530 384 629 479 423 537 120 463 410  89 501 531 309 555 244 556 535 565 594 388 301 415 268 430 526 482 615
 389 435 485 600 421 719  12 474 362  61 692 124 549 514 665 544 540 323 499 605 477 453 394 480 543 101 574 516 519 445
 408 407 567 459 283 476 378 358 356 366 284 533 486 326 483 475 500 581 517 536 507 473 440 226 560 449 433 585 491 572
 355 552 418 545 334 509 467 523 335 494 508 470 493 367 400 505 279 390 385 414 452 496 520 563 325 405 412 451 862 286
 688 342 406 337 295 436 373 564 193 450 795 588 525 469 437 488 396 350 432 347 527 644 383 264 360 663 402 331 764 266
 339 382 352 498 398 316 448 617 424 865 884 351 897 489 562 417 195 542 353 584 403 305 343 377 428 495 327 371 184 369
 426 419 431 391 547 416 461 578 413 669 890 834 315 420 359 464 217 386 887 278 260 379 429 392 333 504 336 318 376 387
 345 863 240 290 340 364 344 770 409 685 775 289 397 332 241 855 322 796 538 815 313 307 546 357 427 714 221 259 199 162
 561 287 411 202 236 285 375 628 297 778 225 670 281 296 302 700 370 882 725 349 896 249 828 607 198 811 252 211 321 282
 864 258 274 306 871 220 308 753 880 620 201 228 231 243 756 443 192 276 704 267 121 873 372 550 247 625 851 341 328 312
 879 573 857 269 257 892 466 515 188 642  81 246 255 218 858 235 363 845 223 139 134 319 900 678 270 727 743 293 130 320
 749 265 803 113 262 197 888 889 177 742 212  97 280 100 790 645  72 768 641 608 187 170 229 298 859 751 179 194 622 728
 348  99 687 239 881 175 800 820 180 444 132 160 210 149 176 738 147 632 787 503  91 144 191 776 824 666 733 137 786 860
 182 133 833 773 895 893 250 806 723 481 203 158  33 112 874 715 111 446 174 899 292 518 123 172 222 672 696 168 785 173
 726  64 898 838 682 153 638 748 304 273 140 454 434 155 746 780 178 681 200 759  96 288 169 205 127 891 852  30 190 816
 747 125 609 810 157 539 114 553 627 783 164 145  65 165 848 779  48 118 104 741 829 242 143 131 885 471 765 883  95 830
 640  50 801 722 616 872 821 730 115 129  74 106  75  43 750 853 254 587 230 651 654  98  63 831  71 870 847  18 189 755
 894  54 660  62 737 582 497 647 103 206 167  44  28  85  90 823  31 686 458 797 619  40 822 792 275 839 695 867 805 110

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.65369e+06us (= 2653.69ms, 2.65369s)
Wall-clock time (full program): 2.71008e+06us (= 2710.08ms, 2.71008s)
Satisfaction error: 0
Number of search iterations: 1470
Number of local moves: 812 (including on plateau: 291)
Number of local minimum: 86 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10327
Total number of local moves: 6473 (including on plateau: 2104)
Total number of local minimum: 523 (including on plateau: 226)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 402  85  92 162 121 716 117 866 614 881  55 637  67 148 400 173  24 793  78 845 795 102 499  88 887 771 822 858 714 703
  27 869  66 389  59 859 826  71 590 864  87  60 107 827 851 166 868 789 171  53 658 695 886  68  32  65 118 707 895 792
 210  77 468 889  63 872 809  62 863 841 143 738 153 609 127 281 536 634  93 205 899  94 710 179 751 810  21 342 202 834
  79  40 373 896  74 778 892 271 172 758  80 854 254 682 594 544 292 691 567 855 261 147 893 204 293  50 839 163  73 846
  20 155 108 126 433 875 897 599 823 856 125 693 223 791 128 189 157 727  46 537 735 146 731 674 230 890 322 252 212 815
  96 685 873 606 203 883 294 156 639 265 124 813 207 802 712 604  89 576 236 268 898 141 745 195  76 360 110 219 824 816
 145 711 429 480 412 832 740 301 645 241 508 783 279 882 749 232 343 865 197 651 315  84 894 447 119 211  39 181 168 632
 233 699 142 282 244 688 253 900 878 283 286 814  95 246 871 801 213 819 242 756 274 287 800 313 243 295 164 345 170 879
 220 269  86 633  69 757 245 530 888 805 276 238 140 196 310 804 278 811 139 885 240 876 741 262 167 327 329 318 833 843
 206 796 377 836 724 570 290 260 180 861 185 625 398 289 709 441 131 817 376 844 359 410 541 331 344 338 381 317 302 277
 399 584 217 426 367 705 368 391 405 188 884 547  58 502 857 829 341 732 216 763 222 504 708 187 325 340 394 358 267 431
 519 849 335 436 191 420 258 311 683 411 364 513 483 404 760 767 356 291 314 297 493 371 611 250 628 445 350 491 337 577
 467 736 194 413 321 393 218 867 503 432 347 555 449 372 406 797 366 296 624 419 524 512 673 458 259 424 438 298 385 369
 487 678 386 891 328 397 299 221 496 339 423 627 256 462 837 696 169 375 454 234 365 421 520 501 384 488 482 518 353 428
 853 476 497 407 456 285 459 526 336 390 408 450 566 418 312 489 569 516 378 481 319 543 263 510 392 548 401 434 578 255
 486 414 427 334 422 333 550 494 490 528 396 602 403 469 437 492 355 348 485 323 565 357 529 484 538 509 453 409 563 320
 521 559  31 475  23 517 349 470 354 464 326 495 448 620 457 656 478 618 273 363 535 425  45 657 465 662 479 687 514 549
   2 588 451 571 636 500 581 443 631 440 655 300 452 370 540   1 591 572 596 374 556 460  38 527 466 507   3 610 471 583
 522 227 306 225 598 133 623 595 498 603 444 198 601 640 463 114 534 123   5 586 580 589 324 533 644 670 554 593 439 551
 531 228 613 175 647 472 575 666 150 558 239 151 511 379 237 473 798 272 619 307 564 585 362 587 515 753 461 455 568  64
 545  72 552 103 542 226 573 539 630 134 664 109 574 607 135  37 729 615 669 442 149 557 330 525 592 532 608 679 446 600
 616 332 653 812 560 304 474 416 417 346 505 177 784 316  52  49 668  47 713 383 719  48 209 723 660 785 395 597 506 249
 697 231 717  25 742 215 652  15 111 622 681  99 728 621 553 165 692 186 787  91 160 700 477 748 650 643 635 582 161 129
 770 361 667 190 777 270   8 675 638  43 612 193 782 235 199 680 786  81 689 122 106 646  33  70 726 626 752 799 671 308
 648 280 747 130 848   6 702 659 284  42 677 214 546 684 251 629 781  34 665 720  51 663 288 790  13 642 759 617 138   7
 722 208 562 744 672  36  90 257  98  97 808 116 776 201 690 382 772 192 734 733  61 654  16 701 779   4 835 803 715  57
 847 765 820  19 773 105 112 775  35 182 725 755 661 561 415 264 737 200 852 275 137 860  30 830  44  54 686  10 828 158
 761 174 743 435 676 120 698 387  56 309 825 229 806 113 100 523  29 305 880 152 818 605 351 794 704 730 101  82 762 247
 766 579 721 764 840 104 183 780 184 706 842 176 877  41  11 430  83  75 649 303 769 874 136   9 739  22 746 774 154 178
 718 788 862 641 694 144 380  12 224  26 821 754 831  28 352 807 750 115 768 248 388 159 132 870 850  14 838  17 266  18

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.88149e+06us (= 1881.49ms, 1.88149s)
Wall-clock time (full program): 1.93667e+06us (= 1936.67ms, 1.93667s)
Satisfaction error: 0
Number of search iterations: 697
Number of local moves: 656 (including on plateau: 106)
Number of local minimum: 7 (including on plateau: 11)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5357
Total number of local moves: 4722 (including on plateau: 824)
Total number of local minimum: 119 (including on plateau: 89)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 143 770 890  66 789  72 110 765 672 698  70 794 732 553  48 344  27 873  26 746 875  44 187 166  51 882 775 847  60 440
 165 897 733 453 879 658 731 103  95 606  34 862  86 539 202 817 887  32 656 578 788  78 712 108 241 373 155  79 819 149
 244 824 895 125 888 107  98  67 570 657 463 860 828 661 132 797 153 188 505 800 191 545 814 725 112 156  45 891 100  74
 198 876 845 247 898  91  62  80  84 878 852 228 835 806  64 136 186 664 654 641 761  30 221 157 744 263 868 122 864 160
 144 799 145 738 807  43 846 248 131 893 129 227 889 638  37 792  65 557 804 231 776 200 636  82 727 892 261 256 264 258
 214 704 109 855 417 894 838  99 355 872 265 193 899 747 196 111 174 245 779 172 742 532 801 222 880 358  83 181 398 180
 784 735 270 773 488 114 896 164 101 486 481 217 127 885  87  69 159 769 599 707 269 830 849 782 753 133 273 223 213 279
 199 764 446 870 484 142 428 840 308 877 168 208 173 477 154 272 204 839 691 140 593 613 809 220 331 703 766 229 255 312
 357 586 197 627 230 306 326 162 612 668 295 211 377 816 412 296 297 653 867 298 740 858 320 798 249 369 832 207 250 299
 237 688 752 633 309 405 300 251 275 900 347 318 278 886 205 332 135 179 815 674 629 848 750 729 407 259 274 239 219 242
 402 580 319 687 134 393 252 423 302 757 883 396 209 702 282 289 301 210 719 842 328 628 455 755 315 293 669 323 424 243
 507 582 409 759 399 427 266 339 345 502 218 307 500 352 561 447 414 383 543 881 311 710 288 861 313 325 415 416 482 253
 404 588 403 451 334 450 448 489 370 574 660 365 316 390 438 361 419 474 604 433 425 853 374 268 422 501 321 421 546 413
 434 465 445 310 232 342 517 456 520 515 564 201 382 353 603 439 726 195 495 471 884 277 530 821 329 461 511 388 395 254
 494 359 506 343 497 386 442 379 525 177 384 426 472 485 575 372 527 524 464 487 387 533 406 454 518 608 522 354 449 460
 441 304 437 364 350 549 397 475 503 436 547 378 558 566 499 473 410 271 338 435 529 493 429 598 431 478 458 491 408 469
 568 305 498 504 468 510 257 356 394 283 340 284 286 514 294 579 457 610 667 368 675 519 184 452 556 569 571 443 385 619
 542 349 351 708 555 531 526 490 483 324 444 336 621 550 401 552 480 381 322 577   8 523 562 626 375 717 392 592 182  15
 682 224 492 476  63 589 689 587 121 281 637 303 544 360 551 625 716 642 194 559 512 176 391 235 617 597  50 479 585 538
 573 371 699  19 600 583 536 634 611 337   9 528 459 576 548 680 470  76 128   4  92  23 666 554 709 565 590 601 690 584
 705 216 615 118 563 622 643 595 737  13 346 640 630 215 711 665 777  81  90 534 189 225  20 240 663 780   1 631 645 605
 496 138 693 126 540 632 681 678  40 262 327 646 594 367 535 139 671 175  59  47 420 335 721 644 683 684 541 537 513 591
 696 285 572 341 833 647 639  18 607 203 163 767 521  42 748 602 822  89 137 362 146 226 148 649  57 694 581 701 652 567
 655 236 616 291 623 467   7 803  39 113 836 743 679  38 596  71 614  93 400 462 376 728  28  24 714 730 662 560 676 635
 790 167 105 348  97   5 234 692 739  46 718 785 161 116 802 783 723 432 124 178 516 695 677 700  61   3 624 713 673 808
 720 185 151 330 130 854 609 734 818 389 758 778 246 152 706  73 715 648 292  31 147 314 238 317 620  88  56 841 763 812
 869  17 697  14  29 831  33 745 651 106 768 724 169 170 686 771 856 754 119 104 618 117  21 363 670 171 650 190 736 866
   6  49  94 749  11 863  96 781 791 183 760 685  68 141 741 786 829 823 123  77  22 509 762 418 206 825 466  35 805 811
 834 411  16 380  75 844 813 772 865 287 837  52 756  85 827  55  25 859 430 850  58 233 366 280 659  36 260 774  54 722
  12  41 115 810 793 158 795 290 851 192 212  53 120 333 874 787 276 796 871 826 508 820 150 267 102   2 843 751  10 857

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.0996e+06us (= 2099.6ms, 2.0996s)
Wall-clock time (full program): 2.15484e+06us (= 2154.84ms, 2.15484s)
Satisfaction error: 0
Number of search iterations: 901
Number of local moves: 739 (including on plateau: 192)
Number of local minimum: 33 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6916
Total number of local moves: 5537 (including on plateau: 1459)
Total number of local minimum: 231 (including on plateau: 181)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 877  15 248 393  12  68  56 857 860 151  25 273 841 840 875 773 878 282  16 838 253  98 776 815   9 700  30 102 844 710
 137 344 117 417  89  41  32 678 222 298 876 726 764 800 104 835 880 195  13 811 767 177 851 832   7  18 861  34 882 707
 160  19  40 263 307 293 140  86 766 143 578 744 847 720 842 311 717 233 740 340 770  20 854 827  45 213 848  31 853 765
 323 142  14 631 154 713  71 784 725 153 780 109 569 752  24 716 870 119 769 836 822 483 833 819  82 237   6  26 809 144
 249 193  81 251  59 591 731 718 783  61 664 230 794 824  36 677 566  52  42 741 837 697 326 793 110  10 761  93 843 702
   4 197 129 135 202  28 182 762 577 668 681 808 757 839   8 745 763 100 750 816 711 127 690 814 217 166 823  23 715  78
 327 188 302 150 113 277  35 624 555 210 617 597 703 629 797 216 693 286 198 733 845 698 643  17  21 684 743 706 672 236
 232 227  75  94 173 611 149 161 771 287 649 145 185 587 655 519 739 123 589 376 737 736 627 748 709 768 647 201 869 126
  44 146 134 163 590  95 596 671 654 304 679 196 657 622 535 572 527 220 625 599 727 303 548   3 751 199 785 212 653 705
 141 264 594  91 189 619 646 630 558  73 549 103 176 670 623 442 614 443 575 667  67 639 539 666 571  54 632 334 652 694
 565 607 500 377 494 570   5 434 692 362 115  79 613 480 499 520 536 366 563   1 586 595 510 554 593 468 584 523 640  84
 355 588 158 105 155 645 680 592 492 396 444 345 252 564 465  70 620 125 615 200 547 582 663 454 545 612 574 517 553 602
 504 562 521 386 552 561 541  33 530 372 581 167 387 576 580 438 598   2 491 250 411 618 533 451 460 433 361 531 525 560
 662 498 537 312 526 609 661 501 341 431 606 317 368 439 432 435 120 472 471 330 540 415 475 319 476 505 413 474 514 316
 447 522 487 496 391 493 430 568  39 418 542 497 416 551 364 428 397 449 513 532 400 485 583 482 516 489 461 275 310 534
 352 422 473 394 349 484 462 402 450 550 628 469 371 488 405 351 544 410 399 437 305 463 559 403 414 511 524 621 419 456
 440 457 477 452 674 424 626 557 464 507 486 495 458 274 289 470 659 398 315 257 481 423 478 467 466 380 322 421 445 453
 329 346 373 369 360 254 374 721 389 538 425 448 806 290 893 354 272 529 787 306 427 892 348 370 459 567 325 379 357 228
 885 441 426 573 320 408 404 300 383 616 406 826 634 332 280 294 367 704 446 650 265 691 281 285 308 238 267 384 324 777
 722 392 271 867 696 509 347 333 365 701 328 401 512 338 390 805 412 385 218 883 114 246 321 309 409 479 395 648 363 356
 734 502 719 873 407 337 313 239 359 436 358 759 637 297 219 894 175 898 382 147 850 224 260 429 336 266 314 699 194 258
 855 270 825 791 790 261 683 255 874 644 291 656 244 241 179 339 190 856 301 503 335 807 209 240 226 753 262 204 139 292
 579 675 749 758 781 231 229 288 318 829 256 669 506 343 276 378  69 729 381 515 214 221 871 268 295 732 242 686 192 235
 828 858 742 738 603 756 830 518 420 585 350 181 156 187 331 164 165 601 388 184 299  88  90  85 676 834 101 636 259 862
 278 796 296 786 708 735 817 804 148 635 172 813 159 215 247 556  63 812  48 375 133 782  80 183 900 760 168 789  66 191
 638 660 803 543 889 879 899 205 128 799 136 284 206 171 881 132 152 728  74 508 610 223 106 180 689 747  87 746 178 234
 795 695 864 896 723 211 279  38 455 810 203 546 186  72 818 124  46 665 353 118 162 755 208  22 897 170 886 688  29 801
 342 779 895 121 633 243 772  99  57 868 245 651 111  96  51 859  37 846 866 283 130  83  60 865 849 673 174 888 108 831
 604 890 774 600 798 682 641  49  76 605 714 712  62 225 730  43 754 685 863 157 112 169  77  27 821 207  47 852  11 528
 107 820 891 490 778 887 884 608  64  65 131 269 138  53 687  55  92 802 724 122  58 775 116 788 658 642 872 792  97  50

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.49934e+06us (= 2499.34ms, 2.49934s)
Wall-clock time (full program): 2.55211e+06us (= 2552.11ms, 2.55211s)
Satisfaction error: 0
Number of search iterations: 836
Number of local moves: 659 (including on plateau: 170)
Number of local minimum: 27 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9140
Total number of local moves: 5461 (including on plateau: 1494)
Total number of local minimum: 448 (including on plateau: 191)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 849 867 878 174 734 685 154 730 626 741 115  41 827 603  45 875 103 128  73 855 826  90 145 656 175 654 123  46 116 581
 109  23 822  56  50 229 815 758 799 838  71 866 879 723  58  43  92 655 673 747 663  70 111 364 877 821 178 194 897  34
 114 105 635 176  89 831 147 526  69 173  86 675 851 732  30  84  64 751 754 861 824  60 896 893 630 192 795 513 892  67
 146 212 792 891  49 771 899 846 165 162  95 759 856 161  36 185  96 737 380 883 508 186  91 779 532 786 868  31  42 571
 171  97 382 152 888 304 106 857 796 266 112 252 865 804 163  53 120 712 715 672 766 637 285 898 657 803 681  55  93 153
 204 225 790 108 124 889 180 832 200 286 660 588 159 864 177  76 434 323 813 756 760 201 359 843 466 713 664 207 396 218
 806 149 764 166 306 235 521 665 240 789 312 768 209 196 400 190 189 834 537 842 456 262 895 503 632 241 800  32 246 330
 134 191 761 211 289 791 129 894 349 278 220 755 197 195 205 769 298 840 818 602 872 198 900 141 667 833 135 301 131 411
 143 367 828 260 160 773 142 774 217 619 281 718 222 350 302  47 324 762 881 511 679 573 346 328 303 345 835 854 327 244
 334 444 512 299 333  82 805 646 188 873 417 782 226 482 273 363 337 733 802 639 478 546 213 420 633 256 450 282 495 172
 259 807 674 322 296 313 319 606 254 150 819 688 287 203 343 353 358 243 871 455 427 216 307 810 331 808 749 288 347 612
 340 253 552 167 310 409 297 564 801 329 275 887 431 249 233 263 460 360 770 890 496 320 279 238 860 783 291 242 314 852
 385 413 562 440 497 403 342 648 315 386 442 292 424 601 446 454 326 618 208 449 695 251 880 399 451 467 539 309 452 421
 405 352 750 430 311 265 341 541 339 373 543 433 365 649 394 393 519 527 429 640 490 354 453 410 408 545 505 368 276 707
 412 383 436 348 489 277 536 671 407 268 563 492 502 488 231 376 441 389 735 423 547 401 535 439 351 462 318 538 501 556
 443 474 483 426 464 332 615 469 377 457 517 477 387 479 384 391 448 516 361 553 498 355 437 356 554 223 438 463 524 614
 381 370 419 494 549 491 357 280 628 579 525 558 587 480 542 468 221 335 432 148 214 518 473 570 274 476 435 574 530 607
 544 590 362 493 372 595 390 325 379 428 459 465 605 507 484 418 369 316 569 336 378 540 425 559 515 481 445 624 528  14
 520 487 344 753 404 522 395  35 158 529 670 580 617 402 416 475 593 509 321 284 255 374 415 506 531 652 598 122 514 534
 594 577 183 731 584 583 597 293 689 582   9  72 704 550 591 388 616 548   3 308 230 485 611 644 728 130  52 693 638 102
 561 711 215 596 600 736 701 193 461 107  63 219 551 710 682 375 643 567 585 237   5 650 566 575 247 269 228 523 622 317
 725 627 270 499 661  37 555 164   6 447 778 239 812 557 609 636 471 697  98 283 709  65 784   8 184 104 645 613 510 722
  20 687  51 683 841 576 780 397 705 634 720 206 677 608 844 565 641  10  57 151 181 625  28 264  59   4 662 647 620 572
 684 470 295 823 680 414  12 366 568 825 686 272  16 136 739 599 629 138 560 170 133 757 621 139 187 245 392 669 659 631
 658 690 371 696 863  80 653  26 726 504 610   1 623 100 745 767 859  11  18 113  61 703 692 744  17  25  27 794 752 586
 717 719 117 668  48 578 775  38 676 727 472 101 144 422 809 820 651  81  40 168 694 847 793 666 258 179  62 700  87 458
 702 811 137 874  79  29 157  77 678 746 776 140  44 708 781 836 698 398 748 156 294 706 486  74  78 500  22 882 169 729
 837 691   7  24 724 257 763 155 785 338 816 250  68 199 886 742 885 300  33 182 121 884  39 118 743 699  21 271 848 829
 714   2  13 716 876 738 234  85 127  66 814 406 261 125 870 869 772 267  99 126 236 788 248  83 862 592 817 850 765  94
 604 721 110 839 845 290 798  54 787  15 589 533 119 232 797 642 858 210 132  75  19 853 202  88 305 227 740 830 224 777

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.74661e+06us (= 2746.61ms, 2.74661s)
Wall-clock time (full program): 2.80059e+06us (= 2800.59ms, 2.80059s)
Satisfaction error: 0
Number of search iterations: 1455
Number of local moves: 810 (including on plateau: 344)
Number of local minimum: 85 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11348
Total number of local moves: 6085 (including on plateau: 1929)
Total number of local minimum: 762 (including on plateau: 197)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  82  66 499  12  20 819  51 882 869 576 178 818 729 280 872 800 635 741  59 862  13 216 776 121  79 851 127 296 293 893
  53 190  81 755 762 176 173 821 870  74  26 790 271 261 811 871 803 242 766 726 854  46   9 350  29 827  11 253 736 878
 874 880 181 285  99 845 825 745 859  68  92 532  64   6  95 804 714 137   3 258 857  67 784 286  43 810 761  34 702 805
 853 812  22 143  14 855 759 303 672  75 120  93 243 830 629 747 815 134 148 838 858  18 837 235  37 740  25  40 764 856
 826  54 683 693  45 774  80 673 717  50 167 791 142 743 694 679 133  30 546 799 752 225 684 282 141   2 775 220 767 348
 645 875 182 202 744  57 733 778 706 567 245 674 199 695 667 688 294  55 692 104 461 725 604  42  31 617  63   4 757 409
 768 787  73 657 697 749  96 801 675 668 616 116  39  56 737 751 215 569   1 727 753 707 820   5   7 719 152 151  52 351
 678 108 670 254 716 696 715 553 626 183 605 610 268  16 808 652 698  10 628 575 400 722  47 233 277 681 711  58 247  70
 689 648 662 155 603 640 609 739  86 117  91 584 239 192 660 783 709  38 637 136 687 487 647  44 410 651 661 306 376 229
 664 665 352 114 704 449 557 731 613  15 301 713 241  49 781 515 656 566 561 655  24 395 686 195 607 590 614 158  32 312
 513 589 608  17 564 560 619 580 765 547 201 112 174 479 563 685 627 309 588  28 573 469 649 618 586 495 323 390  71 213
 511 544 493 599 442 600 571 464 570 598 347 498 334 492 483 340 408 315 179 624 543 625 507 456 462 435 230   8 568 269
 552 460 505 622 502 175 620 630  60 528 189 458 494 591 451 476 363 565 362 172 371 417 612 491 375 539 514 404 542 475
 517 548 676 441 633 523 642  19  61 555 510 384 551 440 446 501 360 587 333 447 455 601 585 448 319 372 325 170 489 577
 452 473 332 477 596 439 597 474 606 438 459 480 314 316 545 367 506 454 407 353 424 457  27 412 496 482 682 558 518 374
 478 467 490 636 579 357 503 484 593 396 486 413 411 450 391 368 389 540 403 562 419 427 428 288 392 472 295 481 531 386
 516 308 521 453 470 529 414 432 364 550 433 402 385 530 466 443 276 646 397 378 431 401 463 327 387 305 415 691 434 748
 520 218 394 445 421 488 262 381 317 654 265 554 680 508 519 522 279 756 359 164 793 525 221 380 465 318 572 536 346 653
 128 341 300 780 307 328 382 405 399 890 485 782 274 398 365 354 535 436 889 291 430 343 238 266 644 166 224 533 710 892
 287 335 770 366 420 471 337 275 336 330 868 444 322 383 423 270 538 273 797 849 130 184 313 789 429 406 373 864 331 602
 161 534 281 769 416 255 292 883 228 226 349 559 867 834 345 437 310 418 232 250 324 197 361 850 754 126 169 848 863 377
 321 356 200 699 344 252 260 263 188 207 887 500 785 320 369 231 824 249 297 311 211 897 342 817 884 272 168 583 828 650
 393 690 194 180 147 237 132 355 264 658 847 738 860 219 289 388 841 792 256 339 222 730 894 823 326 227 299 746 145 284
 236 223 814 712 186 208 852 246 206 267 582 290 885 861 165 198 160 839 512 641 156 110 248 639 302 204 795 873 527 578
 214 138 643 724 193 899 283  35 177 705 886 835 592 205 153 217 191 806 829 259 556 338 278 663 891 146 157 632 541 329
 139 171 209 638 831 135 843 115 426 621 788 103 574 798 304  36 240 123 832 358  69 149 370 728 865 888 796 794  48 524
 159 771 298 877 234 251 732  33 196 898 666  90 615 634 107 185  77 718 144 772 822 777 111 537 836 131 896 760  83 105
 129 124 844 122 833 504 210 162 106 807 701  41 526 549 203 101 758 742 809 187 102 721 422 669 840 100 720 734 671  78
 257 509 659 594  98 119 154 140 581 750 881  23 842 677 109  21  89 802 773 700  62 816  84 813 866  97 876 611 425  87
 900 631 879  94 895 125 212 113 379 497 244  88 595 703  65  85  72 623  76 150 763 723 468 708 735 846 786 779 118 163

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.16726e+06us (= 2167.26ms, 2.16726s)
Wall-clock time (full program): 2.22377e+06us (= 2223.77ms, 2.22377s)
Satisfaction error: 0
Number of search iterations: 933
Number of local moves: 627 (including on plateau: 154)
Number of local minimum: 41 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7360
Total number of local moves: 5152 (including on plateau: 1426)
Total number of local minimum: 329 (including on plateau: 172)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 855  13 171  56  93 317 354  55 674 346  45 740 831 300 854 832 835 849  57  11 687 208  49 834  67 743 865 869 199 706
 194 843  18 824 837  35 206 677 336  80 127 861  89 857 846 833 802 867  59  17 333  14 258 714 159 554 828 862 272 113
  31 793  27 704 304 129 257 665  97  10 278 180 859 745 868 811 785 760   2 738 427 131 173 769 187 766 820  12 808 379
 282 657 551  33 786  78 232  25 213 841 107 784 303 155 804 800 840 722  53 788 753 138 703 839 236 701  65 152 653 221
 104 815  43 780 363 177 108  95   3 286 228 172 827 812 672 801 779 670  52 783 755  26 135 624 707 239 796 721 750 192
 100 724 298 818  42 406  40 696 242 306 217  32 771 764 671 761 683 628  98 806 656  38  22 699 158 719 663 659 792   6
 186 782 197 698  21 145 219 727   5 277 115 235 678 647 732 789 604 673  77 614 562 165 144   9 751 752 660 676 765 610
  19 734 251 599 553 163  60  20 292 773 103 168 754 679 749 658 558 715 608 708 266 211 297 645 195 650 585 668 664 170
 586 262 125 728 275 178  69 571 574 694 260  16 627 590 631 680 581 618 613 654 637   4 301  99 580 709 619 642 526  66
 615 675 121 606 231 185  87 484 555   1 176 241 578 535 713 621 567 625 712 561  15 717 326 591 748 623 534 529 471  72
 605 480 226 649  74 370 267 632 493 488 575 280 603  30 576 404 525 693 582 111 577 397 437 147 583 540 515 662 447 547
 548 496 254 536 550 400 376 655 483 692 332 120 611 617 421 669 408 564 203 651 132 560 368 469 116 690 522 532  90 450
 543 499 259 452   8 356 331 644 335 405 268 556 492 569 523 474 489 573 546 500 453 588 565 395 154 559 417 504 446 612
 544 600 388 416 411 234 394 595 524 607 310 494 666 528 294 454 403 593 440 462 508 552   7 409 157 428 589 541 518 449
 495 486 319 413 490 390 315 439 584 463 501 371 281 352 475 392 563 369 487 393 457 596 441 620 143 652 511 399 641 477
 458 389 521 435 274 579 516 432 430 418 507 323 425 436 465 410 502 476 639 396 468 325 510 635 343 426 445 349 527 456
 380 451 622 401 491 517 438 412 338 716 448 557 329 378 358 473 870 339 633 348 244 442 467 340 387 359 485 414 459 419
 318 482 681 464 807 498 478 290 374 322 415 747 505 519 481 383 287 353 431 455 533 479 285 386 506  82 344 460 830 320
 299 422 444 402 375 630 545 327 345 799 530 609 324 398 342 362 289 293 225 881 887 250 321 238 497 730 616 373 248 514
 245 334 648 365 705 472 850 351 261 357 723 733 328 813 309 520 227 420 296 423 308 295 684 209 443 384 337 283 825 367
 433 424 661 246 775 434 763 382 207 877 570 686 364 381 291 270 215 169 429 216 900 312 598 314 305 461 391 350 196 895
 366 269 646 230 466 503 778 407 852 729 626 836 253 184 191 273 372 341 361 229 255 875 691 240 347 883 175 188  85 864
 360 140 720 223 710 685 711 803 149 311 688 689 214 256 204 150 858 182 284 164 602 838 549 247 851 302 237 385 205 798
 768 279 643 330 542 735 871 313 797 264 601 265 224  63 117 130 146 288 819 181 822 795 597 537 509 218 817 210  62 572
 629 201 744 134 791 682 781 233 876 774 770 539 151 853  81 118  29 160 856 249 355 739 816 271 898 124 122 137 212 190
 884 179 767 200 316 718 587 136 860 736 756 787 222 307 174 141 101 202 874 189  76 848 805 193 566  39 142 758 162 790
 700  54 886 697 592 863 538 759 809 726 731 156 148  75 276 128  28 133 829 123  83 702 762 891 823  34  37  94 198 640
 844  24 512 161 183 873 777 890 220  36 889 513  61 470 167  47  51  88 568 896 126 810 899 776 842  23  86 885  41 757
 252 894 879  68 814 866 821 105 845 110 882 741 119  96 166  73  48 102 888 243  44 826 667 112 880  79 139  92 892 772
 872 114 893 847 636 897 746 695 742  71 737  84 878 106  64  58  70  50 794 725 594 634 638 263 377  46 153 109 531  91

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.13991e+06us (= 2139.91ms, 2.13991s)
Wall-clock time (full program): 2.19622e+06us (= 2196.22ms, 2.19622s)
Satisfaction error: 0
Number of search iterations: 965
Number of local moves: 713 (including on plateau: 241)
Number of local minimum: 40 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6789
Total number of local moves: 5283 (including on plateau: 1395)
Total number of local minimum: 244 (including on plateau: 177)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   6 768  37  85  38 867 152  99 138 473 865 884  66 785 739  80 851 393 624  64 797  71 762 179 683 871 464 718 144 812
 427   5 810 188 772 869  20  75  29 686 778 752 741 848 370  47 847 253 779  33 771  36 829  93  59 747 327 870 340 114
 353 843 806 292  18 874 157   3 133 708 856 769  15 584 863  54 836 127 855 151 842 221 825 111 276 784 258 690 143  68
 599 748   9 882  12 644  25   2 170 804 705 770 694 799 691 225 763 399 699 140 675 181 725  90 180 839 343   1  42 659
 323 700 841  96   7 852 326 411 737 714 859 782 212 611 481  14 824  97 826 222 820 301  44 746 147 549   4 819 107  43
 164 734 803  91 366  60 136 440 654 853 808 805 726 788 518  40 642 297 793 191 715 220 494  19  56 795 214 807 137 149
 553 713 757 118 210 814 665 245 728 661 717 592 172 669 265  92 680  50 660 135 696 621 786  21  48 607 213 698 197 132
 308 581 561 117  88 655  61  32 299 743 572 689 704 636 732 176 533 296 711  27 530 674 587 598 491 651  78 597  95 693
 287 701 620 633 649 511 623 108 124 570 437 577 318 716 342 692 835 250 606  94 626 125 761 199 177 622 101 535  87 589
 267 721 783 159 217 593 291 165 618   8 656 394 641 729 266 647 603 293 564 638  30  81 519 454 483 588 155 723 541 688
 211 666 544 167 555 552 218 109 493 682 629 648 142 520  62 645 489 565 365 463 773 554 637 130 605 687 189 578  98 539
 113 612 556 110 196 452 524 441 591 529 490 312 563 594  28 627 557  16 678 450 567 619 498 615 540 339  39 614 569 676
 161 600 487 209 205 420 613 509 590 344 502 521 513 601 148 531 391 361 537 547 534 443 791 479 500  13 331 595 329 710
 639 472 514 526 672 546 377 410 486 551 461 523 333 381 467 471 616 261 403 319  46 609  41 400 455 359 582 528 457 610
 560 465 484 439 419 503 466 402 325 405 586 462 516 480 815 475 369 404 398 349 302 215 372 506 542 364 631 392 495 374
 453 504 322 517 657 435 425 604 635 436 198 332 385 282 424 389 384 414 488 224 558 447 415 469 470 608 445 568 522 505
 652 378 300 510 515 350 386 838 362 271 497 430 187 335 837 264 379 653 459 585 482 532 444 562 501 310 474 231 434 357
 736 527 438 383 477 401 395 311 478 279 105 429 476 390 706 617 283 376 375 580 431 802 451 468 306 373 646 432 628 216
 833 576 303 559 449 388 428 756 396 284 422 426 247 206 823 371 367 816 408 338 321 423 368 341 573 309 722 317 508 237
 634 433 413 709 417 289 574 421 456 242 249 416 507 244 260 448 898 811 496 387 229 409 248 801 347 352 313 268 893 351
 872 330 336 294 632 315 446 407 274 887 163 223 186 320 664 182 263 740 233 777 397 281 348 724 360 545 899 235 828 354
 667 192 255 643 809 166 290 751 738 128 227 382 278 204 868 256 251 730 200 850 355 677 129 380 813 160 794 314 733 275
 755  79 169 685 864 121 345 845 184 363 767 146 765 193 458 749 286 877 240 712 201 285 328 203 894 412 460  69 358 702
 625 178 173 831 418 262 789 650 252 307 102 226 337 239 703 883  72 776 238 798 288 774 346 406 304 269 876 356 830 207
 673 202 183 875 602 697 684 543 145 324 334  67 442 134 277 662  51 727 272 775 171 305 670 817 890 122 679 158 849 185
 156 234 857 270 259  65 897 720 800 112 195 280 512 208 236 818  89 116 100 742 126 861 707 630 888 295 550 232 764 796
 499 150 854 891 895  86 896 753 846  57 241  34 298 119  23 822  52 750 194 668 175 821 103 658 257 123 681 219 492 858
 731 243 154 827 866 104 640 886 760  74  53 579 889  35 190 671  11 873  26 781  73 792  76 744 254  82 583 880 485 153
 174 115  63 834 695  58 766 735 758 881  17  55 790 759 228 787 162 246 168 596 230 273 141 832 878  77 719  22 885 571
  84  45  83 575 536 566 900 844 316 139  24  10 860 106  31 780 131 548 120 879 754 862  70 840 538 663 745  49 525 892

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.1589e+06us (= 2158.9ms, 2.1589s)
Wall-clock time (full program): 2.21615e+06us (= 2216.15ms, 2.21615s)
Satisfaction error: 0
Number of search iterations: 964
Number of local moves: 680 (including on plateau: 217)
Number of local minimum: 35 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7491
Total number of local moves: 5683 (including on plateau: 1688)
Total number of local minimum: 255 (including on plateau: 204)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 898 718 726 175 821 101 876  49 886 764 105  43 889 708  99  61 348  37 124  35 759 824 112 851 847 806 686  97  47  23
 878 574 322 603 672 122 100  26  87 607  86  80 637 707 745 113 774 861  94  65 804 712  52 762 622 747 532 131 893 107
 168 697 474 890 665 895  54 576 831 760  50  59 139  45 128  30 727  44  90  88 600 662  34 176 866 795 775 516 819 862
 165 199 896 900 832 121  81  83 142 888 115 166 899 659 221 103 897 865 148  62 822 768 791 826 126 837 558 132 135  78
 230 771 874 815 892 102  85  32 254 743 253 149 645 852  64 146 854 203 154 120 792 709 222 812 710 779 730 208 157 158
 172 872 794 873 817 848 133 153 298 838  93  68 657 868 844  51 842 427  28  82 591 530 257 207 733 248 735 159 117 180
 130 756 350 335 646 284 811  67  89 853 233 249 679 639 858 244 569 273 182 234 685 843 281 891 155 840 751 163 209 216
 255 529 682 577 565 197 276 836 263 833 185 136 753 205 799 198 701 320 294 224 653 879 723 271 269 259 758 245 340 290
 303 800 802 694 801 228 437 250 488 732 411 441 763 731 291 317 578 219 445 231 609 431 268 193 215 275 781 331 129 321
 362 769 258 850 629 247 225 438 299 442 267 214 624 663 880 274 766 179 229 422 845 887 279 178 243 307 711 421 372 235
 226 364 295 572 583 405 150 272 648 220 793 195 652 754 141 367 803 332 455 883 864 805 324 313 436 236 623 408 183 213
 361 379 319 605 475 296 875 237 186 384 312 547 286 776 402 394 371 406 510 358 338 582 212 755 783 433 894 468 400 171
 398 385 326 675 620 482 480 407 528 318 399 451 587 409 345 297 351 552 353 356 664 458 508 512 280 426 654 403 452 439
 359 327 329 304 417 270 863 503 434 419 415 489 443 742 424 453 447 382 365 316 570 678 383 404 507 477 537 420 410 428
 337 450 606 536 531 373 467 363 483 360 456 476 470 454 506 471 377 330 333 490 430 493 499 479 376 461 612 457 485 354
 432 465 413 278 564 311 448 462 446 563 414 412 334 632 519 496 464 389 396 498 423 366 602 386 388 444 588 535 460 387
 123 567 314 544 391 568 509 526 343 309 264 323 472 478 418 579 627 640 549 515 504 393 501 416 463 328 260 459 598 534
 486 517 487 491 325 573 548 518 628 368 346 540 671 277 502 256 375 520 511 581 164 261 302 616 551 473   3 592 538 495
 585 344 599 546 315 586 541 566 217 604 584 571 559 342 429 466 523 626 104 521 306 184 500 505 449 481  31 561 239 631
 545 658 621 174 162 369 160 524 610 575  25 625 550 374 525 619 308  84 765 614 251 380 557 514 636 562 310  73 617 728
 397 593 242 169 170 553 484 580 615 241 554 687  75  40 688 696 173 543 601 666  41  27 720 341 693 713 301 642 590 680
 635  33 719  46 262 715 494 522 336 119 656 738  63 110 589 649 266 618 305 556  42 401 695 608 634 689 187 643 555 630
 560  24 497 283 289 706 655 594 611  55 788 676 177  91 704 717 106 716 740 683  70  56   5 761 378 633   7 542 750 641
 644 596 677  12 161 667  17 293 767 661 772 650  71  76   8 749 144 785 870 722 137 109 669   2 705   1 425 660 784 681
 690 300 191 339  22  72 777 703 140  60 857 684 282 287 116 674  77 748 741 597 392 285 798 700   6 151 349 835 808 834
 780 156 240  79 381 729 527 744 673  18 668 613 292 143 734 860 189 647 825 702 204  53 724  19  74  10  38 757 813 823
 807 196  57  16 125 828 746 810 692  39 827 885 190  92 181 855  69  13 856 789 246 145 699 147 752   4 211 797 651 790
 737 167 252 539  58 595 513 770 714 201 877 809  48 698 192 814 435 118 721 849 355  36 816 638 232 134 265 111  96 725
 786  21  15 200 210 533 492 782 796 194 839 869 370 223 390 830 227 820 881 787 152 352  98  14  29 778  95 882   9 841
  66 288 138 395 114 739 691 829  11 347 871 670 238 440 773 736 127 818 846 469 202 206 884 218 357 188 108 867 859  20

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.08566e+06us (= 2085.66ms, 2.08566s)
Wall-clock time (full program): 2.14217e+06us (= 2142.17ms, 2.14217s)
Satisfaction error: 0
Number of search iterations: 811
Number of local moves: 713 (including on plateau: 169)
Number of local minimum: 15 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6790
Total number of local moves: 5413 (including on plateau: 1310)
Total number of local minimum: 232 (including on plateau: 168)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 888 890 477 146  85 817 125 763 137 804 719 745  75 196  72 863 140 468  29 180 101 211 577 628 114 880 397 876 228 884
 813 899 855 717  88 845 259 849  98 639 830 159  48  81  32 820  46 708 675 878  73 454  99 772 164 824 648  68  47  27
 135 169 861 145 132 747  91 841 825 896 667 846  37 214 737 840  71 839  66 699 643  26  50 748 193 789 706 138 233 131
 883 216 265 885 873 698 897 571  55 891 895 184 110 106  51 787 198 862 864 567  74 158 147 735 202 207 767 144 104 119
 243  41 852 232 886 754 305 677 105 678 779 821  70 171  89 782  60 611 872 504 150 134 247 182 814 154 724 174 869 535
  49 252 681 479 751 543 257 766 117 644 563 808 115 269 720 871 242 786  78 834 757  25  76 240 837 275 603 197 155 525
 179 221 263 206 141 730 894 799 108 776 555 775 381  93 308 823 369 796 475 162 224  64 266 773 219 251 881 235 815 733
 112 253 654 544 712 602 333 518  62 734 726 271  84 195 647 177 190 762 181 276 261 826 239 893 236 793 790 301 307 836
 292 347 168 210 237 617 245 859 900 800 882 791 278 414 262 208 204 816 175 413 282 318 163 299 892 439 866 124 268 746
 217 429 831 565 774 569 393 559 286 401 673 398 172 165 851 192 360 582 250 417 313 357 359 742 560 372 379 300 189 860
 321 473 691 564 711 550 178 854 226 400 539 302 294 231 858 185 510 453 432 589 244  56 348 856 166 322 743 288 391 740
 335 222 406 771 287 868 303 629 368 562 424 514 407 258 212 289 557 277 203 622 412 310 605 764 408 584 672 676 273 297
 312 415 364 857 371 683 295 575 151 423 523 456 692 323 349 670 660 655 130 538 405 328 375 506 354 383 311 274 248 889
 426 485 436 309 447 399 586 522 480 385 394 449 410 704 340 332 411 848 451 380 209 351 533 341 588 542 553 430 319 455
 329 382 438 390 604 457 229 443 572 484 363 467 225 524 534 365 674 403 520 551 548 489 470 435 521 404 358 337 554 445
 428 597 395 298 256 356 517 419 334 402 482 558 503 336 472 450 378 618 446 540 440 469 396 409 531 512 433 578 471 491
 388 499 596 442 448 465 194 327 579 362 501 680 434 528 527 418 377 581 494 370 713 441 461 353 474 570  15 285 425 568
 392 621 386 187 502 264 459 331 519 283 481 500 511 458 487 427 361 338 620 594 697 556 545 366 530 583 630 507 260 120
 566 100 590 293 462 291 476 170 696 123 346 505 756 627 669 492 241 422 316 488  34 549 710 460 496 576 495 835 613 118
 650 509 619 355 416 213 598 343 483 234 218 609 420 532 731 345 663 205 693 127 592 624 653 326 478 664  90 612 431  82
 651 463  30 254  43 389 537 421 580 610 623 684 591 682  63 721 601 161 536 306  24 652 541  58 649 685 238 573 656 493
 633 599 635 444 352 153 574 284 464  16   8 716 744 729  28 749 636  40 645 761 595   1 687 152 641 695 128 727 640  39
 631 665 314 606 246 102 552   3 625  38 136 317 466 513 608 705 508 173 688 384 593 671  19 325 497 632 498 778 637 585
 686 546 376 607 437  57 634 315 780 111 199 561 803 587 725 133 616   2 666 129 805 658 490 344 723 156 272 220 330 547
 668 626   6 850  14 526 529  67 661  42 121  86 870 732 709 374 718  96 703 714 722 689 486 296  20  31 367 736 801 255
 701 690 176 646 659 280 781   7 657 191  80 126 614 750 324   5 753 267  11 615 777 822 818 183 320 342 279 795 794  52
 700 759 107  44 200  35 739 201 812 350 249  18 843 662 452 103 785 148 765  79 679 828 827 139 853  54  12 755 802 515
 819  94 758 792 874   9 707 113 149 188 227  65 838 797 829  13 810 223 783   4 516 887 842 116  69  10 270  17 798 898
  45 867 143 600 642 109 769 167 811 215  22  21 877 832  61 281 638  36  33 741 844 809 784 304 879 694 230 807  97 157
  23 186 142  77 865 387  59 122 875 833 290  83 847 806 768  95 738 339 715  53 788 752 702 770  87  92 160 728 760 373

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.47141e+06us (= 2471.41ms, 2.47141s)
Wall-clock time (full program): 2.52485e+06us (= 2524.85ms, 2.52485s)
Satisfaction error: 0
Number of search iterations: 1153
Number of local moves: 718 (including on plateau: 242)
Number of local minimum: 77 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8884
Total number of local moves: 5906 (including on plateau: 1790)
Total number of local minimum: 419 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 129  86  98 540 171 654 397  84 570 856  59 551 758 893 783 137 707 130 111 251 752 628 820 769 726 831  35  37 860  92
 655 102 895 134 380 657 835  33 143 705 153 886 880 818 798 181 672 631 239  46 803  85 579 173 822 121  64 838 107  80
 142  74 126 451 842 416 899 122  78 849  51 482 724 786 777 553 678 826 131 315 865 194 185 602 892 262 138  42 168 845
 224  68 106 373 576 568 148 174 205 700 457 750 819 847 764 247 799  77  81 175 677 408 201 538 859 564 896 203 209 802
 600 144 167  96 858 719 166  91 492 572 164 225 850 676 894 663 163 170 127  66 830 104 800 718 855 900 198 182 216 809
 240 202 824 592 611 885 212 311 887 805 245 837 191 214 391 684 891 438 105 367 703 575 211 550 326  56  72 114 222 754
 766  88 141 821 160 797 879  93 668 505 120 309 871 261 155 841 712 243 159 208 254 249 195 898 688 851 289 158 303 833
 178 226  83 664 161 737 650 884 736 862 229 368 238 230 177 755 811 197 393 183 734 207 888 746 693 765  73 154 374 119
 232 725 233 674 823 549 395 304 897 577 179 187 135 740 259 814 890 352 485 308 363 200 332 488 608 722 257 291 297 199
 889 386 269 882 365 844 145 333 776 479 196 359 340 299 237 857 671 341 149 574 329 378 379 789 717 627 263 110 231 301
 270 287 288 649 258 339 713 330 829 869 827 328 647 276 348 320 523 327 460 787 302 405 285 452 609 531 471 437 186 162
 792 213 424 816 273 347 682 188 613 681 318 861 497 290 337 228 442 498 217 305 443 271 528 708 430 720 394 236 413 350
 396 580 255 828 219 426 399 494 343 562 294 317 704 335 278 748 272 542 313 594 519 459 434 536 648 495 360 454 388 323
 507 435 384 422 345 321 403 351 338 500 566 265 414 701 524 428 464 513 825 584 415 520 355 447 481 517 440 316 376 358
 387 433 356 382 567 503 417 455 515 658 377 467 404 527 436 587 421 256 543 418 489 372 398 486 496 432 346 390 402 595
 439 366 420 446 406 411 246 472 381 466 539 510 641 385 392 371 444 571 560 468 353 478 493 448 362 465 461 535 487 499
 695 525 509 582 545 470 410 469 364 477 548 383 603 375 558 412 295 441 344 559 293   6 522  29 319 557 427 552 607 639
 449 621 423 453 598 354 555 534 331 325 480 506 541 490 112 370 588  90 483 532 612 643 456 253 504 116 518 521 511 546
 554 604 669 389 565 626  71 445 118 260 514 694 361 586 502 622 537 401  69  61 633  19 547 296 484 431 743 491 617 606
 113 429 585 133 573 151 292 596 169 473 516 593 729 569 508   5 462 369 635 475 618 646 583 108 310 529 605 556 476 709
 619 624 632  95  89 662  94 530  31  17 768 128 342 616 738 651 204 501 779 699 220 659 788  57 103 533 512 526 675 623
 637 689 706 189 763 132 286 794 324  36 599 561 407 590 544  87  50 463 731 250 683  25 760  79 147 306 591 670 780 636
 757 666 796 264 150 172 656 775 234  54 653  14 679 474 692 136 146 642  52 589 634 661 123 696  99 101 773 686 578 563
  48 728 714  15 615 215 124 581 268 307 614  65   8 690 610 425 660 620 747 716 652 640   1 184 458 242 698 854 793 223
 601 244 645 283 140  18 275 710 687 115 733  53 667 450 810 176  49 597 839 881 156 808 756  55 357 284 638 673 774  41
  82 741 723 266 751 697 781 711 409 152 630  67   2 180 785 702 281 715 767 759   7 735 139 336 277  23 812 870  70  45
 732 753 744 193 778  58 625 629 227 190 730 782  40 165  30 206 274 866 804  62 125 685 853 221  47 280 644 864 832  76
 419 868  60 727 680 241 815 312 742  75 872 322   9  27  20 300 192 852 745 772  10 807  22 801  97 252 875  16 846 739
 298 795 840 874 210 267 109 843 806 349 314 883   3  21  24 761 100  12 873 790  13 877  34 817  63 784  44 863 691 157
 665 813 400 282  43 279 836 867 334  39 770 762  11   4  32 248 117 834 749 721  28 771 848 235  38 218 878 876  26 791

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.05391e+06us (= 3053.91ms, 3.05391s)
Wall-clock time (full program): 3.1092e+06us (= 3109.2ms, 3.1092s)
Satisfaction error: 0
Number of search iterations: 1793
Number of local moves: 774 (including on plateau: 312)
Number of local minimum: 129 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13644
Total number of local moves: 5630 (including on plateau: 1850)
Total number of local minimum: 986 (including on plateau: 229)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 848 830 883  66 103  65  61 115 742 607  83  79  60 826 708 625  63 610  34 251 580 134 713 711 884 858 122  91 864 899
 168 846 785 153 890  69 409 597 759  86 739  56 242 740 894 803  45  97  68 183 331 480 860 852  37 366 868 139 872  81
  80 129 380 159  64  47 623 106 831  92 863 602 738 787 444 751 485  40  72 819 188  67 805 839 185 855 107 841 882 634
 165 197 844 822 866 132 627 227 893  22 874 125 829 110 425 811 150  33  87 809 812  78 572 791 112 178 895 275  98 656
 280 105 687 209 802 111 193 876 800 181 100 568 854 208 897 689 503  24  88 817 482 287 842 859 102 900 166  55 137 693
 136 236 823 825  76 865 697 892 681 146 167 316 190 845 529 816 248 241 265 677 143 283 765 160 782 218 148 202 391 752
 217  52 735 223 109 207 871 714 832 119 229 234 763 172 446 662 348 281 269 778 840 312 307 896 195 797 154 885 120 748
 881 356 701 278 293 253 570 579 676 221 333 216 327 475 857 637 175 308 133 814 793 305 888 557 279 113 397 244 298 558
 101 350 878 219 213 273 203 258 511 237 672  70 252 176 891 652 873 321 296 815 887 898 833 717 191  75 194 609 152 698
 198  93 578 291 232 189 758 879 685 886 722 214 862 288 600 641 371 263 347 487 477 284 336 775 303 577 304 319 238 318
 382 334 592 230 306 849 192 292 659 310 781 343 245 210 700 789 220 438 274 664 289 377 605 688 850 240 358 247 367 684
 328 313 654 555 870 329 420 385 636 256 471 364 324 399 351 585 228 222 405 300 445 423 853 286 569 889 512 406 436 301
 525 416 807 443 320 381 346 239 640 388 177 594 576 325 556 549 337 515 201 260 561 581 276 548 583 338 828 272 565 368
 506 538 488 282 352 462 344 551 461 869 422 387 375 692 573 463 369 596 550 295 635 537 302 309 379 412 297 271 317 481
 335 467 520 499 376 384 264 514 451 393 496 432 639 394 340 407 403 354 435 450 430 404 400 426 469 513 877 418 466 559
 355 442 353 459 464 427  43 474 447 530 138 505 564 478 372 290 224 633 535 508 411 501 392 516 628 457 524 691 686 468
 414 560 268 599 544 315 541 429 449 473 378 502 571 162 246 440 410 500 593 434 448 509 365 383 527 458 566 484 349 598
 616 552 254 483 339 518 170 413 408 357 465 431 182 536 323 437 523 374 768 428 531 591 519 456 389 401 479 522 504 546
 586 575 235 472 563 542 330 678 173 590 507  50 285 645 127 361 402 651 574 545  54 494 521 526 262 528 724 611 699 205
 613 674 267 433 532 567 589 396 489 588 492 486 441 733 255 158 104 415 553 342 667 452 606 498 395 612  16 322 657 163
 543 621 332 653 631 673   8 149 145  10 622 660 629 730 453  85 539 716 655 476 128 510 226 491 618 547 643 421 493 108
 601 460  84 663 497 373 424 454  14 534 614 470 157 619 169 171 799 554 608 270 719  32 540 130 810 490 649 766 638 206
 707 648 142 760 756 562 683  18 360 761 582 495 362 679  74  59 783  28 718 533 121 200  27 126 670 647 587 615 741  71
 702 680 225 694 632 720 187  53 179 764 780 704 584  89  90  29 386 792 455 277 124 603 624 140 517 141 695 734 658 257
 804 726 341 682 795 749 750 709  46 767  30 728 661 144  96  42 736 620 650 116 696 345   1 186 299 390 311 259 417 419
 703 725 180   6 314 786 118 666 249 753 715 818 155 398 671 233 644 847 595  57  51 617  23 156 721  19 646 665 690 294
 788 835 199   5   3 808 773 774  36 250  26 710 737  82 266 359 723 821 779 668 184 642 135  13 732  73 439 772  49 834
  38 744 151 762 794 820 776 743 164 837 212 827  35 757 174 114 727 769 851  39 669 856  25 370 161  62  44 261 712  21
 801   7 117 784 770 196 747 131  41 675  48 705 147  20 745 626 836 706 867  77 215 875  31  99 771 630 211 755   2 880
  94   4  12 806   9 843 798 204  58 813 777 824 729 796 243 231 861 746 790 326 604 838 123  11  95 731 754 363  17  15

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.15116e+06us (= 2151.16ms, 2.15116s)
Wall-clock time (full program): 2.20985e+06us (= 2209.85ms, 2.20985s)
Satisfaction error: 0
Number of search iterations: 903
Number of local moves: 760 (including on plateau: 163)
Number of local minimum: 15 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7183
Total number of local moves: 5513 (including on plateau: 1425)
Total number of local minimum: 256 (including on plateau: 171)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   1 811 886  32 152 870  35  46  11 801 845 826 731 859 869 233 205 778 871 405  20 827 362 164  17 238  22 755  45 798
 234 407 702 776  62 117 216 696 835  28   8 849   3 783 750 228 361 719 264 193 326 815 824  53  30 444 763 799 399 831
  16 173 855 777 800 189  24 660 836 378 765 530   5 863 712 254  38 217 742 230  88 820 725 162 103 716 752  48 223 814
 132 227 856  14  13 182 740 135 311 838 685 732 808 658 700 166 229 743 157 754  18 633 805  42 147 767  19 706 703 595
 145 111 781 761 461 160 105 693 568  44 840 613 736 785 726 263 666 758 321   4  27 803 772 114  61   9 768 570 169 681
 256 727 625 676 137 402  25 669 792 786 766 619  10 596 809 102  39 684 221 220  84 285 723 186 397 269 597 839 133 841
  80 738 802  68  83 120  12  54 779 832 363 560 744 603 751 187 795 576  76   6  37 757 784 699  70  93 746 680 698 722
 653  78 713 714 647 128 704   2 735 733  79 753 562 701 782  51 456  36 638 583 126 729  15 127 123 639 668 569  99 672
 622  67 642 741 564 167 246 534   7 715 268 242 589 592 667  92 694 683 620 306 590 426 507 557 201 634 618  41 348 535
 489 632 769 617  95  98 688 671 718 107 314 351 614 472 728 116 604 565  82 179  73 615 474 161 520 525 606 353 587 692
 662 515 664 479 391 100 331 707 598 581 354  81 548 646 532 110 627 573 118 493 315 475 717 554 142  47 790 241 624 500
 400 552 563 674 465 207 558 678 605 536 129  63 631 686 466 318 480 521 458  31 347 574 497 421 308 577 510 191 412 657
 579 417 665 449 561 298 691 533 460  23 281 277 435 582 355 408 526 442 542 656 471 374 439 485 575 388 372 208 415 608
 425 459 340 470 506 260 641 463 384 588 445  56 484 366 495 447 409 541 477 629 371 537 446 436 538 612 473 385 395 437
 491 555 322 349 514 550 567 663 675 523 487 302 611 509 431 432 450 410 566 423 155 448 455 443 367 508 307 200 335 467
 602 545 300 286 297 518 481 503 419 483 494 369 539 454 303 522 468 486 420 403 478 457 512 544 540 517 296 519 401 359
 310 591 453 490 430 433 345 556 504 499 528 356 546 438 881 252 498 271 289 635 884 343 429 380 418 392 334 262 398 370
 328 342 390 389 771 648 338 387 350 341 416 804 393 492 352 513 304 645 244 649 531 381 501 529 626 211 333 434 505 368
 323 125 237 396 379 897 527 377 382 482 373 679 214 464 516 876 317 476 213 301 578 842 291 316 708 203 524 325 287 887
 451 364 274 305 428 427 358 158 411 865 652 628 365 202 219 847 375 295 878 873 655 319 239 344 496 406 245 630 549 257
 196 857 251 259 288 637 232 265 290 181 599 282 332 183 168 882 226 875 860 572 788 190 235 600 773 837 255 807 337 258
 275 293 130 180 312 547 441 292 843 383 339 640 502 880 327 830 276 209 543 309 584 829 198 330 806 793 273 621 299 231
 690 810 243 240 144 601 862  57 188 357 705 225 212  97 224 825 894 336 222 756 586 109 874 893 346 266 119 636 823 175
 833 294 270 272 817 670 745 844  69 250 695 376  34  49 149 689 889 134 796 551 812 194 206 720 553 283 171 324 749  77
 775 593  86 267 896 580 192 797 313 280 414 488 199  60 249 687 150 780 673 764 559 156 154 236 885 760 329 278 794 121
 248 153 184 261 900 734 682 140 360 139 737 404 170 172  89 511 872 210 165 816 846  29 247 828 739 858 677 422 848  74
 762 623 197 899 106 898 883 138  58 469 136 122 822  85  52 747 853  33 585  90 864 143  72 813 866 141 821 413 730  94
 819 101 113 195 697 787 879 279  43 861 462 215 721 177  55 594 643 148 176 571 852 146  64 610 834 424 253 774 818 204
 851 748 131 709 888 850 892 650 320 386 185 178  65  40 108 724  59  87 644 452 659  96 789 891 616 104 759 394 174  66
 867 607  71 770 711 440  75 868 651  26 151 895 890  21  50 609 112 284 654 661 791 163 159 877 710 854 115  91 218 124

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.08276e+06us (= 2082.76ms, 2.08276s)
Wall-clock time (full program): 2.13602e+06us (= 2136.02ms, 2.13602s)
Satisfaction error: 0
Number of search iterations: 929
Number of local moves: 756 (including on plateau: 206)
Number of local minimum: 19 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6622
Total number of local moves: 5304 (including on plateau: 1353)
Total number of local minimum: 198 (including on plateau: 172)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   4 518  55  59  32 708 724 791 372 228 790 846 804 370 238   6 166 809 318 800 748 760 784 814 169   3 789 444 287  79
  69 454  92 330   7 847 844 749  94  56 785 831 111 156 218  47 848 826 143 829 208 839 776 758 167   2 842 849 722  16
 778 843 251 153 519 795 767 698 300   5 852 726 677 195  20  25 416 805  23 745  81 798 741 282  84  11 824 834  87 180
  86 840 202   9 756 771 786 754 229 773 759 811 102  48 219 122 252 747 148 833 107 725 779 755 163 301  30 774 272 362
  66 837  63 243 165 783 738 768 221 727 642 705 109  95 233 616 182 408 185 825  88 821 770 711 103  49 752 623 234 753
 709 788 106 721 710  27 780 203 170 690 732 580 636 198 309 140  26 678 146  96 305 697 611 641 830 329  71 600 193 793
 714 537 115 643 743 731  31 762 607 734 477 645 794  43  12 214 230 604  18 807 267 692 608   8 675 152 700 694  83 175
  62 599 217 118 717 739 684 178  68 294 729 671 112 365  24 635 144 723  50 606 535 775 657 621 638 271 772 808 227 476
 719 706 631  72 656 579 715 663 491 613 527 720 653  45  10 634 117 601  15 626  34 313 244 683 664 328 578 618 162  98
 666 620 588 188 685 603 513 746  93 181 617 204 625 286 121 701 619 549 417 627  33 532 500 595 594 215 525 570 123 179
 564 510 550 712 674 676 502 529  77 474  67 326 652 245 574 644  52 536 183   1 503 622 670 614 629 264 437 704  36 488
 303 647 484 650 563 469 661 568 220 598 461  13 126 315 585 639 541 368 394 145 640 632 531 566 581  14 562 506 283 450
 569 321 686 520 612 436 511 542 130 591 289 108 499 129 514 646 353 451 311 696 557 575 597 490 371 128 688 445 577 173
 489 497 544 547 524 341  42 351 587 449 462 540 465 385 637 509  37 485 422 546 302 571 481 552 468 493 538 447 347 457
 440 403 459 386 475 479 483 498 582 496 593 480 439 548 472 522 492 400 424 298 507 397 412 584 464 312 396 402 398 274
 521 407 418 435 560 292 410 458 419 438 487 421 392 501 443 428 387 413 453 343 323 425 512 441 545 446 361 414 894 528
 471 374 304 434 517 596 470 324 442 429 384 373 523 382 366 336 891 589 707 369 505 337 610 495 262 628 404 308 340 345
 331 455 452 350 742 494 357 448 360 473 236 515 430 609 433 426 526 822 556 359 319 209 354 291 334 561 423 880 390 380
 482 816 320 322 375 258 391 379 377 296 405 658 420 559 383 332 693 339 890 280 269 256 864 327 333 602 255 265 567 802
 378 253 381 349 342 356 399 293 478 388 565 401 155 827 376 290 689 346 630 856 460 456 249 299 393 796 358 314 765 673
 270 427 730 781 335 266 355 348 782 859 516 226 141 667 539 306 718 268 486 364 463 367 310 278 411 751 222 277 735 317
 389 200 415 850 186 172 257 395 858 206 216 669 246 660 687 276 649 239 467 431 787 892 160 259 158 662 212 189 868 860
 295 508 875 801 132 247 184 882 866 197 273 127 260 766 777 288 572 224 835 307 885 138 737 177  97 680 254 191 624 316
 242 504 879 534 279 142 190 605 728 263 159 285 551 740 695 679 763  76 845 325 797 131 134 275 851 432 210 248 672 281
 135  40 832 828 164 363 232 199 466 648 154 558 119 838 881 284 533 352 836 213 713  19 147 187 889 867 261 338 764 655
 205  90 736 555 854 114 194 100 817 865 125 530 812 668 876 792 699 237 590 543 823 225  44 149  74 899  51  99 553 196
 895 104 757 883  91 124  58 137 691  35 101 157 120 703 573 884 761 297 806 113 702  38  85 116 855 654 898 161 863 853
 897 139 235 659  89  64 110  28 554 819 201 136 871 583 874 886 665 168 813 241 615 151  61  78 857 872  29 406 681 733
 870  57 250 176 878 174 887  46 803  39 841  82 861 820 682 799 150  80 818  60 223 105  22 877  41 893 862  54 192 873
 896  21 888 207 133 869 240  73 633 651  70 171 810 769 744 409 344  75 586 231 716  17  65 592 815 900 211  53 576 750

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.66006e+06us (= 2660.06ms, 2.66006s)
Wall-clock time (full program): 2.71676e+06us (= 2716.76ms, 2.71676s)
Satisfaction error: 0
Number of search iterations: 1366
Number of local moves: 730 (including on plateau: 209)
Number of local minimum: 85 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11028
Total number of local moves: 5984 (including on plateau: 1995)
Total number of local minimum: 726 (including on plateau: 227)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 111 581 728 571  53 848 116 781 103 710  70 899 117 128 540 142 873 160 537 649 144 799 881 162 106  28 896 213 889 680
 640 859 673 739 114 706  60 696 745 816  65  75  98 791 891  43 119 216 225  64 863 836  49  56 120 410 895  41 733 877
 126 326 868 679 722 789  69 790  61 824 566 771 345 829 767 122 755 261 659 123 137 639  79  57  50 134 851  88 879 149
 153 715 208 753 228 777 145 860 185 858 278 820  90 846 768  63 157 147 192 472 825 759  71 124 750 196 511 654 163 747
 275 752 765 469 320 872  95 642  85 637 227 778 657 795 813  72  36  68 576 159 223 832  91  96 161 900 849 168 255 847
  82 533 681 449 243 751 207 669 743 738 190 195 266 792 805 197 205 522 665 115 199 830 171 136 336 631 897 183 296 788
 110 703  93 772 179 757 245 833 875 806 172 189 267 671 882 242 271 341 741 304 239 561  74 869 366 652 621 206 244 230
 234 587 233 297 158 723 308 774 148 809 247 539 174 786 779 229 381 164 676 850 186 841 893 281 175 204 617 169 232 821
 264 607 165 839 283 322 252 653 892 686  84 259 327 555 614 249 605 290 776 182 834 866 214 265 226 688 596 374 254 294
 318 864 414 632 880 775 277 364 811 551 274 246 323 333 438  67 395 301 843 354 867 325 380 138 218 646 898  66 257 260
 210 372 129 527 209 861 887 363 721 601 691 340 312 309 286 488 212 316 693 888 307 402 258 507 284 663 697 288 319 375
 802 429 303 870 466 358 289 595 387 628 328 408 428 591 667 220 241 349 871 315 337 334 270 298 285 827 638 377 256 348
 342 350 385 305 886 536 457 462 314 660 346 331 634 476 287 317 332 521 425 396 302 412 480 324 876 563 376 329 491 600
 445 313 485 498 397 367 311 453 746 547 446 627 483 443 279 456 862 450 489 370 439 610 222 355 406 404 359 330 433 490
 379 390 423 586 407 299 352 558 528 444 411 416 463 415 474 465 509 437 335 420 417 584 401 460 382 532 613 458 484 473
 422 478 403 477 310 435 544 548 398 609 413 569 426 520 357 418 736 361 554 452 441 300 353 496 442 378 447 360 295 573
 512 494 368 481 624 104 430 578 570 479 508 514 504 293 582 455  18 392 475 516 482 546 440 365 692 112 389 550 470 572
 525 454 556 486 519 505 500 543 622 251 459 424  87 602 650 530 557 262 400 461 499 224 448 510 531  30 291 434 497 658
  14 534 598 132 635 517 737 427  13 272 562  16 535 542 552 593 253 362 166 645 421 560 699 545 373 549 506 626 564 567
 487 625 698 694 493 515 580 151 623 152  34 538 526 503 611 594 436 590  78   2 513 221 585 529 619 180  86 620 603 629
 731   4 674 217 559  38 501 198 344 384 419 502 579 141 276 662 399 100 518  27 734 608 553 714 762 356 343 740 766 666
 717 125 615  23 700 139 523 273  48 391 641 668 748 648 133 835 269 592  99 707 575 250 589 785 689 231  26 636 760  80
 672 292 704 143 618 178 644   3 432   8 577 606 238 651  81 661 690 817  94 464 565  45 726 684 711 371 347 685 211 597
 764  83 656 156 708 102 201 200 583 193 719 655 783 109  22 826 588 702 194 718 524  37 616 683 735 215 268 725 744   6
 670 541  20 167 154  24 782 237   9 130 630 720 797  12 219 716 709 856 188 798 758  10 727 695 105 431 263 729 705 713
 770 121  29 173  25 338 769  33 687  21 842 678  62 321  44 701 383 612 282 807 761 203 643 730 838 763  11 742 787 339
 235 108  52  51 837 306 599 176 682 131 853 101 724 187 113 814 845 803 369 823 181 471 754 819 604 388 150 633 664  42
 852 140   1 451 801 236 874 574 409 107 804 495 885  32 184 894  77 884 280 155 568  73 828 808 756 800  19 405  92  31
 796 784 815 492 177 248 883  35 675  55 794  97 844  59 394 712 822 890 468 812  47 191 202 170 677 393  40 831  54  58
 857 351 773 386 810  89 878  46  76  17 865  39 793 135   7 732 780 749 647 467 127 146 818 854 240 840  15 855 118   5

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.40001e+06us (= 2400.01ms, 2.40001s)
Wall-clock time (full program): 2.45577e+06us (= 2455.77ms, 2.45577s)
Satisfaction error: 0
Number of search iterations: 1210
Number of local moves: 757 (including on plateau: 271)
Number of local minimum: 63 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9321
Total number of local moves: 6136 (including on plateau: 1842)
Total number of local minimum: 448 (including on plateau: 225)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 580  76 773 727 683  91  46 894 888 112 746  95 587  93  29  47  94  43 776 143 761 586 897 868 621  88  50 896 733 492
 585 806  31 845 600 772  34  16 729 791 804 763 770 150  54 799 106  48 639  21 676 834 898 117  62 867 202 128 293  75
 634  24 284 893 651 769 120 165 858 720 792 122 872 101  28 637 864 115 886 807 699 708 208  42 177  79  37 900 190 133
 716 136 144 764 786  73 724  99 844 797 823 261 196 384  66 541 119 127 884 523 860 805 245 153  10 255 377 161 849 793
 632 251  52 739 690  80 330 242 660 741 825 215 172  71 264 121 771 214 738 674 775 862 139 684 171 890 131 361 871 149
 661 228 267 889 669 846 254 155 882 891 583 826 179 157 186 857 230  60 895 110 774 628 130  87 892  70 147 151 193 618
 732 283  49 659 450 156 866 146 711 670 726 265 512 174 268 547 789 238 736 189 835 710 234 879 175 210  97 194 319 696
 801 204 209 755 390 159 235 355 730 610 236 349 819 126 170 616 294 248 658 417 883 788 899 206 318 158 132 222 863 665
 813 299 589 620 451 298 285 252 686 447 654 351 300 347 292 766 225 246 712 315 344 881 364 266 203 391 187 301 816 814
 382 289 714 700 750 227 224 414 466 482 885 290 865 279 308 707 306 198 356 269 317 611 329 370 455 395 346 397 875 309
 830 212 832 291 334 184 352 274 385 557 705 313 304 218 338 887 365 336 852 432 288 553 325 407 323 280 173 463 855 847
 853 467 719 662 749 240 526 312 362 363 635 135 296 358 216 848 305 473 597 303 311 468 332 369 259 379 476 460 260 782
 406 320 342 874 426 360 199 137 534 753 321 747 376 405 471 449 613 335 500 494 367 820 368 232 515 422 393 433 425 478
 461 419 465 443 456 314 431 472 359 581 477 540 178 824 350 501 751 427 436 249 619 491 371 409 273 413 480 378 205 742
 423 458 691 550 803 505 453 435 372 307 474 442 525 389 388 452 247 402 129 537 575 441 454 374 437 429 444 488 490 401
 487 381 528 387 339 380 498 543 552 438 386 495 568 497 415 404 327 493 459 554 518 424 475 410 559 571 412 533 464  18
 549 469 331 316 310 420 286 448 102 650 582 605 383 481 562 164 584 281 625 507 486 542 558 357 565 607 416 484 519 326
 373 489 479 333 118 445 522 548 646 408 253 538 439 521 446 353 640 564 524 574 545 258 652 411 504 645 138 527 592  30
 517 430 295 272 140 572 604 569 421 250 434 599 529 615 513 596 570 606  38 544 256 233 531 470 343 678 695 622 506  67
  12 536  25 263  59 697 608 530 617 211 220 510 630 535 601 188 403 539 532  63 689 271 546 577 759 588 520 653 567 566
  57 514 579  98  78 563 706 576 551   1 502 496 603 704 503 108 624 623 219 636 398  55 499 631 598 698 556 713 573  53
 200 668 428 201   3 590 595 555 324  23 322 672 124 666 663 578 675 638 142 626 560   2 594 591 682 509 721 485 483 195
  26 677 633 270 243 648 702   9 237 641 328 673  89 752 767 287 627 694 207 602  45 223  61 614 664 688 679 709 345 375
 217 609 735  85 113 644  33 561 168  74 221 703 757 685 745 169 418 629 167 226  83 354 612 817 680 693 649 647 681 340
 182 701 400 103 812  68 756 762 104 394 105 794 656 671 808 125 516 859 114 737 160 141 839 715   6 785 765 145  14 278
 277 758 725 111 276 657 655 734   8 185  90  41 642 718 876 748  44 802  36 667 181 213 508 777 754  51 870 810  19 282
 275 796 511 392 231 787 768 841  17  22  20  56  84 399 815 348 229 843  86 778  64  69 744 723 856  39 829 811 244 838
 366 800 462  58 837 842 687 836  96 740 162 854  65 780 731 241 779 821  77  11 163 148   4 116  82 728 873 302  27 827
 396 337 783  35 191 297 833 784 166 643 123   5 197 593 781 192 743 795 154 717 176 262 692 828 722 100 840 109 152 869
  72 878 440 180 877 831 183 851  40  13  81 760 798 822 861 239 257 818 341 790 107 134   7  15 850 809 880  32  92 457

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.33307e+06us (= 2333.07ms, 2.33307s)
Wall-clock time (full program): 2.38844e+06us (= 2388.44ms, 2.38844s)
Satisfaction error: 0
Number of search iterations: 1118
Number of local moves: 788 (including on plateau: 302)
Number of local minimum: 55 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8619
Total number of local moves: 5768 (including on plateau: 1877)
Total number of local minimum: 403 (including on plateau: 232)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 549 364 695  63 568 137 750 878  74 805 718  17 715  68  81 324  23 797 793 184  70 774 887 883 735  98   4  73 783 605
 558 856 678  89 645 615 642 899  54 475 761  56 859 148 624 699 165 792 789 108 127 833  47 169 781 116  75  69 538 248
 231 711 498  92 815 175 657 897  97 771 885 132 831  31 110  93 880 746 737 219  78 505  95 709 749 801  48 182  65 675
 320 136 176  61 845 569 874 810 214 734 881 218 145 172 164 583 147 736 894  33 763 666 253 896 819 826 152 149  30 249
 721 841 191 759 895 559 195 174 194 857 822 199 890  32 197 827 107 247 870  35 563 892 104 256 824 849  25  58  37 295
 625 780 157 516 738 867 185  96 264 777 694 258 702 226 877 539 201 775 733 112 531 619  99 210 459 162  88 339 236 650
 576 740 170 103 844 828 773 313 140 453 818 290 839 121 593 852 209 840 335 251 686 855 131 425 728 133  26  66 109 268
 307 754 843 644 187 825 277 156 276 900 579 398 129 786 707 333 206 753 630 235 794 232 322 220 757 225 360 255  82 343
 523 693 384 860 179 888 128 260 864 898 207 345 186 233 297 879 382 817 286 298 811 682 198 269 604 192 317 245 223 367
 656 673 402 633 837 660 267 239 301 592 309 509 368 544 204 658 327 803 713 380 288 418 202 173 599 357 304 412 316 371
 326 778 893 265 243 646 305 188 405 700 323 240 458 283 809 875 242 698 292 428 510 378 383 146 597 421 399 338 241 705
 743 213 741 649 419 838 328 275 395 433 266 487 252 494 791 407 285 595 287 274 582 358 270 318 724 394 330 138 545 684
 321 336 470 891 263 410 550 341 289 681 362 422 352 440 566 401 448 546 303 375 337 500 512 351 635 406 442 350 411 804
 282 502 476 829 300 726 499 434 363 484 426 334 413 381 302 370 463 215 250 435 349 391 622 479 564 461 567 537 291 770
 439 404 366 471 369 491 372 601 466 580 408 495 246 480 572 430 293 454 472 379 493 467 441 315 520 608 535 469 447 432
 474 365 409 393 497 443 436 340 331 272 489 400 586 456 514 521 373 554 525 446 465 452 637 385 396 485 507 389 464 511
 296 528 578 548 271 332 486 490 626 377 450 347 444 261 557 503 536 506 481 344 577 508 571 482 102 279 417 553 587 478
 451 562  42 556 606 527 640 168 594  21 118 543 518 420 492 621 560 462 540 230 526 517 533 445 429 488 552 427 504 423
 105 438 628 181 570 180 598 460 496 386 603 455 359 477 524 392 602  80 483 667 205 547 457 590 353 634 565 591 677 212
 468 542  46 228 653 200 414 574 665  87 561 532 551 515  67 227 769 124 610 609 680 135 617 585 388 674 638 596 589 171
 160 122  71 237 618 234 708 641 663 329 664 573 670 676 513  64 522 299  51 696 312 529 501 643 348 631 620 607 584 229
 278 319 669 281 762 356 732 600  41  55 224 449 662 387 311  43 719 376 730 747 150 222 636 692 161 613 431 661 627 581
 117 647 659 177 141  45 668 703 802 416  28 745 731 534  76 284 790   6   2 683 616 310  13 672 153 848 623 834 795 397
 163  36 390 575  11   9 799 541 712  83 727 555 687 629 325 254 729 114 689 716  85 588 706 123  90 654 813 851 519 342
 119 280   5 158 134 203 651 739 765  15  24 788 639 690 652 614 806 130 221 632  62   8 722 766 355 671 655 866 742 403
 346 166 688 374 744 196 101 725 710  50  91 648  10 823 189 798 865  77 125 787 273  59 784 685  57  19 723 835 850 717
 820 167 714 424  34  94 106  84 211 755 139 697   7 756 854  79 861 208 100 758 760 611 871 144  60 751 812 889 748   1
 842 306 415 814 159 764 238  44 782 354  40 691 113 800 872 437 111 259  49 869 821 190 183  72 193  18 772 807 704 796
 846  39 294 808 154 612  16 816 863  20 178 830  38 779 361 151 752 262  52 884 216 143 832 882 308 679 868  53   3 776
 853 217 767 836  14  86 120  29 858 155 720 862 115 873 314 257 142 244 473 701 785 126 886 530  27  22 847 876 768  12

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.97782e+06us (= 1977.82ms, 1.97782s)
Wall-clock time (full program): 2.03113e+06us (= 2031.13ms, 2.03113s)
Satisfaction error: 0
Number of search iterations: 801
Number of local moves: 558 (including on plateau: 149)
Number of local minimum: 31 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5648
Total number of local moves: 4898 (including on plateau: 1117)
Total number of local minimum: 126 (including on plateau: 137)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 824 101 728  38  92 207 642 895 639 893 815 522 653 231 844 142 469 141 139  30  59 132 655 879 138 157 571  89 898 892
  70 699 786  36  69  32 798 482 882 387  40 851 684 712 889 103 887  31  88  75  29 847 634 109  87  71 878 890 494 875
 133  34 853 880  84 865 378 120 100 144 178 900 661 738 787 248 636 150  63  57 154  66 650 532 190 757 644 896 772 845
  81 163 698 807 748  79 806 350 136 819 243 742 803 567 868 174 876  83  97  27 128 316 805 180 122 809 850 126 897 115
 192 162 894  28 881 170 867 181 277 856 752 884 725 641 790 152 283  45 245 107 164 834 587 290  72 779 660 108 778 111
 686 129 849 258 235 275 332 720 189 724 145 883 871 826 234 198 818 197 214 224 458 119 841 380 854  67 480 830 250 229
 130 888 607  55 223 131 785 859 113 700 230 264 768 675 716 324 855 284 486 216 156 147 814 825 261 175 693 237 794 104
 127 149 706 840 281 215 874 640 279 577  85 721 285 611 208 161 632 303 470 562 764 761 440 200 322 267 723 257 872 183
 345 153 797 213 297 339 272 775 420 683 319 885 305 782 862 226 623 293 256 238 330 600 618 366 325 211 566 247 811 358
 289 401 658 236 240 306 426 828 545 497 310 770 672 781 246 266 415 268 866 461 899 165 739 172 333 456 412 344 419  95
 308 363 563 301 370 413 294 654 262 666 852 392 379 435 377 282 321 453 158 857 719 402 833 410 160 292 774 265 664 296
 354 389 804 388 176 474 219 812 338 709 276 526 613 479 718 430 582 315 186 433 205 367 663 291 861 295 423 241 668 280
 437 514 542 418 502 318 343 512 483 586 383 513 400 404 374 427 579 682 441 438 239 436 627 454 323 385 839 255 408 253
 543 447 574 552 369 336 312 510 381 735 551 439 445 399 465 481 364 371 540 390 307 557 548 347 251 459 823 353 406 260
 376 484 493 442 516 221 302 511 617 421 446 504 507 564 869 549 335 361 331 348 500 249 662 509 328 505 524 254 362 425
 519 432 326 529 341 580 478 528 616 508 455 368 501 346  26 375 695 464 434 589 585 499 313 396 360 489 286 386 620 471
 565 476 118 643 561 263 518 393 201 538 506 337 597 462 584 424 602 491 681 527 473 496 515 340 595 544 199 416 116 334
 575 498 300 656 382 554 451  17 520 492 503 556 409 525 444 593 359 184 578 422 449 431 403 621 452 657  51 405 553 475
 411 517 114 604 485 622 688 270 603  90 594 269 560 731 559 533 417 592 105 591 329 299 429 523 649 569  46 537 173 606
 395 550 352 703 596 598  24 140 609 304   7 394 619 705 467 541 466 601 769 193 488 477 222 530 694 573 106 629 217 546
 615 701 135 539 707 407 570 463 558   6 678 274 583 674 676 460  12 766   1 487   9 588 232 659 536 590  91 372 521 605
 652 647 311 689 625 612 626 191  77 112 837 117 220 166 535 555 203 608 667 645 327 448 182 680 531 490 123 610 212 817
 800 744  99 708 670 743  20 711 581  96 317  54 242 169 151 342  62 384 796 637 755 298   3 758 646 740  94 821 397 677
 568 753  80  86 669 729  68 495 713  93 799  19 168 202 196 754  33 671 783 813 717 576  43  13 727 696 450 673 155 773
 468 710 259 614 624   5 206 209 780 314 747 704 252 177   2 784 137 827 651 741 843 734  50 648 428 687  41 685 167  21
 746 171  98 457  47 831 760 391 631  76 726  61 278  25   4 802 227 599 745 691 572 795 218 635 697  56 365 763 228 820
 633 751 210 771 765 750  52 124 886 273 842  60 102  14 121 848 714 891 870 776 628 143  74  23 225 187 188 732 125 737
 792 789 472  22 630 822 777 398  15 309 793  11  39  82  49 863 665 767 357 244 791 749 185 838 702 733 355 194  37  35
 873  10  16 715 638 810 271 288 204 373  42 146 110 159 320 756  53 816 736 832 759 148 351  78 788 801 414 835 443 730
   8 690  73 287 692 808 356  48 860 534  44 349  64 233 134 722 195 877 762 864 679 836 179 829 858  18 846  65  58 547

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.26016e+06us (= 2260.16ms, 2.26016s)
Wall-clock time (full program): 2.31573e+06us (= 2315.73ms, 2.31573s)
Satisfaction error: 0
Number of search iterations: 1036
Number of local moves: 775 (including on plateau: 177)
Number of local minimum: 47 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7768
Total number of local moves: 5827 (including on plateau: 1512)
Total number of local minimum: 319 (including on plateau: 190)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 740 854  89 730 849 857 815 801  46  92 643 886 105 522  73  85 888  71 448 723  43 418 147 779 842 108  33 558  32 238
 848 290  82 692  96 802 765 493  58 189 683 151 883 725 129 113 170  84 844 624 567 760 159 850 655 142  62 833 103 663
 834 703 887 602 830 366 820 356 111 122 625 222  91 135 134  50 862 773 157 571 141  60 562 892 835 100 805  19  66 784
 817 754 149 889 595 824 185 660  94 632 639 132 831 217 125 160 881  93 180 691 126 153 804 732 745 181  27 133 196 870
 803 647 145 588 895 686 753 267 104 123 203 761  77 661 165 118 869 112 631 667 243 110 751 731 310 890  26 219 107 853
 233 818 168 250 896 885 479 240 192 227 845 898  97 673 273 223 882 182 204 863 116 255 793 770 737 164 241  41 235 635
 268 593  57 785 811 828 876 176 109 207 446 499 221 823 191 275 158 714 583 800 161 220 783 878 209 351 303 261 162 767
 336 565 288 687 764 212 173 471 208 427 872 257 305 644 154 226 315 796 795 841 259 150 900 401 851 218 358  76  98 868
 826 665 179 325  99 224 242 308 843 155 827 899 352 891 343 201 232 386 708 894 349 836 285 772 172 193 228 313 462 306
 225 674 237 690 445 810 174 247 374 748 293 391 166 675 334 178 744 277 682 787 864 441 729 756 195 284 244 115 438 298
 385 329 322 287 371 327 326 330 389 344 873 897 245 694 272 216 280 266 771 435 200 299 806 545 395 871 408 320 466 846
 318 884 364 296 370 337 231 283 279 312 651 677 587 807 485 564 190 354 832 780 128 314 388 716 382 434 345 301 464 442
 622 348 271 880 378 264 355 270 346 480 341 372 664 450 413 398 383 874 698 556 402 416 262 561 492 475 350 482 316 396
 380 531 816 393 360 357 460 424 387 292 616 363 394 449 566 375 458 893 505 289 512 392 379 568 431 409 331 365 488 332
 373 619 291 472 278 340 607 399 323 547 553 426 507 304 377 552 526 484 353 465 463 361 447 433 733 423 359 467 555 478
 489 495 390 432 468   5 444 420 454 574 490 428 443 338 517 421 541 400 514 404 570 311 333 405 527 510 560 585 429 618
 319 572 525 520 474 612 543 169 523 335 575 451 477 397 367 422   8 516 439 550 578 414 117 376 533 521 542 559 584 497
 381 577 470 487 539 537 412 580 594 476 461 131 436 184 592 411 534 124  65 177 721 538 641 415 456 455 536 501 573 511
  44 609 508 498 620 758  45 491 606 459 590 549 528 205 615 369 554 544   2 481 294 579 654 249 650 653  13 504 425 419
 469 551 494 321 500 640 457 430 546 453 152 260 603 139 613 519 623 576 102 175 384 410  83 406 627 518 699 503 666 596
 509 496 713 144 362 532 700  40 483  69 506 234 757 295 707 586 604 600 253  88 672 626 342   9 599 597 702 548 473 269
 407 214 513 140 610 156 648  47 712 657  81 668 263  52 717 611  87 535  90  54 778 601 617 302 715 563 797 662 581 637
 670  25 727 297  79 743 630 163 339 608 529 656 679 167 747 742 557 215 252  63 645 718  31 324  29 724 697 659 589 211
 695 239 629  86 524  61  21 775 866 248  68 502 649 197 738 734 605  34 598 119 790 728  67  17 646 688 735 789 628  39
 704  22 530 486  35 146 696 678 855 879  80 621  56 752 858 838  36 658 347 148 199 739 127 101  10 759 766 705 636  48
  11 213 711  24  59 710 246 821 701 722  70 515 709 300 782 860 746 786 437 202 669 798 136 188   4  12 763 614 634  72
   1 106 768 633 328 236 681 684 680 749 307  37 726 187 638 750 143 736 210 186 774 706 368  42 417 676   7 792 689 258
 130  78 440 569  95   3 652 794 642 799  15 282 809 755 847 840  53 719 582 317 254 276 741  51  16 856 859  14 762 265
 138  38 875 114 591 137  30 861 822 776 230 121  64 206  23 865 403 693 781 256 825 812 286  75  28 685 852 808 839 281
 540   6 877 198 194 120  49 837 829 814 251 229 791 671 720 813 183  20 452 309 788  74 777 171 274  55 867 769 819  18

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.82317e+06us (= 2823.17ms, 2.82317s)
Wall-clock time (full program): 2.87899e+06us (= 2878.99ms, 2.87899s)
Satisfaction error: 0
Number of search iterations: 1459
Number of local moves: 769 (including on plateau: 222)
Number of local minimum: 94 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11813
Total number of local moves: 5911 (including on plateau: 1764)
Total number of local minimum: 749 (including on plateau: 252)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 793 190  27 162  11  12 201 819  61 186 814 862 142 845 846  60 875  78 396 737 130 720 778  79 777  84 707 795 858 470
 323  32 749   8 840 668  35  77 307 775 834 513 798 667 373 276 835  97 137 636 136 821 844 773 212 366 582 398 364  39
 424 829 656 343 791 694 101  26 282 761 774 664 184 799 803   9 804 446 613  85 444 401 256 839 155 185 375   1 738  33
 315 854 696  20 231 695  36  67 739  25 812 811  37 827 111  38 823  98  10 386 172 822 721 596 338 796   5 831 832 771
 255 666 873 770  30 850  56 341  14 638 801 809  29 742 119 781 734  88 129 319  92 689 731 661 258  71 709 334 830  96
 230 682 603 202 117  75 207  31 511 740 807 848 788 628  90 615 564 626  91 708 206 681 762 824 145  19 153 261 678 623
 108 760 779 216 518 670  23 139 320 782 257 645 674 766 642  15 759 120 109 817  52 599 602 102 631 680 285 236 647 562
 355 853 575   4 250 650  80  17 148 730 625 637 744 729 714 679 723 540 220  28  49 630   3 676 284 671  64 488 690 659
 110 677 408 644 106 567 234 627 522 718  55 125 746 639 498 745 716 547 140 520 395  44 457 802 160 706 197 187 612 611
 228 640 654 200 237 585  74 673 166   2 590 568 724 691  40 634 810 609   7 371 466 614 583 743  24 566 204 517 717 578
 149 711 683 663 512 572 346 451 152 629 493 675 735 705 550 431 651 505 249  82  65 703 491 501 454 569 118 222  16 432
 161 790 299 660 519 607 339 526 419 616 478 507 555 356 573 430 485 523 467 180 331 622 516 427 456 489  72 133 441 538
 271 606 428  13 179 643  68 545 620 479 556 632 438 584 565 433 597 624 589  18 363 379 495 577 490 492 325 437 508 561
 591 652 587 641 571 410 329 416 436 601 532 426 486 442 646 403 361 704 465 104 151 365 409 383 400 421 476   6 672 429
 327 176 449 388 499 469 359 521 380 321 580 722 447 558  63 464 502 504 542 543 500 595 336 618 435 308 539 481 414 475
 288 534 422 531 497 377 509 273 448 473 462 314 374 397 503 563 574 381 420 415 480 404 484 217 471 477 842 592 244 549
 510 528 557 370 524 407 617 527 301 406 553 459 483 399 330 354 392 294 387 376 515 443 367 699 304 267 525 350 372 899
 413 506 482 360 581 463 560 468 586 455 378 369 418 494 345 559 191 727 268 337 551 687 487 405 461 280 324 725 295 340
 747 262 385 335 286 348 865 440 349 290 296 881 312 353 402 302 281 272 785 598 736 227 298 344 780 342 789 496 425 289
 871 384 554 434 884 225 579 270 291 246 544 317 352 411 238 333 472 453 445 828 655 530 266 235 205 351 536 786 452 368
 876 390 439 292 713 313 800 458 772 892 306 239 300 253 833 165 362 358 838 252 546 269  89 126 460 214 697 688 265 310
 665 263 147 662 608 264 755 194 887 303 423 251 157 127 213 347 144 259 861 877 765 868 229 181 758 326 754 593 245 389
 792 156 277 767 232 103 836 852 784 826 293 305 146 240 287 116 283 260 859 247 841 224 878 382 728 278 541 685  54 243
 700 196  66 701 274 825 813 883 847 182 242 100 175 223 178 309  21 128 698 322 849 357 211 896 658 279 657 535 318 872
 548  94 124 241 529 889 787 753 702 210 393 177 114 131 808 328 159 867 860 605 600 188 134 167 764 894 316 203 297 633
 726  42 198 635 394 132 851 733 135  86  22 275 805 154 880 895  50 818 768 769 797 221 218 254 171 756 649 885  83 113
 570 105 195 886 776 189 763 169 610 112 233 248 864 143 150 856  45 820 604 669 863  53 174 208 741 891 888 412 115 163
 537  73 897 815 209 141 857 879 653 107  93  48 719  57 621 712  76 890 900 870 619 183  46 417 893 173 193  69 192 576
  99  58  87 686 882 514 751 648 874 450  43  41 710  34 311 794  62 757  70 123 594  95 752 168 170 816 855 837 391 843
 533 806 219 866 715 158 684 692 199 474 226  47  59 121 783 869 164 122 588 693 552  81 898 215 732 748 138 332 750  51

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.23463e+06us (= 2234.63ms, 2.23463s)
Wall-clock time (full program): 2.29239e+06us (= 2292.39ms, 2.29239s)
Satisfaction error: 0
Number of search iterations: 1055
Number of local moves: 701 (including on plateau: 170)
Number of local minimum: 48 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7803
Total number of local moves: 5496 (including on plateau: 1375)
Total number of local minimum: 343 (including on plateau: 208)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   6 828  23 173 840  40 800  86 803 801 869 772 364 843 868 109 871  47 278 847 117 684 850  89 120 221 878 104   3 181
 742 788  38  68   2 783   5  85 130 866 412 877 261 851 852 255 872  76  37 865   7 867 864  25 779 842 876 301   9  80
 770  32 797 455 793  17 727 340 806  51 887 202 266 723 829  72 832  93 203 777 288 637 787  67  66 296 774  14 786 128
 748 707 790 713 759  18 729  42  43  55 798 274  44 810 824  81 717 305  63 780 320 849 811  33 809 212  24 175 855 127
  39 781  90 469 171  46 695  57 837 804 731 619 286 821 516 229 815 736 150 860 193 314 650  34 694  29 749 164 835 101
 765 326 438 382 808 143 715 732 176  99 773 704  50 726 709 158 645 743 185 814 339 253 845   8 477 145 708  96 543  10
 680  27  26 332 697 689  12 724 159 315 698 714  60 718 374 237 691 638 251 769 189 309 711 504 660 155 716 651 687 122
 771 121  28 231 705 608 753  59 722  79 747 206  15 369 515 161 627 703 634 668 180 630  21 600 626 622 702 553 681 178
 582 632 733 307 737 751 607 132 223 528 617 144 147 331 417 225 754 635  56 589 100   4 696 657 613 163 649  64 763 659
 679 567 618 234 611 669  36 546 721 633 655 571 201 285 196 182 670 594 281 584   1 113 558 578 601  84 700  35 654 658
 496 652 624 593 466 568 620  31  73 131  41 606  13 304 675 349 533 640 656  45 631 102 602 673 565 530 674 570 491 561
 505 537 639 383 554 420 591 625 154 596 587 168 279 260 405 211 511 535  54 492 116 573 423 549 579 564 467 588 647 503
 494 488 583 247 524 603 461 540  11 566 569 547 480 108 249 350 529 532 531 476 407 473 499  19 482 551 534 519 520 623
 421 453 560 526 449 576 523 612 137 513 372 440 527 400 169 475 457 371 521 580 306 508 468 441 506 478 454 470 500 302
 646 445 465 428 483 429 541 474 487 485 493 458 431 437 484 498 552 358 507 390 395 427 384 394 140 502 462 425 321 574
 894 351 518 489 486 268 545 479 401 510 514 424 512 389 497 430 381 408 397 436 559 348 368 495 373 303 456 536 360 388
 525 471 396 597 406 472 490 392 343 319 433 299 459 450 741 460 352 362 419 323 378 517 805 481 270 426 359 448 432 690
 385 379 366 755 402 398 434 442 254 363 327 439 585 577 661 411 409 764 414 311 730 403 386 308 361 861 282 463 410 235
 367 345 257 873 357 262 330 269 446 316 443 822 750 598 641 799 447 312 725 375 418 688 242 318 415 435 287 263 335 380
 341 214 452 719 365 346 376 817 444 298 858 325 827 706 550 590 195 413 391 334 807 712 273 317 329 377 256 291 297 295
 166 342 310 662 284 393 387 336 354 816 217 293 846 648 677 768 243 333 355 238 812 760 347 236 232 313 294 839 370 644
 199 276 322 735 177 227 190 328 404 186 289 813 834 609 509 844 300 239 738 209 838 880 248 338 292 785 207 831 324 344
 111 188 899 629 271 244 241 900 833 686 148 678 464 220 337 616 219 213 605 205 653 643 222 699 233 859 172 399 208 720
 252 870 353 615 757 245 886 230 685 216 210 671 664 265  48 857  62 146 451 134 795 192 283 885 280 595  52 782 776 258
 152 863 272  77 197 888 246 879 548 581 290 277 636 142 356 682 107 228 761 218 599 215 184 820 676 539 250 784 157 891
 153 562 259 538 881 882 224 892 884 179 118 610 663 501 135 555  91 110 896 165 621 522  92 734  87 226 187 848 156 744
 586 191 745 875 106 853  22 740 575 762 119  98 752  94  53 802 198 778 796  61 766  30  82 693  88 775 267 614 200 794
  75 123 897 124  78 692 592 862 746 739 114 240 701  95 105 874  69 422 542 275 557  49 628 854 890 683 183 264 149 893
 174 115 823 126  20 167  70 728 572 133 112  83 642  97  58 672 204 883 826 556 604 710 170 836 856 125 825 666 895 767
 791 841 194 160 129 818 667 136 544 889  74 141 756 138  65 563 162 898 792 139 789 103  16 830 416 819  71 758 151 665

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.64731e+06us (= 2647.31ms, 2.64731s)
Wall-clock time (full program): 2.70194e+06us (= 2701.94ms, 2.70194s)
Satisfaction error: 0
Number of search iterations: 1087
Number of local moves: 632 (including on plateau: 197)
Number of local minimum: 51 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10104
Total number of local moves: 5586 (including on plateau: 1798)
Total number of local minimum: 574 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 135 889 812 401 642 609  64 870  84  67 818 136 865 151  46  92  49  66 643 879 114 502  94 878 681 896 716 289 887 140
 731 835 857  50 880  63 782 840 169  90 830  32 852  55 212 883  69  85 316  42 138  73 117 684 854 895 542 143 800 596
 834 867 678 106 657 218 133 591 128  68 900 216 877 163 107  97 145 405 589 886 679 157 142 866 622 666 672 159  72 815
 644 264 876 869 728  52 683 831 101 195 223 687  61 102 209 801 208  62 838 171 228  56 121 874 577 645 766 706  39 898
 630 680 150 236 899  75 226 148 105 780 841 152 301 574 296 650 184 110 773 233 268 130 892 260 581 882 698 821  81 859
 833 160 748 126 701 891 156 881 307 186  86 803 272 176 255 853 116 123 769 103 744 234 174 595 842 702 884 515  80 200
 873 196 166 243 827 410 777 319 173 213 131 816 396 250 194  83 185 358 828 363 894 125 170 809 694 628 729 631 141 893
 808 885 118 230 758 167 192 794 743  82 723 613 271 332 204 263  59 269 807 221 274 203 822 257 265 562 784 844 215 750
 710 284 217 232 714 398 288 718 848 241 258 224 303 653 104 244 155 287 825 538 755 888 222 211 500 315 685 660 175 863
 802 378 371 247 318 259 298 518 320 788 372 353 276 202 402 379 283 594 770 310 875 329 428 220 820 342 764 826 330 341
 786 235 686 599 392 295 335 570 299 189 504 249 443 367 489 467 383 190 781 850 193 277 227 359 506 564 707 832 395 346
 638 355 281 408 659 309 399 871 407 279 306 798 324 856 763 300 302 322 499 625 205 390 256 214 304 321 456 776 427 465
 297 487 665 413 343 546 375 381 275 689 187 872 444 198 501 421 387 528 754 495 414 333 347 393 440 571 348 663 475 273
 496 477 191 453 445 462 454 661 368 266 323 651 261 897 267 469 536 493 558 313 418 420 165 336 652 519 409 670 503 382
 438 280 490 317 523 452 512 539 458 325 351 851 439 326 721 415 411 520 529 340 488 360 403 505 354 563 510 345 370 380
 373 464 468 516 144 210 441 700 575 507 430 480 607 486 412 540 432 334 328 374 389 419 533 561 551 406 483 455 446 451
 417  15 656 473 525 429 602 442 553 463 669 457 376 394 460 527 479 433 270 559 377 425 424 497 305 364 447 592 485 400
 423 481 471 543 352 450 578 225 534 586 435 601 459 436 248 391 448 115 285 466 491 544 569 623 549 545 476 134 579 478
  40 597 633 692 535 361 646 164 470 704 437   2 610  47 293 560 616 521 366 494 584 511 282 555 426 530 671  48 583 537
  89 416 627 711 522 541 640  87 674 552 327 206 531 713 554  12 717 654 219 369 517 548 734 573  60 600  35  77 576 634
 590 508 513 509 290 677 384 262 712 386 526 350 626 747 514 603 580 431 120 461 158 612 582 688 183 567 188 100 550  98
 312 472 673 756 124 725  57  93 637 746 649 349 639 482 608 699 588 566 291 836  65  38 732  96 161 556 132 629 691 113
 127 709 648 557 356 617 621  17 181 565 585 606 675  79 705 790 635 422  14 753 719 799  29 720  70 229 251 314 614 108
 122 547 484 624 111 611  78 286 668 726  76 245  11 658 862 632 795 890 337 837 662 695 727 179  71 172 129 338 793 149
   7 783  22 738  99  33 735  23 775 772 804 604 785 752 843  16 810 839 207   5 139 767 796 162  31 294  30 292 737 615
  51 146  41 817 137 708 636 112 618 311 813 587  88 434 641 792 860 849  37 724 703 740 404 647 240 154   4 593   9 619
 242 759 664  18 252 819 598 690 201 733  53 568 829 762 774 730 736 697 253   1 168 655 805  95 180   6  21 199 768 239
 344 197 254 147 385 449 741 474 620 696  74 237 109 864 814  25 771 760 177 397 868 676 787  19 667   8 331 119 823 682
 231  58  27 693 153 824 362 365 715 778 739 524  36 861 238  20 765 847  54 846 806 751 742 605 572   3 308 388  26 178
 492  91  28 791  44 855 722  43 797 532  45 246 749 498 779 761 811 745 278  24 182 858 789  34 757  10 339 357 845  13

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.60961e+06us (= 4609.61ms, 4.60961s)
Wall-clock time (full program): 4.66275e+06us (= 4662.75ms, 4.66275s)
Satisfaction error: 0
Number of search iterations: 3046
Number of local moves: 1010 (including on plateau: 448)
Number of local minimum: 220 (including on plateau: 60)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 24558
Total number of local moves: 8775 (including on plateau: 3340)
Total number of local minimum: 1978 (including on plateau: 431)
Total number of resets: 7
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 237 831  33 865 131  37 826 244 808 799 734  34 585 125 670 173 640 823 875 329 430  13 323 832 310  52 258 867  15 616
   6 811 753   5   2  51 164 760 845 731 828 215 282   8 702 817 172 730 856 843 816  19 144 245  86 155 803 840   7 819
 106 130 428 386 857  30 818 771 321 838 850 314 707 121 756 247 187 822 757 788 739  36 837 690 213  43 140 204 274 105
  48 802 733 440  46  89 169 740 749 830 785  97 153 784 228  26 371 864 839 775 383 207 683 382 104  68   9 691 773 647
  42  14 863 851  69 490 158 841 692 325 698  84 188 134 270 701  66 798 810 763 711  92 737 281 235 288  44 795 752 723
 327 800 686 778 593 113 115 814 751 805 722   4 679  74  63  53  41 651 725 738 536 135 779 195  10 123 678 781 726  20
 191 280 754 660  24 460 127 747 675 666 761 635 596 534 181 765 231 150 672 676 185 175 628 343 151  12 588 767 790  91
 184 755 688 721 682 580 118  11 658 619 659 704 748 745  25 623 299 523 664 732   1  60  27 205 109 136 787 768 644  40
 180 783 656 627 653 661  70 642  28 380 712 636  50 646 736 584   3 259 531 591 120  71 601 203 114 406 735 577 634 626
  62 673 693 564 198 612 662 566 674  21 663 668 137 546 483 549 240  58 586 498 219 246 648 266 295 171 632 680 613 592
 178 697 624 633 602 511 496 529 561 535 422 572 599 548  18 687 538 256 582 129 162  54 639 160 542 415 576 595 492 163
 533 570 520 579 617 597 416 552 530 493 376 559 457 551 525 518 446 257  79 505 200 202 604 102 565  31 509 480 605 537
 192 156 419 685 554 637 442 478 590 555 468 583 539 654 491 589 216  59 464 472 100 432 507 111 488 514 503 513 544 560
 545 470 471 547 508 495 497 527 420 562 550 189 563 272 609 418 399 515 504 517  16 315 481  55 543 524 431 568 482 522
 501 410 510 412 485 477 461 453 439 463 502 358 465 456 499  90 443 516 409 571 441 506 479 357 408 578 400 454 528 444
 451 436 519 403 350 727 425 423 450 346 373 474 437 438 540 462 434 667 466 445 424 448 426 319 379 553 494 356 401 449
 486 433 390 374 473 467 377 388 303 414 500 860 411 384 333 556 320 458 447 452 459 476 351 405 429 395 378 484 877 435
 885 238 360 294 413 398 606 352 891 392 385 267 341 567 622 427 475 366 370 393 348 852 375 575 363 625 389 347 331 268
 824 402 404 758 335 387 284 369 311 361 621 858 364 301 291 337 489 372 367 381 532 608 391 469 322 657 300 368 218 834
 611 283 813 297 342 279 252 289 309 344 336 421 250 305 298 302 879 610 353 871 868 742 354 854 232 340 317 744 275 345
 681 170 223 365 296 359 827 328 243 806 304 239 273 417 710 316 641 649 271 221 873 846 277 796 855 332 251 397 211 338
 396 718 154 262 217 792 193 210 848 226 201 182 794 278 587 312 797 512 292 362 708 541 254 801 793 880 249 241 308 407
 804  81 196 286 629 261 255 889 133 248 225 263 709 165 842 349 746 276 116 521 645 895 874 684 569 869 206 208 265 306
 829 112 290 318 148 326 899 222  67 293 209 355 558 236 146 833 791 652 260 285 614 694 776 878 630 729 214 234 212 705
 703 455 157 183 139 887 782 269 122 174 229 696 190 199 650 881 847 230  94 194 669 777 287 598 876 724 807 119 313 264
 706 233 186 227 862 147 835 108  96 143  75 764 786 809 253 197 699 581 600 145 893 743 167 487 861 615 883  78 177 159
 695 224  49 886 780 897 594  73  93 168  38  87 128 716 766 103 769 557 126 138 677 812 339 394 770 689 844 166 717 220
 573  23 892  45 872  99 720  64 700 142 152 728  83 821 526 741 655  95 149  35 324 870 161 607 762 882  82  98 900 714
 896 894  29  17 888 759 307 141  32 719  76 849 671 815  57 774 107 132 179  65 334 789 124 603 665 825 898  56 101 713
 643 631  22  47 750 890 620 715 176 117  61 820 772 866 638  85 574  77  72  80  88 859 242 618 836 884 110  39 330 853

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.03167e+06us (= 2031.67ms, 2.03167s)
Wall-clock time (full program): 2.08581e+06us (= 2085.81ms, 2.08581s)
Satisfaction error: 0
Number of search iterations: 830
Number of local moves: 700 (including on plateau: 153)
Number of local minimum: 26 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6139
Total number of local moves: 5396 (including on plateau: 1171)
Total number of local minimum: 146 (including on plateau: 129)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 332 198 822 117 805 238 830 617 366 796 876 765 101 268 790 862  12 802 818  89 283 793 211 783 357 291 169  92  21  11
 814  66   3 137 192  36 839 140 815 776 840 523 227 807 835 716  99 870 872  68 409 797  80 768 106  84  91 878 483 144
 861 110 804   2 150  32 851 147 825 784 881 174  67 857 816 746  13 863 886 322 375 749 178 620  15 188  22 347   9 821
 781  86 787 492 708 339 769 538 378 852 754 761 190 172 809 844 582 824 471 203 182 743  10 186  30 197  20 742  27  38
 828 614   4 316   5 189 685 396 794 843 733  73 151 730 236 837 112 673 745 130  34 831  16 735 338 507 630 666  24 640
 668 637 767 399 702   7 704  88 164 707 619  23 146 676 248 638 127 712 774  63 262 698   8 718 457 250 719 667 152 715
 677  70 811 285 770  25 576 657 725 697 800  96 566 713 777 655  29 510 729 114  40 750 228 103 385 121  19 693 116 778
 654 695 752 226  71   6 753  18 438 798 599  37 230  41 639 671 445 734 562 634  52 517 104 795  72 241 744 775 662 550
 700 343 678 200 490 256 607 524  17 572 611 624 564 651  78 647 252 717 455  81 149 592 253 710 113 578 771 600  26 656
 541  43 681 235 727 213 660  90 215  33 755 588 384 447  61 680 612 674 686 503 165 751 299 705 237 180 531 598 632 589
 636 568 714 330 642 296 548 224 212 593 501 652 389 549 345 480 580 615 558 131 530 691 388 527  35  28  14 559 539 641
 547  53 561 234 650 269 584  65 581 485 290 204 579 542 608 557 626 603 467 644 133 310 293 631 156 543 597 552 556 595
 585 610 587 314 616 346 163 658  42 613 444 421 583 555 565  31 519  98 470 477 300 602 298 520 395 476 534 563 487 643
 424 504 502 383 478 439 514 430 575 489 325 526 434 488 407 509 398 261 495 420 464 508 433 529 422 254 521 451 540 392
 497 496 577 376 377 454 468 604 518 513 499   1 426 327 554 356 486 308 537 621 431 443 448 313 473 462 546 474 536 394
 653 569 481 349 484 453 458 419 494 328 436 373 533 294 472 758 493 428 528 429 329 432 466 326 391 348 479 312 427 573
 463 498 271 574 515 545 331 740 381 380 225 350 390 506 324 449 360 525 452 412 885 323 511 418 845 303 460 401 402 276
 482 302 423 664 232 560 334 410 405 365 288 287 661 469 233 450 400 413 351 362 833 205 900 359 801 406 446 221 860 393
 411 648 282 799 336 596 297 865 847 386 354 500 281 369 270 461 355 425 896 440 756 209 553 340 335 321 315 361 305 202
 456 244 408 627 259 722 367 318 605 267 591 370 382 867 416 646 491 320 333 437 535 435 739 191 792 372 403 284 352 286
 162 505 404 594 849 786 368 255 590 245 166 358 895 289 353 273 442 134 309 709 889 317 692 301 625 899 193 263 371 279
 307 551 223 544 214 728 266 397 826 342 229 854 731 243 888 311 337 387 251 161 747 465 820 414 586 737 274 181 122 379
 201 817 304 763 231 782 176 672 721 135 869 780 344 246 183 275 341 265 129 772 532 240 834 218 623 827 207 292 277 459
 153 206 100 567 272 785 522 723 512 173 210 415 220 247 859 115 675  74 239 898 875 264 659 846 618 736 319 258 882  93
  62 856  58 706 171 690 184 813  82 257 123 363 873 185 125  44 789 441 195 810 516 295 819 217 417 738 199 897 699 891
 142 158 222 570 858 779 194 893 120  79 175 838 155 208 216 160 764 242  59 808 571 249 841 720 684 649 806 306 890 159
 109 760 170 848 108 689 167 280 364  87  55 829 628 622 119  94 726 148  56 629 853  97 850 179 803 606 884 157 724 874
 102 741 880 842 136 788 124 665 138 609  77 669 732  75 703  49 871 196  50 836 105 118  54  60 823 663 855  39 832 683
 141 879 107 145 601 766  48 682 696 143 139 374 759 260 475 154 711 177  57 633 645  45 757  64 887 762 864 791 670  83
 126 688 132 877 866 701 128 187  69 168  51 687 894 812 111  47 868  76  85 679 635  46 773 219 694 748 883  95 892 278

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.98355e+06us (= 1983.55ms, 1.98355s)
Wall-clock time (full program): 2.03932e+06us (= 2039.32ms, 2.03932s)
Satisfaction error: 0
Number of search iterations: 779
Number of local moves: 592 (including on plateau: 138)
Number of local minimum: 29 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6017
Total number of local moves: 4973 (including on plateau: 1067)
Total number of local minimum: 197 (including on plateau: 143)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 863 660 663  73 832 123  92  86 620 688 125 645 873  98  77  36 799 169 897 180 583 874 602 633 493 694  31 662 268  76
 792 835 179  57 818 798  64 605 864 890 120 457 846 242 193  83 117 738 129 699 614 781 262 172 842 735 198 165  93 127
 705 173 896  43 678 820 167 267 661 729 761 184  71 659  84 108 824 893  62 190 869 139 141 201 807 540 724 866 105 148
 562 590  75 130 517 722 151 780 821 145 723 482 888 225 788  52 885 144 889 773  69 230 264 112 648 152  87 779 776  56
 750 642 136 154 811 256 810 900 618 826 126  68 887 449  63 137 741 564 100 203 880 260 111 128 707 844 712 175 192 265
 574 150 205  97 758 158 244 332 877 860 308 187 239 800 823 176 839 872 208 573 257 164 563 160 894 188 809 808  88 304
 655 153 143 147 763 199 899 280 878 857 236 220  81 656 212 218 833 292 138 487 189 654 241 895 725 258 871 766 329 240
 577 232 233 425 680 802 254 881 837 836 250 163  51 582 204 249 331 121 338 470 246 530 822 349 255 672 767 852 309 197
 883 764 238 235 772 666 324 224 511 191 288 253 168 740 301 294 273 243 270 868 275 522 796 259 248 749 898 828 316 118
 641 745 272 216 475 825 296 278 639 718 279 444 266 423 347 214 223 553 200 777 333 858 768 336 237 361 831 276 363 321
 692 783 209 307 378 412 221 156 592 277 867 374 303 829 647 334 376 341 343 849 447 714 891 162 472 310 281 362 289 297
 427 730 404 318 594 739 124 381 769 269 317 795 382 770 182 252 133 441 817 892 293 486 298 350 322 650 313 282 372 413
 392 418 377 306 516 360 409 348 532 387 251 388 711 544 375 408 284 591 365 787 462 625 727 520 451 697 344 323 389 228
 463 367 386 371 448 295 302 311 603 283 417 503 346 717 515 405 328 464 384 700 419 593 734 438 479 840 229 445 320 410
 326 630 401 481 420 368 429 340 557 430 569 458 621 428 411 460 567 473 352 477 287 305 538 510 502 366 436 595 399 379
 400 560 114 373 488 547 364 432  47 559 407 500 495 385 471 514 426 527 490 461 442 469 443 558 465 315 523 513 736 491
 548 290 494 416 505 466 572 478 446 551 406  41 414 492 580 549 476  49 358 561 468 529 354 539 359 600 576 396 504 498
 330 579 393 501 455 506 424 610 402 450 435 703 546 534 615 415 565  34 499 398 507  48 157 467 609 101 431 624 456 721
 285 459 612 508  37 568 556 695 433 526  85   2 668 213 524 604 585 528 518 122 454 370 351 497 635 177 570 554 671 708
 531 535 673 596 195 636 613 555 181 552 434  46 765  17 584 571 589 484 474  91 601  53 107 611  11 541 670 489 676 634
 146 104 598 682 183 543 737 519 339  21 496 702 690 174 512 533 669 440 521 132   1 356 452 566 619 119 608 755 623 675
 219 687 631 599  38  13 704 664 271 439 698 606 537 131 325 453 701 753 627  74 646  61 483 653  29 422 116 581 626 728
 226  50 677 715 335 644 713   3 383 658 657 536  90 628 106 748 649 575 685 327 542 403  20 806  72  54 140 689 693 691
 196 337 679 706 215  89   7 742  18 640 597 616 719 395 681 782 102 588 629 194 622  27 733  66 716 819 355  42 586 617
  59 135 743 859 587 222 771 834  78  79  60 186  33 390 545 720 651  30 747  80 686 397 480 683 525 667 751   8 778 731
 342 357 732 830 369 638 854 103  28  15 805 643  45 696 161 813  25 759 757 247 652 550 299 775  16  24 110 312 812 746
  35 274 752 862 217  99 632 674 291  40 760 790  26 245 793 875 300  67 607 171  12 865 178 843 786 231 485 134 762 709
  32 314   4 855 210 319 856  58 170 391 774 882 797 816 847 886  70 149 744 684 789 801 710 207  55  96 159  23  14 803
 286 756 726 815 211 421 861 185   5  95 437 791 109  82 665 841 115 754 345 814 851   6 637 166 394 784 263 202  94 804
 578 206 870 838  10 261  65 794  44 113 827 850 848 155 884 785  39 879  22 234  19 845 353 853 142 509 227   9 876 380

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.33741e+06us (= 2337.41ms, 2.33741s)
Wall-clock time (full program): 2.3935e+06us (= 2393.5ms, 2.3935s)
Satisfaction error: 0
Number of search iterations: 1105
Number of local moves: 744 (including on plateau: 258)
Number of local minimum: 49 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8908
Total number of local moves: 5675 (including on plateau: 1638)
Total number of local minimum: 461 (including on plateau: 209)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 896  63  23  97 529 838 741 151 737 887 781 722 884  17  18  46  20 223 634 695 207 835 798  51 604  77 802  54 623 462
  66 854  96  42  80 869 824 893  45 856 698 870 825 126  99 775 128  67 767 329  43  55 718  56 651  62 826 855 899  41
 135  50 891 773 890 851 877 478  83 410 739 573 110  29  59 178 121 133 638 185  30 188 873 199 883 827 881 880 532  19
 109 780  33 872 108 892 713 186 261 841 683 721  71 162 782 850 184 224 450 654 124 534 664 828 272 160 520  74 506 257
 119 183 800 646 867 839 624  38 177 225 866 857 157 198 104 182 168 380 297 813 144 413 700  52 882 765 852 146 795 226
  81  70 205 697 874 789 727 479  76 111 641 853 840 402 235  24  84 720 863 845 255 302 816 268 888 370 337 180 309 174
 165 247 790 678 212 640 517 778 287 209 671 832 132 251 112 849 142 136 831 834 244 369 731 504 810 163 295 311 622 153
 451 196 538 340 411 846 567 627 158 172 588 864 476 290 169 106 116 672 821 346 440 543 759 171 747 281 848 221 556 195
 322 296 140 716 285 715 642 772 876 181 465 886 254 176 229 210 395 610 650 218 189 885 319 134 348 817 805 356 304 320
 274 276 396 299 211 603 600 709  78 897 662 279 493 243 249 245 461 768 354 284 894 316 803 271 327 292 760 564 665 242
 330 248 317 879 273 286 441 394 419 362 384 308 694 293 164 401 215 898 844 900 262 797 265 373 656 260 553 156 306 837
 524 152 363 378 280 495 477 693 298 236 628 365 392 471 364 497 456 895 868 437 453 466 399 398 258 376 406 361 814 315
 349 503 464 294 417 562 433 438 334 522 541 568 435 397 366 379 512 566 313 557 368 729 442 422 357 389 237 338 847 436
 684 431 387 458 549 527 592 331 889 474 480 572 388 360 526 510 232 447 390 488 427 423 314 201 426 332 424 351 490 412
 400 404 383 382 535 473 505 289 446 444 536 250 546 358 783 407 256 238 432 439 325 519 385 459 455 878 598 434 454 502
 418 405 533 552 639 277 582 530 448 425 468  86 481 443 509 263 597 403 377 565 485 409 472 589 381 428 333 339 563 515
 460 619 583 374 492 344 511 523 508 469 318 391 571 587 561 494 371 305 197 507 513  79 234 559 321 463 670 599 345 547
 222 612 531 647 335 429 500 231 539 699 328 312  91 484 528 569 516 359 300 687 415 584 609 159 626 617 270 766  32 518
 686 637 467 545 575 350 105  64 730 578 227 170 616 652 542 445 585 214  65 416 607 147 486 633 470 501 595 577 343 487
 653 799 560 303 544 230 498 386 525 702  28 668 659 673 449 593 457 355 240 367 489 194 581 750 193 521 375 576  40 107
 580 649 691 586 548 166 499 266 550  60 278 591 615 570 630 648 613 252 264 677 114 130 606 579 483 540 175 608  72 475
 614 655 421  58 621 117 219 342 635 596 291 118 275 719 723 574 660  98 139 611 679 233 150 707 740 618 430 594 161 717
 353 590 669 131 625 187 288  31 688 657 206  21 644 788 764 726 861 336  89 514 620 558   1 632  93 491 408 779 129 636
 774 753 784 115 755  75 307 341 629 246 208  68 711 701 605 724 761 414 127  90 738 658 347  15 120 631  14 674 324 806
 875 733 742 269 820 482  95 602 666  25 113  53  85 703 818 667 732 681 301  69 601 103 143 725   2 420 537  22 746 685
 554 661 787 645  39 137   8 689  26 776 123 100 735 770 819 555 745 830 239 145 757 734 213 682 204   3  34 663  94 748
 704  12 712  48 811 125 154 751 680 496 148 310 793 791   4   7 804 452 283 155 808 101  27 714 326 710 393 796 708 692
 843 812  10  37  11  57 138  13 859   6 551 728 102 858 749 675 756 141 259 149 690 706 228 744 754 643   5 372 842 777
 801  16   9 794  92  61  49 705 786 217  36 179 173 836 792 696 815 865 676 216 771 762 191 871 203 758  44  47 192 862
  73 809 190 860  87 253 282 785  82 736 829 200 267 167 763 220 752 833 807 323 823 743 241 769  35 122  88 822 202 352

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.96562e+06us (= 2965.62ms, 2.96562s)
Wall-clock time (full program): 3.02121e+06us (= 3021.21ms, 3.02121s)
Satisfaction error: 0
Number of search iterations: 1633
Number of local moves: 869 (including on plateau: 286)
Number of local minimum: 87 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12841
Total number of local moves: 6050 (including on plateau: 2018)
Total number of local minimum: 886 (including on plateau: 243)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 147   4 731 802 811 867 878 168  30 341 849 789 860 406  16 249  55 872  49 640 836  47 806  66  58 117 854 684 109 374
  23  15 106 603 795 218 681 458  37 723 647 857 785 329   9 801 750 848 187 336 729 153 840 201 242 562 838 621 108  13
 424 283 706 704 728 121 792 835  14 845 818 830 656 142   5 763 227 841  46 178 809  28 847 268 110 115 827 349  67 137
 275 274 760  18 683 868 821 709 176 843 851 863 678 175 784 767 788 653  74 212 745 170 177 267 317 107  59 304  26  71
  25 126 697 833  10 856 846 757 240 779 672 737  85 217 749 817  83 718 352 213 773  57 775 233 228  22 834 587 104  90
   7  38 623 696 292 392 751 744 235 430  89 544  76 398 761 433 742 703 820 269 796 727 528 692 511 263 541 169 221  24
  80  31 557 606 644 734  19 607 158 515 670 710  78  69 754 758 823 689 615 152 676 743 747 135  20 143 649 219 658 256
 155 628 724 645 575 713 654   8 431 296 254 679 682  73 711 586 617 853 687 174 721 146  35  34  40 642 725 183 614 230
 229 652 540 478 497 546 748 673   6 598 662 698 663  43 547 765 668 793 321 203 699  17 581  12  93 588 207  11 688 289
 205 641 513 685 549   1 556 599 225 669 651 574 625 232   2 532 804 502 600 100  62 629 436 608 299 496 714 220 514 272
 248 694 593 657 542  44 595 639 255 422  21 563 501 594 632 521 770 559 611 287 719 271  45 499 195 712 666 188 182 290
 319 680 695 655 503 661 494  70 407 643 732 455 412 472   3 637 583 427 209 402 554 518 570 353 180 444 700  41 446 250
 390 537 476 560 396 573 572 524 382 477 469 522 482 597 432 486 428 401 468  33 295 410 495 634 365 315 576  97 635 488
 362 517 529 616 553 551 347 380 409 333 612 470  27  64 526 483 523 351 467 408 377 332 509 510 660 638 387 624 423 527
 388 411 479 489 538 626 437 426 435 247 533 324 566 487 400  32 580 399 464 561 555 204 504 650 461 569 610 448 383 309
 492 589 480 463 342 454 508 366 498 405 441 568 360 404 311 531 442 484 291 493 459 316 438 381 577 507 465 505 552 393
 609 474 582 371 348 519 453 859 675 414 356 415 345 330 264 284 452 596 386 202 417 604 357 535 376 539 419 449 307 578
 602 246 355 354 462 466 301 585 445 226 418 443 627 473 490 322 425 375 373 530 481 278 491 340 842 451 302 819 403 590
 646 440 364 308 288 787 346 579 457 808 429 261 475 715 369 613 297 350 456 753 257 416 343 368 755 157 260 236 439 543
 564 370 331 270 395 869 192 314 858 545 874 306 361 690 150 372 285 344 293 813 280 305 141 334 620 327 394 741 447 730
 769 822 193 320 328 359 262 128 702 870 190 391 367 413 786 300 420 310 259 686 506 326 323 722 619 237 312 565 253 777
 318 276 384 200 389 148 339 251 764 873 194 325 199 875 243 839 129 206 794 829 197 894 434 592 736 397 127 567 337 659
 716 196 358 258 421 282 208 877 516 144 222  99 824 899 191 825 113 173 525 852 303 720 891 313 224 735 165 674 241 550
 776 335 134 286 216 252 379 198 631 648 277  60 807 740 363 279 171 231 244 701  75 797 114 768 633 814 780 534 772 500
 774 831 266 234 215 897 163 548 759  86 156 298 223 601 385 118 245 281 239 815 512 179 665 605 584 707 154 733 471 771
 766 888 273 140 882 122 810 161 887  65 211  87  91 717 485 103 159 133 900 671 131 871 149 450 850 816  82 162 862 591
 864 876 123 889 186  48  92 132 752 111 105 166 181  94 618  63 790 125 214 832 294 855 116 837 705 782 536 558 880 691
 798 167 781 160  81 460  68 189 738  56 708 184 677 746 778  54 136 102 892 756 151 883 164 338 571 210  88 895 881 803
 739 844 101  96  84  39 124  95 726  50 139 185 138 898 885 130 120  51 879 378  77 828 896 884 861 865  72 812 693 826
 805 630  61 119 762  42  79 636 667  53 265 112 664 622 866  52 890 145 800  36  29 791  98 886 783 238 172 520 799 893

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.66581e+06us (= 2665.81ms, 2.66581s)
Wall-clock time (full program): 2.7202e+06us (= 2720.2ms, 2.7202s)
Satisfaction error: 0
Number of search iterations: 1310
Number of local moves: 775 (including on plateau: 238)
Number of local minimum: 67 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10906
Total number of local moves: 5901 (including on plateau: 1918)
Total number of local minimum: 637 (including on plateau: 231)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 510 894  65 686  85 644 890 816  94 878 638 871 322  50  89  35 853  52  53 106  51 120 859 728  54 848 831 501  63 829
 102 442 697 647 683 815 845 685 595 880 888 734  71  66  31 104 741 155 629  61  11 745 884  84  64 698  29  47 896 186
 900 833 522 793 869 735  32 819 137 457 615 162 666 141 169 100 856  36 118 128 157 639 681 763 179 174 588 201 168 877
 642 843 170 887 651 778 140 898  72 710 129 892 729  95  83  57 248 134 862  99 101 786 812 742 743 764 108  43 148 149
 115 593 204 719 895 664 846 860 109 687 136 824 624 124  81 237 712  77 408 167 112 875 788 839 225 319 825 143 182 125
 127 850 870 700 548 893 160 758  68 190 123 161 711 172 289 132 885 226 622 183 177 252 889 555 886 849 701 189 211 138
 270 632 281 243 817 783 847 750 199 722 600 126 576 206 196 249 262 207 785 302 191 636 879 897 173 203 706 202 284 291
 192 863  82 718 810 857 255 865 195 876 309 337 794 256 244 283 236 362 692 188 241 242 460 820 518 318 787 288 181 246
 230 678 866 766 301 390 214 620 732 221 357 271 421 205 194 296 334 374 720 403 487 556 767 448 470 792 628 260 224 290
 551 274 275 232 800 731 305 434 279 380 227 280 842 209 218 316 200 152 679 338 832 872 643 381 446 873 798 385 231 332
 298 257 265 213 744 216 340 648 276 425 899 364 570 343 365 235 292 285 836 881 313 321 662 801 762 336 689 261 307 311
 287 251 267 294 330 272 733 640 474 356 422 413 773 352 286 315 454 399 730 299 412 411 540 323 756 614 883 375 383 471
 378 891 350 418 297 670 187 397 331 359 320 277 717 405 358 509 369 300 807 458 303 324 674 611 726 314 554 433 431 347
 463 557 867 368 607 404 486 439 484 345 547 417 410 456 394 310 327 430 409 344 476 438 558 453 391 414 462 388 419 452
 415 499 386 445 482 361 498 559 387 384 464 566 488 537 490 617 376 406 400 472 304 525 444 367 497 538 420 496 363 329
 398 530 494 436 435 360 475 382 491 450 562 467 480 371 500 342 424 402 563 503 395 466 379 514 577 432 451 355 455 426
  21 534 517 325 481 512 511 579 489 549 515 441 495 502 492 504   3 528 416 546 478  70 443 465 461 459 524 536 521 598
 535 541  78 473 393 603 469 373 519 533 328 396 508 339 516 539 605 552 468 485 477 560  59 545 335 130 526 553 564 513
  26 581 599 531 585 657 527 228 582 575 586 354  67 529 543 568 609 493 164 483 573 630 222 532 154  19 353 594 506 645
  73 103 583 596 612 580  34 239 616 589 372 544 240 626 693 520 606 592 253 113 584 578 326 505 623 633 507 572 591  12
 608 349 561 653  90 659 567 180 571 151 660 597  20 523 587 437 602 649 119 665 656 223 348  23 282 650 165 550 703 667
 757 176 646 621  86 247 619 263  38 637 675  87 266 748 569 723 661 635 163 618 634  40  60 110 613 658 217 625 654 669
 677 131 631  69  74 145 682 370 751 147 604 704 150 641 672 627 663 715 210 747 684 105 377 158 601  41 117 705 610 707
 721  76  28 166 258   2 427  96 753 708  30 680 254 791 652 746 802 789 238 713 776 146 178 197 229 709 144 768 714 724
 702 185 760 122 401 269 695  62 755 142 121 668  91 795 737 761 175 673  56 740 739  55   9 366 574 392 184 841 754 691
 716 219 808 273   1 153 738  88 234 725 688 655 317 777 861 727 671 699 193 782 784  42  17  25 423  33 259 759 838  10
 769  39 133  13 268   7  92  44 765 116 835  48 264 805 771 844 139 797 429 803 736 696  22 774 749 114  27 809 796 811
 851 135 351 306 159  58 814 107 806  14 694  75 233 790 818 781  97 822 565 852 389 440 208 198 827 111 333  24 834 823
 840 479 295 590 407  45   8   4 855  16 156 676 874 779 837 775  93 770  98 215 690 868  49 245   6 308 449 813 447 828
 341  80 864 212 346   5  79 312 858 293  15 428 542 882 780 826 220 804 830 821 752 854 278  46 171 772 250 799  37  18

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.42585e+06us (= 2425.85ms, 2.42585s)
Wall-clock time (full program): 2.48512e+06us (= 2485.12ms, 2.48512s)
Satisfaction error: 0
Number of search iterations: 1231
Number of local moves: 726 (including on plateau: 228)
Number of local minimum: 65 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8944
Total number of local moves: 5832 (including on plateau: 1746)
Total number of local minimum: 464 (including on plateau: 218)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 113 743 868  79 865 154 170 859 807  69 461 130 886 146  23 661 898  22 105 519 195 548 811  66 812 826 840 131 672  36
 618 732  34  42 877 870 228 795 837 565 637 822 649 112  16 894 102 171  25 120 709 124 845  39 746 200 508 307 846  45
 593 206 731 147 600 752  95 896 683 134 669 860  77  83 174 830  74 100 230 675 182 496  70 109 881 244 800 742 788 594
 887 772  80 393 554 882 158 775 439 198 666 892  88 219 107 852 181  76 126 802 730 512  73  59 432 738 880 218 651  75
 690 757  49 177 371 885 152 223 151 744 778 687 203 179  81 893 135 125  62 681 758 682 227 204 819 895 316 104 848 639
 767 801 139 602 804 723 322 301 264 123 235 853 143 263 271 468 122 213 202 469 854 580 142 751 890 654 663 229 173 494
 766 220 116 140 582 330 740 233 857  71 899 715 156 111 275 834  96 167 172 248 876 566 754 455 246 820 574 183 692 621
 634 266 243 166 544 234 117 831 879 186 501 347 825 178 118 217 160 250 197 827 863 725 884 334 614 674 587 231 257 626
 557 194 269 196 620 185 433 199 701 103 657 332 224 350 384 339  97 685 108 728 400 888 847 159 279 346 781 874 736 844
 839 209 149 446 806 169 357 705 817 443 873 281 162  94 201 141 207 276 407 355 889 629 286 311 292 794 405 729 402 841
 776 337 277 238 871 295 385 408 378 458 875 900 242 369 431 267 115 352 226 867 259 816 429 273 325 268 344 805 333 596
 761 483 380 190 644 280 373 724 313 359 727 703 249 289 256 441 315 360 866 319 251 821 290 368 370 436 481 288 335 843
 388 411 343 387 815 491 299 300 706 294 623 414 786 396 382 437 406 245 403 780 480 426 210 336 427 341 353 351 477 808
 323 291 362 447 507 510 891 449 397 464 317 527 415 438 358 532 272 366 303 361 425 502 367 721 456 467 444 787 495 321
 465 526 163 547 413 399 404 472 395 463 391 435 516 327 430 571 423 549 534 148 420 688 392 561 671 422 349 476 564 401
 529 457 523 168 419 546 470 410 326 254 551 570 488 466 485 133 595 448 475 490 364 222 374 612 492 500 670 487 539 452
 515 630 493 381 418 454 310 376 479 568 545 514 473  87 424  18 416 459 750 588 451 342 542 445 390 499 506 375 563 504
 260 627 555 633 283 589 308 421 338 591 489 365 474 575 619 608 513 101 482 144 340 164 604 462 584 617 274 704 677 114
 129 543 662  92 329 505 601 383 136 522  17 645 389 609 665 497 599 503 624 573 556  58 615 642 552 525 258 636 540 110
 284 478 592 656  64 536 298 486 428 648 212 558 603 610 598 521 577 471 605  99 550 176 517 632 684 647 119  37 641 188
 241 622 597 741   2 530 453 611 625  44   1  15 560 653 616 689 518 691 450 713 150 314 628 541 442 572  26 535 607 328
 137 659 696 520 363 533 579 189 121 155  46 247 640 613 590 562 537 686 638  91 128 386 511 708 585 559 606 697 643  90
 302 581 667 576 412 569 722 132 312 707   5 498 650 733 680 693 578 660 460 567  54 180  48 694 531 484  78 631  24 287
  43 679 698 676 215  38  31 528 187 737 305 354 434 664 777 759 714 773 747 145 153  63 719 702 586  13 763 712 270  30
 184 678 748 832 509  68 735 734  89 717 306  47 798 791 720 165 789 655 838 356 157 394  56 635  86  84 297  85 553 409
 191  98 646 824   7  21 718 710 205 583 193 239 700 753 765  14 695 835 673 127 814 377 768 726 208 214 769 236  27 379
 538  41 851 809 261 745 872  65 296 864 221 175 771 828 803  57 774 782 792 262 756 417  52 320  50 318   8 265  82 440
 282  61   9 878 240 285 760 225 348 770 372 255 842 849 658 309 869 796 304 345 216 829 652  10  11  33 716 739  55 797
 699 161 813 749  53 799 755  40 764 858 232  29  60 833 818  20 855 836 850 331 324 398 278 784   3  32  72 253   6 810
   4 252 762 783  67 138 779  35 237 823 711 106  12 897 790  93 883 862 861 785 211 192 524 856  51 293  28 668  19 793

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.39998e+06us (= 2399.98ms, 2.39998s)
Wall-clock time (full program): 2.45527e+06us (= 2455.27ms, 2.45527s)
Satisfaction error: 0
Number of search iterations: 1118
Number of local moves: 677 (including on plateau: 180)
Number of local minimum: 46 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8489
Total number of local moves: 5769 (including on plateau: 1615)
Total number of local minimum: 389 (including on plateau: 207)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   1 123  35 794 876 866 378 877 301 854  26 862 839 162  19 867  84 228 864  73 813 833 792  78 814 146  10 857  28  15
 834   2  47 841  31  12 870 828 360 868 147 796 823 242 244 883  85 128 831 203 776 254 277  99 842  30   7 861 625 669
 745 309  62 640  54  23 762 847 801 840  92 790 554 331 141 855  11 164 859 169 798 863 788  38 812  86 191 225 395 270
 880  48 347  44 765  32 832 844 772 829   6 800 802 111  34 822 110 311 539 263 287 848 769 198 183 845  71 786 234 103
 783 121 341 439 791 126 830 846 649 758 308 712 750 166  18 811  60 379 278  42 799 819 763  36 668 108  45 727 177 165
 724 116 256 807 676 218 740 767  53 723 555 732 766  37 144 815 408 232 696  76 775 698 710  70   9 699  61 737 119  96
 731 167 156 714 715   8 338 672 754 726 195 703 644 139 118 685 114 200 681  94 733 718 736 189 779 657  79 711 173 186
 664 283 289 725 124 734 635  64  14 613  63 694 675 122 184 642 302 432 618  91 701 641 605 673 679 683 633 624 137 171
 655 269 216 316 133 674 620 595 349 637 149 660 599 138 716 656 259 252 646  33 606 682 600 629 630 569 295 650 208  74
 579 387 220  56 154 700 243 197 689  25 544 621 615 577 574 654 318  83 663 214 563 666 594 678 543 608 328 647 265 510
 374 158  22 388 706 593 667 638   4 616 207 304 329 485 622 603 233  27 585 587 589 653 612 535 586 576 261 523 492 540
 578 412 273 300  17 617 538 567 592 573 588 292 610 476 597 541 272 152  39 602 499 596 506 556 507 143 430 643 433 566
 580 514 320 533 559 560 619 475 455 534 282 564 100 471 582 537 607 503 561 431 519   3 493 105 434 634 299 562 185 494
 491 572 542 458 568  21 548 239 522 102 474 442 500 488 525 466 480 473 501 456 487 418 515 557 414 526 285 513 463 469
 377 443 448 446 484 459 461 581 468 441 509 531 478 449 496 361 479 464 420 280 440 508 451 467 472 435 436 410 423 398
 419 407 355 528 427 462 415 411 486 454 460 409 498 517 413 385 417 511 536 400 477 482 391 406 495 416 490 470 521 457
 321 565 452 858 489 465 885 421 502 445 322 380 520 547 351 401 354 516 437 353 397 403 332 390 438 313 532 396 337 393
 527 571 518 747 240 315 757 382 429 348 447 381 851 425 428 453 738 545 330 384 288 237 342 450 404 323 598 358 364 335
 394 623 558 405 383 426 314 363 687 310 319 546 389 262 372 333 659 781 816 375 362 392 350 241 324 370 570 614 601 376
 424 343 481 583 307 286 386 345 825 271 761 483 373 305 296 326 760 820 365 890 274 334 357 266 402 399 639 340 652 222
 245 298 677 204 227 325 356 339 352 789 702 371 258 899 303 235 497 746 366 818 835 312 367 249 369 306 575 276 346 873
 248 809 631 297 293 250 267 327 869 247 753 359 264 896 236 251 422 729 213 755 211 871 230 260 226 182 688 281 728 722
 153 774 648 221 780 268 229 529 205 179 291 168 238 632 806 223 756 684 224 670 172 151 874 797 275 824 552 217 744 231
 192 551 770 196 199 705 170 188 887 255 895 279 181 749 849  88 626 751 194 717 148 294 215 810 187 193 708 201 627 690
 219 695 784 253 787 505 150 120 160  97 550 140 190 284 680 212 853 764 209 817 180 101 104 872 837 530 713 202 768 739
  75 795 743 290 368 777 246 112 210 135 636 127 157 665 719 145 782 590 174 697 524 206  65 884 136 891 742  89 826 709
 317 778 878 549 161 882  87 106 704  95 893  69 257 748 808  49 860  98 178 759  51 130 142 852 163 176 793 336 889 707
 115 821 651  80 803 686  58 109  43 129 879  16  72 611 692  57 720 584  40 752  66 134 444 741 730 838 804 132 827 881
 865 900 897 721 504 735  55  81  29 609 691 159  52 888 662  46 658 856  24 671  68 175  50 553  90 892 805  20 155 604
   5 661 898  82 894 785  59 645 344  13 771 125 131 693 886 113 591 512 628 843  77  93  41 836  67 117 875 107 773 850

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.16942e+06us (= 2169.42ms, 2.16942s)
Wall-clock time (full program): 2.22506e+06us (= 2225.06ms, 2.22506s)
Satisfaction error: 0
Number of search iterations: 960
Number of local moves: 613 (including on plateau: 115)
Number of local minimum: 41 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7143
Total number of local moves: 5544 (including on plateau: 1331)
Total number of local minimum: 254 (including on plateau: 172)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 449  24 752 665 728 476  40 644 567 133  37  62 794 195  84 572 145 730 171 774 867 113  92  82 878 864 681 653 890 353
 799 333 813 682 620 852 153 680  57 844  59  97 898  29  98 501  90 814 866 670 190 156  39  49  60 694 103 663 899 707
 747  58 884 740 853 742  77 135 192 317 128 139 860 791 829 136 773 806 882 789  25  45 132  36 131 897 134 194 239 804
 122 163 847 887 177 527 734 874 563 234 258  48 282 327 159 554 351 861 775 642 244 157  85 810  99  30 474 629 842 760
 229 117 849 868 840 492  76  86 870 783 197  50 614 213 142 278 513 837 843 661 164 204 618 141 270 895 166 641 207 651
 106 162 615 737 180 881 226 856 456 201 105 137 172 182 151 265 732 893 797 894 275 150 124 548 883 146 211 880 725 825
 100 104 863 634 216 750 227 184 545 224 108 250 259 176 609 816 220 888 891 896 212 363 219 850 744 144 111 418 726 768
 149 127 668 801 236 579 263 886 206 393 286 205 650 120 631 862 498 709 279 291 198 343 900 312 330 178 841 758 248 568
  93 253 588 604 759 743 203 154 109 772 266 431 277 285 281 739 815 264 654 529 669 428 387 306 269 186 143 875 697 736
 324 386 636 549 346 767 398 294 175 879 368 370 268 369 316 782 454 295 222 793 807 649 345 399 200 320 395 826 235 348
 411 892 571 831 798 335 361 518 355 331 785 403 381 484 252 298 243 240 722 304 450 359 287 254 338 188 434 689 189 812
 247 302 444 483 426 698 169 223 616 257 380 723 384 471 199 780 790 249 502 430 505 307 425 396 404 315 796 819 446 329
 276 858 553 420 468 473 228 379 402 764 366 407 400 478 437 232 313 503 659 375 584 519 310 225 342 314 435 494 544 757
 273 364 715 587 534 442 357 436 417 458 408 374 496 367 589 464 432 461 676 704 419 238 531 383 514 332 360 592 303 289
 371 416 440 488 391 536 377 447 487 462 550 562 373 439 467 427 475 389 319 376 433 322 477 566 392 466 574 485 378 630
 349 362 388 453 523 469 528 365 412 491 463 406 231 530 397 297 591 500 515 490 455 525 561 382 555 472 358 424 608 415
 510 520 350 509 559 422 459 565   6 569 662  27 507 480 481 421 538 451 552 457 623  10 521 543 590 409 556 423 255 540
 551 499 272 260  14 575 595 570 280 542 405 539 152 344 688 578 218 414 215 441 460 605 577 340 489 564 511 497 710 610
 619 547 301 292 293 251 537 581  53  89 632 606 512  41 582 671 187 445 711 517 504 617 438 640 585 626 522  74 526 516
 664 586 283 284 628  46 658 593 401 508 613 326 624 347  55  64 140 533 394  23 603 652 766 482 657 486 823 390 598 288
 674 745 325 160 625 183 479  21 385 684 470 600 506 573 679  11 233 560 524 611 328 576 637 705   1 751 716 138 535  80
 717 495 221 114 660 155 678 771  38 607 645 643 647 638   2  43 558 701 465 185 635 191 695 599 683 835  51  44 597 202
 731 655 241  63  87 274 687  17 714 702 443 800 693 448 621 596 639  68 217  35 777 675  31 594 612 541  47  83 691 733
 761 672  79  96 720 161   4  72 341 686 622 795 700 633 857 452 602 165  65 196 724 648 627 107 708 846 532 352 173 119
 656 779 129 158 748  56 824 601 729 337 290 762 580 873 673 110  61  22  20  69 493 666 809 546 713 667 685 321   8 130
 822 646  16 209   7 300 865 769 854  42 820 583  70 827 692 245 261  73  94  95 776 770 885 719 174 356 746 116 557 126
  13 802 115 339 179 170 756 754 832  15 753 699 703 765 125 323 755 193 230 148 787 871 839 830 727  12 296 318  75  91
 168 784 372  26  67 309 836 677 718  52 869 828 299 410 833 696 738  33  66 267   9 690 845 706 256 781 792  54 246  88
 763  78 167 334 121 817 848 262 876 834 749 805 102 803 735 889 721 210 118 112  28 811 308 147 123  19 808 354 336 237
 821 786  18 242 712  34 872 101 859 305 778 838  81 877 851 413 429 208  71 741 271 855   5 818 788 181 214 311  32   3

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.99909e+06us (= 1999.09ms, 1.99909s)
Wall-clock time (full program): 2.05474e+06us (= 2054.74ms, 2.05474s)
Satisfaction error: 0
Number of search iterations: 805
Number of local moves: 667 (including on plateau: 150)
Number of local minimum: 25 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5915
Total number of local moves: 5034 (including on plateau: 1051)
Total number of local minimum: 139 (including on plateau: 133)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 805 853 876 817  79 789  34 417 842 529 379 317 779 419  17 661 689 286 365 796 739 676  44  23 856  10 234  64  31  89
  32  46 754 593 748  88  20   2 820  28 521 325 854 688  52 665 871 769 775 826  48 849 747  93 794 167 102 133 301 804
 357 816  58  21 571 808  74 778 812 319  67 264 852 104  90 735 823   5 788 719 738 307  29 185 825 753 245 290 326 756
  47 787  92  12 715 693  14 879 742 158 670  27 828  45   4 818 802 759 723 867  43 821 592 134 680 166 329  35 192 841
 242 784 757 793 829 692 569 691 713  37 224  22 777  85 100  95 782  54 711 655 673 792 795 151 882  40 276  39 152 103
 773 721 862 765 671  96 130  13 684 111 164  30 830  75 716 710 864 206 633 730 839 726 630  99  16 831 318 154   6 112
 160 433 790 136 622 683  97 725 718  51 303  33 637 124 644 641 851 743   3 732 749 532 762 305 651 781  15 265 204 125
 101 169 636 737 734 489 148  62 814   9 677 146 801 705 740 599 481 772 647 626 729 722 114 232  72 537  60  25 228 703
 199 623 519 783 460 613 220 645 646 581 649  57 837 115 572 627   8 344 612 720  53  11 780 255 584 515 313 273 193 708
 147 132 700 600 687 675 113 412 576 418 542 464 744  26 656 549 437 707 439 690 107 650 657 263 367 512 237 277 186 545
 388 502 524 663 562 604 191 341 616 440 482 323 490 564 577 678 629 555   1 642   7 126 589  81 615 582 628 221 222 672
 399 355 121 660 106 617 444 634 430 354 543 366 252 701 578 580 595 544  18 588 709 635 606 282 631 248 254 284 431 550
 480 381 611 361 291 618 274 443 170 591 477 609 539 467 587 624 643 128 414 285 520 483 632 583 138 541 518 387 316 404
 400 500 429  63 438 548 368  78 473 371 638 566 447 561 494 533 479 685 594 469 370 551 434 472 411 493 442 567 131 510
 432 356 459 453 321 445 470 449 499 610 260 328 488 391 454 498 620 358 351 575 552 448 509 310 380 372 506 728 471 422
 426 377 386 374 558 514 267 516 475 546 531 511 478 336 393 257 360 554 658 293 383 487 507 423 474 535 359 534 605 398
 504 528 446 346 171 402 574 496 517 639 648 505 463 877 364 495 522 415 324 410 382 362 156 774 201  82 427 525 536 424
 662 702 513 227 491 378 598 405 452 540 247 640 330 342 476 363 250 451 508 369 450 271 425 565 338 859 421 441 335 466
 810 586 309 523 870 251 557 272 352 501 283 712 275 349 485 188 195 384 886 189 266 407 304 395 868 465 436 492 652 253
 674 408 236 376 409 218 570 389 385 182 833 832 373 308 296 299 334 791 375 527 302 497 208 461 406 847 596 397 666 320
 619 462 216  41 241 256 590 885 168 899 813 894  55 727 229 180 235 401 238 312 668 123 420 875 306 294 579 767 760 262
 714 394 217 435 105 270 766 198 568 468 758 785 223 755 298 202 347 858 337 200 348 585 811 559 184 288 602 503 456 281
 311 203 110 458 225 172 573 752 196 187 345 786 211 892 845 259 289 396 850 332 165 157 314 800 413 538 679 770 563 724
 614 300 315 231 240 150 898 333  86 601 278 390  91 659 878  65 243 230 213 215 607 865 239 625 827 797 751 764 741 269
 819 653 244 183 416 457 846 698 279 350 295 807 297 292 327 268 179 226 455 339 207 353 140 761 530 233 556 745 863 697
 280 560 836 258 890 181 873 177 139 883 696 799 249 838 162 120  73 261 205 141 664 209 212 343 190 176 803 874 706 717
 731 246 428 896 880 129 884 669  56 834 322 331  80 526 872  61 194 144 699  19 174 109 155 840 621 153 857 776 654 175
 161 116 900 746  38 127 861 137 135 695  76 163 117 763 889 881 219 824 484  36 486 149 667 866  66 210 392 608 860 843
 888 403  84  77  49 848 694 122  83 815 108 733  24 178 547 822 214  68 159 143 682 553 895 869  71 681 844 771 893 197
 340 119  87 887  98 704 798 897  69 768 686 750  94 603 173  42 287 597  50  70 855  59 142 891 118 809 736 806 835 145

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.641e+06us (= 2641ms, 2.641s)
Wall-clock time (full program): 2.69564e+06us (= 2695.64ms, 2.69564s)
Satisfaction error: 0
Number of search iterations: 1269
Number of local moves: 764 (including on plateau: 235)
Number of local minimum: 49 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10519
Total number of local moves: 5895 (including on plateau: 1622)
Total number of local minimum: 628 (including on plateau: 216)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 800 857 649 113  82 688 869  18 839 867 618 816 763 167 780  32  13 871 887 180 272  41  62 471  20  65 364 884 293 134
  54 897 235 119 773 771 870  51 861 848 472 866 115  73 765  27  37 794 398 132 692  74  46 118 642 705 735  40 776 529
 154 662 894 100  30 676 775 727 415 761 813 838 834  72 818 102  97 652 700 149 658 174 188  52  88 479 767  56 112 672
 208 532 219 900 116 613 708 106 863 876 777 868 510 160 847 117  45 852 563 114 606 283  39 711  99  53  67 268 790 605
 166 823 264 173 214 782 726 138 873 845 783 720 824 165 682 182 164 768 831 201 353  90 650 231 162 143 746  35  79 702
  98 558 136 122 192 896 779 140 610 643 898 690 199 237 200 194 232 571 878 267 663 346 759 172 858 195 812 191  94 885
 254 504 230 184 161 309 809 228 740 607 828 699 241 282 179 187 217 883 795 512 612 243 338 331 280 880 664 159 295 864
 218 723 877 311  64 895 604 784 811 597 120 522 549 238 215 216 142 854 355 244 799 274 899 333 213 202 204 262 104 886
 141 719 233 342 317 657 287 148 879 819 290 666 285 893 827 402 356 260 660 316 581 496 227 326 251 578 110 345 323 781
 383 674 308 178 891 291 766 675 176 890 368 706 300 258 749 248 193 570 335 582 374 577 376 480 388 211 601 354 220 393
 155 261 321 277 358 875 656 303 359 550 370 608 892 551 242 380 185 299 190 284 840 407 401 361 439 725 842 344 270 770
 339 266 236 198 360 229 539 350 745 508 423 853 498 387 336 397 256 544 889 139 703 348 349 865 377 357 384 500 347 793
 419 319 205 502 412 467 547 362 351 587 400 541 269 396 538 294 494 716 843 301 669 337 483 279 379 332 748 448 459 418
 288 591 390 365 473 457 573 298 452 386 366 449 385 352 414 373 683 341 410 495 475 391 378 603 367 513 441 371 882 553
 470 304 548 477 432 507 447 436 440 403 461 322 488 394 313 456 501 576 445 515 405 469 409 542 555 424 484 460 450 382
 307 584 540 425 509 464 389 408 420  77 259 499 466 528 430 554 619 399 476 527 297 611 560 566 255 519 615 444 434 334
 490 315 428 453 631 226 372 225 395 455 516 240 443 537 531 493 535 435 482 594  87 580 552 421 562 369 458 644 416 630
 593 497 640 417 437 130 250 446 503 514 518 327 145 626 655 485 489 363 463 534 111 524 478 462 431 312 543 392 704 526
 523 536 422 486 520 585 305 557 468 137 627 310 628 465 668 687 505 506   5 614  95 314  93 525 324 492 583 454 590 491
 661 575 427 636 622 533 275 629 105  21 624 521 438 442 589 595 680 278 567 175 109 281 620 375 625 634  71 764 600  43
 673 263 126 564 546 574 246 131 559 487 545 273 739 686 556 561 778 223  91 103 171 343 724   7 633 616 156 752 738 651
 646 717 511 588 733 598 481 340 653 296 641  92  34 709 572 659 146   6 722 632  61 210 638  89 451 617 253 621 741  58
 707 186 805 530 696   9 286 635 207 330  17 292 163 693 170 667 729 569 565 760  78 609  76 713 645 743 568 830 129 108
 404 234 639 665 623 144  24 822  81 168  49  63 701 756 586 694 786 209 158 785 731 677 157   8 637 855 239 678 718 224
 757 196 670 772 691 426  68 788 221 406  84  11 803 872 592 602 721 245   1 579 413 836 710 814   2  29 517 654  10  25
 684  85 647 798  23  75 121 851 325 181 762 153 252 829  31 679 789 151 685 697 433 796 671 769 730  38 101 820  50 289
 681 318 135 429 806  86 249 648  80  47  83 133 860 742  48 734 835 177  59 715 306 750 206 832 792 849 125 874 596 320
 698  44 755 859 152 107 247 599   3 189 744  28 302 183  55 821 791  19  36 801 774 856 837 850 815 841 222  42 695 150
 797 128 271 728 825 169 123 810  15   4  33 197 329  69  70 844 808 257  12 817 411 732 802 881 737 474 381 807 888  96
 747 147 754 804 826 276 124 862  66  16  26 212  60 753  57 833 689 127  14 751 736 846 787 328 758 265 714  22 712 203

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.03991e+06us (= 2039.91ms, 2.03991s)
Wall-clock time (full program): 2.09428e+06us (= 2094.28ms, 2.09428s)
Satisfaction error: 0
Number of search iterations: 827
Number of local moves: 584 (including on plateau: 147)
Number of local minimum: 40 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6424
Total number of local moves: 5385 (including on plateau: 1256)
Total number of local minimum: 173 (including on plateau: 173)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 899 900 350 780 152 108  78 268 123 545 128 582 703 230 116  49 546  29 736 832 155 886 884 281 235 797 138 714 696 575
 632 822 824  60 148  70 518 872  83 132 115 203 869 723 208  54 637 864 811 600 598  92 520 202 117 522 844 740 459 176
 606 739 735 622 278 227 842 801 205 196 102 786 737  11 127 174 221  37 699 823 616 104 709 618  72 271  23 841 563 730
 384 173 799 561 820 579 834 301  79 859  77  63 821  43 256 313 625  16 204 744 747 687  14 825  21 572 509 711 748 130
 716  94 330 126 877 106 890 630 237 874 734 147 293 524 166 136 721 269 297 159 619 892 645  65 500 858  67 633 771 139
 860 195 752 183 142 649 803 727 113 211 186  76 808 454 478 676 528 233 280 750 759 146 853 288 189 145   3 888 692 448
 897  98 779 845 198 655  22 719 125 222 197 215 342 851 214 119 788 184 604 471 895 164 805 583 261 838 836 191 248 149
 798 225 602 813 250 390 639 833 323 341 187 234 263 738 254 218 793 210 305 621 485 182 863 395 154 283 206 843 802 265
 675 179 578 745 628 282 678 749 713 175 380 300 289  27 318 566 417  18 898 806 866 481 754 156 413 311 162 558 165 228
 689 302 770 646 160 170 880 243 219 865 638 329 809 826 291 344 540 270 535 320 585 370 684 387 167 319 188 169 562 238
 800 241 499 887 383 402 615 577 242 224 200 161 784 777 290 312 875  12 367 762 409 336 712 468 595 412 375 304 131 363
 357 372 685 253 885 391 650 279 891 365 393 428 462 550 199 474 586 469 257 295 663 181 490 376 335 408 403 340 652 426
 354 421 702 732 194 349 680 220 309 475 473 294 527 828 450 321 795 511 324 477 419 298 476 347 831 378 255 303 361 411
 506 425 519 284 258 332 672 486 848 308 453 812 593 659 358 373 549 356 216 213 775 322 491 112 273 743 482 317 382 398
 433 466 787 386 407 493 396 415 144 435 362 541 483 394 406 447 446 790 351 389 504 592 463 501 338 484 480 360 315 507
 470 495  50 339 121 571 573 434 531 124 526 451 379 437 457 505 536 781 883 385 405 460 472 658 423 400 440 352 399 458
 548 576 275 337 430 512 307  13 554 449 530  26 569 502 325 584   5 452 232 556 498 529 889 487 465 819 492 431 532 591
  59 597 443 364 488 603 316 510 508 137 847 429 141 355 158 377 353 517 565 589 327 296 418 456 642 611 445 648 720 596
 559 567 285 497 557 763 326 560 599 551 503 397 441  58 758 765 513 245  84 543  91 778 287 410 523 588  56 496 260 455
 553 366 310 544 464 514  36 581 785 620 617 217 461 240 627 679  52 636 693 392  89 664 521 359 631  48 371 534 479 432
 177 626 262 168 525 694  99 677 594 552 608 707 624  10 539 516 226 794 574  73 111 654  17 791 424 706 751  61 247 708
 120 635  93 878 705 140 547 634 590 674 185 580  68 570 653 190 192 686  71 629 416 792 143 644 731 236 444 671  34 564
 151 334 756 533 555 623 537 178 662 647 641 683  66 697 568 610  55 614 817   8 276 651   4  41 665 404   2 613 314 810
   9 661 252 742 807 816 277  74 700 783 724 122 612 333 670 772 414 753 691 110 135 764   7  31 601  20 681  45  95 814
  96 109 105 223 442 274  35 346 782 873  75 587 542 381 728 835 306 701  86 698 438 150 133 761  32 682 815 715 710 855
 251 722 422  62 212 401  87  46 829 640 857 669 467  90 850 668 515 607 107 103 776  88  44 718 746  33 769 690 209 837
 231 870  47   1 767 656 538  19 420 193 266 861  28 605 717 660 369 768 726 725 331 733 201 882 755  15 757  40 328   6
 292 609 180 249 666 879 134 657 439 299 773 867  85 348 789 896 239  57 849 101 345 259 153 114 729 774 868  97 704  64
 368 643  80 267 839  39 343 172  38  51 876 854  42 818 741  30 246 796  24 272  82 846 374 871 766 667 760  81 673 856
  25  53 244 388 157 827 163 494 830 695 862 894 207 436 804 852 427 840 229  69 100 118 489 688 881 171 893 129 264 286

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.68366e+06us (= 4683.66ms, 4.68366s)
Wall-clock time (full program): 4.73845e+06us (= 4738.45ms, 4.73845s)
Satisfaction error: 0
Number of search iterations: 3057
Number of local moves: 1194 (including on plateau: 429)
Number of local minimum: 215 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 23624
Total number of local moves: 9052 (including on plateau: 3208)
Total number of local minimum: 1915 (including on plateau: 386)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  86 835 668 201 112 405 412 210 507 716 117  14 137 229   5 188 307 777 879 801  29 768 872 780 787 867 866  60 873   7
  15  13 816 372  39  76 857  33 843 817 245 754 786 360 767  48 804 775 615 711  52 481 756 154 845 156 757  69 464  35
 794 881  53  78   2  81 306 169 813 770  18 788 155 454 772 704 773 832 184 821 327 815 725 164 842  75 860  79  10 170
 858  23 778 422  36 111 822 652  22 771  17 359 104 283 855 696  12 803 388 836 628 596 790 345 830 793  31 410   4 240
 759 839 678  66 497  74 795 692   1 763  40 682 411 758 703  61 152 724 176 736 127 753 819  63 651  11 827  46 391 220
 765 701 862 107 166  38 805 685 799 726 259 349 120 638 691 706  97 722 211 669 122 617 708 250   3 850 674 125  30  20
 173 680 641 100  92 131 702 311 761 629  45 743 415  56 840 679 681 693  70 715 659 654 707 234 495 683   9 175 723  19
 742 513 153 334 144 110 642  57 530 135  27 784 698 529 818 499  44 663 273 613 623 718  21  94 738 747 661 583 653 369
 644 580 157 395 370 522 215 705  37 648   6 733 542 179 637 684 729 660 271 709 609  26 616  77 485 506 712 233 690 138
 739 468 543  16 231 253 561 614 584 335 270 494 734  51 643 749 646  82  96 476 713 721 579  87 475 728 667 108 563 289
 545 630 635  55 178 287 626 567 631 171 528 592 649 578 566 462 531 673 364   8 618 237 581 257 620 627 418 619 191  71
 574 694 748 403 249 358 553  85 441 136 564 719 313 239 585 552 500 467  83 551 400 511 565 488 577 550 595 226 346 443
 546 438 670 198 260 299 461 555 368  34 560 493 664 535 489 532 434 634 293 222 536 336 533 576 505 439 539 544 483 339
 645 569 303 272 430 341 381 562 318 501 496 612 510 265 469 633 393 189 515 281 589 348 479 509 573 458 470 518 437 449
 557 484 384 524 504 426 514 490 367 382 572 525 316 455 521 390 444 527 213 407 429 605 466 570 428 361 448 365 324 517
 477 502 559 399 386 387 465 414 148 380 308 397 282 408 519 540 498 598 898 377 594 452 344 474 520 473 362 402 312 640
 325 503 274 425 356 463 416 451 516 421 433 445 889 731 279 597 230 508 310 491 487 526 537 276 456 209 607 478 423 453
 375 404 373 834 610 571 568 355 371 323 700 460 447 385 200 471 880 301 457 427 354 225 353 442 219 267 294 374 876 599
 436 300 251 472 886 591 376 246 379 575 424 625 223 774 401 366 326 446 796 190 206 242 432 825 352 332 167 622 389 865
 480 255 192 534 665 604 357 314 383 601 658 413 194 871 309 244 338 218 829 431 207 435 337 808 328 419 392 450 656 593
 340 161 343 814 603 608 284 261 315 492 398 252 228 302 248 305 290 304 766 150 856 874 396 621 363 875 298 838 319 611
 263 149 320 586 714 672 286 177 890 624 689 378 322 420 342 333 185 288 541 297 183 900 321 697 203 350 208 776 811 590
  47 280 204 752 710 662 254 762 417 699 870 236 826 828 291 195 854 216 745 296 275 174 159 751 221 172 347 548  49 675
 278 134 235 781 877 783 892 831 277 193 833 106 182 199 115 791 113 243 848 602 142 266 227 887 241 197 331 687 329 895
 899 121 655 556 632 864 238 558 217 351 785 141 317 837 264 186 859 285 688 126 181 114 180 606 109 394  32 730 849 741
 269 894 124 810 764 600 247 105 806 554 720 133 853 523 162 129 760 440 732 292 268 147  50 128 547 891 295 330  90 852
 165 686  59 868 846 863 163 262 798 205 735 256 844 582  54 755 143 232 214 869 737  95 158 789 139  84  93 695 409 717
  80 160 882 750 746 851 187 824 676 406 650 102 212 812  64  41 792  25 482 224 847 103  65 677  43 168 782 861 196 807
 101 486 883 744 587 896  62 727  98  99 779 130 884  88  28  91 151 123 459 145 820 636  73  89 802 809 657 671 885 512
 538 132  72 647 823 588  68 841 202  58 769 800 258 146 878 888 549  67 119  42 897 140 666 797 118  24 116 893 740 639

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.09241e+06us (= 2092.41ms, 2.09241s)
Wall-clock time (full program): 2.14878e+06us (= 2148.78ms, 2.14878s)
Satisfaction error: 0
Number of search iterations: 904
Number of local moves: 679 (including on plateau: 157)
Number of local minimum: 30 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6731
Total number of local moves: 5395 (including on plateau: 1331)
Total number of local minimum: 202 (including on plateau: 188)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 856  63 132 677  85 727 109 173 756 782 709 774  41  89 828 126  31  23 879  53 694 641 813  25 791 889 841  97 731  80
  57 894 123  51 121  71 711 762 615 869 897 898 229  50 887  66 865  82 466  37 821  45 883  56 817 672 524 699  81 166
 769 845 870 131 502 105 171 874 776 757 748 739 138  35 829  94  60  44 578 139 542 142 766 101 834 678 134 178 773 163
 630 136 218 842 800 117 740 352 877 886 882 890  86 144 840 124  99 194 119  39 135 154 815 160 831 741 331 148 730 455
 754 851 863 106 238  95 551 544 871 208 783 742 177 145 866  77  32 181 157 302 197  68 581 274 670 899 152 584 826 721
 241 133 130 830 698 852 541 215 847 217 775 738 161 253 803 112 258 162 232 324 110 248 778 220 600 872 169 849 688 459
 517 193 216 191 624 149 827 629 571 172 793 861  48 104 858 207 263 143 249 141 195  67 374 876 690 196 838 797 862 864
 878 275 257 247 873 273 810 725 802 277 746 187 237 416 717 250 118 137 244  91 362  52 707 226 779 805 242 543 693 546
 720 111 240 228 603 234 644 691 602 286 140 260 190 281 771 308 310 336 335 212 790 895 535 159 665 893 198 643 881 354
 837 211 267 294 685 891 729 714 448 270 285 184 182 283 441 366 407 320 311 213 728 325 616 390 574 674 227 631 359 653
 875 363 323 271 617 214 820 290 312 231 684 341 269 415 334 246 437 272 251 836 888 175 639 348 751 697 219 375 355 667
 284 297 369 406 763 464 705 553 446 420 491 326 460 367 428 280 399 303 307 347 518 422 646 410 609 300 264 850 439 642
 266 298 452 368 360 209 734 608 473 618 500 315 425 346 432 350 333 356 321 418 279 430 835 438 654 364 457 736 478 662
 383 528 400 316 361 372 338 443 447 252 435 377 329 607 370 365 322 391 510 586 497 900 692 396 614 278 431 884 349 342
 412 514 401 304 569 442 499 470 454 526 429 440 501 424 379 483 373 885 495 358 458 170 382 506 288 503 550 509 387 404
 519 398 469 417 472 423 474 444 532 386 489 480 409 486 476 559 426 485 393 450 402 493 463 434 554 332 516 492 289 353
 598  84 150 380 511 576 490 436 487 566 413 419 508 449 498 507 343 613 479 530 590 567 465 395  73 461 394 488 468 577
 477 403 545 570 421 563  29 282   9 675 328 520 505 451 513 496 562 534 536 537 408 588 259 548 385 579 625 568 523  76
 204 481 471 558  90 539 245 456 239 610 564 664 659 702 254 540 552 389  59 591 620 623 340 637 265 378 547 256 601 381
 453 650 565 683 596 604 186 295   7 673 572 504 619 411 337 527 522 635 599 622 445 427 113 529 179 371 388 549 392  62
  75 687 521 627 296 555  58 116 525 262 301 621 593 661 587 715 595 531 628 737  78 638 484 585 306 634 764   3 185 147
  70 722 632 561 223 482 583 122 494 669 351 589 696 636 235 658 640 556 708 682 319  49 293 515 344 120 648 357 128 433
 206 668 580 761 200 663 287  20 611 679  88 582 713 780  93 606 752 573 626  42  40 533 314 612 575 156 655  79 703 318
 397 592 560 657 221 660  13 153 647 475 189 230 557 681 224 759 597 704 733 743 243 605 174 594  24 222 680 330 686 165
  83 799 712 701 345 855 158 210  14 651 164  10 846 649  27 796 710 750 787 777 656 839   2 735   5 168 753  30 183 100
  19 724 645 666  74 689 292 268 146  18  92 305 806 814  64 676 633 723 758 785 695 747 108 732  96  54 823 376 225 462
 203 719 868  28 313 781 339 809 199 107 151 129 795 700  87 768 801 716 788 804 718 786  12 192 291 115   6 414 205 671
 261 808 726 816 317  36 706 176  72  98  47  55 749 765 114 844 760 772 102 818 755 770 384 744  61 103 811   1  11 833
 819  46 784 812 745 857 538 832  69  15 233 180 798 512  21 767 467 880 822 405  33 309  38 824 125 327 127 255   8 867
 652  22  26  16 792  17 188 853 167 860 236 155 789 859 202 843 848 825  43 896 299 807   4 854  65  34 201 794 276 892

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.3535e+06us (= 2353.5ms, 2.3535s)
Wall-clock time (full program): 2.40856e+06us (= 2408.56ms, 2.40856s)
Satisfaction error: 0
Number of search iterations: 1163
Number of local moves: 712 (including on plateau: 267)
Number of local minimum: 58 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8355
Total number of local moves: 5516 (including on plateau: 1492)
Total number of local minimum: 419 (including on plateau: 193)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 712 248 611 660 280 271 237 189  84 648 181 819 858 150 817 291 740 835 180 724 871 117 287 823 196 311  15 185 806 369
  16 841 104 608 111  13 776  54 256 874   3 848 862 836 854 572 168 816   8 838 751  89 810 277 126 120 235 162 685 802
  81  42 380 869 223 118 401 635 564  71 269 770 849 784  59 702 653 800  33 485 708 175 766 788 211  26 141 524 792 596
 188 113 176  92 103 100  29 204 250 723 761 738 725 623 536 703 261 683   7 837 793 720 571 754 732 116  19 632 475 851
 483 190 131 646   2  12 234 778 135 711 877 705 686 790 780 731 282 241 255 171 547 119 746 847 213 404 193  23 715 868
 128 716  40 654 243  39 704 630 860 693 675 668 684 254 691 147 657 633 498 760 307  45 500 748   9  27  10  80 597 818
 666 840 617 661  30 808 673   6 436 607 240 669 465 679 631 671 249 733 158 809 591  25 624  72 252 418 105 169 142 469
  11 609  52 663 101 537 636 152  78 710 736 878 603 821 745 129 345 560 400 625 510 627   1 796 303  73 203 471 540 600
 575 614 136 468 527 242 717  17 322 604 813 610 247 875  37 195 205 621 338 672 764  90 587 550 696 153 288 853   5 694
 549 348  34 546 644 273 866 520 774 422 674 700 362 639 543 638  38  85  24  68  47 706 519 707 606 747 160 502 559 215
 403 637 526 574 395 266 697 799 197 516 290 531 505 279 545  31  35 628 191 425 517 548 667 727 372 593 430  36 535 620
 594 592 511 651 374 304 846 755  91 583 551 426 542 515 521 239 264 598 281 481 494 391 589 353 106  51 257 622 424 509
 605 590 397 493 602 312 448 167  58 306 554 458 388 831 525 556 258 744 709 512 523 319 260 394 407 506 552 499 514  28
 518 664 339 681 586 343 488 314 172 301 534 455 541 588   4 414 452 561 601 334 477 553 555 734 379 428 390 626  48 435
 563 246 490 431 368 336 383  44 231 434 649 446 532 496 479 474 297 366 473 352 419 462 566 558 327 544 884 795 367 503
 443 411 310 579 454 313 423 486 381 453 437 349 445 405 814 522 460 398 413 432 584 482 378 444 581 416 470 315 497 420
 577 233 844 230 350 634 650 351 174 743 387 863 384 427 328 329 491  18 595 719 363 382 284 360 296 898 569 265 463 308
 392 323 386 399 507 530 670 450 364 753 451 492 417 412 578 276 316 184 557 359 582 335 832 110 893 373 528 186  53 807
 576 457 199 159 803 722 568 476 154 714 406 122 389  95 283 464 721 449 508 533 355 495 415 331 513 289 713 340 409 857
 342 346 798 735 321 825 224 480 879 365 216 396 767 375 344 354 268 347 615 433 619 752 529 370 109 270 652 220 259 305
 330 302 876 163 317  20 337 680 827 880 421  60 236 295 209 873 826 762 665 300 358 278 408 829 701 325 207 326 226 478
 385 320 156 148 272 613 263 698 899 293 244 504 206 225 202 872 811 894 298 214 210 785 267 187 687 294 676 616 834 442
 292 742 232 194 830 642 487 690 656 161 251 219 371 889 228 165 324  75 688 155 538 137 839 170 467 749 870 812 357 285
 227 173 501 217 791 567 891 769 618 125 134 333 377  99 212 765 775 393 750 183 149 376 112 402 883 772 856 771  93 201
 438  86 824 341 275 655 133 489 845 361 200 198 144  98 562 253 763  65 599 539 130 757 208 274 801 892 759 861 820 145
 867  57 737 157 900 804  82 429 730  70 585  43 612 218 222 794 781 179 677 182  55 787 107  61 439 678 865 332 887 178
 864 164 881 124 859 726 221 729 842  94 229  97  46 139 728 662 641  77 833 629 140 789 138  32 565 692 447 580 309 238
 805 828 885 143 786 852  79 659 440 177 441  83 121  41 888 299  87  69 643 146 115 822  50  49 855 640 797 843 850  22
 783 897 695 768 779 882 286 699 739  67 896  14  88  64  74 132 689 456 741 484 108 782 127 123 472 895 466 151  62  96
 102 886 647 461 682 756  66 166 459  56 410  21  63 573  76 262 658 245 777 114 890 570 773 645 318 815 758 718 192 356

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.86343e+06us (= 4863.43ms, 4.86343s)
Wall-clock time (full program): 4.91807e+06us (= 4918.07ms, 4.91807s)
Satisfaction error: 0
Number of search iterations: 3395
Number of local moves: 1281 (including on plateau: 601)
Number of local minimum: 273 (including on plateau: 87)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 25216
Total number of local moves: 9632 (including on plateau: 3879)
Total number of local minimum: 1933 (including on plateau: 504)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 302  35 892 675 303 743 890 874  33 802 818 112 165  38 108 713  57 837 181  62 841 738 732  81  85 733  87 659  25 894
 875 514 883 508  64 876 893 580 664 723 149 882  51  19 117 115  59 699 644  45 405 825 864 735 164  75  72  34 110 871
 154 374 868 788 578 823 877 130 106 853 177 897 158  91  98 727 539 840 380  71 640 761 143 163 295 171  94 858 229 632
 889  99 168 366 774 832 182 249 199 624 173 689 308 202 786  74 140 500 744 100 595 797 754 122 116 179 885 859 240 870
 311 151 124 899 793 131 481 159 128 708 175 898 160 197 183 118 824 838 603  78 828 244 742  80 869 821  58 830 198 886
 167 134 101 634 448 724 216 174 878 835 203 338 217 350 113 176 831 621 781 150 684 690 800 324 553 276 161 275 852 809
 155 135 222 880 610 162 891 178 247 861 207 895 258  18 192 850 584 740 857 190 658 795 826 291 228 289 211 212  97 776
 329 884 208 277 604 900 251 855  92 706 147 639 153 377 332 296 533 685 872 256 714 687 667 144 221 146 383 241 286 630
 195 888 273 353 590 753 246 194 839 503 231 381 206 439 284 294 517 860 479 313 678 887 811 270 243 224 232 502 321 509
 808 271 259 652 784 355 269 185 814 843 282 166 559 378  90 210 867 516 582 409 577 836 622 304 242 391  96 292 136 720
 372 257 225 299 881 307 486 265 287 862 777 268 361 473 172 359 358 441 682 865 642 298 279 285 394 214 413 263 834 896
 393 848 384 349 772 264 765 369 312 443 340 647 274 169 280 253 799 532 751 521 527 156 342 196 104 484 563 331 879 468
 373 564 335 461 817 278 345 334 297 283 410 432 856 328 309 425 567 576 790 387 783 451 688 191 360 339 444 260 354 478
 364 200 450 333 365 356 498 109 446 281 482 385 566 401 414 801 458 371 403 389 407 626 663 465 396 519 673 515 419 760
 406 429 180 497 306 476 562 494 437 375 581 402 236 316 507 404 469 455 266 506 408 459 676 397 587 513 538 431 608 594
 552 440 390 322 430 427 489 398 601 347 456 596 422 452 499 555 571 474 421 460 417 341 362 326 541 511 470 523 330 392
 488 434 487 449 493 471 734 524 475 485 649 255 412   1 400 480 424 418 548 520 602   8 457 442 549 709 445   9 561 586
 535 569 551 543 492 220 433  13 300 420 423 620 505 466 542 536 491 193 344 495  93 591 314 615 671 496 629 525 597 293
 463 529 537 464 233 607 534 654 611 531 646   4 583 501 483 490 226 411   2 625 386 585 382 771 388 616 512  10 522 209
 568 435 436  63 219 579 472 627 510 337 617 157 570 545 641 526 363 317 327 428 218 557 367 592 637 453 574 554 703 123
 560 598 565 696  66 141  20 575 546 272 670 544 612 798 599 645  83 215  84 530 267  53 558 643 681 477 588 674 705  50
 290 794 547 573  12 227 755 550   6 528 719 668 695 593 614 606  24 235 230 518  54  11 357 745 730 739 319 623 605 148
 635 636 747  88 184 651 370 119 540 132 438 600 728 707 726 766 346 145  95 704 213 114  22 672 133 660 665 763 711 205
 701 791 572 103 245 725 736 556 677  60 692 657 669 750 648 633 138  76  68 721 261 376 170  55 807 792 631 120  70  15
 756 656 702 137 223 399  43 759 628  27 700  52 254 691 785  73 758 343 315 683  65 666 187 655   5 416 653 764 810 310
 589  49 712 748   3 662  77 833 415 238 716 105 803 780 731 842 239  48 323 694 336  28  23 796 395  14 782 806 698  30
  32 718  42  17 650 139  82 779 351  41   7 121 717 851 693 722 467 504 680 829 189 320 127 847 697 767 813 454 757 102
  26 301  86 787 619  69 816 812 686  29 815 789 426 873 679  37 142  89 613 844 201 129 126 752 849 638 741  39 462  40
 609  36 820 368 188 107  56 819 661 305  47 237 854 845 715 773 778 248 325 804 379 252 250 710 805 822  21 262 352  67
 618 746 749 186 769 111  46 348 729  61 768  79 737 866 775  16 863 288 125 318 447 234 204 846 770  31 762 827  44 152

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.59372e+06us (= 2593.72ms, 2.59372s)
Wall-clock time (full program): 2.648e+06us (= 2648ms, 2.648s)
Satisfaction error: 0
Number of search iterations: 1354
Number of local moves: 771 (including on plateau: 189)
Number of local minimum: 84 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10417
Total number of local moves: 5789 (including on plateau: 1720)
Total number of local minimum: 701 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 233 819 820 120 745 177  24 322 361 733 164 851 828 832 118  91 767 826 165 784 306 243 188 821  10  39 732 670 708  18
   9 159  48  72 760 731  17 334 838 790 124 869 779 679 314 129 899 890  71 881 852 811 153 162 215  43 135 875  35 841
 798 141 797  13 544 658  74 313 211 789  75 849 801 867 218 786 868 147 193 228 452 749 148 743 378  50 792  55 774   4
 751 100 827   5 734 144 822 292 102  16  79 806 707 476 163 804 814 385 671 752 219 772 282 818 287  92 281 246 757 311
 805 664 777 839  21 150  27  86 845 199 244 795 776 726 114  57 780 226  98 759 178 773  94 675 562 440  46 259 802 698
 830 682 695 703 179 266 612 623  80 104 115 534 701 717 271 738 785 374  73 687 648 764  90  33  28  99 761 300 678 345
 837 622 766 713 739  47   7 692 630 570 535 765 794 183 169  15 689  54 161 721 661 781  41 411 267 156 652 117 643  77
 654 714 800 724 598  12 602   2   8 355 184 666 647 727   1 644 595 303 699 638  60 710 237 676 187 264 659 180 715 254
 799 711 722 614 122 257 681 633 653  97 239 593 688 317   3 619 704  76 343 483 646  14 705 422 154 208 763 636 560  53
 569 651 645 616  68 604 539 624 621 555 217 492 762 590 596 515 628  25  66 463   6 571 557 591  70 214 656 112 620 272
 552 626 529 605 143 641 527 725 586  69 629 556 375 145 453 500 618 152 336  11  84 599 473 613  82 398 683 559 672 574
 450 516 525 399  29 419 528 597 389 390 634 563 649  61 637 663 501 204 106 573 414 520 512 581 105 320 486 546 615 583
 564 494 412 245 496 580 503 547 347 579 655 495 509 285 446 540 461 103 359 518 431 490 549 617 352 230 388 394 506 420
 558 511 427 642 428 465 421 323 533 451 408 426 423 360 536 545 280 478 235 632 488 532 485 410 379 321 383 491 543 401
 393 460 542 416 387 439 435 432 392 589 470 502 507 523 565 442 357 464 436 402 381 413 480 497 457 553 499 429 358 295
 474 373 524 489 309 298 462 530 538 353 467 575 437 541 346 425 608 522 380 382 441 365 348 493 400 505 482 521 396 531
 403 459 481 587 551 514 456 447 364 434 268 315 354 667 302 337 369 445 471 504 409 252 443 753 370 567 376 508 723 386
 430 859 405 458 366 332 455 853 395 627 484 433 720 319 304 415 356 466 479 350 221 349 418 449 566 517 335 368 318 468
 200 384 196 397 342 824 377 833 340 748 407 771 371 594 898 223 279 367 475 339 296 438 498 417 665 674 248 260 316 338
 341 276 310 526 362 469 444 448 307 331 677 333 236 344 325 229 308 690 607 768 702 274 592 312 864 606 299 850 391 294
 324 283 424 206 640 351 404 782 207 584 327 269 182 807 225 330 297 737 588 291 860 289 288 305 686 870 171 684 329 775
 301 866 158 326 519 585 857 842 568 265 240 195 290 176 139 293 231 576 756 886 694 861 372 249 755 611 201 202 173 328
 210 278 157  96 554 680 250 882 876 277 874 216 261 363 835 186 472 660 406 242 234 273 719 127 744 700 167 787 172 817
 213 175 205 140 284 758 883  62 846 742 736 251 174 275 741 847 270 754 510 255 709 132 262 834 783 639 189 166 119 561
 209 232 222 227 740 871 256 168 101 241 813  65 263 693 893 877 113 863 816 151 631 192 747 238 657 610 253 635  88 650
 220 194  23 134 862 669 170  83 136 891 691 121  95 803 815 133 126 662 685  63 810 286 878  93 730 477 212 823 880 750
 203 198 137 550 548  59 111  89 729 746 578  26  36 149 791 487  67 625 788  58 808 224 887 855 809 829 892 185 197 854
 131 108 900 889 831  85 843 128 110 812 600 109  52 191 895 865  81 582 858 125 116 769 728  51 454 888 142 247 190 735
 160 873  19 879  42 718 856 778 696 138 697  30  20  56 793  64 155 601 844  32 181  31 668 123 603 770 836 897 107 848
 894  87  22 885 572 712 872  45 706  40 884  44  78  49 609 716  37 258 840 537 577  38 673 146 896 825 796 513 130  34

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.37502e+06us (= 2375.02ms, 2.37502s)
Wall-clock time (full program): 2.42893e+06us (= 2428.93ms, 2.42893s)
Satisfaction error: 0
Number of search iterations: 935
Number of local moves: 696 (including on plateau: 172)
Number of local minimum: 23 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8872
Total number of local moves: 5858 (including on plateau: 1783)
Total number of local minimum: 418 (including on plateau: 231)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 803 777 881 894  42  43 880  96 678  61 884 106 238 115 162 780 131  49 885  92 396  72 355 120 746 757 868  30 682 892
 815 381 801 748 340  54 362 630 786  64  83  60 900 699  46  84  48 109  57 580 836  69 876  75 879 794 859 556 890  34
 134 113 714 870  90 119 351 123 537 207 241 181 665 121 104 823 871 124 494 856 896 195 775 756 899 710 878 279  82 307
 808 827 182 193 146  95 842 183 869 153 511 526 789 772  37 110 569 135  73 626 702  38 674 891 730 210 888 596 141 199
 196 159 821 867 835  76 154 160 759 392 509 130 725 223 197 127 149 158 378 649 749 738 709 145 874 861 804 703 170  98
 191 102 227 809 125 875 111 204 824  77 666 194 519 795 103 760 262 198 211 704 708 882 734 148 501 776 578 847 339  45
 180 225 300 171  67 114 877 174 761 715 577 155 837 818 129 144 212 230 253 817 707 812 783 754 763 573 693 201 217 256
 168 334  66 292 258 395 298 862 607 600 695 192 843 259 118 302 205 200 426 864 447 732 849 282 806 798 647 662 169 139
 216 175  93 403 269 243 810 374 459 484 190 290 656 308 310 294 410 305 249 831 834 851 866 463 716 605 546 676 219 370
 386 226 266 215 248 325 271 222 860 898 203 289 822 260 173 402 833 893 218 796 889 142 719 236 621 640 744 284 187 247
 387 233 252 895 286 333 275 164 287 633 897 398 303 382 306 448 353 317 213 883 473 371 641 444 559 686 644 778 360 314
 379 309 331 385 348 240 887 701 358 654 337 767 700 439 354 318 261 433 619 345 673 234 411 322 617 369 442 441 424 417
 437 268 361 421 814 349 274 278 598 357 313 390 377 316 467 489 393 664 430 464 429 373 409 873 472 487 846 406 304 456
 344 315 485 389 583 454 343 440 420 400 422 574 359 547 491 415 685 383 394 518 438 500 338 436 466 495 510 450 475 446
 481 533 401 455 376 886 350 554 277 431 407 425 327 384 521 419 434 347 477 449 614 397 418 435 520 408 515 366 432 476
 540 545 534 297 319 490 365 245 557 479 427 453 469 468 264 496 536 523 541 372 525 404 364 506 474 571 341 562 405 443
 483 524 367  40 615 413 610 263 517 514 451  15 461 458 452 324 512 530 581 548 482 655 564 445 513 471 246 498 470 493
 550  31 618 156 555 323 276 488 332 527 625 531 505 423 629 528 335 594 591 293 363 504 416 688 299 502 265 651 460 457
 603 570 465 587 592 747 613 312 602 283 228  53 576 588 713 311 586 543 116 532 414 627  68 330 399 152 320 565 542 478
 612 538 584 572 639 668 620 606 638 255  14 643  58 579 561 589 499 544 342  51 288 552  85 671 231 352 328 147 553 696
 563 529 590 346 560 503  24 595 239  99 624 622 645 497 551 575 568 522 690 167  16 566 616 672   4 107 221 507 637 660
 628 549 558 634 356 743 412 597  56 301 336 609  62 706 652 601  87 492 567 132 172 653 176 642 329 220 151 635 736 723
 745 659 679 122 608 599 611  41 636 582 133 480  81 657 787 720  80 762 805  78 206 209  26 683 272 375 242 188 752 697
 663 681 661 646 680 689  55 727  65 250 163 729  71 728 677 764 799 691 516 184 189 658 295  23 112  52 202 178 669 698
 733 753 769  25 650 291 828 428  70 758 785 694  39  94 765 755 585 718 807 321 391  44 232 751   3  47  20 326 800  33
 631 750 717  91   8 793 675 726 108 670 705 731 257 208 722  10 711 735 724 140 177 137 388 166 285  21  32 788 742 667
 766   5 741   2 684 792  35 819  74 692 623 802  79   1 740 816 773 604 841 280  36 270 100 150  28 368 380 296 855 863
  12 854  13 737 768 820 508 811 186 848 632 830 143 770 826 251 825 687  17 179 136 138 273 539  86 237 117   7 779 486
  50 721  29 791 857 185  59 840 267 850  63 781 844 126 813 838  19 790 872 535 224 839 254 157  97  89  27 648  18 832
  11 829   9 462 797 858 739 852  88 281 771 865 165 774 845  22 784 235 128 229 105 853 101 712 214 782 161 244   6 593

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.67137e+06us (= 2671.37ms, 2.67137s)
Wall-clock time (full program): 2.72744e+06us (= 2727.44ms, 2.72744s)
Satisfaction error: 0
Number of search iterations: 1258
Number of local moves: 873 (including on plateau: 228)
Number of local minimum: 46 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10818
Total number of local moves: 6389 (including on plateau: 1910)
Total number of local minimum: 601 (including on plateau: 231)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 876  88 417 638 881 718 637 568 475 672 176  77 669  90 209 744  49  36 896  85 107 172 719 627 796 868  46 180 105 894
 377 800 161 642 129 165 655 879 156 502 679 582 618  89 891 673 162 122 153  81 178 615 106 873 757 859  66 675 121 749
 467 724 196 286 114 111 889 443 151 886 221  87 472 824 851 713 899 789  61 186 247 798  38 636 538 359  69 393 231 836
 488 131 843 833 136  65 827 884 159 880 429 258 797 109 110 352  91 612  60 574 133 238 152 663 760 217 860 870 138 846
  37 192 148 166 898  97 205 821 200 639 678 234 665 895 263 603 157 132  59  96 226 729 240 847 805 865 874 771 135 838
 854 140 150 103 144 855 761 897 134 900 711 137 795  74 809 199 120 823 218 204  75 829 168 811 781 350 184 813 181 295
 235  95 294 869 211 232 819 245 648 804 650 115 849 883 427 793 149 223 296 222 700 510 227 446 887 213 197 203 794 279
 119 191 569 842 233 254 853 664 208 743 748 113 716  79 210 309  64 784 369 275 242 875 885 703 552 340 183 249 862 281
 476 290 674 292 167 313 410 576 861 767 726 303 815 163 179 863 230 785 259 380 257 382 237 764 661 194 411 817 155 108
 848 390 293 733 225 327 341 657 128 495 725 388 400 214 284 656 318 447 104 312 864 253 326 778 770 174 280 595 769 421
 867 187 652 298 239 215 265 788 311 506 752 463 512 892 306 368 241 682 537 363 335 509 124 609 553 353 437 477 430 244
 730 273 271 185 493 442 451 520 402 519 229 801 403 299 262 481 370 782 373 349 269 762 354 546 745 356 289 505 872 182
 389 274 877 621 398 489 381 601 301 517 407 378 530 598 198 371 581 256 425 337 379 559 525 756 573 570 267 270 348 339
 728 367 401 224 415 422 589 753 330 409 893 315 490 433 435 314 497 564 376 344 302 346 297 470 419 513 578 482 383 426
 328 334 396 404 462 358 498 329 432 701 461 654 308 474 414 890 361 611 441 365 283 260 362 536 579 255 635 331 545 508
 452 351 387 524 448  73 333 440 434 385 577 499 445 322 632 386 541 459 550 516 529 399 391 473 551 487 469 501 629 332
 164 436 518 507 515 494 631 484 597  78 347 408 623 457 423 357 394 428 586 126 527 556 522 392 375 620 483 503 619 345
 455 539 453 478 588 565 485 532 305 282 343 413 466 412 496 479 468 646 624 567 416 458 420 278 366  56 528 607 173 617
 146 613 454 591 523 456 555 418 667 101 125 336 355 547 625 535 450 342 465 560 540 431 511 316   8 571 721 492 590 471
 188 594 236  20 587 605 741 117 647 142 206 549  45 640 692 693 626 127 660  28 740 543 584 320 285 514 658 317 783 628
  50 593 643 600 544 500 677 323 641  30  52 554 561 542 714 633 491  68 596 558   6  33 562 338 325 651 504 583 580 563
 193 592 219 566 610 697 616 288   7 438  55 634 324 685 689 557 548 141 712 521 670  15 857 291  94 228 705 147 772 644
 444  25 272 736 622 602  54  22 768 130 310 608 261 694 751 486 671 268 715 681 758 676   2 250 300 659 424 698  43 585
 143 687 755 449 662 832   9 533  31 243 251 777  70  40 572 177 599 405 765 845 531  86 704 207 287 737 630 731 747  10
   5 614 686 220 763  21 116  71 825 480  80 668  18 807 123 145 699 139 776 818 695 364 688 266 439 690 774  24 792 709
 395 723 742  19 844 799  23 384 866 397 653  83 304  51 372 175 882 720 802 727 738 170 739  92  13 195 746 169 666  26
 852 814 683   1 766 812 276  48 649  98 319 791  41 790  47  72 803 246  32 878 691 754 858  67  58 734  12 216 321 786
 680 830  29 810 735 839 277  34 820  42 171 732 202 684  76 190 645 360 816 856 831 158 871  62 118 826 604  17 189  11
 750 806 722 252   3 850 102 112 828 154 835 841  53 264 759 201 702 808  14 773 840 787 212  35  93   4 837 780  16  82
 779 822 374 606 160 307  39  84 534 575 706 717 708 464 696 100 707 710 775 888 406 248 834  63  27  57  44  99 526 460

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.82164e+06us (= 2821.64ms, 2.82164s)
Wall-clock time (full program): 2.87699e+06us (= 2876.99ms, 2.87699s)
Satisfaction error: 0
Number of search iterations: 1610
Number of local moves: 910 (including on plateau: 339)
Number of local minimum: 92 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12243
Total number of local moves: 5659 (including on plateau: 1553)
Total number of local minimum: 868 (including on plateau: 212)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 551 561 606  26 265  67 499 846 139 215  22  44 681 889 691 776 645 628  73  81 614 492 840  98 792 600 660  65 890 159
 655 763 880  21 110  18 635 178  58  46 157 116 124 720 788 886 804 749 799  27  96 619 855 864  49  59 652 108 899 780
 134 743 895 884  72  28  92 446 465 389  51  82 879 699 704 883 222 618 708  32 131 783 867 141  94 136 882 852 103 500
 570 738 772 168  42 787 742 893  87  60  34  57 596 737 808 835 579 456 746 126 217 569 844 107 211 165 501 180 137 751
 115 502 631 100 891 120 213 715 191  53 190 173  25 876 814 862 455 702 638 322 236 624 809 114 223 887 759 172 339 764
 771 642 881 184 877 729 625 878 207  69 145 176 870 815 813 312 644 256  84 132  90 315 439 197 896  50 756 220 241 201
 875 841 736 209 151 786 849 200 206 171 150 205 250 574 668 195 578 830 257 152 288 781 363 885 160 174 724 233 269 755
 793 851 861 135 193  97 616 874 170 271 332 888 238 739 295 232 272 504 258 728 242 790 692 186 138 149 725 300 192 754
 218 626 302 146 156 831 825 239 663 179 329 264 313 785 402 459 900 805 531 341 203 770 740 199 247 333 773 306 384 246
 734 894 757 387 226 892 164 167 296 803 303 118 372 244 267 392 779 823 275 299 898 291 335 284 177 185 637 301 370 845
 274 676 761 723 403 794 229 286 268 352 442 127 356 355 416 490 856 796 716 336 293 202 280 307 373 240 639 317 311 897
 285 693 316 353 361 842 701 187 281 350 310 865 457 380 346 318 528 605 834 371 452 407 745 276 334 262 611 324 398 323
 394 245 381 367 472 391 556 461 550 848 839 263 604 571 478 309 308 376 277 481 382 435 426 469 489 259 688 523 249 424
 396 608 297 216 460 800 665 583 514 654 421 473 366 494 431 331 470 359 305 410 420 328 287 415 597 535 554 383 518 225
 338 289 395 521 433 342 468 405 485 204 509 340 369 326 477 584 388 467 588 513 417 558 273 609 423 511 548 821 399 515
 393 449 555 408 480 443 430 378 479 429 559 427 321 530 445 121 474 450 507 505 411 464 664 690 354 451 362 409 390 537
 343 404 304 510 428 593 524 422 670 434 527 512 437 498 503 438 270 374 419 413 491 675 169 386 379 617 400 486 448 441
 602 532 497 577 565 538  47 351 488 622 412 544 358 344 484 592  48 447 586 425 541 529 462  77 475 406 368 463 615 520
 623 283 599 582 458 440  85 483 237 397 563 496 360 526 482 495  75 112 365 612 613 560 545 594 493 525 314 557 401 640
 377  89 564 575 695 621  33 620 539 679 487 590 678 517 476 566  39  23 587 385 573  63 576 627 568 669  86 656 522  35
  91 348  66 647 595 543 161 798 534  41 188 519 632 547 653 710  64 122 567 714   9 553 580 536 682 774 231 629 767 214
 542 279  71 436 585 546 248 648  54 686 697 549 667 375  10 562 133  52 581 540 649   4 221 797 721 817 234 607 750 454
  38 327 347 506 651 210 684   8 591 552 672 801 643 140 101 123 143 418 680 711 603 325 144 700 674 696 357 775 789 106
  88 212  16 827 661 166   7 677 516 657 760 687 630   3 650 705 224 252 572 641 707 128  15 533 722 735 153 706 683 182
 732 253 292 741 634 345 260 646 713 466 747 748  12  78 636 610 278  14  30 598 589 142 282 811   2 662  93 601 802 698
 290 230 155 828  36 255 795 854 791 818 671 733 712  70  40 243 294 726  76 873 689 349 414 703 810  13 183 685  99  80
 298  79  45  19 175 198 717  17 765 777 658 847  20  68 147 228 453 832 730 857 727 753 208 111 833 858 432 806 694 163
 782 189 125 744 869 104 766  95 820 836 863 816 762 319 227 130 871 320 508 261 758 266 102 829  55  37 109   6 784 162
 769 113 254 838 819 330 148 129 872 633 768 859   5  61 158  11 853  62  24 807 364 666 219 719 826 850   1 843  43 471
 444  56 154 837 752 659 731  31 866 824 709 196 778 235 105 117 868 337 194 822 812  74 119 251 718 860  83 181  29 673

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.73647e+06us (= 2736.47ms, 2.73647s)
Wall-clock time (full program): 2.79602e+06us (= 2796.02ms, 2.79602s)
Satisfaction error: 0
Number of search iterations: 1445
Number of local moves: 921 (including on plateau: 400)
Number of local minimum: 75 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11331
Total number of local moves: 6195 (including on plateau: 2120)
Total number of local minimum: 678 (including on plateau: 252)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 900 793  40 589 144 174  92 614  91 814 825 141 657 103 626  80 689  32 808 145 497 875 246 759  70 835 713 154 847 162
  74 131  66  60  96 783 648  64  94 234 854  50 811 886 762  20 800 106 891 157 183 794  86 789 133 734 645 878 879 807
 337  63 524 895  18 672 136  49  59 885 855  83 185 840 653 211 605  17 738  84 111 557  33 822  72 629 831 880 809 862
 769 126 147  62  55 884 763 677 130 820 681 102 188 105 720 899 665 203 888 754 254 272  26 165 817 592  98 869 577 207
 160 132 140 120 898 701  68 721 143 818 226 181 622 883 321 865 597 220  97 191 127 771  76 751 135 870 867 894 214 706
 217 156 110 887 197 896 236 233 501  95 594 116 852 149 799 285 856 600 223 192 123 826 646 746 328 695 666 187 730 374
  81 851 201 148  43 824 874 624 542 108 256 221 526 381 774 394 224 230 897 199 237 893 112 882 257 570 868 177 638 483
 129  82 218  79 292 877 312 892 703 161 281 209 259 304 716 243 871 579 813 373 286 732 853 688  71 639 857 277 198 521
 119 263 395 268 651 761 200 779 881 365 290 275 830 306 863 797 787 536 216 279 176 850 273 210 284 391 841 238  69 322
 229 314 166 244 303 749 231 815 549 889 679 219 241 346 543 859 702 429 773 435 567 634 163 387 297 460 248 335 355 354
 274 359 357 358 190 402 195 215 715 664 872 678 838 247 849 331 240 499 561 819 415 512 182 212 289 770 386 375 339 372
 278 320 384 432 866 333 168 406 205 369 377 873 186 350 788 767 361 271 737 330 380 255 414 484 876 383 362 367 348 845
 389 480 430 481 338 427 309 444 728 287 288 266 757 189 353 396 700 803 253 318 457 583 393 390 458 816 504 411 302 565
 482 317 413 449 295 617 305 531 520 385 426 420 452 609 326 376 791 514 431 530 407 508 507 486 491 417 392 364 349 405
 400 363 468 345 334 324 451 291 785 455 434 562 446 332 558 424 410 222 440 473 544 519 439 462 527 399 890 425 433 360
 366 575 510 428 490 264 307 532 505 477 464 423 453 448 748 556 456 351 438 313 276 342 621 498 437 488 422 327 485 515
 401 469 604 467 470 421 581 615 265 419 479 656 447  75  41 489 270 267 445 686 296 590 523 500 598 471 461 409 537 563
 511 487 578 540 356 636 472 492 142 496 502 616  16 554 509 596 329 280 418 503 551 403 398 475 668 378 522 466 442 179
 443 539 550 650 576 538 493 436 228 528 727 151  77 602 180 584 495 261  45 625 416 347 603 517 571 122 478 585 566 582
 683 595 534 463 250 644 535 560 568 655 124 552 518 580 117 352  85 459 660  87 574 245 548 591 612 159 588 494 545 138
 525 661 652 546 587 137 663 690 232 404 618 685  38 642 175 709  53 676 555 573   8 208 632  51 631 194  61 696 641 572
 606 607 635 628 541 121 659  58 441 654 623 640 529 601  42 699  31 704 299 559 711  27 114 547 630 213  89 620 718 169
 611 772 758 533 682 170 667   2 370 735 780 569  67 368 206 680  23 637 258 516 684 610  22 283 719 454 109 513 671  46
 649 586 781 756 768 101  10 564 382 691 669 599 341 687 476 474 308 553  73 388 613 184 755  34 710 465  54 633  56 155
 726 844 670 764 752  93 705 173 692  35  13 673 262 795 310 118 202 723  37 722 745 301 782 100  57  47 790 674   3 707
 753 647 740 784 172 196 662 152 316   6   7 733 412 608  88 242 693 379  21 812 747 319 821 697 837 506 164 293  65 643
 765 235 741 450 823 294 798 714 802 104 336 343 806 743 107 675 311 627 225  12 729 193 750 658  30 397  29  78  15 725
 848 843  11 204 801  99 839 724 778 227  39 804 178  48 134 260  90 775 736 864 805 113 827   1 712 167 269 251 282 786
 776 861 832 146 717 249 792 298 315   4 171 846 777  36 323 125 252 796 239 742 760  24 828 325 858 139 153  52 708 371
  14  44 860 739 810 128 344 150 833 731  25 829 744 698 408   9 619 766 300 834 836  28 842   5 340 115 158 593 694  19

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.07786e+06us (= 2077.86ms, 2.07786s)
Wall-clock time (full program): 2.13177e+06us (= 2131.77ms, 2.13177s)
Satisfaction error: 0
Number of search iterations: 896
Number of local moves: 601 (including on plateau: 150)
Number of local minimum: 40 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6871
Total number of local moves: 5591 (including on plateau: 1395)
Total number of local minimum: 223 (including on plateau: 153)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 872 890  84 875 668  68  35 271 800 702 861  50 163  72 594  30 853  61 856 149  46 858 595 562 865 398 147 873 114 103
 813 130 802 667 236 613 181 686 670 100  73 563  36 889  71  83 515 740 500  86 593 538 776 385 532  67 723 567 741 139
 223 588 882 157 179 107 116 241 827 461 311 138 152 140 266  32 361  97 688 160 680 634 761 619 826 781 663 900 718 807
 200 678 228 328 464 845  21 819   5 186 722 188  43 277 830 703  41 855 652 450 101 871 601 768 304 833  77 738  98 589
 136 877  52 190 736   4 102 733 158 883 716 106  54 161 893 662 201 786 892  85 197 681 479 530 698 791 751 542 338  81
 379 706  91 566 584 486 793 167 122 178 287 386 198 123 785  59 799  55 674 267 316 810 803 847 473 849  80 710 811 111
 391 894 141 787 638 367 448  93  69 392 870 215 268 134 591 895 527 507 754 359 347 126 709  62 288 303 788 254 413 885
 176 896 559 636 650  47 239 874  20 844 180 343 173  63 841 334 199 325 869 283 177 731 135 661 796 144 255 624 801 640
 522 290 294 574 834 159 302 284 888 734 350 457 307 262 610 816  94 476 614 282 349 897 540 551 145 352 174 337 466 555
 285 225 204 210 880 224 168 840 256 774 175 124 165 172 783 258 351 229 742 251 306 426 851 658 863 295 808 623 884 485
 297 383 278 887 446 331 708 600 259 823 720 353 237 831 192 263 609 805  65 203 417 484 406 669 305 299 647 378 308 312
 242 205 280 314 612 864 846 809 185 298 281 336 324 148 664 867 310 164 544 360 415 528 671 404 397 737 362 494 380 474
 578 517 296 778 393 458 425 543 301 329 345 232 866 526 621 208  37 509 771 300 581 632 490 339 187 469 460 340 330 654
 243 456 481 270 401 489 534 253 409 169 602 596 358 381 363 376 541 440 520 467 478 558 482 463 388 549 428 878 576 366
 276 326 348 547 247 390 506 332 480 405 365 569 420 780 533 643 238 377 395 407 701 438 419 693 442 286 775 374 431 372
 493 719 418  29 459 573 207 437 561 618 472 590 453 625 470 231 548 491 518 452 399 599 410 355 537 371 384 519 449 128
 503 108 511 516 209 475 468 396 441 524 421 104 881 666 560 629 571 471 512 408 269 586 689 444 639  76 531 454  14 439
 373 412 313 335 214 656 403 627 837 465 487 572 773 354 118 631 611 513 492 245 496  11 455 436 556 523 536 394 447 230
 557 510 535 451 137 628 508 422 435 434 514 424 504 488 713 443 790 430 319 423 429 333 257 222 575 642 191  79 505 617
 760 249 521 645 233 501 579 616 598 660 146 495 502 539 264 375 715 364 318  74 525 184 411 235 120 721 499 620 659 387
 615 633 777 497 246 606 676 113 341  16 552 568 626 565 217 529 690 673 293 672  89 327 795 150  88 550 580 260 705  66
 784 587  42  92 637 756 696 692 462  24 131 694 677 553 166 646 691 684 182 879 755  53 416 143 250  48 675 291 597 212
 577 261 683  39 585  78 828 655 695 730 156 641 687 682  75 127 759 739 151 700 635 196   8 221 218 732  40 554 630 433
 657 125 798 132 240 747 356 129  13 836 545 735 583 665 320 769 679  27 211 604 758 248 133 782 607 806  34  44 170 762
 792 322 724 115  64 772 685 876 644 234 427 854 592 244 194  96 804 206  51 757  56  70  57 697 603 382 765 605 344 483
  22 155 862 712 848 820 891 346 842 195   7 745 839  23  95 767  58 764  82 812 749 414 770  15 498   1 744  38 109 292
 859  17 829 357 546  10 649  12 315 714 653 370 832 817 432 789 728  31 112 822 835 117  99 369 220 622 105 119 321 814
  87 748   3 704 227 843 274 110 868  49 886 824 279 860 289 400  33 699 309 838 850 183  19 121 162 651 273 317 711 898
 743 582 727 342  45  28 729 216 825 648 815 766 797 725 171   2   9 389 154 899 753 717   6 368 226  18 818  25 193 779
  60  26 752 763 857 570 142 323 189  90 445 477 726 750 794 852 153 608 275 821 213 265 272 746 707 219 202 564 252 402

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.60161e+06us (= 4601.61ms, 4.60161s)
Wall-clock time (full program): 4.65878e+06us (= 4658.78ms, 4.65878s)
Satisfaction error: 0
Number of search iterations: 2909
Number of local moves: 994 (including on plateau: 427)
Number of local minimum: 221 (including on plateau: 63)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 23825
Total number of local moves: 9440 (including on plateau: 3768)
Total number of local minimum: 1831 (including on plateau: 455)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 433 147  11  51 859 127  89  17 890 868 452 715 764 740 791 376   3  79 775 731 835 200 241 579  41 840 728  75 839 219
  47   4  61 849 121  53 757 758 802 570 877 785 771  90 776 159 811 176 767 866 847  37  40 836  63   7 766 781  14  24
  35 798 146 872  10  71 819 752  20 177 850 578 307 763 503 751 744 484  74 714 846 800 105 319 228 843 769  29  12  96
  23  87 445   6 221 131 783 804 232 678 706 816 808   8 806  30 759 144 646 703 770 169 160 870 125 821  43 825 778 118
 203 110 726 822  16  58 795 447 415 647 742 820 754 709 645 208 616 240 128 741 713 773 120 204  84  28 813 782  26 130
  72 126 772 620 237   9 814 670 233 686 807 672 661 730 753  15 606  83 361 695 845  19  66 334 123 881  13 667 654 291
 591  70 792 649 662 114 216 688 227 535 729 150 184 682 567 371 796  77 133 790 300 784 151  57 175 622 812 733 780  78
  62 577 801 665 170 295 716   5 736   1 526 694 653 710 575  92 745 205  81 643 596  18 336 202 532 517 597 679 612 474
 287 739 711 642 285 251 675 724 173  39 533 702 614 777 648  86 691 112 138 402 226 137 273 359 289 786 681 628 660 247
 309 627 673 687 636 630  36 507 537   2 584  69 625 631 460 671 490 234 501 552  49 553  42 224 194 246 738 878 582 548
  85 624 540 652 107 529  46 427  88 539 657 637 397 604 510 569 789 250 522 571 322 482 528 124  73 589 496 605 609 544
 479 467 761 554 477 743  97 564  82 613 683  94 603 556 546  93 720 179 658 601 545 513 278 446 379  60 500 572 395 257
 600 523  91 607  27 525  80 547 592 225 448 511 328 676 463 543 574 375 504 565 520 521 470 313 320 372 560 536 583 516
 405 494 466 358 473 498 530 406 400 442 531 549 562 558 487 440  21 431 314 357 471 468 594 629 387 417 481 385 434 527
 485 438 542 348 492 462 476 275 489 486 374 389 590 347 534 475 505 519 478 499 465 350 401 338 329 550 502 480 404 493
 663 423 497 457 514 541 573 356 644 255 437 587 472 719 461 435 269 260 512 409 386 327 420 454 443 407 451 412 441 290
 392 297 418 363 410 408 459 310 450 666 312 506 267 524 383 456 298 690 515 399 464 563 419 585 421 693 602 384 263 598
 509 343 388 469 805 367 303 429 508 353 212 865 610 262 349 195 444 880 430 288 698 422 354 576 692 394 189 414 432 335
 416 381 331 344 718 342 453 797 304 346 265 370 436 352 308 292 403 768 390 325 306 272 747 779 899 286 621 413 458 393
 551 217 861 337 366 455 495 324 858 382 882 220 369 428 239 283 317 488 595 762 722 253 623 655 701 293 190 270 115 264
 668 318 223 378 848 360 659 301 449 896 425 254 248 340 261 810 231 827 316 305 748 282 669 411 633 206 245 302 276 626
 580 368 794 230 717 398 332 236 818 296 294 198 103 192 377 760 134 826 326 391 634 885 732 373 568 364 211 199 351 828
 696 323 171 166 844 315 586 895 213 483 156 299 271 321 252 823 362 674 817 365 163 834 518 424 860 689  98 333 209 355
 793 755 196 181 608 618 894 186 218 345 119 178 174 235 154  99 280 611 774  55 258 809 704 765 756 311 727 111 852 749
 650 815 341 158 725 867 249 787 439 244 215 182 873 117 100 876  25 842 824 277 141 222 684 829 555 380  50 155 274 619
 746 854 149  22 284 855 256 183 879 259 268 581 641  48 104 639 892 588 638 143 139 214 737 243 593 863 152 201 664 680
 851 153 113 900 561 874 266 108 651 599 167 697 188 229 161 837  34 491 799 122 242 841 677 193 862 157 833  67 207 635
 830 708 884  59 148 864 705 102 559 803  95 145 140 238 279 685  33 788 180  31  56 339 723 615 566 699 396 883 106 856
 857 898 185 897 281 886 191 210 557 750 101 116  38 875 135 712  32 538 132 168 164 707 871 162 735  65 142 640 632 838
 197 831 426 172 893 869 165 700  52 330  68 136  64  54 888 734 891 656 187  45  44 721 832 617 889 129 109  76 853 887

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.874e+06us (= 2874ms, 2.874s)
Wall-clock time (full program): 2.94247e+06us (= 2942.47ms, 2.94247s)
Satisfaction error: 0
Number of search iterations: 1465
Number of local moves: 843 (including on plateau: 275)
Number of local minimum: 78 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12535
Total number of local moves: 6127 (including on plateau: 2034)
Total number of local minimum: 850 (including on plateau: 248)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  69 799 224 772 827  92 771  82 201 510 734 787 878 163 185 687 757 388 173 839  41 850 836 823 240 161 433  78  40  75
   9 702 276 802 715 872 824 238 143 828 841  61 843  81  17  16 427 144 310 449 803 809 821 317 782 123 365  49 838  10
 735  12   5 830 829 825 215 699  46 842 861 395 813 375  15 322  53  30 694 786  23 826  37 808 179 142 288 344 758 728
 822 212 606  27 668  73 732  50  51 858 788 851 835 237 150 709 140 733  24 638 811 442 306 763  43 152   6 297 768 723
 666 435 725 690  19 747 859 654 443 284 755  21 645   8 595  11 217 739  62 362 273 869 430 741 440   7 211  56 798 753
 770 121 720 774 746 117 605 765 559 203 292 764 707 105  97 613  28 627  63 754 776 714 147 642  77 109 164 159 594 703
 792 191  52 658 681 751 116 784 591 778 860 781 744  68 223 278 742 711 620 616  20 415  31   4 329 111  13 165 659 731
 810  22 696 780 712 797 750  74 102 222 665 704 698 736 225  65 603 580 355 644 110 555   1 705 311 134  55   3 635 766
 663 145 112 459 667 688 661 673 404 726 626 637 534 113 313 640 515 576  64 713 560 537 186 639 210 199 119 189 530 417
 558 127  85 745 652 621 412 700 692 246 249 587 686 479 485 678 513 697  29 618  18 691  58 290 296 155 682 376 462 628
 575 180 625 390 604 501 552 585 612 198 115 589 671 564 315 527  72 324 579 593 516 325 323 571 174 680 669  14 574 498
 685  44 475 630 354 584  54 424 636 146 643 114 500 504 264 465 608 477 622 670 598 706 206 503 293 188 470 469 641 542
 432 314 650 554 451 520 434 615  26  90 126 518  33 436 378 531 480 609 508 617 326 505 570 672 400 583 568 521 437 611
 495 607 557 519 499 529 466 533 550  36 101 303 429 384  42 546 448 683 597 629 553 301 393 367 474 581 567 471 566 289
 512 488 300 447 370 391 431 369 478 578 413 538 489 523 275 444 473 464 545 562 403 509 483 318 305 406 522 493 502 484
 602 481 885 532 379 374 421 492 460 439 428 346 339 577 281 419 517 450 487 351 540 476 441 423 396 220 408 453 496 402
 541 350 405 336 397 340 422 482 664 401 331 457 416 377 490 883 900 407 366 494 353 332 856 294 342 234 418 380 548 299
 467 592 445 472 156 363 456 368 491 452 414 330 262 383 759 192 409 633 610 337 454 295 547 348 689 461 420 371 458 881
 232 761 386 497 345 343 879 544 896 392 410 250 235 438 647 341 425 381 252 349 382 455 389 356 526 528 358 679 535 304
 347 793 320 229 298 254 333 398 321 364 767 243 268 328 708 259 783 285 599 867 394 231 743 361 724 411 272 387 360 868
 426 795 282 157 525 357 274 172 468 893 511 266 253 256 623 241 218 271 864 270 840 169 880 657 834 777 279 590 177 190
 260 779 870 287 103 167 230 385 684 335 446 247 854 283 619 302 334  84 760 399 242 848 646 118 600 804 790 675 148 216
 129 507 632 184 213 710 251 898 882 536 327 244 261 773 656 865 352 176 800 187 727 200 257 291 586 676 239 722 130 104
 236 806 263 175 120 153 847 209  83 582 373 202 194 873 807 729 572 208 631  38 267 255 569 894 556 892 717 874 319  71
 280 372 884 219 170 871  76 221 338 539 139 543  80 846 695 182 166 151 655 183 844 752 573 316 862 721 853 805  48 131
 138 791 651 141 863 196 269 181 737 634 226 831  39 762 662  94 812 815 309  66 308  67 749 168 701 895 551 718 106  35
  96 624 730 227 228 149 258 286  98 565 233 128 125 818 785 693 748 135 816 171 740 265 588 193 866 814 877 852 162 245
 248 549   2  70  32 891 514 197 889 486 601 122 133 849 794 888 899  60 855  59 124  25 648 178 506 897 789 719 214 277
  87 837 563  93 136 132 312 561 195 307 154 887 463 817 524  99 204 845 158 207 820  34 596  95 614 653 674 716 875 857
 833  79  89 819 756 107  91 876 775  45  86 769  88 359 886 796 100 832 108  47 649  57 205 660 160 801 738 890 137 677

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.2309e+06us (= 2230.9ms, 2.2309s)
Wall-clock time (full program): 2.28537e+06us (= 2285.37ms, 2.28537s)
Satisfaction error: 0
Number of search iterations: 1049
Number of local moves: 753 (including on plateau: 252)
Number of local minimum: 32 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7841
Total number of local moves: 5887 (including on plateau: 1779)
Total number of local minimum: 289 (including on plateau: 190)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 126 264 531 786   2 745 837  67 830 624 161 288 378 890 879  26 162  28 155 871 142 772 129 832 539  47 533 153 827 891
  63 848  95 158  84 176 136 337 887 853 873 819 128 889 138  54 888  61 869 115 104  91 791 857 696 816 862  36 748  43
 863 218 541 886   6 151 124  89 815 655  65 423 596 896  48 139 707   7 586 821  21 875 750 836 822 101 125 558 679 112
  29 233 117 846 203 170  93 833 818 690  90 144 792 803  34 892 872  55  60 210 278 720 817 885 757 202 870  88 661 253
  87 137 106 855 495 768  70 111 877 856 183 418 804 764 107 221 325 179 865 166 206 802 777 812 769 254 249 881 303  68
 274 241 114 779 184 110 189 577 659 729 159 843 526 590 511 141 555 371 119 813 643 236 650 684 882 878 178 131 466 283
 298 181 133 732 475  97 504 647 789 899 122 478 884 639 894  96 814  94 301 225 277 648 831 411 282 258 207 302 718 279
 358 874 307 736 215 192 289 852 284 773  85 297 783 675 705 182 390 175 177 893 147 578 476 859 715 255 164 239 691 149
 393 294 198 754 229 244 328 665 505 895  99 763 706 200 360  75 209  20 620 349 331 790 710 712 824 223 402 867 602 148
 305 214 211 248 626 344 347 795 295 898 173 741 839 212 722 197 341 397 323 240 897 352 759 585 421 463 271 276 781 242
 425 213 563 332 417 477 196 618 330 416 849 414 338 285 401 444 309 880 419 468 424 431 826 666 394 481 280 266 469 484
 356 199 257 433 415 671 319 651 398 308 251 883 327 342 738 320 485 443 461 232 794 562 700 527 326 268 220 535 733 361
 470 438 102 193 449 410 208 489 388 429 525 868 900 627 743 460 387 459 428 230 346 442 597 500 351 514 370 375 426 391
 494 483 458 293 382 405 322 479 711 551 437 456 290 619 499 316 329 281 311 407 498 317 583 490 793 452 482 353 488 536
 386 480 467 395 312 851 451 582 291 343 205 520 369 622 636 364 362 501 430 339 403 496 532 740 275 383 409 408 589 374
 473 384 440 237 615 270 462 652 345 314 454 453 434 559 571 524 588 556 367 465 560 389 406 439 355 368 491 546 464 334
 735 350 441 538 540 677 545 348 632 201 644 399 385  59 427 529 174 543 573 450 377 354 379 365 154 412 552 608 435 689
 595 580 340 420  38 267 381 132 396 471 333   1 422 521 717 445 510 567 598 739 692 575 372 359 674 534 509 576 234 517
 515 594 502 447 570 321 569 306   4 654 474  41 657 503 492 617 243 262  45 606 625 641 292 152 634 516 698 506 455 574
 550 269 513 448 530 676 774  33 708  16 238  24 646 613 373 519 667 730 572 581 404 611 127  42 544 191 605 670 169 672
 685 612  57 380 547 686 245 413 553 566 493  19 171 523 286 724 645 512 565 522   3 633 272 146 604 507 782 640 156 568
 549 591 663 219 587 436 709 224  79  74 753 599 638 259 231 508  31 683 653 695 623  25 357 246 120 621 731 680 273 658
 669 637 860 188 446 688 528 432 160 167 721 318  71 592 134 542 699 557  69 603 287 363 324 227  32 758 607 601 593 642
 662 714 820 172 366 579  23 313 861  77 844 561  76  22  11 799 747 537 226 103 749 631 250 457  80 649 660 584 216 726
 600 518 693 564 610  66 725  12 656 247 472 299 304 165 260 554 701 751 697 723 673 609  30 108 222 668  17 682 143 746
 828 687 752 228 835 744 834 809  53  52 616 727 235 130 400 798 186 635 780  15 797  92  18 150 256  14 716 778 300  50
 118 829 810 497 847 755 801 876  46 100 825 121 252  86 310 811 628 775 630  82 756 135 265 187  73 681  35 194 190 800
 838 664 796 113 850 760 854 737  10 336 767 168 296  78 614 734 376 785 761 145 140  56 116  81 204 335 713 185 180 823
 766  27 788   9 864   8 845 392  37  58 762 728 163 195 787 765 123 805  49 704 548 217  64 109  39 858 694 784 486 841
   5 742 840 629 776 771 807  44  98 263 842 702 105 157 487 719  62 866 806 703 770  72 315  51 678 808  83  13  40 261

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.57845e+06us (= 2578.45ms, 2.57845s)
Wall-clock time (full program): 2.63417e+06us (= 2634.17ms, 2.63417s)
Satisfaction error: 0
Number of search iterations: 1231
Number of local moves: 737 (including on plateau: 217)
Number of local minimum: 64 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10151
Total number of local moves: 6061 (including on plateau: 1791)
Total number of local minimum: 543 (including on plateau: 227)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 488 123 166 801  38 621 691 466 610 179 161 120 849   4 726 783 423 689 680 357 591 658 848 760 794 103 138  56 185 407
 830 109 837 790 590  68 356 290 776  64 515  99 827 772  93 664 174 351 825  69 188  66 884 412 839 792  41 222 895  77
 838 153 843 836 191  63 116  42  83 728 506 307 739  51  29 861 868 855 883  65 636  23 496 100 850 253  12 877 876 335
 630 145 892 847 709  54  89 747  60 243 814 339 221 432 326 759 701 889 894 864 456  87 314  80 778 427 244 237 170  67
 723 810  33 773 781  57 152 597 139  40 520 187 391 118 619 817 741 809 846 218 766 115 162  74 375 854 738 241 770  49
 811 386 173 204 144 880 176 328 332 106  25 245 721 275 247 763 896 682 756 148 685 899 724 298 897 208 280  50 891 285
 690 574 155 679 122 130 799 791 101 193 458  31 873 192 269 282 271 822 774 274 167 881 820 623 845 141 190 196 856 316
 715 234 230 730 448 212 660 367  11  48 828 163 450 383 261 607 714 886 893 142  85  96 583 231 875 215 818 874  16 740
 651 181 404 642 425 348 289 455 870 470 707 344 786 291 372 513 232 561 186 287 527 879 802 379 622 323 172 301 210 286
 608 514 292 704 283 387 823 205 654 302 840 217 373   5 324 737 573 403 284 702 878 134 267 211 666 638 200 343 831 117
 560 125 309 665 400 252 499 821 389 782 718 371 260 327 417 698 370  71 436 474 754 330 629 601 628 333 304 318 415 259
 708 219 468 595 377 885 512 315 295 366 551 397 129 147 276  91 127 501 887 805 564 355 359 475 605 577 833 401 300 395
 420 451 277 465 472 439 365 604 198 462 336 226 694 437 347 633 312 519 255 517 631 536 568 322 641 306 882 236 471 493
 268 393 345 582 445 435 342 281 859 443 382 768 398 542 516 392 469 476 422 293 131 444 376 797 429 535 454 363 571 364
 369 233 662 745 683 238 414  97 646 270 480 477 481 795 485  81 325 504 177 310 320 362 534 530 452 498 616 860  19 852
 294 532 500 396 249 486 669 487 411 121 494 600 434 674 479 388 107 426 484 418 502 296 490 563 752 603 409 453 424 374
 380 319 537 340 525 446 430 592 505 618 428 495 459 522 384 588 442 661 337 299 352 368 394 346 250 483 262 559 647 547
 358 272 111 207 675 473 183 491 461 672 503 624 220 531 576 543 239 841 361 589 168 467 438 626 321 558 416 385 804 402
 552 507 757 108 567 620 544 562 511 440 510  35 518 482 378 171 705 408 419 540  78 457 164 695 288 538 687 508 216 550
 184 223 857 273 539 265 433 580 497 653 235 678 800 229 194 693 158 112 258 329 228 777 555 598 278 686 570 146 888 599
 297 771 617 251 264 632 182 725 549  17 521 671 157 731 533 225 639 154 492 464 758 579 746 447 143  36  82 736 509 587
 257 575 541 308 586 627 489 712   3 569   7 684 133   2 711 584 634 105 637 716 354  92 735 644 227 787 557 625   8 606
 865 663 667 175 478 410 565  47 750 643 165 640 331 650 431 169 816  61 202 681 160 609  43  98 126 524 596 602 614 734
 201 526 762 413 824 649  28 761 720 769  52 341 528 140 350 594 566 311 305 554 655 613 353  26 199 688 657  32 110 788
 242 585 670  53 697 659 699  27 832 729 529 668  14 815 178  39 113 159 279 578   6 593 548 775  18 645 844 612  75 834
 114 813  30  73  21 863 748  86 819 755 132 765  55 710 722 338 706 149  24 719 421 780  20 615 104   1 749 713 635 835
 136 611 572 744 119 696 700 460  10 743 254 862 124 871 785  58 703 523 150  13  88 764  45 796  37 545 406 677 151 872
 197 808  72  15 733 381 742 717 648 349 581 812 463 869 866  94 189 317  90 399 784 673 214 553 246 102 303 390 256 652
  70 807 180  79 867 441 128 656 732 851 405 449 727 767 779 137  62 224  76 898 753 334 209 806 135 313 789 676 156   9
  59 853 556  22 263 798 692 206  44 890 858 900 360 751 842 213 240  46 203 793 829 248 195  34  95 803 266 826 546  84

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.56025e+06us (= 4560.25ms, 4.56025s)
Wall-clock time (full program): 4.61544e+06us (= 4615.44ms, 4.61544s)
Satisfaction error: 0
Number of search iterations: 2918
Number of local moves: 1089 (including on plateau: 412)
Number of local minimum: 258 (including on plateau: 56)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 23564
Total number of local moves: 8883 (including on plateau: 3360)
Total number of local minimum: 1904 (including on plateau: 408)
Total number of resets: 8
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   6 120 839 370  17 320 144 194 777 785 360 864 843 124 809  15 365 708 722 208 819 414  36 336 325 709 625 851  67 743
 870   9 143  80 291 250  37 287 826 840 623 871 830 108 714 237 177 768 814 153 172 796  26 259  68 836 846 878   1 705
 854 107 228  57  96 283  22 243 760 682 789 862 832 175 865 792 327 845 791  60 833   3 326 192  54 704 711  24 702 296
 828 158 770  34 354 273  23 104 696 387 672 742 769  59 816 825 470 815 658 100 212  49 142 608  21 764 393 873 844  56
 488 736  12 295 351 591 726 140 322 756 564 539 758 640 848 778 138 324 779 206 767  18 111 181 117 605  98 713 741 173
 285 754 782 218 130   5 750  50 568 745 315 755 665  66 775 847  88 735   2 128 806 122 186 727 583 740 331 529 644 184
 463 671 133 156  11  89 154 134 677 655 684 748 700 639 716 651  30 763 653  46 737 589  41  72 622 666 318 790 757 150
 786 629  93  82 280 500 266  10 115 582  25 570 761 362 519 607   4 636 548 504 783 611 498 712 687 643  65 831 628 178
 209 731 645 373  94 101 580  16 606 619 199 149 501  79 631 723 251 829 661 466 663 125 298 676 630 642 190 601 567 660
  13  83 776 123 693  42 604 305 621 493 333 694 646   8 581 544 715 575 614 569   7 603 203 559 600 668 252 648 434 509
 103 632 389  35 781  47 620 340 738 572 113 552 592 189 511 724  62 641 654  20 609 204 523 656 492 703  81 485 788 659
 136 386 513 444 616 200  39 337 236 496 675 598 524 522 157 527 610 558  43 563 751 405 452 532 469 647 577 457 505 540
 546 443 720 400 530 484  77 276 717 399  74 473 395 481 425 516 602 624 475 312 476 472 234 438 538 549 176 514 734 415
 226 537 561 491 435 449 450 430 410 542 169 595 597 566 401 535 110 543 453 637 455 633 348 550 536  63 286 479 471 557
 397 534 446 376 562 261 596 388 442 300 421 502 494 554 503 579 448 345 445 553 482 299 368 517 456 377 512 418 422 518
 382 499 461 428 357 477 426 384 506 560 412 486 551 565 520 478 635 304 420 441 487 364 402 407 883 267 431 347 222 413
 618 667 254 887 381 255 495 508 474 436 462 454 396 664 480 352 406 510 507 371 489 427 363 419 375 342 369 437 359 358
 813 657 374 690 344 432 380 576 162 424 323 289 490 378 433 451 274 852 458 290 253 429 574 230 216 886 719 292 417 409
 392 545 247 855 308 759 555 698 353 888 398 838 361 355 279 356 244 294 497 366 467 263 227 293 329 319 822 394 464 349
 701 391 416 680 390 798 235 649 314 411 877 137 232 233 423 332 265 439 303 681 317 205 615 876 805 159 626 383 309 313
 674 161 201 650 465 231 330 729 867 835 288 311 328 662 571 403 812 188 346 221 893 321 634 284 302 385 617 214 372 220
 802 131 338 531 408 749 316 556 528 164 691 334 440 817 306 238 307 211 367 725 219 879 613 890 148 241 278 301 179 808
 343 793 869 733 799 744 584 483 310 191 541 282 183 707 350 239 837 246 262 468 297 105 587 766 260  45 257 270 202 762
 612 207 240 710 685 747 858 875 152 217 699 182 269 695 185  55 818 106  44 863 853 594 697 800 277  40 404 275  92 264
 146 272 223 578 787 692 753 889 197 229 718 281 168 821 129 116 774 196 160 521  51 460 827 820 447 335 765  61 242 857
 258 730 165 627 224 850 215 872 773  14 784  52  31 842  95 155 807 145 245 810 256 897 891 102 752 794 268 271 341 249
 515 860 180 526 593 861 898 896 127 163 459  75  58 739 121 118 732  78 525 824  76 866 874 132 126 151 868 193 135 746
 213 803 894 728 797 533 795 652  27  33 590 109  29 679  84  99 547  87 225 683  90 804 849 167 686  64 573 210 880 585
 248  71 823 772 841 721 899 856 141  69 166  85  19 187  97 339 859  38 670 834  48 885 689 119 900 139 379  70 882 669
 588 198 780 586 895 771 688 638  73  28  91  86  53 599 171 884 801 112 174 892 147 673 881 195 811  32 678 706 114 170

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.25872e+06us (= 2258.72ms, 2.25872s)
Wall-clock time (full program): 2.31512e+06us (= 2315.12ms, 2.31512s)
Satisfaction error: 0
Number of search iterations: 1066
Number of local moves: 675 (including on plateau: 173)
Number of local minimum: 60 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7989
Total number of local moves: 5604 (including on plateau: 1395)
Total number of local minimum: 384 (including on plateau: 192)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 845  48  62 217  44 895   9 755 896 879 522 772  72 131 881 863 104 884  58 574 813 112 841 258  22 690 604 310 295  59
 811 773 826 854  20 860 143 637 525 864 558 557  87  99 834  94 155  89  90 549  34 761 812 656  38  95 651  83 891  69
  40  10 883 152  25 858 209 193 756  12 555 898 892 179 172 579 552 866  18 652  39 859 696  47  70 657 824 877 765 180
 408  97 784 893 760 769 590 833 121 888 688 706 105 250 839 108 139  57  66  98 184 230 646 144 671 831  54 678 724 154
  85 157 212 150 889 409 632 878 142 886 735 871 894 186 171 168 516 114 165 162 237 190 712 147 597 837 862 762 658  91
  61 215 173 687 302 385 743 849 801 120 823 674 136 170 160  73 116 138 132 875 355 363 713 127 900 882 856 726 668 292
 220 219 153 221 629 794 876 763 202  96 767 838 327 167  67 146 305 244 134 253 336 285 700 890 641 640 857 745 819 181
 199 195 163 708 241 899 707 650 785  35 782 853 260 185 352 130 122 178 242 246 575 189 799 159 569 798 835 677 679 303
 236 141 259 605 518 768 493 808 750 256 324 710 323 229 276 205 206 188 311 846 225 233 694 239 779 633 751 736 433 340
 358 201 454 766 802 665 391 248 796 291 840 282 232 283 261 880 387 319 485 275 267 377 691 287 503 416 350 374 740 294
 268 400 523 806 803 440 855 296 148 418 804 622 226 389 252 345 156 227 386 452 293 333 672 466 852 247 382 321 758 375
 797 827 240 731 328 542 376 403 249 218 254 284 388 362 383 491 228 472 351 885 265 398 842 476 869 281 498 390 378 309
 301 330 306 448 298 533 547 733 734 277 341 504 364 347 273 304 412 551 423 573 455 585 634 414 420 289 331 570 368 850
 410 450 372 245 439 425 441 482 430 279 462 543 484 337 456 486 381 442 360 479 338 469 436 342 887 405 496 494 897 348
 407 435 356 467 584 447 458 506 492 470 488 446 429 315 544 526 541 361 413 468 307 495 457 314 424 814 322 394 401 434
 451 443 339 471 396 483 531 384 530 475 297 367 519 371 539 481 419 437 537 404 465 591 445 474 428 370 392 431 521 524
 463 380 529 554 427 288 422 619 449 520 562 578 643 528  55 511 576 477 480  13 438 406 270 397 426 588 460 461 536 459
 399 532 417 432 639 411 497 464  41 421 614 502 501 393 517 507  30 489 415 567 589 587 308 444 603 602  26 560 500 508
 478 499 631 118 540 365 149 611  68 538 527 686 473 535 512 594 615 561 815  24 487 514 213 580 101 129 673 568 251 660
 617 582 354 290 613 329 102 176 565 695 546   7 510 655 509 607 566 548 556   4 490 577 109 698 117 586 748 647  64 648
 550 571 257  51 515 343 595 616  74 667  49 110 598 606 564 788 620 681 682 697  31 513 325 553 269 119 721 609  88 653
 572 630 683 320 628 359 596  77 402 718  79 103 666 770 600 692   1 659 638 349 545  80 332 601 164 326 701 627  92 505
 730 610 635 115  86  42 599 222 559 778  52 262 714 636 664 792 625 642 661  23 654 746 231 593 344 592  21 182 124 581
 732 624 818 670 191 175   5  63 174 800 161 177 820 776 583 676 693 644 749 728 791 702 166   2 278   3 192 137 280 705
 716 754 727 741 563  71 211  28 612 719  29 271 214 680 793 717 775 618 353 737 675  19 113 720 317 145  75 274 203 645
 786 621 689 300 771 128 107 123 197 715 286  78  82 663 649 738 836 608 780 790 753 816 135 764  16 100 140 126  33 685
  60 781  11 111 263 196 662 169 744 158 234 335 722 704 703 873 868 822 699 729 725  93  56 843 334 266  32 299 264 759
 711 795  17 534 255 316 817 210 626   6  65 238 183 825 807   8 851 369 844 216 684 832  36 747 709 346 198 318 200 752
 789 366 777 774 207 187 379  50 453 235 243 204 830 870  46 106 872 787 867 224 742 313 208 861 810  45 312 125  76 757
  15 829 865  84 739 133 373 669 194  81 828  37 821 874  53  27 848  43 805 623 723 847 223 272 357 783 151  14 809 395

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.15512e+06us (= 2155.12ms, 2.15512s)
Wall-clock time (full program): 2.21046e+06us (= 2210.46ms, 2.21046s)
Satisfaction error: 0
Number of search iterations: 982
Number of local moves: 638 (including on plateau: 119)
Number of local minimum: 48 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7509
Total number of local moves: 5562 (including on plateau: 1515)
Total number of local minimum: 297 (including on plateau: 172)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  45  23  83  82 595 833  78 790 736 116  49  25 871 813 178  55 472 152  30 900 847 802 747 867 865 728 760  48  36 889
  69 547 412  68 822 788 864 219 896 174  12  87 877 823 639  66 271 132 857  97 786 428 894  70 734 854 680 149  73 127
 126  43 837  53 820 886 691  72 619 843 180 892  99 787 580 105 545 179 391 153 710 826 810 167 890 515 258  31 156 251
 106 201 101  32 576 853 869 637 676 895 221 231 115 712 733 186 762  89 223 899 754 882 763  60 812 405  88  35 477 122
 119 208 204  15  59 737 866  77 577 844  42 176  40 713 647 255 726 147 776 142 757 773 850 240 836 856 768 102  79 884
 162 874 166 129 806 834  84 262 861 766 841 113 199 811 548  18 522 202 117 880 705 532 808 159 675 683 241 118 285 114
 161 203 138 289 643 724 746 294 885 233 311 158  94 840 229 192 753 125 319 168 863 530 872 893 701 814 646 183 261 247
 898 818 254 323 830 723 259 759 888 212 331 182 299 719 376 191 855 307 198 211 291 599 601 190 628 708 200 207 264 194
 171 354 135 276 825 597 887 649 851 214 250 197 281 783 711 225 528 256 236 275 568 897 301 215 664 706 797 226 303 137
 339 344 196 349 574 641 239 592 859 716 671  81 206 509 821 315 765 246 224 309 612 321 310 273 609 780 720 216 338 340
 383 267 237 213 288 596 473 314 452 263 209 235 492 320 819 433 792 606 312 816 572 632 735 269 799 308 650 286 334 410
 398 401 287 362 513 559 317 293 295 467 461 769 277 424 508 337 613 357 160 332 625 324 358 845 617 696 494 431 499 496
 365 411 891 374 774 605 381 385 445 636 356 450 304 278 449 336 519 329 432 351 355 419 438 367 653 414 510 418 292 578
 335 437 387 407 400 831 274 772 397 881 392 464 402 369 328 415 282 520 441 435 487 517 406 456 571 393 325 346 390 455
 474 458 491 404 562 322 466 518 516 420 353 394 399 326 379 478 504 531 550 470 408 465 573 540 333 585 430 350 380 436
 296 514 448 539 366 475 434 468 416 417 527 409 360 503 490 497 413 388 463 370 563 557 253 565 618 361 447 493 342 523
 505 480 588 484 538 306 590 457   2 686 377 426 486 378 558 635  44 462 352 673 386 427 364 626 148 564 498 544 446 485
 476 382 375 440 195 359 502 423 566 616 443 579 384 521 429 554 495 442 591 284 341 536 451 372 272 570 389 535 549 444
 506 454 552 589 187 175 665  98 343 652 534 561 482 610  57 483  24 666 469 633 260 582 553 645 280 501 164 581 586 623
 584 488 507 551 512 347 421 220 300 327 363 541 583 575  96 761  95 500 607 479 140 297 658 648 270 210 603 642 661 529
 782 598 459 743   4  39 234 638 139 141 694 644 669 302  10 587 403 624 546 679 593 460 193 655 396 131 227 614 717 594
 656 718 543 542 146 316 622 526   1 602 668 511 615 157 172 525   9 750 640 567 439  62 560 600 110  54 489 659 700 556
 751 685 629 794 471   7 693 702 537 243 611 569 630  56 222 631 189 697 674  17 279 130 124 789 100 185  65 764 738 533
 688 524 670 775 145   3   6 242  86 654 621 678 453 230 651 604 265 634 677 627 318 313  93 481 181 422 330 749 703 692
 784 662 722 715 252 395 689 842 133 249 620 684 704  50 373 839 268  20  34 770 170 663  27 154 371  28 217 725 657 698
 739 807 687 744 608 150 151 173 165 123 755 860 777 298  14 699 245 835  11 709 188 121 169 727 107 368  80 781 742 682
  61 740 846 771 248 128  52  13  75 163 838 714 815  51 707 732 238 803 741 290 228  63 232 745  29  26 795 848 828 695
 800 721  37 791 729  92 690 660 425  64 730 305 756 283 667 681 177 868 752 767 112 109 143  85 134 348  38 758 785   8
 858 120 824 829   5 103 205 672 108 852 257 849 827 184 779 876 862 870 875  76  47 144 155  16  41 244 805 793  21 218
 878  33 809 832  22  91  67 748 266  46 798 731  19  90 345 804 879 778 817 136 111 104  74 796  71  58 801 883 873 555

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.77488e+06us (= 3774.88ms, 3.77488s)
Wall-clock time (full program): 3.83024e+06us (= 3830.24ms, 3.83024s)
Satisfaction error: 0
Number of search iterations: 2353
Number of local moves: 885 (including on plateau: 417)
Number of local minimum: 200 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 18783
Total number of local moves: 7106 (including on plateau: 2286)
Total number of local minimum: 1483 (including on plateau: 307)
Total number of resets: 5
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 857  77  98 806 697 702 799 741 827 851 161 571 169 722 123 101 482  43  78 862 893 821 222  60 133 108 192 198 245 876
  85 771 104 204 668 690 788 659 172 800 121 106 107 797  70 183 883 892 644 658 600 650 164 689 889 176 100  67 682  96
 695 874  14 888 803 746 609 165 220 727 124  94 760 887  58 679 632 118 114 131 159 693  38 890 252 317 801 844 138  45
 194 304  61 105 663 233 807 605 731 864 209 122 773 865 424 171 748 836 170 688 583 629 110 826 137 262 879 241 188  87
 147  84 134 705 496 875 479 818 143 419 145 125 850 454  74 681 900 733 229 882 528 793  47 275 878 517 715  46 232 111
 178 166 168 672 891 780 612 615 276 842 191 676 816 754 109 212 886 777 200 177 868 585 132 236 898  50 225 239 196  88
 215 869 237 870 895 817 768 707 278 776 187 281 300 338 274 859 884 153 254 867 208 823 218 423 146 297 162  56 158 195
 186 313 355 721 639 627 574 896 207 589 680 411 696 337 258 853 319 298 345 897 472 757 459 284 306 185 136 231 213 271
 206 103 116 782 840 318 894 596 831 545 586 253 330 830 325 860 324 814 174 873 336 812 305 173 139 182 321 272 129 246
 270  92 140 534 745 435 703 847 163 732 334 286 289 350 314 247 292 518 460 242 852 511 260 858 244 332 751 523 328 863
 486 249 331 256 533 660 877 394 279 652 880 267 453 617 433 770 268 326 150 810 250 785 483 341 277 438 371 369 228 282
 358 413 402 395 547 348 742 203 473 548 613 839 227 301 312 855 283 400 374 299 386 420 393 199 881 339 789 381 255 540
 376 327 729 683 640 380 367 849 360 569 792 205 747 310 357 349 463 718 467 240 407 560 152 197 344 432 322 303 464 406
 362 410 439 264 509 416 503 280 404 510 365 899 443 347 425 485 396 871 447 226 323 361 581 661 429 403 466 434 474 382
 468 390 764 478 522 430 427 378 529 587 704 285 414 633 477 385 521 377 356 366 389 296 391 359 490 315 235 527 456 566
  25 329 446 590 363 421 401 409 584 506 614 536 422 436 469 525 512  15 603 564 662 295 489 437 417 562 441 373 501 568
 591 408 418 499 189 445 431 351 440 353 156 502 471 578 647 375 130 263 598 651 465 505 494 457 495 426 570 493 579 535
 484 531 577 261 342 368 539  80 428 273 370 538 448 115 567 657 520 524 601 415 287 665 554 475  93 455 573 669 664 442
 476 541 744  10 293  95 462 343 470 387 288  21 626 514 516 498 631 756  19 786 576 266 530 526 398 491 552 642 694 364
 551 656 553 127 154 561 405 352 507 354 184 151 392 543 671 607 492 699  12  20 597 102 515 736 685 625 623 458 637 546
 508 618 602  69 399 126  68 190 635   1 504 649 555 497 608 572 224 779 616 735 120  63 599 532 621 708 119 556 692 550
 674 725 775  59 221 755  41  82  49 320 487 673 634 308 558  55 210 701 720 302  54   2 594 837 549 575 481 684 808 582
 588 713 648 449 238  48  97   9 728 346 537 686 654 259 772 700 606 767 834  53 544  83 316  26 619  33 622 726 796  18
 611 738 687 311  79  37   7 117 643  75 450 655 397 628 714 678 216 809 559 167 667  52 666   6 645 675  89 646 653 838
 835 636 677 384  34 765 269 519  91  40 829 750  17 290 670 135  23   3 841 595 412 565 724 157 444 752 624   4 739 691
 709 112 706 179 193 144 202 180 784  35 604 641 309  66 833 291  44  64 811  76 787  57 815 719 819 795 620 557 753 610
 794 592 500  65 175 710  32  90 804 388 480 580 593 234 846  81  73   5 759 383  86 248 828 820 230 761  16 712 832 798
 778 763 749 791 257 141  71 805   8 333 211 783  22  30  27  28 848 128 452 265 243 219 762 885 160 743 717 740 734 822
 769  13 630 845 335 294 201 856 638  51 843 149 113  24 861 372 563  29 774 223 730 181 802 214  72 824 542 766  11 790
  39 698 711 513 155 148 340 379 813  42 866 781 488 451 723 251 142  99 854  62  31 716 872 217 825 737 461 758  36 307

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.07949e+06us (= 2079.49ms, 2.07949s)
Wall-clock time (full program): 2.13374e+06us (= 2133.74ms, 2.13374s)
Satisfaction error: 0
Number of search iterations: 706
Number of local moves: 610 (including on plateau: 123)
Number of local minimum: 20 (including on plateau: 10)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6476
Total number of local moves: 5288 (including on plateau: 1238)
Total number of local minimum: 209 (including on plateau: 143)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 876 676 299 396 773 694 177 114 875 709 134 711  32 171  25  29 822 898 836 777  71  62  93 639  54 827  68  30 803 844
  95 457 809 749 742 794  72 148 895 166  55 774  98 896  69  63 102 530 260 526 882 675  89 586 285 801 852  79 175 791
 881 851 511 652 839 888  64  59 689 802  66 133  53 146  65  47 135  94 856 667  87 864 740 750 681 786 150 156 206 597
 414 737 755 475 718 128 276 314 861 184 140 826 110 136 215 117 123 814 424 891 168 759 658 701 137 772 860  78 104 620
 189 783 588 733 575 103 642 717 900 188 197 561 165 203 122 185 129 640 841 840  51 792 217 251 161 846 205 837 144 710
 193 788 715 766 702 461 225 211 196 817  84 819 176 241 292 173 142 635 279 890 162 186 514 825 868 855 112 357 209 622
 262 732 528 721 820 779 880 201 341 886 130 309 377 153 167 154 234 510 210 355 187 488 259 865 282 756  90 182 828 829
 261 892 793 830 540 238 255 878 141 281 287 242 119 237 448 387 272 853 375 850 139 180 874 854 143 734 373 257 535 247
 305 632 805 811 808 239 243 381 842 316 322 862 200 337 220 320 269 707 303 390 266 871 735 686 105 506 178 250 268 338
 289 286 699 804 877 366 576 288 263 873 297 386 458 212 228 428 155 628 393 745 340 887 301 248 363 634 207 383 131 770
 415 317 758 857 884 226 724 179 252 629 370 392 280 264 304 371 391 879 326 731 413 216 267 617 312 606 410 236 525 364
 271 429 579 462 609 324 693 265 349 350 347 490 441 365 394 343 367 796 439 558 894 307 376 328 443 627 204 293 691 481
 256 401 329 411 397 398 897 283 482 361 342 452 346 295 318 399 385 872 502 466 277 451 374 501 354 454 430 810 800 472
 407 431 533 899 486 405 464 467 478 512 400 487 539 356 438 296 389 344 310 625 359 538 442 500 427 537 372 290 469 315
 308 435 447 444 479 529 408 333 422 460 368 550 319 465 416 752 421 331 612 378 477 409 418 449 524 542 278 521 595 425
 395 403 426 456 546 552 483 547 433 505 402 562 468 507 353 336 493 384 404 531 522  23 557 412 446 434 406 492 605 432
 474 657 463  49 516 335 455 578  40 138 382 473 339 661 485 638 543 523 417 476 545 559 423 453 544 352 564 504 459 470
 496 577 323 245 321 509 569 494 646 685 491 358 437 585 604 596 536 508  16 227  27 498 497 489 666 291 480 311 518 515
 594  48 519 554  57 553 222 565 520  42 592 445 571 567 345 527 670  50 270 568 590 517 631 330 566 334 593 621 499 555
 541 716  52 298 484 532 682 582 616 607 549 615 573 581 560 626 513 115 603 218 679 101 159 214 589 190 619 600  88 213
 614 714 275 106 420 651 254 548 730  37 570 563 665 663 598 637 649  80 503 580  15 362 656 294 534  12 672 644 300 169
 695  96 158  99 302 630 235 556   8 687 713  76 653 744 647 698 633 199 613 436 599 776 124 100 583  19 677 697 471 591
 587  67  83 183 174 673 662  81 618 696 726 688 671 684 769 572 610 388 611 172 608 194  31  70 790 244 723 785 223 132
 680 125 306 121  77 668 233 751 650 116 743 725 782 746 624 654 669 107 780   6 584 108 601 152 660 253 835 313 360  86
 692 274 160 127  82  24 700 775 767 708 818  45 832 703 823 720 655 195 690  20 648 147 151 224  46  22 704 623 645 495
 736 602 327 198  35 847 273 768 230 164 664 784 551 799 727 659  43 348   7 113 683 145 706   2 719 440 754 678 229 284
 674  58 232 379  36 202 369 762  60 157 866  38 883 807 797 764 789  97  33  11 781 748 845 231 747 325  21 729 893 181
   4 126 351 192 111  18 712 643  28 120 849  75 705 843 761 419 765 332 798 246 760 118 812 170 753  74 778 738 834 380
 885  14  56 258  61 739 249 806  92 450 722   1 813 109 870 757 787 641   9 219 863 763 816 741 728  34 815 163  41  13
  26 191 636 240  44  10 821 221  91 869 889  73 859  39 831 848 824  17 795   3 838 771 149 833   5 208  85 858 867 574

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.71768e+06us (= 2717.68ms, 2.71768s)
Wall-clock time (full program): 2.77249e+06us (= 2772.49ms, 2.77249s)
Satisfaction error: 0
Number of search iterations: 1432
Number of local moves: 761 (including on plateau: 170)
Number of local minimum: 85 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11370
Total number of local moves: 5846 (including on plateau: 1654)
Total number of local minimum: 744 (including on plateau: 189)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 836 812  17 828 106 371  97 862 602  55 537 152  13  85  78 520 869 112  67 616 689 899 850  65  33 633 820 304 754 833
 819 588  19 796  35 420 126 327 185 213  83  74 125 774  10 686  24 118 811 702 678 881 857 837 141 803  73 726 797 787
 851 773 878 631  87 710 102 827 117 139 110  41  88 601  46 747  48  51  93 660 801 896 870  60 709 674 150 892 680 183
 752 769 198 721 132 748  34 886 893  18 187 101  36  45 204 629 745  84 174 535 708 208 155 897  89 772 444 718 852 781
 825 889 108 133 866 758  92 713 148 172 129  44  37 504  22 795 146 283 813 860 859 310 858 716 228 466  76  50 882 733
 766 692 261 800  61 894 257 890 330 655 421 880 298 194 105 762 119 100  28 847 761  90 216 328 855 737 220 156 589 203
 672 884  95 661 168 539 329 861 116 266  80  99 173 252 147 856  54  66 895 792 891 145 268 832 460 723 179 736 430 846
 277 285  58 842 115 888 363 887 186 272 510 353 170 816 190 770 605 166 221 784 683 195 823 297 222 790 123 284 573 767
 226 427 233 677 259 639 230 582 227 219 303 243 280 853 209 729 229 196 292 804 663 818 267 258 782 849 239 333 725 724
 291 238 205 348 349 669 396 604 171 871 345 810 193 387 509 865 449 215 255 638 264 245 293 274 606 578 845 586 670 346
 232 900 351 394 834 620 375 581 412 107 319 307 528 508 322 625 373 885 191 361 417 270 234 404 286 397 315 879 478 610
 308 381 302 676 279 514 613 749 385 289 282 398 313 299 369 597 368 290 342 874 241 332 720 366 450 415 312 731 529 791
 524 457 898 335 295 545 426 281 465 491 318 505 448 344 424 383 436 391 480 323 296 495 402 364 161 719 438 815 756 300
 390 511 223 288 742 789 311 516 435 413 824 278 671 395 225 242 380 357 503 301 334 730 624 454 324 507 433 338 641 336
 407 341 446 603 392 416 614 451 340 830 306 410 275 358 401 463 576 269 647 214 500 544 354 419 523 477 492 497 557 393
 572 548 352 326 717  81 522 389 550 513 469 443 599 543 580 609 428 372 379 377 414 642 461 452 501 262 206 440 409 359
 362 263 490 472 343 530 561 479 184 565 595 423 447 434 365 384  26 482 740 551 408 512 521 533 555 462 422 540 360 506
 515 591 608 386 473 405 382 175 411 439 399 637 388 583 554 556 464 470 518 553 418 560 431 309 607  64 403 517 180 519
 592   6 564 615 570  70 567 406 547 569 594 314 531  69 688 104 644 600 467 579 571 558 525 632 425 135 777 109 350 337
 471 235 527 400 646 224 684 376 699 367  15 696 455 456 619 140 596 658 445 134 248 630 694 662 559 484 486 177 256 476
  96 441 757 493 681 201 541 355 546  12 635 496 621 843 668 253 682 675 165  43 481 628 485 612 575 260 563 459  38 210
 627 648 649 113 370 200 732 151  77 656 488 653 622  98 483 276 659 562 743 568 611 305 802 502 287 271 487 453 331  91
 458  30 654  31 651 163 667 320 587 534 489 839 746 111 722 114 549 664 750   5 618 598 121 697 536 199 442 542 432 246
 251 657 712 128 645 162 325  68 636 793 532 690 666 475 698 202 822 744 247 593  56  32 673 131 240 584 695 498 182 378
 249  11 704 617 764 244 705  75 691 835 817 687 786  25 867 159 763 768 707  49 154 665 755   3  39  23 751  14 494  94
 634  63 844 552 429 626 538 237 679 217 652 574 623 799 821 347 788 809 212 236 157  29  71  59 760 474 739 130 273 143
 122 144 771   7 738 499 577  52 703 840 794 142 798 883 759 178 863 778 779 136  79 643  42 585 590 169  20 437 137 250
  53  16 526  21 211  40 735 189 700 650 714 706 841 780 831  47 775 826 765   9 197 321  57 807 854 167 806 468  86 317
 188 734 873 265 728 176 776 164 685 814 693 715 876 124 872 138  27 741 785 153 160 103   4 207 864 294 848 120  72 316
 149 181 192 356 829 374 838  62 808 701 875 805 868 877 727 339   8 783   1 218 158 231  82 753 254 127 711 566   2 640

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.83927e+06us (= 2839.27ms, 2.83927s)
Wall-clock time (full program): 2.89312e+06us (= 2893.12ms, 2.89312s)
Satisfaction error: 0
Number of search iterations: 1581
Number of local moves: 677 (including on plateau: 158)
Number of local minimum: 106 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11872
Total number of local moves: 5350 (including on plateau: 1673)
Total number of local minimum: 786 (including on plateau: 206)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 873 538 777 130 199 698 282 795 196 834 887 561 874  90 103 139 191 182 844 833 681  72  70 136 876 153 672 508  65 256
 700 444 144 379 767 126 280 488 235 750  52 703 654 129 110  78 819 710 790 610 866  66 880 562 875 113   9 449 594 133
 749  87 871 537 852 114 165 648 387 606 886 609 486  20  82  45 227 567 868 116 632 652 337 869  97  34 713 778 347 134
 179 234 856 142 257 233 892 735 334 597 718 150  28  44 891 146  71 532 862 821 601 643 553 127 198  62 864 640 251 854
 236 186 185 755 741 213 292 811 638 770 404 729 250  94 291 357  96 325 899 742 527 123 214 102 882 851 364 623  14 801
 260  57 315 805 838  86 275 807 206 836 172 754 828  61 118 131 839 769 829 485 841 388 208 154 242 695 647 108 559 202
 169 279 224 160 327 174 863 217 231 825 228 671 897 433 112  81 157 802 900 822 858 450 889  89 209 521  85 814 145 883
 501 147 212 564 301 846  95 878 180 181 473 783 859 288 161 269 797 794 349 492 879 159 850 184 187 489 311 683 194 409
 326 148 776 272 395 218 100 238 896 611 516  51 787 720 170 267 761 730  30  76 360 471 843 374 775 725 296 514 469 600
 245 124 373 764 758 354 366 255 348 766  40 726 793 661 437  47 719 872 687 346 711 216 249 402 175 520 193 734 330 304
 484 232 252 706 847 294 276 300 298 808 885 265 771 451 411 503 240 714 353 696 293 230 835 299 396  79 320 642 316 319
 426 884 339 283 895 323 285  13 446 220 780 733 849  53 536 660 392 401 321  67 378 369 659 322 743 752 380 408 247 351
 229 890 898 842 427 438 306 119 477 343 443 524 506 431 295 381 197 762 328 763 511 362 164 318 397 244 476 707 399 338
 281 412 286 768 641 498 355 365 385 415 458 442 430 494 309 544 435 650 577 545 462 356 344 480 522 617 403 273 436 332
 376  93 253 565 383 359 423 591 596 368 335 509 371 422 394 434 782 372 502 779 510 138 405 483 310 656 810 417 414 465
 455 419 481 653 140 425 413 341 447 629 308 472 303 452 535  21 582 555 215 491 670 620 633 410 239 479 759 528 274 566
 448 459 550 407 278 456 517 205 428 789 478 445  98 258 418 556  41 519 608 540 576 560 595 618 333 398 336 570 631 400
 493 539 603 143 575 367 824 382 541  50 189 207 644 424 421 717 504 461 580 342 313 586 183 636 497 211 507 361 613 602
 439 552 457 546 176 614 551 221 460 709 534 689 152 624 266 453 599 158 470 604 523 543 432 554 605 109 542 115 389 429
 587 774 529  58 628 340 612 530 117 302  46 630 515 637 467 588 663 370 190 101 324 669 590 391 557 352 655  73 558 662
 549 731 704 246 226 454 622 548 621  42 121 105 192 464 673 788 592 128 155 616  99 677 270 684 571 171 870 122 581 893
 688 708  17 649 466 753 572 125 646  19 678 815 203 512 563 712 574 390 241 195  64  35 225 894 277 668 639 178 593 416
 715 674 569 248 482 420 531 738 832  39 627  36 177 615 682 525 526  37 701  12 263 737 496 500 518 664 156 106 740 149
 505 237 463 363 694 474 634 111 723  55 675 440 702 666 607 692 223  29  88 635  38 584 579  80 583 393 739 665 697 141
 728 757 679 204 167 756 441 533 568  56 881 166  49 816 699 598 490 297  68   5  92 786  27 657   8 468 573 625 585 736
 877 813 772 384  22 827 748 475 855 727 578 201 222 386 680 781   6 254 162   2 806 406 290 307 651  69 261 132  77 744
 667 495 751  48  60 812  83 200 284 745 358 268 287 831 809 721  18 243  26 861 173 773  16 317 848 693 163 375 760 830
 305 685  11 765 329 219 857 785  74  43  33 312 210 800 690 784 658 589 289 791  54 676 691 860  75 686   7 487 746   4
  24  91  31 262  25 804  59 747 716   3 722 331 107 840 732 705 803 135 499  23 151 823 724 888 837 845 645  63 865  15
   1 826 137 867 619 820 796 314 350 377  10 188 271 799 853 792 513 168  84 104 259 345 264 818  32 798 120 817 626 547

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.17626e+06us (= 4176.26ms, 4.17626s)
Wall-clock time (full program): 4.23724e+06us (= 4237.24ms, 4.23724s)
Satisfaction error: 0
Number of search iterations: 2720
Number of local moves: 999 (including on plateau: 363)
Number of local minimum: 194 (including on plateau: 41)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 20533
Total number of local moves: 7977 (including on plateau: 2831)
Total number of local minimum: 1604 (including on plateau: 368)
Total number of resets: 7
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 862 834  52 214  49  92  96 747 881 156  65 671 800  15 811  17 797 543 112 631  91 888 565 863 101 664 160 792  64 882
 728 140  71 900 548  24  45 724 561  20  88 446 758 211 681  39 841 704 100 845 129 146 829 847 142 709  50 557 893 739
  87 839 668 789  34 161 210 744 372 255 577 168 743  93 644 895 884  89  63 690 544 721 147 643  77 632 228 843 138 537
 145 111 780 786 591 203 126 699 641  62  60 196 762 133 720 215 813 689 170 684  95 653 806 889  73 836 237 803  70 467
 125 169 850 103 110   4 183 755 566 777  90 336 782 218 752 190 866 702  29 892 148 305 742 885 763 374 108 818 154 719
 231 204 896 106 707 858 654 891 287 254 197 270 846 300 833 193 861 157 122 322 198 381 897 241 887 855 153 151 397 166
 253 195 263 291 711 872 868 606 649 177 387 345 691 201 714 116 415 309 257 727 244 871 191 525 137 298 149 883 347 823
 115 454 869 117 807 141 131 423 662 176 134 766 239 351 842 109 205 740 226 898 268 787 498 708 468 830 143 825 105 478
 243 783 716 299 812 405 179 508 876 113 259 852 199 302 775 320 395 717 163 899 150 822 393 230 396 838 102 202 315 252
 362 638 267 380 761 615 251 730 516 366 173 521 222 282 618 349 209 323 363 318 880 348 308 667 386 680 646 132 435 769
 355 580 401 276 894 736 357 715 636 233 875 420 497 513 312 443 304 710 232 844 262 229 325 416 213 317 371 479 217 353
 375 442 432 301 701 685 865 890 471 165 493 547 249 225 376 342 292 329 785 486 364 406 462 303 235 286 477 791 275 465
 313 640 369 450 358 683 162 594 382 324 335 859 809 216 509 402 378 533 409 496 642 365 326 328 529 334 437 538 281 514
 314 611 502 449 421 515 341 391 545 438 447 659 373 385 456 491 444 352 419 220 368 307 480 567 256 867 458 679 430 330
 290 500 451 260 439 425 472 604 469 466 531 332 410 394 526 455 463 507 610 504 453 331 360 404 581 343 574 459 499 403
 428 389 448 506 359 563 549 431 482 473 518 377 559 411 429 540 590 399 571 247 426 470 452 461 445 327 361 582 682  40
 340 344 306 551 258 519 501 418 422 434 440 464 485 436 487 560 333 476 481 384 593 424 505 414 354 417 572 602 583 412
 635 413 753 346 554 245 596 223 283 597 388 488 588 599 367 587 535 188 408 484 457 524 539   8  21 698 576 350 555 510
 427 272 568 398 608 181 511 356 278 522 528  56 527 616 627 542 523  81 503 550 475 620 562 613 573  18 495 261 688 536
 617 338 672 530  16 379 441 212  80 558   1 130 651 607 520 490 589 279 492 164 663 592 601 619 629 706 630 586 665  58
 556 460 624 657  57 433 546 532  41   5 696  54 757 390 123 732 734  32 676 609  19 666 603 585 494 269 541 400 564 660
 512 189 570 694 626 285 723  67 296 718 712 139 693 731 280 517 600 104 489 656 584  10 136 552 639  66 621 180 652 474
 713 392 240 650 171 569 695 266 158 738 827 553  42 658 127 729 234 383 804 167 578 288 669 614 686  33 637  31 784  79
 622 595 623 722 273 794  26  84   7 750 628 655  53 647 119 612 625 645 735 172 788 107 187  12 848 242 633 598 675  38
 778 773 674 771 221  11 817 339  35 816 575 746  83 670  37 837  28  86 319  72 741 764  94  36   9 790 853  69 779 692
 605 284 128 793 316 737 673 185 200 703 796 264   6 774  46 828 194 271 756  22 733 687 725 155 870 370 483  55 648 208
 772 798 120  13 121 759 678  98 874 840 801 705 184 661 175 768  43 579 760  25 851 289  47  44 877 114 337 174 802 206
 178   3   2  99 856 748 294  48 776 826 820 265  97 878 227 246 219 849 751 182 700 277 135 821 864 248 810 407 765 124
 677 311  82 310 321  68 799  76 795 808 293 697 224 767 238 873  27 879 824 250 835 152 297  14 770 295 854 207  23 749
 857 814 118 754 815 805 726 159 274 745 781 534 186 831 144  78  74 860 886  75 236  85 634  51 192  59 819  61  30 832

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 1.93256e+06us (= 1932.56ms, 1.93256s)
Wall-clock time (full program): 1.98775e+06us (= 1987.75ms, 1.98775s)
Satisfaction error: 0
Number of search iterations: 759
Number of local moves: 540 (including on plateau: 130)
Number of local minimum: 32 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5715
Total number of local moves: 4693 (including on plateau: 974)
Total number of local minimum: 178 (including on plateau: 130)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 234 766 726 824  26  14 838  41 284 466 839 178 745 209 172 848 276 136 270 424 786 841 339  45 796 661 804  77 174 676
 836  69 850 189 148 825 190   9   8  40 812 166 842 751 350 830 811 347 870 865 777  67 134 835 819 232 610 115   5 113
 659 823 863 809   6 153 703  39  12  70 847  51 795 239  78 729 710 315 820 845 798 874 170 173 748  28 344 601  16 197
 844  19 587  20 456 816 756 354 208  10 716 124 794 688  93 827 806  22 826 743 712 778 303 567 776 216  38  91 195 130
  32 783 147 679 497 699 510 185 248  15 784 111 739 651 163 803 704  33  25 759 723 555 300 217 799 673 840  52 120 669
 829 708 707 741  96 506 805 277 169 352 752 144 611 663 594 789  97   7 792 722 808 503  53 774  61  75 188 192 187 313
 791 122 760 697 203 693   3 619 204 183 720 139 430 787 592 614 724 675 624 605 296 654  84  13 718 196 772  57 205 335
 715 641 658 595  48 681 660 468  46  83 621 564 652 588 362 717 511 638 646 730 706 626   2  27 534  34 677 171  42  72
 647 696 536 532 184 631 687  94 233 206 370 586 705 698 100 762 685 713 578 711 537  24 229 507 644  95 523 127 231 244
 747 557 744 616 295 657 558 474  88 485 432 607 628 504 309 674 627 548 598 622  74 618 201 671 105 230   1 126 441 278
 484 754 662 609 520 325 482 582 375 215 155 581  92 538 553 481 629 540 535 116 590 600 199 388 527 457 500 433 512  81
 530 420 615 518 210 635 740 162 348 342 521 499  11 545 254 653 446 604 575 612 547 634 387 560 682  59 442 297 591  76
 483 642 417 524 526 464 562 522 449 447 378 287 103 583 398 620 311 589 542 486 719 437  47 409 593 502 112 416 487 460
 445 491 603 563 337 448 455 695 477 368 328 505  64 509 559 450 529 382 533 493 385 471 371 531 463 473 453 137 574 423
 414 476 345 606 404 355 461 508 443 407 421 543 546 490 410 479 294 637 513 539 672 271 472 365 427 386 452 367 393 419
 568 465 307 415 405 761 401 400 431 454 323 413 633 408 551 478 459 556 451 498 343 411 492 316 403 334 428 425 516 470
 599 223 340 444 436 373 597 480 469 364 897 435 320 467 237 381 458 314 515 494 332 569 406 496 359 377 868 356 519 390
 550 577 363 358 665 800 253 392 613 322 580 561 279 160 426 552 275 501 319 438 439 338 617 306 422 691 374 602 440 302
 301 571 379 429 680 265 310 733 541 758 346 395 267 565 369 283 252 737 305 380 165 366 475 353 514 639 576 623 372 566
 336 286 341 333 544 256 770 700 383 572 394 384 396 262 357 329 570 152 291 862 326 150 391 822 376 330 399 831 579 793
 264 156 167 288 655 312 298 755 709 775 263 213 859 251 351 324 268 258 280 228 727 304 714 462 158 852 750 702 434 738
 327 257 282 331 274 133 242 694 886 573 259 241 549 397 869 194 293 269 308 221 317 900 525 361 200 834 495 689 742 853
 299 289  49  30 894 182 245 860 684 585 161 780 349 895 833 175  85 273 219 218 290 181 769 736 157 664 517 686 645 765
 236 243 119 108 735 154 883 746 814 668 222 321 418 176 643  79 281 225 360 202 186 211 892 893 212 701 489 650 846 802
 220 177 143 227 734 896 138 114 666 764 773 899 266 214 584 226 142 767 179 250  80 261 782 131 238 692 608 880 781 683
 129 272  73  56 818 873  31 193 596 656 168 889 140 159 790  50 389 768  21  37 149 878 849 788 132 851 285 867 732 876
 110 224 117 898 318 191 180 554 881 821 292 854 801 882 246  23 123 872 402 260 107 128 856 121 151 632 109 797 837 728
 864 866 875 198 861  62  98 101 749 890  58 753 164  87 779  66  60 725 884  36 690  71 858 888 118 721  43 488 255 207
   4  65 636 810 649 249 247 879 871 817  54 667  82  63 678  44 857 771 135 102 145 648 813  90 528 240  55 828 757 731
  18 877 104  68 891 106 412 885 630 807  29 625 235  86 815  35 843 141  99  17  89 146 785 670 855 640 763 832 887 125

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.21433e+06us (= 3214.33ms, 3.21433s)
Wall-clock time (full program): 3.2709e+06us (= 3270.9ms, 3.2709s)
Satisfaction error: 0
Number of search iterations: 1875
Number of local moves: 576 (including on plateau: 130)
Number of local minimum: 148 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14778
Total number of local moves: 5276 (including on plateau: 1698)
Total number of local minimum: 1140 (including on plateau: 229)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 217 159 820 461 782 850 825 790 824 122 119  47 296  69 111  13 320 844  32 430 842 421 837 725 336 367 818  19 853 166
 118  88 841 398 796 864 789 732 777 208  55 226  34 174 107  72 857 806 855  16 848 673 792 776  35  25 661  14 866  12
  26 723  43 135 827 779 819 724 741 682 346 242  99  71 229 156  18 863 816  73 718 506 835 809 115 204 670  46 870 330
  91 179 839 869  11 305 826  28 752 297 120 127 636  76  75 845 731 856 760 257 810 834 207 645 153  41 596   9 833 707
 110  66 643 541  86 840 366 829 865 746  24 347 356 186 109  36  60 780 692 609 699  70 761 775 353 171 551 822 854 168
  95 142 821 270 734  57 772 815 754  67 291 114 182 549 205  39 278 696 694 783 759 626 708 301  63 152 659 532 784 573
 211  38 691 267 672 811  44 243 666 454   5 167  51  20  48 671 639 791 805 717 629 116 505 770 163 436 703 719 720 743
 190 123 797 268 702 681 504   2 814  49 272 134 221 576  59 787 523 658 705 685 553 202 373 646 628  33 713 615 851 151
  15 121 618 112 774 862 654 674  68  94   7 599 281 203 199 644 667 633 726 556 675  53 602 664 224 540 592 640 687 331
 141 259 520 262 663   1 535 662 727  27 304 735 433 595 345 581 812 653 656 580  23 282 676 690 133 550 722 579  40 329
 240 738 319  79 623 587 559 631  10 650 362 612 148 560 307 567 324 359 614 494 597 522 507 434 554 444  17 487 566 604
   3 721 449 244 258 498 501 668 527 515 302 607 572 585 315 632 568 416  61 624 537  64 575 613 328 542 562 678 544   6
 339 372 389 729 420 619 526 584 571 534 370 533 519 558 594   4 570 460 546 456  77 574 484  30 426 481 485 391 358 516
 289 407 499 509 512 455 424 563 693 513 431 539 647 502 641 588 365 382 176 459 395 440 381 616 218 410 642 295  21 503
 317 402 548 415 435 545   8 392 529 298 555 413 469 695 464 429 411 404 379 437 355 611 680 350 210 600 408 638 488 630
 425 524 470 538 394 380 387 514 427 241 446 479 335 561 510 397 477 525 508 606 286 443 361 423 403 493 476 472 531 483
 497 468 338 583 557 349 482 386 467 384 711 577 564 465 333 369 490 478 343 412 213 601 486 582 354 383 405 371 489 378
 899 441 265 861 466 160 445 306 197 450 621 283 888 458 327 206 325 462 374 340 363 799 473 294 648 368 400 273 518 605
 686 388 463 679 287 536 288 357 312 448 578 747 769 399 569 414 396 216 471 250 428 849 140 264 852 617 309 169 313 321
 712 438 285 892 375 439 314 418 318 341 598 417 689 422 634 235 256 219 261 884 326 528 323 293 804 453 352 212 474 603
 655 730 344 753 390 136 299 284 457 807 447 292 739 377 586 385 342 308 277 232 348 608 744 322 657 813 266 543 129 245
 749 311 491 480 492 660 247 409 228 781 591 274 677 237 846 275  85 635 172 191 547 898 364 419 773 310 233 200 236 704
 768 688 332 269 351 280 303 828 195 223 517 803 758 652 593 263 187  92 147 234 300 622 887 337 766 239 214 891 139 637
 740 785 360 683 251 192 871 225 290 452 896 877 701 198 627 316 254 201 406 401 376 565 253 883 715 231 255 252  82 177
 895 880 104 706 158 885  87 238 183 823 767 196 716 832 771 714 125 215 113 830 100  80  52 154 874 801 138 155 181 742
 890 873 126 610 271  62 334 698 193 279 763 521 709 900 836 889 847 101 149 165 248 220  65 137 697 625 175 222 173 737
 793 511 858  54 843 188 184 143  78 748 750 249  22 872 733 859 194 105 393 106 442 146 130  90 817 838 451 881 170 867
 886 665  89 246 131 180 178  42 117 590 882 700 128 794 788 589 879 230 860 755 227 189  58 161 728 878  93 894  83 475
 710 530 108 552 157 150 144 185  84 795 649 765 802 260 798 762 751  96 495 831 757  98 132 209 432 786  81 620 500 276
 808 745  45  50  97 164 800 145 651 897 736 893  74 669 756 778 764  31  29 102  37 875 124 103  56 684 868 876 162 496

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.56483e+06us (= 2564.83ms, 2.56483s)
Wall-clock time (full program): 2.61842e+06us (= 2618.42ms, 2.61842s)
Satisfaction error: 0
Number of search iterations: 1348
Number of local moves: 743 (including on plateau: 290)
Number of local minimum: 77 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10028
Total number of local moves: 6275 (including on plateau: 2201)
Total number of local minimum: 550 (including on plateau: 243)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 815  38  78 872  32 685 833 848   4 844 239 246 802 784 450 719  10 165  13 800 386  98 743 102 820 357 870   6 829  27
 761 483 261  42 187 831 318 821 316 765 200  99 804 789 245 889 101  69 125 273 140  44 752  81 797  73 790 806 846 807
 858 684  24 841  96 683 698 819  40 813 172  72 795  16  59 862 361 133 166 647 134  33 787 176 768 275 751  11 860 881
  30 801 182  19 764  26 836 615  94 828  22 107 851 762 255 716 691 315   9 812   1 194 387 744 825 300  54 824 648 803
 660 769  35 506  23 748 689 865  45 713  21 157 778   3 443 843 817 406 229 763  84 118 799  20 122  48 714 699 757 641
 663 671 290 577  31  15 705 623 616 271 793 792 686 822 366 627 498 704 120 631 204 205  92  93  47  62  50 782 873 606
 675 347 141 179  34 688 397 737 695 884 754  90 652  39  77 767 604 115 257 644 629 178   8 561 680  18 753 611 620 681
 588 703 224 132 676 720  14  51 485 155 655  60 634 818 143 694 639 110 625 599 678 128  57 241 637 298 662 773 557 759
 712   5 730 613 547 661 578 573  12 587 137 247 467 597 106 580 538 135 589 736 636 117  66  64 687 163 734 541 775 582
 429 231 396 642 583 794 656 214 633  88 292 447 496 600 243 726 212 235 494 692 184 369  80 513 706 228 546 709 475 602
 329 575 569 598 612 552 540 523 505 657 181 103 664 667 372 605 672 469 169 651 479 306  70  37 320  46 556 645 501 542
 632 196 380 728 718 532 522 590 503 722 596  68 507 533 199 470 402 221 466 668 504 308   7 188 673   2 425 679 514 562
 536 524 619 417 530 418 499 440 624 534 707 554 191 375 333 500 585 129 270 481 487 319 521 195 465 215 544 438 512 553
 571 531 517 401  17 492 346 411 352 535 463 551 519 431 404 482 295 459 548 584 537 421 310 497 635 595 436 486 626  63
 665 473 435 423 601 453 570 511 526 460 339 592 138 617 579 529 312 311 581 472 359 370 448 281 455 360 365 338 520 432
 528 509 442 480 515 454 614 724 493 297 491 294 407 478 394 288 364 477 441 489 400 565 495 471 456 422 379 211 476 461
 175 414 415 299 337 314 413 363 717 412 896 403 342 484 424 390 772 282 550 593 260 609 568 371 416 738 322 334 458 444
 355 305 525 449 274 350 563 353 490 427 539 395 690 434 708 405 358 739 244 426 258 725 437 377 452 842 391 378 373 253
 248 866 445 356 349 527 408 430 419 344 376 545 343 293 723 340 721 643 715 325 269 607 220 433 516 746 304 227 393 384
 362 558 249 845 410 457 309 307 474 328 428 330 162 420 814 279 555 755 234 867 462 510 878 399 326 488 121 464 336 388
 341 389 289 335 543 313 153 296 838 899 327 586 280 332 834 263 206 847 217 180 791 788 367 682 197 594 840 345 225 218
 354 321 591 383 381 159 286 324 610 374 210 882 226 250 883 266 208 276 701 351 771 735 852 887  75 666 439 740 168 146
 331 385 776 267 796 265 251 382 741 638 368 780 567 142 603 398 201 653 177 216 189 576 259 864 147 742 468 808 303 222
 277 572 777 230 190 219 900 254 893 262 859 809 301  65 727 213 392 566 885 207 287 451 317 837 272 711 348 232 198 264
 192 183 650 816 786 898 323 291 185 116 237 446 409 144 618 108 876 268 756  43 284 857 897 630 839 781 167 236 256 223
  91 564 731 750 856 111 549 164 240 114 849 770 160 148 700 209 203 892 850  87 670 798 733 747 130 810 252 113 100 124
 202 193 710 874 508  89 152 127 158 109 760 658 238 758 811 156 302 879 835  52 854 654 518 805  56 674 890  85 123 285
 233 161 502 154 745 126 149 693 649 150 559 895 242 186 574  79 119 697 622 104 877 830 560 785 827 855 171 863  53  55
  41 170 749 136 608 868 173 105 880  58 174 891  25 888 145  83 832 869 774  36 826 823 628 732  95 729  97  82 112 886
 861 894 783 151 766  67  71  61 278 131 871 646 139 640 283  29 669 696 853  86 875 779 659 702  74 677  76  49  28 621

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.17071e+06us (= 2170.71ms, 2.17071s)
Wall-clock time (full program): 2.22634e+06us (= 2226.34ms, 2.22634s)
Satisfaction error: 0
Number of search iterations: 971
Number of local moves: 597 (including on plateau: 144)
Number of local minimum: 57 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7321
Total number of local moves: 5410 (including on plateau: 1460)
Total number of local minimum: 314 (including on plateau: 171)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 124 709  66  77 169  18 786 285 245 528 223 867   5  30 831 827 205 778 864 865 369 821 885 868 730 137 769 291 127  16
   6  24  45 805  75 168 179 187 861 110   4 854 784  14 840 811 185 879 367 785  39 745 862 819 794 857 735 629  41  11
  38 721 667 829 671  62  15 278 712  57 159 824 772  54  22 833  10 842 160 755 774 728  37 749 142 851 830  17 162 744
  94 791 131 826 120  44 802 200 767  20   3 750 324  23 277 783  92 697 873 652 257 628 708 856 729 756 355  60  21 876
 171 176 113 797 125  63 635 116 860 234  52 822 858  49 788 455 158 836 152 679 659 633 605 757 814   9 693 240 138 828
  65 818   8 734 309 427 299 248 591 112  51 883 634 720 586 692 224 155 780 573 269 702 798 806  26 611 641  12  68 673
  64 370  53 646 237 173   1 288 810  48 204 815 719 606 765 572 656 796  97 676  36 687 599 402 781  72 758 648 247 689
 327 184  91 731 108 195  84  76 850 295 587 678 421 546 658 637 717 803 359 706   2 688 589 491 620  81 789 349 105 748
 640 439 495 665 482 181 302 119  25 499 547 538 496 722 636 417 166 580 149 691  19  55 588 736 807  46 817 672 300 686
 304 345  33 661 261 323 638  70 680  89 206 643 462 651 600 631  56 590  43 816 312 707 743 666 563 549 609 412 157 695
 478 134 329 433 608 296 174 115 566 597 664 603 473 407 598 373 460 626 275  27 219 596 544 571 618 497 415 683 487 649
 619 118 394 562 630 193 136 459 613 519 209 153 498 388 710 503 383 507  88 534 548 624 401 489 515 553 404 754 442 569
 343 467 463 470 504 292 249 576 346 657 529 264 488 647 574 555 682 483 645 485   7 128 429 479 517 625 451 466 183 511
 533 654 494 411 364 436 469 432 512 377 565 386 438 368 461 536 351 552 458 317 560 378 522 476 419 450 423 481 358 334
 454 623 567 443 437 430 452 484 575 558 233 380 480 557 621 212 431 330 545 416 425 610 393 486 308 410 400 316 449 490
 418 392 516 319 520 696 539 405 694 501 502 347 194 492 441 422 453 513 584 604 298 464 477 372 448 272 403 399 465 365
 363 614 457 305 446 390 320 385 274 471 727 398 472 289 570 564 353 318 521 617 424 468 456 356 406 670 379 428 328 746
 622 306 594 331 532 527 339 525 336 737 267 505 898 414 541 514 290 391 244 268 337 445 283 510 526 440 408 282 762 341
 313 871 543 344 348 530 770 338 397 382 375 518 725 892 266 389 260 218 384 259 607 307 354 352 535 315 559 273 568 523
 314 595 508 221 139 593 639 859 509 374 777 230 254 371 286 413 723 326 832 202 715 294 170 366 256 420 381 801 660 287
 350 579 863 235 251 642 133 761 340 779 713 239 271 241 156 506 787 561 556 228 627 362 270 714 322 263 214 760 601 191
 751 426 775 258 742 790 768 685 882 357 361 554 216 103 231  74 444 360 724 100 795 578 301 236 147 387 161 148 881 280
 612 674 250 220 753 668 705 583 211 616 531 310 409 740 265 208 733 227 632 474 434 114 894 196 226 229 303 342 764 192
 793 700 845 178 704 542 813 837 201 293 182 188  59 874 199 255 281 335 732 839 800 333 123 111 132 189 186 792 747 252
 716 435 759 109 849 896 681 690 165 872 890 246 150 279 284 311 540  90 592 102 644 107 297 175 897 475 135 217 766 146
 726 447 581 144 900 855 799 886  93 895 889 145 877 238 121  78 809 253 210 242 669 163  42  98 180 866 207 198 870  34
 739  67 835 893 130 551 524 741 172 325 602 151  71 232  32 203 701 104 711 197 804 823  69  95 141 782 812 493 663 852
 887 677 878  96 699 825 276 703 101 853 820 126  47 841 262 321 869 190 500  13 888  80 106 167 154 653  79 838 537  29
 752  86 585 550 684 875 215 808  99 698 763  40 129 884 844 177 846  35 225 332 396 164 122  31 675 655 117 738 847 143
 899  73 577 222 718 834 773 376  28 662 880  58 891 843  50 243 650 140 213  61 582  83 848  85  87 395  82 776 771 615

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.43354e+06us (= 2433.54ms, 2.43354s)
Wall-clock time (full program): 2.48919e+06us (= 2489.19ms, 2.48919s)
Satisfaction error: 0
Number of search iterations: 907
Number of local moves: 699 (including on plateau: 185)
Number of local minimum: 41 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8255
Total number of local moves: 5543 (including on plateau: 1578)
Total number of local minimum: 353 (including on plateau: 178)
Total number of resets: 0
Total number of restarts: 0

Error: 0
