@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 107 699  67 484 707 898 774 733 889  85 527 515 224  81  32 892  53 596 718 481 764  91  49 771  21 123 557 640  76 861
 187 894 837 650 729 703 715 351 858  59 167 415 846  50  78 782 641  82 577 120  33  60  79 745 867  23 888 868 185  26
 740 803 434 820 233 696 791 878 775 129 736 138 860 104  54 893  95 700 658  83 153 164 552 190  40 818 652  29 173 124
 282 753 115 885 645 320 669 644 864 158 649 826 651  66 875 584 127 192 169 255 856 205 354 546  96 114 513 613 252 237
 887 283 116 795 895 230 777 896  77 193 477 746 732  58 784 296 672 574 765  51 128 149 261 884  22 871 207 393 141 155
 166 704 352 839 111 113 779 110 204  87 766 160 816 181 865 635 203 183 398 241  34 228 563 717 817 131 841 886 622 763
 130 811 608 469 170 102 684 101 216 259 630 117 607 319 698 854 877 838 897 294 161 214 757 180 202 222 575 421 466 636
 326 722 744 859 413 189 507 883 276 321 661 223 555 197 154 201 364 852 286 266 281 243 824 226 457 150 830 627 646 232
 315 306 543 840 199 217 253 174 186  92 625 759 284  94 879 142 337 828 872 348 137 459 760 260 262 399 873 778 899 395
 426 279 408 339 298 250 737 853 122 890 819 822 468 349 225 210 244 310 767 285 586 331 583 257 381 292 358 694 686 246
 401 265 664 693 374 152 384 378 362 272 448 880 452 303 245 234 388 712 456 432 407 291 726 581 247 458 480 709 754 367
 273 372 357 437 268 402 359 489 891 345 869 870 380 568 231 411 544 301 673 177 290 256 758 347 464 386 366 810 227 394
 336 624 747 329 248 418 258 208 328 277 430 302 300 490 314 446 334 900 516 375 498 295 802 436 599 335 267 827 835 441
 428 558 725 508 317 332 323 365 526 638 445 304 539 866 404 433 390 499 313 559 356 308 588 369 535 425 264 309 547 342
 330 361 769 435 475 200 387 416 405 530 505 482 520 427 504 829 541 521 288 442 271 414 524 447 344 338 519 322 460 509
 467 383 355 506 376 449 439 400 496  70 542 417 368 470 582 412 522 569 598 495 593 510  80 528 629 579 454 325 492 409
 324 637 343 518 108 706 554 585 363 633 305 556 531 333 422 385 628 487 397 350  15 503 517 478 438 691 221 392 463 632
 377 511  61 538 529 731 327 561 697 611  55 591 176 602 472 639 589 371 601 440 307 497  43 494 500 600 239 254 562 540
 623 263 172 269 548 620 678 674 486 621 215 184 420 453 536 566 648  37 242 491 594 533 429 465 360 502 618 118 597 553
 512 619 483 346 549 587 514 631 444 570 406 606 462 567 450 550 655  24 615  16 653 670  99 610 403 485 605 163 135  86
 680  14 105 525 537 578 379 424 461 571 194  93 687   3 662 576 616 677 665 667 493 592 341 681 370 455 642 274 396 157
 654  72 178 251 545 643 626 476 564 532 147 133 647 590 572 663  52 609  39 634 612  28 373 751 790 603 565 235 143 788
 724 171 787 191 792 675 501 195 723 523 209  89 132 848 685 474  47 146  48 534 617 794  41 809 690 551 182 278 479 580
 812  73 162 316  64 657 311 705 702 614 340 159 165 743   6 689 727 443  36 855 762 881 473 168 688 656 136 220 213 739
 676 659 660 109 692 236 196  62 721 800  90 293  69 756 773 139 666 145  71 719 842 876 238 112 776 730 175 423 671 140
 783  46 560   1  68 728 148  63  65 825 318 734 711 801 786   5 823  13 752 785 741 573 219   4 807  44 821 280 212 799
 604 297 851  11 431 843 211 240   2 353 714 755 382 749 126 103 229 708 701 742  35 789 720 716  98 106 287  88 863 761
  31 289 410  84 874 738 179 857  57 796 206 451 100 833 312   9 815 682 119 804 836 834 488 695 808 735  25  19 419  10
 793 798 805 270 471  27  17  12  42 847 188  45 275 844 781 389  20 391 134 768 710 845 595  18 797 831  56 748 218 780
 121 249  97 198 849  75  38 151 713 814 832 850 156 770   8  74 668 125 144 806 750 882 679  30   7 862 299 772 683 813

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.85164e+06us (= 2851.64ms, 2.85164s)
Wall-clock time (full program): 2.91227e+06us (= 2912.27ms, 2.91227s)
Satisfaction error: 0
Number of search iterations: 758
Number of local moves: 624 (including on plateau: 185)
Number of local minimum: 20 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6136
Total number of local moves: 4858 (including on plateau: 1174)
Total number of local minimum: 206 (including on plateau: 127)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 471  43 147 644  76 457 705  72 180 151 873  60 878 817 736 698  37 751 785 125 767 823 107 687 713 744 193  92 667  16
 115 891 127  98 658 583 530  19 857  29 884  31  69 867 402 881 157 795 852 629 821 617  88 113  62 833  27   8 589 883
  35 534 486 549 144 858 722 140 485 897 882  81 465 552 613 710  80 704 524 213 615 625  20 536 106 875 134  10  90 830
  59 784 829  78 202 851 720 133 207 727 810  77 872 605 188 586 277 529 245  46 771 639 636 894 108 540  17 146 184 755
 103 848 132 199 306 682 843 110 887  24 594  52 124 855 790 859 126 543 571 803 794 748 276 166 179 889 121 114  87 690
 896 597 258 346 128 683 205 210 196  64 646 172 219 686 694 890 104 831 316 563 560 819 220 764 899 260 265 289 181 554
  96 171 800 496 145 864 895 139 164  40 868 234 340 885 815 874 161 621 643 160 650 747 173 876 321 256 324 129 262 366
 411 515 291 250 440 361 732 898 200 130 669 122 299 591 416 738 292 750 607 253  93 240 866 101 334 721 165 421 841 768
 274 601 236 251 148 846 838 192 760 252 153 327 214 666 756 363 222 516 520 243 715 893 426 290 370 278 331 235 827 772
  95 195 197 870 845 263 642 233 797 849 572 360 310 856 796 336 158 593 482 328 452 724 182 335 294 297 226 167 812 249
 309 811 608 218 237 753 842 279 238 272 865 170 401 308 737 584 183 616 286 892 706 392 380 229  25 880 330 259 393 312
 464 325 343 155 191 350 786 570 723 365 648 477 329 507 185 659 506 551 493 413 670 434 314 275 900 390 352 483 355 302
 174 522 403 377 379 853 376 417 766 359 481 319 372 295 531 387 351 699 298 304 754 373 138 458 374 425 484 255 792 799
 391 497 503 388 888 341 369 347 564 558 438 469 566 378 353 371 657 410 501 474 502 398 428 338 323 451 244 489 399 480
 344 432 553 287 424 423 357 368 395 315 405 824 318 447 472 455 454 431 488 459 382 505 348 513 541 317 879 494 450 435
  13 407 257 453 640 661 478 449 528 490 456 519 448 394 345 631 575 444 525 463 445 430 311 466 362 461 556 333 590 385
 264 495 446 545 468 367 526 186 419 675 406 293 508 512 527 610 436 624 673 100 439 473 400 408 384 592 381 603 467 288
 358 239 539  45 433  26 573 470 578 533 354 443 562 491 688 332 532  56 228 326 427 635 602 741 548 579 537 567 475 598
 604 504  48 596 412 120 542 500 559 429 320 588 581 555 538 420 375 300 211 462 301 689 561 510 544 547 595 654 209 241
 565 109 638 626 664  89  50 514 707 641 517 769 623 518 203 499 719 284 282  53 270 296 647 652 606 225 680 437  86 546
 847  67 521 247 735 305 339 837 232   5 231 653 487 476 672 119 574  79 267 663 479  63 696 587 717  75 614 677 492 759
 701  68 649 730 550  32  84 783 123 569 498 655 585  70 154 254 611 215 242 665 268 618 632 619 418 162 599 630 660 671
 678 227 415 818 685 509 189 716 150 684 337 651 840 111 364 168 442  74 801 731 342 176   6 761   7 757 816 802 246  12
 676 201 695 600 702 609  33 568 627 557 269 714 711 223  28 224 693 112 633 612 212 156 204  71 777 622 634 580 681  91
 862 703 806 679 198  65 136 826 691 577  34 752 742 281  44  99 861 273 712 208 307 137 850 285 422   3 770 729 409  54
 860 787 217 576  47  22 194 788 169 749 187 728 782 117 261 190 746 637   1 725 152 143 793 656 781 102 807 739 441 118
 780  85 745   9 805 668 141 804 628 620  38 765 674 283 709  82 869 206 389 692 178 511 734  58 708  39 142 700 356  97
 774 779  55 832 535 397 396 839 230 248   2 645 177 116 135 216 778 383  61 825  94  57 809 271 740 791 726 863 582 159
 836 775 773 718 733 404 221 280 414 820  36 743   4  23 349 131 662 175 813 763 266 105 854  11 163  18 808 834  21 762
 460 303 798 835 697  73  51 828  41 886  42 822  15  30  14 149 877 313  66 322  83  49 814 844 789 386 758 776 871 523

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.47026e+06us (= 3470.26ms, 3.47026s)
Wall-clock time (full program): 3.53589e+06us (= 3535.89ms, 3.53589s)
Satisfaction error: 0
Number of search iterations: 1157
Number of local moves: 597 (including on plateau: 188)
Number of local minimum: 71 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8377
Total number of local moves: 5651 (including on plateau: 1513)
Total number of local minimum: 412 (including on plateau: 187)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 814 554 897  27 799 164 126 610 641  36 890  41 145  77 676 194 741 117 119 735 581 110 693 661 854 885 782  67  97 382
 549 891 835 704 714  78 122  35  71  99 121 895 762 141 557 109 190  89  85 653  79 130 817 791 873 883 528 162 778 774
 821 427 129 783  54 764 898 196 836 104 191 112  82  95 635  26 832  92 131 160 199 148 824 822 809 844 619 858 124 900
 650 669 847 214 113 893 172 163 143 103 291 186  80  61 886 724 611  74  88 837  63 794 779 820 808 881 758 213 294 300
 176 899 672 175 434 340 127 211 842 128 135 133 202  76 511 623 787 229 207 827 257 310 846 813 749 416 721 187 675 807
 153 806 679 150 205 798 708 114 689 137 330 889 884 198 637 170 742 140 185 536  87 156 259 805 694 159 551 268 594 792
 115 797 553 183 189 251 795 225 329 142  75 216 238  91 875 768 296 289 248 751 264 896 246 894 736 292 872 368 664 857
 285 746 697 166 272 178 662 132 370 188 328 206 260 309 859 709 311 181 269 725 262 227 877 786 668 692 663 304 760 423
 179 442 613 298 371 146 469 255 876 331 232 624 288 182 845 848 346 321 212 880  96 667 347 545 720 422 473  90 660 737
 252 840 855 220 302 283 825 572 362 323 359 180 400 276 570 361 338 364 555 710 247 307 803 486 731 355 828 234 290 287
 322 685 598 221 410 138 866 373 197 521 525 718 380 245 604 256 274 447 413 446 360 184 454 723 686 266 811 267 776 349
 324 761 461 339 440 165 852 348 336 271 275 715 295 417 391 851 352 333 579 502 343 210 397 527 702 226 789 177 726 411
 263 239 638 426 466 357 253 389 462 314 372 517 452 299 421 780 409 833 315 701 399 542 386 512 639 754 412 240 490 235
 488 428 564 438 350 481 491 444 576 467 436 460 494 514 573 450 463 286 358 317 568 464 265 531 592 242 378 468 537 392
 504 500 540 508 356 513 312 385 375 509 334 501 459 303 479 404 529 505 733 316 489 395 429 367 439 337 381 523 475 615
 496 507 383 407 379  57 418 441 414 471 369 377 376 618 539 432 533 506 451 344 497 515 583 455 534 405 478 640 420 470
  39 424 606 366 363 465 365 607 558 472 297 437 524 480 430  52 627 561 670 453 617 492 116 550 396 629 608 313 516 482
 614 602 394 325 402 403 448 655 495 632 342 224 401 483 526 601 565 487 532 195 476   9 584 320 345 449 636 477 503 390
 547 590 134 544 485 683 384 578 530 574 577 217 586 609 105 147 593 546  56 318 622 258 597 406 319 535 243 713 499 520
 677 151 387 456 474 560 745 656 587 458 643 556 562 393 279 518 684 270 282 123 498 620 628 261  73 543  51 688 208 484
 671 125 408 589  11 569 599 552 666 425 563 738 519 541 249 728 691 415 571 174  53 443 588 200 250 621  44 596 341 575
 567 144 254 680 706 756 111 771  24 603 687 659 605 665  70 237   6 612 591  31 582 871 649 233 222 717 203 585  94 580
 595 244 169 705 682 626  69  22 681 647 293 712 781 642 100 690 658 755 790 308 729 695  14  33 228 335 241 744 284  43
  23 136 231 853 719 730  20 673 648 767 645 522 616 769   3  16  38 696 707 230 634 796 548 431  65 631 327 674 152 215
 810 278 120 510 699  81  83 819 559 839 739 149  60 812 566 301 651 722 800 493 829 750 106  68 139  28 280 785 281 158
 657  10 118 801 865 753 388  34 201 711 861 654 644 841  46 703 600 856 193  93 538 862 102 154  59 868  49 757  50  47
 326 398 167  18 864 743 351 887 223 878 788  37  72 784  98 445   2 816 892 732 860 633 209   4  58  42 354 419 652 763
 773  64 435 882 740 766 734 727 625 700 888 815 716 850 306 161 168 457 867   5 838   8  25 171  32  12 204 107  86 353
 777   1 101 775  21  15 849 869 192 831 863 277 830 870 374 332  45 818 793 747 770 219 236  62  55  17  13 765 843 155
  48 157  30 752 630 759 273 772   7 834  66 748 802 874 305 879 433 698 823 173 678 804 108  84  40  29 218 826 646  19

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.75296e+06us (= 2752.96ms, 2.75296s)
Wall-clock time (full program): 2.81557e+06us (= 2815.57ms, 2.81557s)
Satisfaction error: 0
Number of search iterations: 593
Number of local moves: 468 (including on plateau: 59)
Number of local minimum: 26 (including on plateau: 7)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4369
Total number of local moves: 4113 (including on plateau: 457)
Total number of local minimum: 63 (including on plateau: 69)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 888 143 893  68 822 115  85 613 834 751 898  52 205 151 727 109  58 733  42 882 677 682 837 516 309 188 195 816  86 140
  53  24 757 107 262 171  87 745 649 741  80  93 510 103 871 814 870 488  40 565 450 810 863 783 105 792 732  34  77 839
  65 102 583 118  36 182 119 658 697 891 175 225 131  63 875  35 831 711  82 325 811 887 879 127 527 853 117 895 900 615
 203 806 787  74 206 570 251 770 748 176 130 179 187  88 793  83 114 897 529 228 111 746 772 889 147 768 856 141 761 505
 221 866 722 160 880 652 315 877 661 152 178 126 170 763 874 104  31 781 199 743 235 820 766 210 393 213 657  71  84 591
  73 190 230 149 242 854  54 777 575 274 252 116 622 671 238 313 812 246 243 627 355 607 263 883 884 704 845 323 368 725
 260 161 786 172 248 851 860 892 660 848 426  94 250 684 855 209  64 885 380 219 207 859 194 896 294 192 122 135 165 647
 292 370 239 157 412 838 344 712 857 886 237 436 840 844 174 185 163 229 217 865 261 765 817 390 297 305 273 318 220 572
 363 257 265 232 289 803 240 343 476 739 365 259 241 212 150 247 858 605 231 585 740 414 767 167 719 775 753 440 186 794
 302 234 271 421 304 275 384 749 663 890 280 180 693 755 430 404 270 826 215 432 846 580 419 340 144 245 861 197 189 716
 138 353 386 406 425 322 381 395 878 625 799 276 862 306 433 196 300 694 326 439 269 714 293 258 316 724 769 346 244 642
 330 345 819 420 333 356 338 399 489 278 376 841 546 715 290 458 282 236 417 364 675 506 842  99 894 335 296 372 350 514
 283 437 366 371 314 849 504 358 536 253 214 538 829 832 665 303 285 744 327 403 223 438 319 208 800 295 555 470 385 411
 550 474 348 367 357 341 347 535 723 494 424 576 407 713 446 311 449 517 288 427 560 378 279 211 899 429 266 394 351 654
 569 480 562 460 389 400 467 397 443 410 434 485 413 448 490 465 299 500 696 422 301 328 564 145 561 442 551 415 457 522
 519 369 428 284 497 100 578 548 408 204 623 601 554 471 321 461 441 396 595 445 619 398 361 545  89 521 596 501 530 512
 281 466 579 447 359 664 451 226 483 558 374 418 423 264 405 574 468 383 382 459 377 499 502 492 112 632 630 509 462 636
 541 526 559 478 392 108 542 528  66 608 582 473  39 568 602 643 614  25 700 491 610 416 324 539 162 617 612 481 532 137
 469 737 464 540 487 463 557 479 334 600 435 331 375 683 534 728 486  50  20  41 736 320 387 629  72 640 703 477 520 218
 537 452 692 507 525 606 764 202 493 156  69 688 599 670 638 738 678   6 788 354 563 256 553 475  16 455 110 511 409   5
 552 584  47 785  45 662 508 588 268 631 402 659 604 496 666 198 628 571  75 621  33 158 495 645 349  46 726 544 567 362
 169 587 518 603 590 618 668 168 287 524 454 669 124 183 577 594 573 166 791 821   9  51 648 597 721 391 254 549 515  96
 456 431 388 708 680   3 818 332 317  79 780 592  22  57 798 472 634 113 556 148 513 298 679 624 307 620  14 672 705 699
 805 523 125 779 598 352 641  60   8 673 503 656 216 193   4 581 482 776 650 774 637  90  29  38 655 653 701 547 759   7
 639 586  91 735 742 360 611  37  61 146 702 644 797 310 133 589 709 646 676 730  59 224  12 453 593  43 633 872 626  56
 804 686  28 720  30 181 825 531 128  23 609 249 689  17   2 690  19 153 760 827 762  26 139 734 771 616 342 789 691 674
 667 830 750 790 710  81   1  27 200 286 802 843 784 533 106 752 233 101 869 121 795 373 191  32 277 155  48 801 873 484
 852 566  15 782 823 291 132 272 255  98 695 698 824 543 329 836 747 201 796  55 227 401  70 813 444 635  76  18 754 267
 876  95 773 868 651 729 828 177 164 142 881 833 337 681  78 706 809 129 847  10 123 312 184  21 850  97  49 864  62 339
 758 835  44 807 867 718 815 120 154 379 336 685 222 498  11 717 308 707 778  92 731 159  67 756 808 134 173  13 687 136

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.63723e+06us (= 2637.23ms, 2.63723s)
Wall-clock time (full program): 2.7709e+06us (= 2770.9ms, 2.7709s)
Satisfaction error: 0
Number of search iterations: 622
Number of local moves: 523 (including on plateau: 101)
Number of local minimum: 17 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 3655
Total number of local moves: 3360 (including on plateau: 583)
Total number of local minimum: 68 (including on plateau: 64)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 871 892 811 893 856 858 256 857 122  68  88 727  39  95 787 803 115  37  90  59  78  64 891 570 614 487  19 768 100 600
 846 123  72 786 711 729  56 147  53 861  14 715  66  87 650 640 737  67 121 167 837  24 888  35 879 632 227 790 657 898
 792 143 119 896 835 845 173 568 759  61  27 742  44 601 859 701 114  31 113  23 720 506 105 449 885 851  45 623  47 838
 183 624 187 809 886 804  79 593  83 106  99 774 128 698 713 631 164  65  85  93 843 411 271 667 849 120 876 760  15 899
 666 198 878  71 381 869  98 131 462 208 126 794 488 135 749 530 881 162 125 141 800 608 438 142 789 894 140 678 103 830
 844 644 235 172 848 455 144 136 246 159 158 875 188 595 685 758 130 132 900 687 743 805 224 145 618 165 148 699 175 802
 269 634 250 252 840 850 887 675 193 202 179 689 217 373 813 810 117 310 171 517  86 782 170 824 718 156 157 890 209 275
 226 281 236 326 821 841 278 877 369 160 661 880 182 825 693 779 241 249 245 630 180 214 264 210 726 169 240 645 319 748
 185 812 288 150 612 642 192 273 750 206 533 873 305 806 576 716 254 233 300 771 176 263 259 244 708 196 285 889 322 696
 320 780 323 332 694 692 216 862 836 375 714 279 221 670 276 818 335 296 234 308 532 218 200 316 691 339 274 419 242 703
 272 897 299 364 553 663 331 163 337 239 870 734 359 374 328 636 268 393 297 723 304 324 753 314 669 397 266 343 496 549
 283 362 341 334 619 626 500 352 502 262 757 668 340 580 367 388 280 354 627 590 277 872 385 389 686 342 312 515 313 292
 401 460 421 561 551 610 404 874 344 317 431 315 457 402 407 392 358 552 412 302 606 660 491 394 413 391 356 390 398 445
 346 265 372 378 620 658 414 366 350 395 504 854 345 884 430 370 521 396 400 454 409 447 476 376 429 490 432 384 403 347
 387 444 489 363 470 437 510 465 433  62 379 519 474 425 769 415 423 467 424 456 399 523 461 503 477 463 417 418 560 483
 508 480 380 497 383 406 513 294 512 410 453 524 440 443 255 451 436 458 484 479 416 598 422 360 498 464 495 569 534 353
 469 442 386 439 325 371 555 492 330 434 528 562 505 518 452 408 348 522 420 564 525 426 321 311 441 472 559 368 481 541
 475 435 529 537 338 197 531 633 526 652 538 267  89 520 527 493 361 243 405 427 577 499 641 485 191 616 357 494 450 482
 468 547 605 486  80 333 542 574 507 428 556   8 516 351 509 511 581 589 466 251 584 539  54 536 318 609 546 291 586 544
 604 220 545 548 282 260 721  42 535 629 583  57 602 127 448 146 647 591 655 237 557  91 579 665 473 594 478 565 563 471
 603 543 355 587 215  22 588 578 639 575 189 327 754  81 567 137 648 558 712 309 365  28 459 672 382 540 673 596 684 129
 592 628 683 651 219  49 566  30 514 717 101 195 659  75 329 571 704 622 585 688 767 151 755 554 336 702 697  94  43 238
 597  48 653 722 248 301 740 613 637 611 573 154 664 109 152 104 700 617 550 207 725 635   4 621 261 756 615  70 625 203
 695 107 656 679 501 286  52 731  32 827 643 168 739 118  21 102 770 765 654 186 676 709 638  17 161 682 707 178 784 231
 212 819 764 807 307  10 793  97 745 817 222  20 829 303  69  60 649 791 761 298  41 349 751 728  25 738 730  33 674  73
 646 744 831 710 133  46 788  74 719 746 607  55 775 177 181 306  12 808 735 747  13 223 781 671   5  38 847 270 777  50
  84 213 778  16  26 108 741 293 290 773 706  76 815 599 230 205 785 690 705 822 111 124 796 733 232 864 763   2 801 134
   7 155   6  58 116 194 816 783 229 772 677 211 680 895 247 149 204 797 866 724 798 752 883  34  11 253 882 289 853 174
  82 572 839  40  36  96 199 166 799 681 766 228 732 826 287 284 867 868 820 795 112 828  92 814  29  77 834 190 446 110
 582   3 184  51   9 257 832 776 662 762 833 225 863 823 139 201 865 852 153 860 258 842  63 736   1  18 138 295 855 377

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.56869e+06us (= 3568.69ms, 3.56869s)
Wall-clock time (full program): 3.63089e+06us (= 3630.89ms, 3.63089s)
Satisfaction error: 0
Number of search iterations: 1231
Number of local moves: 737 (including on plateau: 241)
Number of local minimum: 75 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7886
Total number of local moves: 5331 (including on plateau: 1740)
Total number of local minimum: 363 (including on plateau: 207)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 829 111 822 673  91  77 762 776 605  79 599 849 878 194 800 130 703  84  53 880  73 188 583 151 731 861 379  93 121 340
  65 879 163 756 201 167 308 644 502 449 464 884 833  26  98  36 760 192  99 781  68  82 630 819 823 867 898  43 895  83
 102  41 387 837  67 846 517 656 528 129  56 818 876 146 828 175 886 890  50 891 260 481 710 230 839 830 149  74  90 126
 104 743 200 863  63 889 841 892 631 108  59 568 875 110 662  37 780  48 222 874 159 181  86 144 747 266 642 899 584 238
 119 105 452 844 893 694 868 761 755 259 383 682 640 135 810  66 358  46  96 565  78 229 753 155 885 433 542  92 741  76
 195 120 854 679 257 391 815 311 860 748 709 764 853  39 173 115 721 283  81 806 182 177 142  87 610 730 723 113 824 153
 254 343 881 685 172 728 529 799 883 207 789 148 233 247 156 193 178 271 171 388 570 187 273 894 652 638 765 284 784 213
 198 209 870 183 197 700 645 900 670  95 668 202 189 305 299 279 357 297 161 512 157 864 809 386 838 835 211 328 850 301
  75 347 626 240 329 651 726 842 689 476 256 314 219 413 326 179 313 816 125 768 402 859 821 164 718 376 228 141 713 363
 290  49 722 354 127 537 657 226 704 858 216 215 317 359 398 342 622 461 487 504 871 368 496 208 558 611 896  47 664 351
 245 866 416 406 306 692 676 288 834 334 778 253 499 206 400 264 281 369 277 553 624 333 302 411 636 261 840 267 427 471
 295 282 292 234 498 483 686 336 621 458 239 812 675 370 459 405 421 698 472 467 294 185 190 403 510 869 887 331 397 246
 404 375 274 356 323 751 774 705 531 493 361 607 438 353 235 508 556 315 243 428 482 551 244 495 319 399 415 272 882 426
 541 262 480 364 533 532 548 793 865 309 506 278 199 451 417 535 373 557 377 300 717 249 507 349 477 432 341 318 435 470
 252 335 536 628 367 589 439 380 276 484 857 485 414 425 739 754 473 490 488 392 289 269 350 165 431 500 322 501 360 525
 492 574 303 468 559 324 434 422 429  80 623 586 366 546 448 511 509 526 523 382 385 372 365 352 437 513 576 423 530 457
 338 505 251 489 524 371 410 654 474 381 390 463 389 716 522 412 491 430 455 293 298 497 593 521 408 453 296 407 564 520
 443 466 409 486 732 286 454 378 106 647  33 534 494 419 578 543 479 220 348 516 606 401 690 581 475 515  44 550 445 637
 680 450 465 575 643 255  97 538  35 242 667 602 619 330 316 658 572 374 395 224 446 514 617 600 186 418 444 687 339 527
 707 612 132 620 569 250 424 595 320 203  20 613  57 555 547 561 691 577 666 355 174 396 635 738 191 460  64 677 587 519
 544 655 566 604 518 145 196 442 346   2  69   6 608 609 549 663 649 332 614 596 394 641  34 563 176 598 573 681 562 580
 766 579 112 345 634 265  24  19 478 715 615 697 591 660 503 653 539 447 469 684 540  14  18 552  85 168 592 601 560 590
 648 597 582 154 665 241 285   4  94 646 140 304 440 699 782 696 695 712 897 210 616 777  72 729 128  61  42 788  52 759
 826 594 688 170 745 180 221  54 337 661 639 588 585 773  27 740 109 618 734  13 603 802 150   3 312 554 232 795 217 545
 786 672 727 633 462   1  62  22 138 757 287 625 571 693  70 736  45 720 877 100 671 270 632 769 362  25  32 814 158 798
 808 702 147  29 384 103 291 275 124 674 763 131 101 794 737 787  40 136 843 118 310 856 719 711 307 214 701 803 248 659
  60 166 436  31 820 735 321 116 280 785 714 227  88 725 733 888  28 325 805  89 772 797 567 792 225 212  17 827 117 817
 811 749  51  11 836 441  38 327 107 683 706 114 162 767 758 847 627 750 832 801 852 258 456  23 160 143 205  16 139 845
 813 344  21 169 848 771 231 237  30 746 134   9 184 742 133 744 204 752 804  10 791 855 678 724 218   5 669 770   7 872
 825 783 650 629 152 420 236 123 263 807 775 137 122 708  12  58  55 779 851  15 831 862 393 796  71 268 790 873 223   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.84949e+06us (= 3849.49ms, 3.84949s)
Wall-clock time (full program): 3.91227e+06us (= 3912.27ms, 3.91227s)
Satisfaction error: 0
Number of search iterations: 1339
Number of local moves: 891 (including on plateau: 332)
Number of local minimum: 57 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10114
Total number of local moves: 6305 (including on plateau: 2242)
Total number of local minimum: 509 (including on plateau: 246)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 386 852 731 821  57 111 378 441 333 545 863 385  96 155  54  75 270 122 817 571 816 790 845 191 298  77 728 161 741 805
  45  58 804  72  27  62 704 837 339 891 833 862  49 216 868 223  80 188 764 321 886 688 115  18 174  64 844 864 851 768
 716 865 172 824 840  42 206 756 212 825 320 277  87  44 850  68 800  85 857 120 232 428 779 171 740   8 253 822 440 676
  14 823 772  63 815 102 657 836   6 835 811 250  12 715 781   3 792 138 749 442 500 707 846  28  31 264  16 263 447 797
 344 793 739 799   1  21  32 820 220 692 839 141  11 742 834  17 626 205 759 271 162 777 752 134 157 449 237 786 483 672
 719 735 859 682 597  48  20  81  52 668 782  35 598  40 698  69 681 235 601 509 794 606 691 700   7 178 753 204 176 697
 630 751  59 709 738 769   2 583 137 611 693 132 109  60 705 361 584 631 773 187 562 750 718  13 736 180  91 302 218 721
  55 745 696 706 765 646 746 388 265 613 674  47 363 628 576 222 315 589 660 400  66 686   5 183 526 313 675 300  95 567
 726 733 625 662 722 303  90 638 238  94 586 152 100 671 762 560 607 140 880 596 194  38 661 703 654 202 569 113  76 420
 647 528 725 532 684 574 505  24 247   4 558 309 644 610 551 104 699 590 435 604 136  97 547 640 537 225 588 284 214 673
 608 587 498 649 517 512 262 627 240 368  15 129 556 667 525 624 501 269 616 127 710 329 527 603 393 402 553 304 149 648
 438 665 595 653 465 542 456 563 142  29 683 419 296 600 669 544 695 493  78 408 133 539 708 570 572 421 464  43  50 582
 723 398 540 536 621 585 523 432 272 258 499   9 351 468 633 422 534 470 425 460 482 317 516 433 369 367 581 549 119 623
 573 476 529 670 481 451 502 615 256 497 548 301 434 291 387 557 564 580 377 495 491 424 359 602 411 278 319 177 427 443
 538 591 474 384 487 405 383 330 374 531 395 382 552 519 399 453 620 392 454 312 391 459 415 478 466 354 520 461 455 541
 565 458 446 467 431 787 490 486 511 350 372 410 396 289 543 444 437 463 457 337 473 439 504 365 292 484 677 324 535 283
 376 349 414 379 430 472 429 373 407 554 568 328 494 452 326 358 874 280 524 771 664 462 413 423 479 578 403 261 360 314
 299 488 489 332 394 290 334 266 485 612 355 651 685 286 546 406 356 475 348 884 364 530 274 426 409 503 103 680 730 515
 135 450 412 173 357 397 618 118 798 559 343 871 305 203 480 352 469 294 448 828 234 861 555 338 165 629 179 717 809 418
 327 228 245 331 231 267 371 900 727 248 856 506 609 514 273 390 853 362 404 650 241 636 160 375 209 594 345 713 826 124
 251 254 347 340 316 389 802 335 783 860 224 605 342 196 310 353 128 366 276 890 622 507 306 297 641 579 336 761 776 323
 829 287 380 341 252 192 642 230 522 244 170 744 282 166 599 637 307 401 521 870 806 774 123 813 477 445 308 659 268 226
 239 318 210 186  84 897 164 233 867 561 325 634 898 257 200 755 121 690 510 117 614 471 875 711 812 666 190 381 293 236
 259 436 346 758 126 737 810 285 518 208 107 635 639 855  46 663 189 866 156 808 197 533 279 801 213 619 215 416 652 143
 645 144 184 131 168  26 763 281 689 193  67 679 843 869 322 747 878 229  79 370 842 153 227 818 885 795 167 658 513 150
 288 108  53 130 877 311 748 221 702 146 550 789 780 767 163 791 295 766 243 139 198  56 217 694 872 656 760 492 678  25
 255 219  19 830 876 896 242 147 754 701 116 724 592 775 158 743  33 827 101  82 593 169  61 211 687 770 883 260 632 159
 838  83 894 151 246 899  88 195 858 566  89 496 819 757 145 889  30 778  74  22 655  10 148 720 181 729 807 892 417  39
 848  23  73 106 796 895 814 643 714  51 175 881 785  86  71 882  65 712  37 888 275 125 784 207 249 854 841  93 508  34
 199  70 185  98 114 887 734 831 847 201  99 732 788 617  41 803 112 879  92  36 182 154 105 849 873 832 110 575 577 893

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.39084e+06us (= 4390.84ms, 4.39084s)
Wall-clock time (full program): 4.45321e+06us (= 4453.21ms, 4.45321s)
Satisfaction error: 0
Number of search iterations: 1696
Number of local moves: 690 (including on plateau: 173)
Number of local minimum: 119 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12865
Total number of local moves: 6026 (including on plateau: 1968)
Total number of local minimum: 885 (including on plateau: 223)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 144 779 196 162 151 737  67 180 323 739 851 788 798 852 242 116 840 848 800 865  81 211 221   3 837 185  20 878 217 384
 280 863   7 810 401 790 287   9 209  11 841 344 825 818 243  35 813 861 869 833  62 184  58 855 722  41 264 885 158 137
 755  36 187 845 121 368 812 532 142 705 324 249 827 892  85  82 828 759 791 777 767 544 101 900 227  72 332  39 276 140
 258 743  73 692  34 272 728 733 191   5 764 354 370 783 792  24 835 314 740 748  84 298 716 784 536  47 369 796 291 141
 193 803 167 750 400 194 799 760 732  23 820 718 717 802 134   4 795 621 761 746  83 237 115 387 260 477  17 681 313   6
 120 657 333 603 159 393 817 829  18 646 670 744 660 649 136 304 667 321 787 725 386 164 295 778  25 109 672 610 201  37
 641 665 215 599  98 300 424 596   2  27 659 756 731 695 765 774 694 254 720 675 614  44 123  16 383 724  49 617 654   1
  93 648 296 629 129 253 697 677 504 647 618  69 375  51 684 569 693 165 643 797 173  56  30 601 602 664 574 633 283 662
  60 568 562 656 307 102 729 687  13 432 575 671 679 683  32 673 635 268 630 535 553 208 605 650 222 577  88 689 216 210
 598 658 240 500 282 154 622 666 479  15 213 488 547 559 592 426 661 126 580 466  31 498 589 702 653 289 527 561 111 682
 638 640 225 642 200  63 652 597 625 626 156  22 507 636 567 557 611 297 607 299 524 606 573 238 108 565 549 491  66 628
 106 613 624 584 325  97 570 463 551 195 520  12 576 518 546 512 533 516  38 571 183 566 600 519 583 427 634 572 494 467
 482 701 590 540 359 230 484 581 555 552 103 398 615 582 505 293 538  26 453 594 558 476 608 578  79  33 492 529 475 506
 468 458 416 616 255 336 556 429 523 410 435 531 651 462 366 474 376 443 530 444 514 510 517 511   8 539 454 447 431 405
 403 445 438 563 352 455 422 449 486 534  61 644 377 499 448 489 446 437 550 461 495 469 496 465 392 548 341 413 509 428
 373 470 842 417 521 433 411 528 686 526 420 418 303 452 485 515 522 543 381 390 481 404 328 355 348 391 456 399 343 374
 751 460 346 471 502 545 478 349 205 361 480 451 637 378 395 409 441 854 389 508 334 318 306 421 402 371 434 886 364 269
 394 408 513 464 450 501 329 310 769 537 490 330 749 632 301 309 473 706 350 286 782 397 367 358 345 406 312 379 483 385
 263 363 365 396 593 830 351 266 220 415 382 890 338 339 342 745 340 639 356 440 250 357 407 713 844 337 619 487 439 189
 726 274 442 270 609 703 353 347 181 412 897 882 714 372 419 294 284 645 232 425 246 198 423 176 770 316 880 414 326 285
 292 168 579 149 709 360 244 182 786 819 327 315 331 239 850 317 311 775 623 152 175 831 262 278 680 288 866 231 591 785
 877 170 691 322 472 794 229 261 663 320 704 248 256 388 879 143 279 271 308 273 676 757 197 146 815 857 267 281 735 236
 688  78 668 305 564 736 860 881 234 204 430 843 186  95 203 541 265 669 138  89 190 824 883 139 604 188 178 226 868 738
 319 235 710 228 832 588 821  48 862 207 206 122 212 177 867 781 124 542 224 674 233 889 251 612  77 145 899 147 793 690
 503 302 585  50 698 497 192 117 789 742 257 241 107 252 135 179 132 223  87 275 898 870 741 436 896 846 823 166 620 856
 711 219 747 150 776 493  75  65 811 595 160 277 161 247 876 554  14 655 157 172 888 169 801 838 335 891 112  99 768 699
 763 153 826 895 847 766 174 113 128 245 457 148 127 100 808 871  70 218 380  45 884 809 721  74 587 752  59  92 631 772
 586  46 119  42 678 719 105 874 780 822 560 806  86 155  57 839  52 104 171  80 834 202 858 873 259 730 712  68 525 773
 214 864 708  55 887 715  96 133 290 894  64 727  43 114 707 872 118 362 199  40 836 734 627  90 163 807 762  76 459 859
 816  28 805 110 804  91 131 853 758 849  71  29  10  94  54 814 125  53  21 130 700 685 696  19 753 893 754 723 875 771

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.3653e+06us (= 3365.3ms, 3.3653s)
Wall-clock time (full program): 3.42875e+06us (= 3428.75ms, 3.42875s)
Satisfaction error: 0
Number of search iterations: 1044
Number of local moves: 698 (including on plateau: 225)
Number of local minimum: 47 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6973
Total number of local moves: 5177 (including on plateau: 1372)
Total number of local minimum: 252 (including on plateau: 160)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 132 175 838 664 880  69  90 694 867 896 848 701  47 812 852 774 776 627 632 649 633  63 144 125  42  71 121  58 152  83
 489  55 777 679 223 291  49 824 139 782 740 712  89 685 245  66 667 499 889 858 109 128 650  52 842  95 878  76 874  53
 158  41 826 594 898  62  31 820 393 738 822 557 127 665 229 126 779 764 877 879 154 828  87  50  88  65 891  80 825  61
 472 856 836 884 845 883  98 751 100 806 233 180  86 832 558 543 706 592 219 262 184 170 176 736 130 642 211  57 218 249
 672 186 114 676 625 120 149 295 310 707 758 134 596 897 730 899 888 772 608 138  82 234 324 220 200 900 136 113 833 199
 682 221 116 593 398 823 118 893 609 811 612 861 183 873 191 110 157 733 849 142 217 172 187 173 821 213 699  56 801 201
 611 851 135 802 195 146 815 827 602 124 283 343 177 657 140 844 204 805 853 296 209 181 556 890 276 206 153 190 871 273
 256 332 243 794 789 257 864 684 517 230 843 882 788 841 866  70 727 520 205 396 290 316 264 216 253 284 225 241 156 166
 287 317 314 763 643 869 309 423 868 182 494 240 248 525 837 250 263 737 626 506 421 887 370 375 311 336 410 242 165 297
 355 266 372 634 787 228 271 238 636 793 251 265 259 717 451 236 800 757 872 434 859 318 819 237 239 289 270 382 277 203
 854 327 299 445 669 269 226 798 724 750 718 623 300 315 338 340 406 564 641 817 235 322 308 260 275 231 466 368 279 348
 222 339 354 674 364 342 892 363 588 485 244 716 366 365 512 371 212 886 780 377 401 192 816 306 341 439 378 498 333 359
 480 424 188 288 559 703 894 620 742 255 450 797 171 416 326 427 367 749 546 400 349 328 855 380 305 215 274 453 394 160
 397 388 417 532 353 521 743 459 441 526 488 391 408 440 381 457 278 432 471 533 358 435 640 301 452 505 404 449 477 438
 258 350 481 443 560 369 850 631 818 356 335 362 461 458 713 292 374 536 261 534 437 460 267 470 535 402 247 601 325 329
 448 568 509 538 302 493 476 531 567 352 635 507 516 544 540 554 492 227 584 346  29 312 407 399  18 587 385 524 547 578
 697 390 565 510 168 351 514 431   1 411 392 541 413 442 389 373 522 456 586 268 545 465 490 574 569 658 436 384 447 527
 111 582 409 549 414 303 529 474 147 503 573 479  77 553 475 501 528 419 581 395 550 361 467 319 500 537 577 487 469 646
  99 619 607 320 357 624 122 591  73 566 379  48 555 486 444 654 637 159 604 252 495 473 597 502 708 403 428 513 638 562
  59 731 425 412 455 583 482 422 387 571 131 383 615 590 515 651 145  74 254 232 734 386  85 748 504 661 518 519 483 760
 570 548 698 210 433 659 313 418 360 115  14 589 652 572  45 614  43 148 468 629   3 671 616 691 807 563 603 752 106 605
 103 675 683 178 430 576 645  25 666 711 710  39 628  97   7 599  75 420 169 639 551   5 653 692 561 610 496 770 648 454
 478 446 719   9 198 686 673 344 167 523 286  38 720 207 530 579  34 330   8 618 768 630  13 767 595 729 677 542 690 511
  91 647 622 282 598 714 462 119 463 771  72 721 655   6 606  32  40 337  92  44 660 704 585  24 785 613 781 621 687 681
 755 765 723  60 133 539 810 281 656  23 334 193 895 162  37 497 702  78  10 778  81 668 644 580 155 783 617 784  67 705
 739 600 715 123  21 323 429  68 464 112 214 376 769  11 746 670 766 298 307 799 709 741 744 189 693  12 117 870  94 796
 722 678  16  54 331  96 405 164 700  64 662 141 830  22 725 831 107  15  27 491 829 839 321 876 814 786 345 775  46 803
 847 695 202 575 552 747 415  84 280 104  30 102 773 129 174 347 726 285  28  36 885 795 728 732 197 863 101 484 753 846
 808 426  19 179 150 108 680  35  93 105 813 759 246 163 689   4 790 294 196  79 857 735 508 756 754 791 862 834  20 762
 663  17 293  51 185 761 161 208 137 143 151 835 865  33 224 804 304   2 272 688 881 696 194 875 745  26 809 792 840 860

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.25776e+06us (= 4257.76ms, 4.25776s)
Wall-clock time (full program): 4.32088e+06us (= 4320.88ms, 4.32088s)
Satisfaction error: 0
Number of search iterations: 1622
Number of local moves: 684 (including on plateau: 258)
Number of local minimum: 110 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11981
Total number of local moves: 5900 (including on plateau: 1964)
Total number of local minimum: 827 (including on plateau: 219)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 781 842 284 144 714 840 868 846 293 178 248  27 412 346 229 413  99   4  79  45 787  37  39  61 760 858 862 800 826 793
 719 686 171  52  78 820 814 193 202 208 168 851 853 379 832 314 388 850 187  89 773 200  53 483 749   3  28 837 716 819
  11 865  13  36 808 798 153 805 804 243 128 761 727 213 151 807 235 670 177 138 206 340 224  82 843 813 859  48 834 723
 267 848 270  18 782 706 831 683 816 159 304 778  31  92  77  44 114 696   7 119 855 710 701 335 770 797  19 724 801 161
 737 661 698 106  12 745 827 673 812  56 427 640 282 368 196 109 309 665 433 447 785 110 127 145  20   2 799 712 818 794
 192 768 102 810 830  65 262 743 751  10  24 766 207 251  96 203 582 634 729 132 713  35 250 630  23 707 755 769 643 833
 559 660 608 497 775 411 722 671  71 103 182 593 705 252  38 223 167 682 652 396 668 651 674  66  26 512 565  59 672 655
  14 677 611 623 676 403 675  21 703   8  16 759 621  25 105 364  22 780 689 373 700 510  29 329 711 693 691 708 275 704
 542 666 107 771 597 221 552 632  86  94 205 571 615  49 108 286  75 618 577 463 629  15 477 521 586 664 656 739 636 757
 539 592  72 525 610 569 699 679 758 462 238 624 209 551 130  57 339 198 599 493   5 635 143 217 659 441 602 721 523 626
 639 607  80 561 536 263 669 544 576 237   1 530 588  30 646 230  63 627 684 292 557 524 609 459 517 489 658  50 765 484
 467 575 617 560 573 249 605 522 657 393 362   6 146 214 567 174 277 487 540 336 570 547 425 155 402 534 619 735 638 563
 516 616 688 583  58 141 590 562  33 383 406 508 584 273 471 446 498 526 535 426 637 601 492 490 470 667 456  47 294 518
 546  51 589 439 464 555 345 448 587 376 313 603 430 520  67 596 460 529 506 543 553 491 475 455 531 281 399 550 444 369
 468 519 360 418 566 612 513 407 365 436 748 370 387 579 556 485 332 324 371 308 395 495 424 503 469 438 353 451 453 410
 533 466 397 440 394 494 564 405 416 432 404 507 461 423 486 625 537 541 415 359 502 488 386 515 505 442 392 380 228 378
 434 366 269 389 398 628 480 356 315 558 746 421 847 338 331 788 496 352 257 756 452 408 169 458 435 476 501 274 400 417
 247 538 509 409 381 581 479 372 429 527 598 499 824 809 287 650 302 482 288 170 318 473 322 306 449 326 443 384 728 385
 457 445 472 374 431 355 358 319 351 504 528 896 382 838 301 720 347 299 344 633 256 240 305 641 437 762 337 377 478 328
 866 297 825 258 310 697 264 298 289 578 511 295 350 790 450 642 763 225 348 678 391 363 367 883 311 246 316 276 253 375
 291 349 280 190 428 695 184 454 849 874 702 422 325 649 401 572 747 474 278 330 882 254 852 233 307 312 334 222 414 211
 357 173 186 420 354 123 255 343 860 631 892 142 690 764 836 815 644 279 236 341 268 877 725 283 323 390 260 231 545 272
 300 333 549 234 199 594 204 856 259 585 803   9 829 802 878 823 648 285 136 694 317 139 863 870 179 163 296 135 191 342
  95 165 622 241 133 303 876 160 245 784 726 327 844 604 885 817 821  68 226 215 137 895 261 890 692 219 115 514 419 216
 166 212 835 869 197 118  81 320  90 777 736 733 606 465 580 600 730 195 752 880 149 175 568 554 884 129 116 653 183 162
 772  32 789 232 889 117 201 124 265 774 266 131 244 744 867 791 861 152 164 731 134 900 188 500 210 888 111 481  93 864
 881 154 754 887 185 112 140 104  62 873 715 361  41 717 614  97 647  43 879 872  55 663 738 687 742 290 886 120  74 122
 271 147 899 795 189  88 194  76 740 732 662 227 181 709 894 176 767 180 845 783 220 898 839 854 150 680  64  87  42 126
 750  84 125 806 776 891  70 741 218 718 645  85  60 101 595 100 591 779 786 792 532 685 897 157 113 239 148 857  83  91
  98 121 734 828 172 321  40 158 613 822 811  73  34 620 841 548 654 871 796 681  69 156 893 753 242  54 875 574  46  17

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.12292e+06us (= 3122.92ms, 3.12292s)
Wall-clock time (full program): 3.19759e+06us (= 3197.59ms, 3.19759s)
Satisfaction error: 0
Number of search iterations: 947
Number of local moves: 627 (including on plateau: 167)
Number of local minimum: 54 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5663
Total number of local moves: 4427 (including on plateau: 1033)
Total number of local minimum: 254 (including on plateau: 120)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  22 747 774 726 628 809 779 882 116  31 137 868 274 110 832   4 354 805 831  89 756  12 725 875  60 788 221  47   2 211
  98 844 798  95 242 192 834 870 260  97 166 836 308 291 554 108 871 859 791  30 826  94  58 876 104 134 753 785 654  87
 804  83  15  27 146 817 818 861 736 735  93 789 189 123 790 277 727 160 685 766 787 164 641 236 748 406 686  45 158   3
 278 783 144 764 287 815 796 795 675 138 284 699 319 580 149 767 719 448 721 813 808  17 113  80 163 743  63 177 218 159
  26 687 740 811   7 710 251 621 681 715 187 852 130 128 771 191 637 702 318 353 700  92 249 289 707 656 778 271  23 232
 679 587 746 722   5  16 657 784 694 695  21 802 132 147  51 744 240 360 709 724 622  59 126 594 115 661 821 600  24 378
 814 737 786 759   9 678  33 618 792 672  88 781 298  70 730  32 396 706 299 711 629 170 136 469 716 100 666 295 312  13
 701 633 632 768 227 776 697  19 653 734  14 758 548 698 670 635 276  77 399 728 648  11 143 620 421  72 533  28 331  65
 558 718 659 708 605 572 516 596 609 714 102 273 156  20 617 586 179 173 505 760 616 674 107 139 571 565 676 346 141  54
 585 712 579 647 541 451 534 540 497  10 523 486 201 649 524 713 510 508  99 525  25 417 574 165 593 114 604 252 612 325
 651 468 570 650 487 581 428 611 527 545 475 582 215 415 623 560 157  82  41 248 542 216 613 176 627 526 476 125 634 664
 636 564 615 559 551 631 696 528 568 625 241 680 111 575  57 495 119 243 124 642 484 223 660 569 643  36 532 482 576  50
 379 561 477 489 589 577 517 624 474 552 503 630  18 608 646 490 181 151 547 512 460 422 217  46 500  76 556 602 473 638
 595 578 429 499 513 454 588 387 544 424 463 416 485 521 597 567 307  44 370 481 573 461 455 427 518   1 423 413 515 467
 412 348 480 492 372 385 381 459 386 537 382 538 441 601 493 401 332 603 529 522 425 543 465 520 363 358 329 483 479 456
 539 400 531 501 498 366 536 313 342 405 509 452 478 879 434 376 519 380 389 462 444 470 367 304 436 546 349 395 445 450
 377 419 283 457 720 449 338 418 885 253 388 402 639 219 410 384 590 426 780 397 238 431 502 364 390 365 894 296 433 368
 562 344 345 432 326 863 293 321 403 838 435 254 322 324 453 371 873 335 458 420 447 566 466 375 408 472 414 269 264 862
 430 316 315 280 258 235 506 439 306 806 351 819 691 272 320 361 839 770 835 443 267 757 302 203 323 373 234 391 279 794
 409 259 250 359 290 209 357 369 309 491 553 383 872 285 281 303 652 751 731 853 305 496 327 765 411 333 282 658 230 742
 437 464 266 471 294 356 246 328 292 229 374 185 673 171 317 225 820 507 583 446 884 867 231 897 265 842 214 739 237 655
 152 314 263 183 213 340 200 262 889 261 840 154 717 869 167 175 777 398 599 150 228 692 339 732 245 606 799 754 847 350
 207 347 355 337 812 352 172  81 255 330 801 186 797 825 860 162 530 300 690 334 301 438 729 145 848 514 105 310 640 752
 193 247  55 184 705 220 829 268 311 257 763 153 592 886 199 856 504 614 233 168 343 793 550 683 180 662 190 755 440 682
 205 195 288 226 857 407 286 297 830 148 762  74 607 117 212 270 393 591 563 224 129 827 749 665 204 877 202 855 845 610
 336  43 256 112 895 174 208 196 161 239 800 155 745 864 750 888 362 723 244 118 188 442 494 404 198 893 275 880 803 669
 511  86  56 883 210  68 140 846  35 106 898  40 644 833 120 741 549 850  79 557  37 733 837 222 178 704 394 684 584 890
 169  64 881  90 769 866 182  42 194 142 851 135 668  84 693 878  67 392 109 101 197 775 807 891 865 341 849  53 671 689
 854 892 824 206 677  85  34  49  52 899 773  62 626 816 122 127  29  69 121 900 598 843 761  96 841  48  66 667 823 555
 896  75 103  78 782  61 663  91  39 887 738  71 619 535  73 828   6 488 133  38   8 810 772 688 874 703 131 858 822 645

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.90968e+06us (= 3909.68ms, 3.90968s)
Wall-clock time (full program): 3.973e+06us (= 3973ms, 3.973s)
Satisfaction error: 0
Number of search iterations: 1390
Number of local moves: 715 (including on plateau: 271)
Number of local minimum: 94 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10379
Total number of local moves: 5991 (including on plateau: 2100)
Total number of local minimum: 581 (including on plateau: 241)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 420 877 799 803 223 839 794 114 747  19 298   7 827  86 244 269 364 845   8 107 854 185 795 832 404 397 171 865 304  18
 855   2 105 850  23 852 846  97 176  73 230  22 137 814  12 167 352 808 666 123  13 796 787 782 778 266 739 829 479 836
 866  31 462 774 843 882 875  33 753 159 139 182 763 757   6 206 842 750  36 218 169 172 144 235  26 783 693 897  10 809
 828  43  89 417 459 701 772 130  90  20 129  25 805 801 195 346 741 779 583  50 120 249 802 681 864 613 838 554  45 746
  74 840 258 717   9 848 830  28 643 229  30  58 308 679  70  95 758 709 793 210 732  63 785 749  76 511 699 786 186 742
 191 872 522 841 265   3 737  59 181 106 371  91  88 711 109  38 727 615 880 325 755 228 756 734 856 215 736 822 163 518
 704 633 611 593 335 664  48 619 240  17 340  57 642 723  14   4 603 815 663 131 649 562 762   5 817 687 606 232 173 566
 477 549 531 735 276 609 434 442 639 604  16 321 135 641 502  77 187 826 594 174 682 115  66 725 791 691 781 264  32 599
 620 627 634 645  47 662 631 166  68 140 393 150 464 764  24  98 146 721 336 526 573 117 688 738 676 675 632 559 309 686
 773 726 104 597 198 339 625 437 591 450 473 267 217 575 601  34 414 558 644 576  40 622 702   1 588 537 657 273 280 616
 460 425 533 586 219 419 521 636 720 216 213 411  93 637 617 245 440 705 538  27 542 759 706 484 667  78 344 299 303 672
 495 689 570 690  21 496 614 551 602 630 650 390 126 610 189 608  46 557  83 349 501 673 605 595 607 234 499  11 343 481
 439 535 395 463 458 443 519 132 621 550  39 323 196 449 373 467 504 351 618 430 652 540 556 472 680 600 579  69 436 626
 596 548 347 375 405 493 368 480 412 426 376 348 516 424 577 488 435 136 445 432 418 528 547 659 358 539 647 208 314 670
 433 474 338 553 498 429 486 428 327 457 513 277 563 446 485 489 471 350 391 386 497 452 509 656 546 297 392 427 402 543
 385 476 655 415 469 494 416 592 524 410 448 492 270 564 508 379 525 536 400 441 510  15 378 394 470 465 541 512 356 475
 319 406 398 454 407 355 677 561 334 367 363 628 569 431 421 587 891 490 370 578 310 286 274 478 369 293 271 784 514 330
 899 341 692 466 444 500 399 408 192 482 409 574 387 517 527 503 384 316 372 585 313 329 328 571 456 362 288 651 589 231
 307 294 333 515 847 401 317 389 194 301 243 858 713 568 423 580 252 523 665 233 354 331 365 285 295 761 360 745 612 451
 357 396 300 302 789 241 315 332 255 661 804 572 862 383 729 714 487 403 121 581 342 374 320 306 124 718 361 555 506 305
 152 247 253 257 703 262 202 359 272 708 893 635 337 227 883 818 730 447 545 289 881 565 259 324 222 224  56 638 879 248
 483 278 279 290 870 149 544 724 887 283 710 598 377 260 381 800 844  92 366 388 353 696 284  81 322 788 282 296 529 281
 200 203 263 162 438 155 326 712 220 834 769 860 744 161 886 835 780 212 292 776 179 311 820 175  99 382 221 530 771 199
 251  82 380 170 629 250 156 671 767 698 453 733 455 261 775 695 236  96 142 684 895 871 103 868 178 287 180 552 685 312
 134 165 422 207 660 100 461 345 242 760 894 810 654 254 837 678 268  64 177 859 119 798 237 751 888 147 291 122 853 318
 183 205 127 168 623 728  87 885 275 646 790 766 849 226 867 797 743 246 113 754  85 128 209 110 211 896 491 520 669 118
 190 719 824 193 861 214 141 878 197 770 188 674 640 153 668 653 157 256 890 697 160 812 101  52  55 505 876 102 777 112
 792  79 560  62  49  65  75 582 731 857 889 816  80 148 204 694  41 138 819 892 813 748  51 683 716  84 184 116 722 825
 125 869 833 143 823 768 238 851 900 831 752 863 590 201 648 567  53 111 158 821 239 658 534  54 151  67  29 133 468  37
 507 884 898  72 624 154  61 874 715 811 700 707 108  44 740 584  94  60 807 873 765 532  42  35 225 413  71 164 806 145

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.11069e+06us (= 3110.69ms, 3.11069s)
Wall-clock time (full program): 3.17516e+06us (= 3175.16ms, 3.17516s)
Satisfaction error: 0
Number of search iterations: 829
Number of local moves: 615 (including on plateau: 162)
Number of local minimum: 38 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5563
Total number of local moves: 4518 (including on plateau: 1070)
Total number of local minimum: 191 (including on plateau: 125)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 855 863 794 801 708  92 277 143 768 793 284  83   7 789 241  26 285 111  77 258 825 126  55  70 883 826 486 838 771 380
  86 862 281 391 166   2 226  47 861 767 105 381  16 823 358 839 809 302 189 142 476  32 866 512 882 840 690 750  58 756
 788 869 300 428  63  64  41 716 799 845 123  10  72 865 159  15 790  23 237 117 740 667 875 172 853 748 415  60 847 814
 828 255 779 856 112 147  88   8 737 714 162 365 287 830 152 589 120 264  38 434 762 859 423 803 782 854  19 749 412  87
 800 271  30   1  42 764 257 713 731 743 204  78 352 784  57 832 741 149  40  39 137 780 452 760 819 675 196 722 685 661
 787 171 778 134 188 666   4 736 597 735 118 182  14 833 157 719 746  89  12 376 421 774 631 624  35 626 262 665 681 754
 852  94 640 574  61 463 813 248 594 355 198 798 106 683 295 620 744   6 164 361 101 674 540  80 755 607 261 349 797 682
 707 130 699 616  85 679 724 146 251 715  66  29 318 710  62 585 637 566  91 460 645 643  73 613 497 725 107 712 688 536
 581 769 673 180 630 638 267 686  21 729 311 633  50  20  44 612 726 275 439  33 179  43 549 775 519 668 619 664 654 528
   5 584 542  18 656 611 692 649 570 635 328 565  84 676 398 579 100 491 671  22  37 507 472 757 552 564 133 759 689 169
 592 502 657 684 608 517 455 660 582 572  11 431 583 515 609 623   3 605 516 498 214 557 154 487 513 529 113 518  49 158
 596 469 526 598 274 628 704 294 698 504  95 745 119 532 399 514 551 588 216  79 183 646 433 386 478 407 387 553 464 449
 599 556 705  93 466 530 456 458 604   9 313 691 319 595 511 614 494 151 615  24 413 457 459 531 508 541 465 501 337 500
 503 587 658 370 481 505 567 492 283 470  56 569 382 495 575 474 163 618 427  25 342 621 571 436 473 490 468 408 580 426
 392 367 339 629 333 590 369 482 269 451 336 401 601 443 577 450 489 347 485 437 561 348 329 480 632 288 414 411 655 610
 533 467 446 548 627 405 326 420 525 488 454 273 461 383 384 244 425 417 527 821 442 550 410 345 334 471 429 340 395 625
 447 364 346 547 330 389 320 521 524 462 641 479 368 546 445 322 477 343 523 697 537 206 509 314 317 357 510 278 559 837
 520 338 422 359 836 432 441 293 272 402 606 400 586 544 246 308 662 701 558 593 304 453 362 327 578 499 403 444 233 393
  76 265 335 238 647 375 438 435 280 268 669 891 890 397 305 263 374 292 323 785 522 858 742 243 440 190 385 568 371 650
 394 834 795 873 363 373 170 341 310 153 874 218 266 379 306 270 889 418 634 496 672 168 404 209 576 360 733 291 396 350
 201 776 378 804 331 351 850 260 409 886 642 315 555 324 181 229 254 430 448 818 483 344 377 424 289 307 539 240 419 651
 207 670 138 388 356 297 827 406 878 390 636 259 846 299 881 131 276 296 848 727 709 867 279 325 221 224 639 108  75 312
 232 366 282 353 652 145 831 554 301 234 815 573 730 167 893 303 250 810 208 700 184 693 242 877 192 102 702 316 245 563
 230 210 228 239 213 227 871 161 205 372 648 416 844 212 738 354 506 644 770 811 721 223 475 835 200 187 711 109 857 298
 174 219 222 752 680 781 806 545 128 110 812 880 694 199 860 165 220 786 822 535 252 217 194 703  52 253 870 177 176 231
 309 235 215 543 900 191 772 807 197 173 851 849 695 186 734 136 114 876 696 739 885 135 895 116 115  68 622 249 141  71
 185 765 247 591 717 896  36 225 796 321 718 817 879 155 678 122 493 747 732 484 256 150 125 816 139 160 290 751 127  97
  99 538 897 104 753 843 144 534 103 121 773 175 872  69 820 888 195 617 841 864 562  81 236 202 659  28 653  48 783  13
  53  54 129 203 560 758 140 829 124  31 842 286 728  17 763 802 892 792 602 332 899 777 663 211  74  27 898 805 178  46
 884  65  34 600 677 156 603 706  98  67 824 723 791  45 687 887  90 761 766 808  51  59 720  82 148 894  96 132 193 868

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.36512e+06us (= 3365.12ms, 3.36512s)
Wall-clock time (full program): 3.42828e+06us (= 3428.28ms, 3.42828s)
Satisfaction error: 0
Number of search iterations: 1055
Number of local moves: 677 (including on plateau: 173)
Number of local minimum: 49 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7692
Total number of local moves: 5392 (including on plateau: 1532)
Total number of local minimum: 311 (including on plateau: 186)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  37 754 577  66 871 803  62 736  63 670 571 282 657 677  72  60  25 746 808 225  40  36 864  57 771 457 156 793 749 830
  53  61 709 870 873 616 702  64 603 848 152 608 664 722 763 105 390 698 888 124  56 696 115  48  79 114 867  69 100 858
  88 729 876 789 881 520  50  77  85 719 139  75 768 632 631 522 663  84 894 108  76 145 850 101 688 661  83  54 636 891
 122 796 685 285 828 653 817  41 165 877 588 137 781 211  74 547 116 748 893 107  82 109 129  96 899 680 126 148 883 892
 177 674 650 104 776 170 827 120 155 853 779 162 606 784  68 558 701 144 844  93 640 147 216 112 869 705 130 142 851 458
 173 621 141 833 134 765 182 822 132 785 898 236 646 773 133 564 627 550 192 168 176 194 163 227 609 887 154  91 845 794
 209 896 662 140 214 498  30 798 270 787 215 188 860 836 744 660 517 834 268 199 206 143 212 166 169 821 655 191 619 508
 189 790 747 243 348 159 179 880 200 208 220 679 743 825 195 818 525 863 311 117 263 198 812 217 587 207 246 372 658 716
 238 770 811 219 301 205 224 638 890 240 273 242 745 797 241 753 849 302 288 221 362 837 233 244 253 872 197 281 320 669
 255 635 652 260 303 265 307 777 304 879 274 452 258 237 299 875 691 251 332 283 854 341 855 275 300 852 250 314 316 569
 249 595 835 231 344 315 321 305 193 284 900 468 886 328 403 665 645 355 330 889 309 312 334 252 399 715 336 322 597 398
 333 576 287 840 175 245 347 339 286 375 310 831 365 363 319 766 740 366 708 578 459 297 329 335 326 692 354 386 634 554
 431 482 414 389 353 373 381 408 417 308 377 673 656 357 346 524 585 364 416 376 327 429 412 343 374 397 557 383 778 885
 401 438 488 385 453 788 409 352 360 370 418 384 393 371 480 644 450 410 882 407 439 449 441 471 367 422 388 448 396 411
 337 591 356 402 572 350 392 428 485 477 405 460 486 446 731 523 518 504 394 368 342 400 467 391 445 435 443 419 433 515
 415 204 451 426 548 442 473 580 487 440 447 295 494 456 464 462 430 463 499 470 444 379 427 495 425 461 436 513 505 484
 420 359 542 489 475 491 434 437 553 541 534  35 472 455 479 567 280 552 519 493 537 466 478 387 503 423 490 511 496  97
 551 454 521 432 514 102 527 560 506 492 565 510 538 546 474 167 118 149 512 533 596 509 540 584 500 174 516 507 526 292
 617 323 566 497 476 531 563 239 469 555 501  51 404 590 611  86 190 545   4 559 530 528 483 593 532 543 539 589 406 395
 615 324  65 502 529 138 549 579 583 289  70 465 561 556 544   9 136 642 623 340 574 599 594 536 575 637 641 581 235 424
 648 187 228 600 602 612 586 573 613  16 614 232 135 535 697  92 378 570 624 626 146 598 568 562 604 625   3 618 325 298
 659 127 254 601 421  94 605 675   5 654 620 607 185  81 643 369 290 682 699 671 610   1 693 639 651 276 724 628 128 223
 683 119 123 725 649 690 737 667 672 633  89 349  29  49  43 317 257 711 630 687 647 686 668 703 622  98 676  31 256 269
 730 180  47 720 678 481 769 264 738 694 721 684  34  42  33 202 131  12 293 629 727 717 756 728 681  99 752 799 160  14
 764 248 291 755 704  24 666   6 762  38 689 361 229 203 713 271  67 723 358 695 735 739 714 712   2 294 783 710  58 201
 760  87 153  21   7 726 775 230 742  32 318 707  23 741 761 222 382 700  59 859 706 786 780 819 181  26 750 767 380  15
 856 413 262  22  46 807 774 186 826  52 757 846 157 121 210 829 795  78  28 732 733 809  11 843 103 178 582 772  95 592
 810 111 842 791 351  55 792 718 816 164 759 861 150 296 806 234 279 183 184 278 813 802  73 839 805 113  10 338 171  71
 895 758 261  13  44 815  17 820 267 125 151 751 277 226 804 266 866  39   8 823 272 832 218 878 106 345 824 841 801 172
 800 213  19 865  45 782  18 196 868 110 161 884 313 259 734 838 874 247  27 857 814 331  80 862  90 306 847 897 158  20

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.25925e+06us (= 3259.25ms, 3.25925s)
Wall-clock time (full program): 3.32468e+06us (= 3324.68ms, 3.32468s)
Satisfaction error: 0
Number of search iterations: 929
Number of local moves: 620 (including on plateau: 195)
Number of local minimum: 46 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6887
Total number of local moves: 5079 (including on plateau: 1240)
Total number of local minimum: 272 (including on plateau: 143)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 900  96 873 720 857 100 168 770 172 689  65 832  71 576 188 136 144 767 598  29 863 618 126 272 162 619 593  32 604 875
 895 341  24  41 658  86  66 549 146 111 130 782  33  90 701 846 647 772 747 108 872 150 135 665  11 744 673 889 847 756
 820  31 843  82 793  75 594 580  61  67 398 683  72 597  87 894 265 819 774  30 874 402  54 167 191 688 806 884 163 721
 612  68 178 818 877 216 125 860  74 447 247 586 238 814 838 852 187 809 534  26 897 781  51  70  44 788 731 105 204 438
  91 253 282 695 844 145 224 785 621 217  98 893  35 575 776 546 891 670 653 200 837 123  52 195 116 892 800 213 165 628
 802 184 138 550 500 221 290 878 176 231 132 775 182 749 865 835 173 797 881 292 107 246 223 185 867 855 613  20 276 472
 207 169 151 518 552 325 864 383 220 264 170 573 369 702 883 716 899 896 263 286 194 540 215 280 158 759 754 122 358 725
 851 226 311 854 801 208 113 745 166 277 212 295 192 761 704 799 225 784 262 134 237 866 324 261 140 890 729 210 281 657
 792 137 310 787 880 236 377 435 508 850 245 412 340 655 288 396 811 160 250 321 218 882 304 284 155 440 648 329 203 862
 318 414 278 469 352 252 202 353 179 690 362 885 334 786 127 429 197 790 685 206 393 876 189 382 571 777 650 399 244 726
 230 322 312 789 268  78 384 841 400 161 313 279 374 861 430 380 404 887 363 848 449 638 239 299 112 769 816 285 306 678
 428 243 196 879 143 339 367 293 441 260 315 668 364 826 259 320 471 898 751 342 512 610 214 254 739 462 836 248 405 432
 888 366 381 663 227 825 420 715 354 201 308 337 219 762 387 229 302 183 375 700 330 557 525 454 395 465 570 568 408 401
 409 482 368 544 587 445 373 386 355 348 460 437 886 317 517 328 357 294 483 808 411 249 467 344 356 492 504 600 477 431
 372 392 582 413 406 466 419 442 423 856 326 251 274 468 314 480 660 527 415 422 359 327 458 455 625 494 481 439 456 513
 452 493 347 495 548 589 403 596 595 418 561 450 475 349 602 496 478 530 457 463 479 211 390 388 562 291 346 156 421 474
 464 607 524 139 370 636 434 303 391 350 592 675 532 416 443 501 560 539 473 487 634 271 507 608 511 270 234 289 296 459
 371 630 578 567 491 521 502 528 333  83 505 410 436 287 572 407 535  58 516 488 446 319 623 427 378 425 307 664 563 545
 424 499 490 171 514 574 649  40 633 559 652   5 577  16 599 538 556 533   8 484 764 323 779 706 581 149 235 616 712 129
 453 541 611  47 345 444 542 389 834 523   3 606 588 120 566 654 707 489 643 316 755  23 732 509 485  62 142 526 821  39
 433 531 555 147 497 551 746 470 351  10 617 498 676 275  15 624 733 529 642 536  18 379 703 640 385 309 103 558 590 394
 626 691 632 232  63 537 603 627  14 620 637 114 297 255 631 448 667  28 722 554 659  34 724 705 681  64  84 635 698 233
  38 601 694  89 669 639 565 190 682 615 629 476 547 267 564 677 109 110 609 662 451 331   7 708 730 305  88 622 684 157
 651 714 553 332  45 727  49  42 679 728 829 543 717 154 760 101 104   6  48 585 693 361 803  13 656 119 758 871 757 117
  22 672 591 376  97 778 583 193 692 674 831  25 817 298  27  36 710  12 242 697  99 763 735 766 686 199 283 718 713 180
 205 771 520 644 503 719 853 519 833 748 737  92 840 417  19  37 522 186 273 338 605 773 661 709 124 397 222  93  53 102
 301 736 711  17   2 569 671 257 734 741 805  69 579 152 641   4 128  80  77 822  46 768 807 666 740 266  85 869 812 360
 365 687   9 426  21 699 849 115 824 584 842 177 738 461 300 506 791 133 515 780 198 106 783 486 752 256 153 680 131 148
   1 795 827 258 510 765 839  50 830 335 696 614 868 240  76 141 118 174 175 723  59 645 815 804 859  60 228  79 810 121
  94 823 646 753  95 750 241 181 794 858 798  73 845 269 336 159 164  55  81 828  56 343 870 813 743 209  43 796  57 742

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.88096e+06us (= 2880.96ms, 2.88096s)
Wall-clock time (full program): 2.94502e+06us (= 2945.02ms, 2.94502s)
Satisfaction error: 0
Number of search iterations: 624
Number of local moves: 532 (including on plateau: 82)
Number of local minimum: 20 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4904
Total number of local moves: 4362 (including on plateau: 782)
Total number of local minimum: 100 (including on plateau: 115)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 102 823   2 118 878 264 873 799 238 835 838 818 197 501 868 834 225 310 883  21  82 178 185  45  24 853  46 797  36 842
 780 767 161  75 816 259 876 286 224 771 753 857 747 813 783 831   6 247 862 165  53  19 288 273  67   1  89 846  11 789
  43  37 255 840 830 755 794 803 188 863 795 887 315 748 821 827  17 221 717 391 211  98 279  94 155 101  66 733 302 329
 138 812 450 630 880 193 758 869 325 563 234 768 261 679 683 808 401 339 749  35  29 120 199  73  87  97 874 295 854 312
  93 820 814  84 807 757 726 865 484 323 109 680 223 750 702 836 633  44 640 239 103  26  38 151 782  18 125 778 791  74
  39 605 731 860 678 729 720 712  42 594   7 601  92 207 746 665 719 141 773 114 194 133 121 716  64  69 688 641 777 337
 167 697 704 743 723 786 653 681  62 707 761 822 265 439 692 710  50 231 693 621  13  80 209 170   8 709 730  16  99 274
 256 625 705 674 732 669 618 150  63 741 690 806 214 691 770 543  34 372 684  20 311  65 115 183 603  54 634 660 649 184
 254 739 648 744 522 661 110 651 454 677 646 597 370 670 694 643 576 157 672   4  83 149 220 227 565 642 228 689  23 200
 179 662 499 514 580 536 486 626  49 301  78 586  12 711 593 638 251  40 383 550 440 592 581 579 539 635 652 553 538 132
 551 610 548 528 718 508 520 622  72 583 507 708  81 657 685 492 168 164 596 171 316 577 160 127 232 613 673 570 627 131
 205 644 524 526 449 504 400 493 413 537 545 408 431  52 654 470 540 371  32 574 399 313 107 546 632 561 595 629 575 386
 395 479 506 607 645 598 483 523 100 556 495 432 283 448 701 421 517 394 409 547 213 569 414   3  10 566 534 463 584 620
 513 474 686 497 559 366 218 541 143 568 558 446 393 191 226 424 485 496 498 525 332 451 500 557 441 343 472 438 585 589
 373 437 532 611 555 542 417 476 340 429 573 365 428 397 447 482 452 489 379 270 416 456 419 480 362 535 406 572 530 345
 425 405 490 460 488 252 418 567 714 434 319 436 458 491 527 478 533 387 494 402 511 453 560 462 412 471 380 351 341 396
 445 385 382 344 442 515 481 355 505 477 309 354 664 353 284 307 879 374 459 826 668 502 516 426 367 368 518 326 281 403
 608 390 308 296 392 298 695 289 728 420 363 389 793 796 348 324 338 263 461 407 549 347 388 427 457 350 529 443 384 735
 616 364 268 306 242 303 359 282 619 398 318 376 724 815 358 844 433 588 466 335 609 291 422 375 468 290 404 378 415 849
 423 352 334 195 356 467 233 885 892 202 346 328 564 330 317 292 267 612 361 381 809 856 606 742 784 349 236 377 297 322
 722 212 277 360 148 189 300 260 571 774 848 258 824 299 293 410 257 766 314 269 487 682 833 444 196 229 435 266 804 788
 700 219 342 327 253 304 599 715 411 321 215 240 888 285 112 336 509 675 222 779 617 600 754 703 725 249 278 250 216 671
 698 145 357  90 180 837 554 465 841 241 163 237 886 740 173 119 369 850 144 832 776 752 893 244 175 287 208 870 154 235
 604 210 272 190  86 889 116 206 792 174 245 320 699 469 166  88 455 810 271 825 790 882 872 503 745 839  76 124 158 639
 552 137 177 248  55 737 243  68 663 578 122 203 666 198 246 105 510 762 305 798 521 859 759 800 894 843 430 123 331 582
 867  77  31 772 276 147 169  56 765 152 230 201 519 192 204 176 805 667 562 631 851 658 475 713 696 294 858 187 656 628
 898 262 817 864  95  85 182 140 544  71 280  15 159  27 130 142 764 760 104 464 895 727 531 866 721 763 512 139 852 706
 186 128 829 775  41  57 275  70 890 156 751 172 113  33  91 217 875 676 135 785 781 756 845 855 614 900 134  14 738 623
 896 881 861 108  59 162 181  51 736  47 615 126 591  60  48  25 811 650 111 897 769 590 624 847 819 587 828  96 106 333
 787 117   5 129  30 146  58   9 647  22 802  79 655 473 153  28 636 659 136 637 687 734 602 884 871 899 877 891 801  61

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.34987e+06us (= 3349.87ms, 3.34987s)
Wall-clock time (full program): 3.41356e+06us (= 3413.56ms, 3.41356s)
Satisfaction error: 0
Number of search iterations: 934
Number of local moves: 566 (including on plateau: 163)
Number of local minimum: 57 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7367
Total number of local moves: 5192 (including on plateau: 1340)
Total number of local minimum: 289 (including on plateau: 177)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 891  48 688 810 159 594 898  64 295 856 101  53  50  61  31 106  67 792 615 105 549 803 109 654 836 814 237 686 715 828
 824  83 806 781  49  73 574 145 131 445 743  58 782  98  47  91 155 751 666 139 711  75 811  57 844 886 796 884 890 120
  99 789 590  90 115 728 378 313 171 232 883  84 876 104 219 878 127 763 738  81 754 802  78 723 742  62 561 880 581  74
 176 531 682 236 249 119 892  72  59 613 170 126 151  60 849 229 713 855 893  76 696 897  29 850 634  51 830 726 867 184
 148 582 708 138 896 121 859 147 324 857 166 128 183 134 687 226 175 862 664 143 773 820 156 557 579 812 299 655 636  80
 163 471 630 606  85 466 899 674  66 775 282 110 112 248 869 194 270 611 889 221 741 843  34 870 133 885 167 279 765 157
 335 823 778 265 172 135 900 181 125 881 894 208 222 286  36 266 895 842 753 260 587 331 161 764 629 380 199 209 770 228
 102 766 887 487 118 178 807 366 187 822 831 185 283 301 158 427 875 665 656  89 854  63 321 795 604 368 253 262 505 300
 123 514 818 578 245 141 737 124 642 224 200 204 381 256 306 502 805 833 785 326 706 813 408 186 882 369 205 278 639 285
 243 663 832 771 238 217 809 567 412 879 853 302 325 239 215 379 461 179 332 213 804 252 292 341 858 309 281 196 786 267
 808 360 592 240 620 390 484 269 690 681 719 473 271 338 259 220 287 297 319 825 736 298 223 316 780 264 328 180 860 388
 317 373 364 722 658 206 556 416 511 414 530 485 227 438 420 195 311 419 345 835 739 376 393 449 562 478 401 428 348 599
 463 829 521 320 289 542 672 353 434 464 288 400 650 415 475 417 477 405 455 334 605 296 559 385 532 375 370 246 585 359
 625 888 356 791 263 290 398 312 362 413 310 435 241 705 451 537 536 315 339 472 524 407 344 409 512 330 570 371 735 274
 483 318 347 399 525 490 322 450 377 284 442 589 182 397 474 598 343 386 476 392 519 509 337 864 468 429 437 563 569 546
 430 637 365 342 596 499 191 355 489 293 394 444 432 577 351 534 433 508 571 558 314 460 329 700 426 622 374 554  33 704
 411 423 619 533 486 188 142 752 500 340 470 564 350 543 501 440 441 372 391 603 357 402 626   4 457 516 503 389 591 601
 447 431 600 550  37 395  28 492 436 584 583 568 586 410 462 535 333 528 482 203 443 336 384 424 425 517 678 465 560 593
 628  45 551 254 662 456  42 612 504 631 354 272 406 760 538 617 513 552 510 506 214 480 540 469 255 638  38 720 230 518
 691 507 304 192 527 646 573 261 218 201 493 610 627 273 494 545 114 496 608 488  18 539 566 498 448 661 548 640  88 641
 403  69 207 216 772 515 693 614 565 291 459 363 635 446 633 689 632 523 210 467  65 702 746 607 244 544 580 458 152  15
 649 117 247 280 541 555 140 877  24 153 439 595 652 609 648 453 576 352 154 755 308 497 768 277 190 767 623 149 358 762
 522 819  82 683 774 668 868 107 699 421 673 684 815 651 670 730 404  70  79 361 303  43  35 479 130 100 616 129 233 667
 597 731  55 526 685 671  30 624 709  56 695 692 838 718 698 729 257 103  68 756   3 150 826  21 346 164 733  52 258 724
 653 242 235 383 529  23  40 734 679 491  13 676  12 575 647 750 162  14  44 677  17 657 845 452 495 787 757 799 382 745
 710 327 165 276 588 866  39 659 643 198 251 874 675 748 697 714 758 160 234 618 108 717 520 712   5  25  27 454  87 660
 749  46  86  26 777 841 323 572 747  77 396 873 861 800  16 553 740 202 189 776   1 418 769 136 174 644  96 790  93 744
  22 621  20 834 851 817   2 871 848 602 225 761  92 784 794  94 231 294 137 725 547 168 707 144 113 669 798  11   6 727
 793 367 211 837 863 846   7 680 821  32 481 872 797 840 759 173 721 116 268 779 132 307 816  97 193   8 422 197  71   9
  10  95 169 349 146 839 212 852 847 305 177 827 801 701 111 694 703 250 645 732 387  54 783 275  19  41 788 865 122 716

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.17373e+06us (= 4173.73ms, 4.17373s)
Wall-clock time (full program): 4.23935e+06us (= 4239.35ms, 4.23935s)
Satisfaction error: 0
Number of search iterations: 1552
Number of local moves: 752 (including on plateau: 277)
Number of local minimum: 124 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11842
Total number of local moves: 5427 (including on plateau: 1498)
Total number of local minimum: 876 (including on plateau: 188)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 668 708  37 743  21 849 295 761 806  17 804 846  79 127 225 378 357 283 862  26 131 314 790  34 746 833 109 802 787  77
 868 794 745 821   1  13 260 754 239  43  29 841 455 876  81 221 299 795 839 789 143 741 265 731 101  40 779 125 733  94
 858 786 182 505 644 805  67 377 190  15 813  75 187 857  88 103 816 825 832 766  89 784 183 368 372 778 195  47 773 135
 753 710 744 823 481 824  92 847 867 175 284 311 320 757 156 121 273 831 750 822 321 207   6 105 800  30  18 263 666 158
 817 830 208 767  46 648  20  22 684 748 353 735 635 690 701 459 333 828 210  84 118 641 206 116 730 184 276 384 702 340
 715 178 820 683 236  45 673 672 782  95 729 749  41 681  51   3 339 539 764  65   4 768 519 650 785 573  57 713 358 228
 776 646 698 720  62 612 152  19 685 193 851 687  85 717 196 726 102 699 600 246  11 758  23 421 788 739 145 429 676  53
 695 694  71 742  35 636 662  38 693 444 718 777 108 601  80 642 165 705 711 548 171 737 124 213 691 598 144 724 132 216
 484 605 375  31 449 567 592 508  12 197 609 736 374 728 618   9 606 492 461 659  64 626 586 287 756 535  16 751 262 520
 590 616 594 396  14 563  24 638 639 154 660 671 597 611 591  36 240 588 630 619 412 533 679 162 709 186 528  61 192 582
 537 584 551 253 522 663 721 365 509 677  39 703 486 734 565  74  73 631 613 547 336   5 386 418 517 596 153 267 521 469
 525 580 826 500 235 562 585 633 555 558 664   7 463 494 493 211 133 510 512 473 341 595 553 332 437 576 526 137  28 471
 498 496 566 456 543 487 531 632 608 589 534 350 232 410 407 615  56 570 424 480 360 415 667 376 572 440 451 159   8 583
 478 423 482 441 324 550 579 544 452 515 514 281 303 577 627 402  10 479 445 540 355 554 436  70 503 524 450 542 599 516
 308 571 502 453 250 506 488 575 581 552 504 518 527 458 538 404 342 301 523 160 448 397 545 422 507 312 568 511 406 338
 394 296 405 809 680 381 465 427 430 331 309 549 625 428 361 307 614 330 546 181 532 466 649 319 434 401 411 443 501 491
 328 279 489 414 431 490 398 530 893 369 393 326 356 485 413 464 692 460 541 298 454 359 344 564 291 622 268 762 383 419
 467 409 435 704 389 470 255 495 426 322 425 399 392 305 382 237 233 874 348 395 669 269 294 645 477 896 447 628 390 438
 457 894 388 587 245 472 352 224 400 327 244 497 366 475 354 416 796 362 880 270 432 559 259 770 256 297 483 408 318 727
 306 200 227 310 657 367 293 343 379 752 840 347 653 373 167 838 675 351 468 763 661 885 248 474 202 302 282 249 686 217
 337 261  55 536 499 349 325 205 230 371 346 194 569 439 391 688 732 866 317 433 844 334 275 602 420 403 803 557 883 251
 203 827 176 272 877 219 363 258 513 285 280 290 865 345 385 859 700 241 278 274 697 149 189 654 335 380 797 561 879 364
 223 214 254 104 855 370 818 834 315 220 300 304 853 271 243 277 607 226 288 264 791 188 887 323 204 234 815 629 706 898
 313 163  82 387 808  99 860 139 185 807 286 289 655 112 792 843 696 218 169 257 719 231 129 864 316  78 781 774 574 889
 329 222 174 106 725 670 738  87 164 895 123 209 810 142 835 417 593  33 114 173 863 900 856 199 897 198 861 113 177 892
 122  42 890 130 446 180 658 212 168 852 884 151 678 247 780 621 620  86  25 617 714 242 126 842 134 886 674 252 529 707
 266  68 712 634 603 179 652 783 107 875  66 881 656 150 755 793 462  96  63 229 723 147 870 115 215 882  98 556 120 759
  91 100 801 138 647 141 148  97 191 643 637 146 837  59 747 836 665 110 140 811 765  93 772 829  44  54 845 814 442 872
  60 292 155  48 891  76 760 873 651 854 111 476 172 238 869 740 682 117  90 878 578 560 799 812 119  50 819  83  52 610
  49  27 871   2 899 722 689 623 161 640 166 170 136 128 624 775 604  69  72 848 769  58 850 798 157 888 716 771  32 201

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.04462e+06us (= 3044.62ms, 3.04462s)
Wall-clock time (full program): 3.10633e+06us (= 3106.33ms, 3.10633s)
Satisfaction error: 0
Number of search iterations: 800
Number of local moves: 496 (including on plateau: 115)
Number of local minimum: 35 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5956
Total number of local moves: 4715 (including on plateau: 1111)
Total number of local minimum: 207 (including on plateau: 154)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 472 878 154  56 855 143 821 857 489 876 860 105 681  67  36  41  63  49 109 770 656 585 615  46 828 132 773  40 872 586
 887 900  17 880 488 628 748 801  27 227 805  74 847 885 209  22 110 197  20 262 834  92 657 158  53 730 788 165 888 116
 658  82 858 250 594 732 835  79 114 144 823  16 234 877 549  30  80 170 191 351 710 219 720 462  70 856 840 543 833 595
 118 836  68 898 441 842 883  81 193 735 194 115 684 705  75 866 268 121 264 175 721  35 666 761 119  91 895  37 891 737
  88 217 199 802 712 148 664 163 142 645 599 288 201 849  64 844  84  60 561 779 575  89 412 815 112 882 851 151 753 766
 131 248 225 326 719 749 818 306 140 613 824 321 767 243  77 398 814 371 167 881 793 196 789 276 147  86 173 251 889 777
 182 161 200 334 873 776 516 181  66 649 185 130 854 153 111 304 643 422 804 892 867 183 869 177  50 270 796 400 708 759
 213  90 101 205 843 740 809 850 402 675 890 232 266 211 302 689 762  21 445 257 874 292 884 327 221 237 267 133 605 672
 241 289 394 305 667 806 580 837 859 307 322 228 283 171 324 449 190 353 356 236 879 894 562 240 252 239 433 733 523 563
 261 186 382 437 875 238 726 150 336 896 830 424 233 312 141 573 401 265 212 626 886 260 829 845 204 281 259 503 490 454
 249 285 372 323 742 224 754 280 423 724 310 318 329 106 380 825 403 365 832 899 255 410 269 760 218 308 156 817 608 571
 606 231 108 519 284 723 620 392 313 358 440 810 383 505 297 494 345 396 290 455 330 377 341 627 348 552 360 729 692 590
 897 475 416 510 344 368 439 428 513 484 393 381 588 295 379 369 319 507 390 593 407 465 246 331 363 385 868 429 578 355
 338 317 397 477 279 245 711 526 431 325 388 375 444 499 315 328 395 609 607 426 610 822 483 863 373 258 343 275 544 512
 301 333 450 457 460 638 545 362 464 359 453 522 420 366 491 384 467 376 452 409 418 263 478 337 411 335 531 870 524 639
 473 435 340 517 419 272 296 581 293 559 501 208 367 404 463 582 493 502 535 635 443 480 550 361 417 630 471 533 349 406
 495 542  78 511 632 123 278 514 352 546 651 466 701 432 537 567 164 451 320 474 529 399 430 520 515 583 654 370 342 339
 622 479 695 518 461 579 136 456 378 504 587 442 391 389 555 271 508 434 387 596 386 446 572 600 459 647  19 253 557 188
 498 405 570 603  59 408 425 482 677 577 532 509 469 560 374 206 616 673   3 229 468 604 625 558 470 676 415 172 298 354
 665 476 569 421 584  96 287 685 688 530 180 743 640 662 496 230 152 614 536  10 565 551 700 357 447 350 623 436 120 102
 650 646 704 528 481 113  39 538 548  83  61 554 661 624 553 127 178 592 566 674  93 669 541 486 527 103 787 758 299 332
 680 485 525 540 157  54 107 644 852 648 636 521 568 683 589 220 702 668 556   4 294   5 124 534 718 602 715 273 176 235
  85 547 741 574 254 699 222  33 506 591 808 576 618 687 652 427 744 734 601   8 139 686  42 223 819 145 487 619  69 179
 631 117 728 597 100 633  26 783 611 709 413 893 135 717 736 282 634 727 714 286 129 660 203  28 671 820 195 291  15  31
 722 813 629 128 214  32 198 637 798  95 138 670  24 755 768 703 698 612 751 774  62 539  97 187 738 739  94 678  38 184
  45 663 598 731 160 659 126 497   2 202 346 564 691 492 778 846 697 839  72 311  65 811 155 807 713  14  71 769  34 757
 617 655 706  44 168 159 134 690 853 316  18 725  87  47 752 780 785 169 364 679 122 784 104 716 799 642  55 745  25 775
 861 621 693 174 210 641 166   6 790  51 274 707 696  48 862 812 803 771 791 448 256 242  98 215 800 831 309   1 149 189
 816 347 750 838 303 300 192 653 458  29  43 772   9   7 786 794 216 765 827  99  76 694 207 841 782 226 125 746 500 314
  13 756 848  12 137 747 414  23 797  58  11 826 244 764 864  52 781 682 792 277  73 763 247  57 871 865 162 795 146 438

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.00735e+06us (= 3007.35ms, 3.00735s)
Wall-clock time (full program): 3.07272e+06us (= 3072.72ms, 3.07272s)
Satisfaction error: 0
Number of search iterations: 761
Number of local moves: 631 (including on plateau: 116)
Number of local minimum: 20 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5206
Total number of local moves: 3865 (including on plateau: 965)
Total number of local minimum: 213 (including on plateau: 132)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 880 223 890 799 685 812 808  36 533 813 108  40 827  18 555 164 149  94 853 775 198 846  91  88 136 153  34 155 894 858
  50 896 110  45 891 681 594 134 899 726 143 822  39  27 542 873 105 253 619 825  78 683 733  38 175 860 753  89 627 205
 865 142 881 669 871 862 702  42  66 614 116 697 154  20  48 844 159 732 225 195 278 725  73  32 863 816 623 847 147 207
 519 851 144  95 831 776 886 889 494 162 163 269  74 118 601 788 656 834 672 515 591 785  71 141 186 213 768 236  83 104
  23 166  70 541 441 174 724 892 817 774 124 704 305 800 426 275 152 791 823 511 145 772 121 167 112 644 804  15 900 302
 169 306 218  93 572 806 884 312 866 883 156 212 245 184 694 307 191 895 875 787 109 852 183 189 383 265 837 129 161 752
  17 178 254 635 779 209 861 898 204 867  96 780 259 148 809 107  52 810 850 855 311 885 188 448 282 177 796 274 114 372
 353 127 237 368 882 158 878 828 701 480 281 287 375 319 721 219  54 157 869 378 200 857 897 264 170 295 256 215 833 856
 119 242 286 589 538 122 596 280 778 819 405 160 260 240 686  98 238 762 755 830 222 764 210 263 296 848 284 328 801 696
 140 373 252 115 666 565 840 229 369 746 290 211 217 377 773 314 366 233 841 695 423 135 297 285 361 146 710 888 868 790
 425 199 390 401 603 248 648 113 622 239 421 367 455 267 559 386 321 276 332 399 418 227 241 479 876 815 864 495 893 536
 443  87 358 671 599 433 439 471 580 340 310 620 416 432 766 406 270 712 449 887 226 304 417 351 371 655 331 362 197 612
 579 414 649 699 668 435 475 318 334 317 315 460 300 224 343 301 335 554 283 424 251 346 288 859 341 723 348 709 879 344
 437 518 569 507 611 434 193 350 467 487 446 664 374 505 498 394 715 249 392 497 472 447 356 506 404 502 389 364 438 330
 466 512 365 485 540 370 442 403 523 349 561 492 524 422 322 474 461 571 320 488 543 393 451 336 687 473 582 181 395 384
 465 581 517 428 313 413 546 232 509 576 262 352 575 503 838 409 294 419 293 464 639 309 504 408 553 385 436 440 325 527
 363 476 609 578 235 508 551 529 185 484 562 126 586 583 171 658  24 463 574  75  13 481 718 534 544 501 722 675 585 402
 347 641 633 289 250 450  63 588 499 458 532 564 496 452 247 566 558 376 379 429 357 660 397 493 618 535   5 520 410 703
 568 550 610 125 299  80 531 521 445 490 567 560 698 454 592 513 491 577 638  16 713 102 525 456 528 234 640 537 100 355
 608 470 628 483 279 645 316 674  64 678 420 665 549 514  30 684 653 573 271   9 469 661 597 584 530 486 457 187 298  33
 673 444 606 128 430 150  77 607 182  90 716 659 756 616  92 411 593 636 680  55 556 705 631 462 468 431 598 545 459  59
 751 742 522  67 246 676 101 605  21 647 707 602 621 557 216 552 489 526  56 106 615  68 688 587 663 634  28 792 510 120
 590 690 563 214 255 600 208 643 324 303 630 652 654 516 327 258 708 760 130 277 613 359  53 795 748 548  12 679 345  61
 807 717 398 728 261 797  37 380 133  85 874 570   2 747 196 689 845  49 190 192 624  35 735 820 781  51  43 604 391 734
 739 740 642 691 243 482  26 651 165 111 650  46 692 646 180 711 700 323 206 272 706 231 826 829   4 637 172 382 539 273
 832 741 617 720  11  19 176 137 173 131 769 228 759 632 730  81 761  31 329 396 693 266 308 771 745   7 744 824  41 843
 547 662 629  65  29 749 194 338 677  57 750 407 738 763  76 727 842 625  79 333 743  97 657 626 783 139 453  82 427 221
 670 803   8 782  44  47 203 326 257 230 500 595 805 872 818 784 767  25 103 821 667 201 731  58  72 387 400 388 381 770
  69  10   6 719 151 754 179 360 870 339 802  22 757 794 415 168 777 123 291 877 849 202 814 811  99 477  84 836  62 798
   1  14 854 786 292  60 337 729 758 220 839 682   3 765 244 354 789  86 138 132 793 117 714 835 736 478 342 737 412 268

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.56111e+06us (= 3561.11ms, 3.56111s)
Wall-clock time (full program): 3.62541e+06us (= 3625.41ms, 3.62541s)
Satisfaction error: 0
Number of search iterations: 1109
Number of local moves: 666 (including on plateau: 187)
Number of local minimum: 46 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8297
Total number of local moves: 5249 (including on plateau: 1497)
Total number of local minimum: 394 (including on plateau: 178)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 609 124  15   4  62  70  42  14 845 840  18  20 830 172 745 759 181 867 846 824 864 868  85 182 818 792  12 610 766 631
  10  13 761 847  37 682  59   7 505 831 307 114 772 215 385 241 193 860 807 696 301 854  52 273 783 855  34 795 884 342
 306 134  84 827 139 853  23 817 839 806  63 253 796 202 210 294 829 412 858 752 366  22  46 820 861 823  64  21 809 186
  58  17 719 346 733 819 228 822 798 804  71  16 797 206 213 262 828 833 192 815 211 747  61 237 808 802  75 799   1 197
 725  97 131 812 712 775 136   6 770 743  19 381 751  69 165 138  65 794 539 728 116 832  43 691 764  26 730 689 793 275
  80 194 753 758 130  28 109 784 677 782 268 164 762 127 356 345 727 716 149 642 708 686  24 470   3 734 803 687 731 118
 162 198 183 580 724 744   2 661 717 685 239  49 328  94  96 264 707 702 644 726  95 721 224 146 647 711 662 737 695 372
 615 218 628 681 672 742  76 125 648 620  38 284 651  60 106  27  29 678 430 622  86 718 132 519 652 665 778 630 746 639
 185 263  51 697 643 591 299 675 159 655  90 160 670 255  68 250 650 673 668 641 656  25 318 669 605 568 595 545 664 527
  30 226 590 573 633 561 613 588 638  48 212 205 654 234  74 107 645 690 657 624 140 592  89 479 634 575 548 601 653 602
 576 558 488 582 692 535 614 619 572 593 296 229 618   8  99  44 120 547 623 496   5 597 549 290 563 674 560 579 611 178
 550 510   9 557 546 612 578 676 216 538 584 464 594 551 153  47 606 598 490 480 489 279 269 322 201 520 531 504 564 477
 532  88 503 523 512 621 586 637 452 455 583 257 444 428 502 426 405 506 600 537 567 554 450 314 432 390 493 457 184  77
 574  33 555 570 516 466 449 487 260 514 528 256 530 589 544 324  11 533 379 536 521 448 577 271 608 437 484 492 497 526
 439 485 483 522 511 388 395 441 375 451 465 400 543 507 422 398 391 440 517 463 509 462 411 418 416 458 434 501 508 362
 486 454 341 515 471 308 475 392 788 478 427 476 373 473 417 640 368 401 286 446 436 338 467 722 491 380 394 415 461 396
 474 835 367 443 378 332 402 333 529 365 482 494 500 438 339 469 541 344 865 420 425 406 386 445 468 357 429 354 453 442
 387 404 424 410 472 389 383 382 323 303 409 499 700 321 421 359 863 889 419 304 266 423 397 513 377 871 358 369 433 447
 495 352 340 326 312 249 351 399 435 331 414 893 407 680 883 850 364 316 756 431 355 329 679 603 393 295 251 408 270 348
 288 384 353 244 370 261 748 292 363 317 403 740 313 336 899 841 315 219 562 890 875 282 556 736 310 349 330 293 319 327
 729 723 276 350 305 343 413 277 238 371 607 518 235 869 709 900 297 225 291 311 790 248 604 698 376 246 335 325 222 684
 780 688 190 300 374 360 302 232 223 337 874 660 285 896 738 667 245 243 278 236 862 542 636 540 204 283 252 289 298 701
 627 749 779 199 242 175 585 320 714 274 789 559 155 710 732 214 849 254  66 196 233 287 872 209 587 191 247 859 101 741
 649 886 699 221 281 189 877 141 171 143 763 760 173 715 885 836 157 200 750 156 168 230 703 882 151 203 258 227 460 581
 272 876 629 280 240 878 765 825 265 571 892 616 207 786 625 524 838 147 123  73 565 188 834 174 126 166 459 158  79 334
 706 776 309 180 887 267 843 693 599  53 646 785  50 870 694 705 179  40 347 128 176 102 755 773 217 481 177  57 163 857
 816 801 220 895 133 259 754 894 137 170 566 837 103 534 569 658 456 108 129  78 704 231 842 791  93 195 781 119 144 498
 663 811 891  32 768 145 800 787 161 150 897 774 110 635 553 596 814 169  41 142 632 111 898 115  36 112 713  35  45 879
 167 813 856  54 866 104 851  91  67 135 739 771  92 683 552 671 122  55 121  83 617 767 735 100 810 148 848  87 844 666
 525 805 888 187 154 769 757  98  31 152 826 881  72 852 361 659 720  56  82  39 777 626 821 113  81 208 880 873 117 105

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.94941e+06us (= 2949.41ms, 2.94941s)
Wall-clock time (full program): 3.01758e+06us (= 3017.58ms, 3.01758s)
Satisfaction error: 0
Number of search iterations: 841
Number of local moves: 675 (including on plateau: 197)
Number of local minimum: 26 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5687
Total number of local moves: 4856 (including on plateau: 1171)
Total number of local minimum: 150 (including on plateau: 132)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 812 147 256 444 852 820 889  10 281 810 858 492 895 825  74 232 105  70 853  86 758 746 790 117 154 892   7  52 138  50
  30 307  16 297 863 771 850 103 407 446 318 226 874 865 837  26 162  64 765 287 729 878 339 494 876 881 721  35  17  31
  81  39  32 363 854 875 867 496 112 270 835 245 872 678  14 169 123 216 776  61 789 873 241 120 819 818 843 546  79 409
 730 149 176  19   2 779 759 282 248 246 827 273 652 679 723 180 161   1 691 749 322 249 766 690 744 785 738  20 740 135
 449 118  96 702   6 715 796 777 333 125 782 470 760 632 794 143  83 626 694 325 711 788 311 240 752  43 718 220  13 293
  25 848 134 116 845  27 824  15 671 235 751  87 747 733 712  89  84 380 743 731 856 755 218 732  62 741 807 187  34 326
 290 753 181   3 725 799 140 536  42  57 664  33 757 802 709 137 639 666 707  38 728 635 372 234 768 645 791  37 419 208
 179  29 674 588 585 625 775  77 598  58 756  44 650 403 619 697 392 661 640  73 624 683  40 681 613 724 557 329   8 133
  36 680 653  72 705 660 665 614  28 309 713  95 205 673   4 568 689 637 682 627 719  60 556  82 700 555 656 250 286 336
 184 575 641 631 647 675 648 593 634  18 285 124 629 726 595 606 582 655 541  67  46 659  11 298 544 459 418 300 495 229
 540 560 628 621 548 224 586 523 676 160 254 605 525 573 638 554 141 163 604 121 722 609 113  23 571 578 608 368 579 100
 215 550 584 559 515 464 295 704 566  45 569 580 466 499 583 591 587 457 570 577 475 516 157 175 454 590 434 369 304  65
 543 643 572 477 476 474   9 565 128 447 545 668 283   5 524 552 547 603 612 551 485 490 303  12 522 502 519 379 487 592
 601 531 414 527  21 517 514 479 509 561 207 384 564 581 596 343 491 484 482 558 471 508 426 202 321 370 460 367 500 526
 455 513 349 442 589 473 337 461 537 528 465 296 279 497 417 512 501 493 423 413 440 504 463 399 390 503 486 481 478 391
 538 520 397 472 480 451 467 518 415 438 489 357 387 534 437 421 549 416 342 450 469 448 381 453 445 422 411 542 410 456
 786 382 420 358 576 313 462 458 436 498 488 400  94 663 373 299 864 389 567 394 355 378 677 319 340 510 354 408 334 620
 406 346 395 443 439 398 341 483 727 433 315 684 412 305 404 429 351 761 328 539 352 401 356 781 377 430 301 427 353 798
 602 685 425 327 182 348 272 388 787 823 366 822 393 506 365 402 385 320 335 364 259 323 452 347 221 431 308 657 672 748
 284 435 359 861 396 277 252 428 900 860 894 274 383 217 432 362 255 599 174 888 374 148 764 468 263 238 292 553 275 610
 688 350 314 805 239 242 291 371 253 877 317 809 200 244 345 188 196 376 338 331 884 361 833 405 780 222 158 618 793 687
 735 264 258 696 288 265 230 189 736 734 617 847 271 375 267 268 262 289 201 231 266 891 533 821 153 310 441 563 772 742
 332 198 899 185 306 146 247 797 191 651 144 841 633 167 194 642 360 164 324 879 223 294 886 808 260 312 261 811 615 745
 177 228 813 830 236 209 600 344 840 654 644 699 204 857 237 859 233 142 178 316 106 199 535 831 225  69 127 708 698 717
 594 193 883 720  47 607  75 150 846 611  48 219 622 151 183 896 763 159 302 597 104 129 762 330 897 171 168 774 686 828
 616 212 662 251 890 278 203  85 750 701 107 257 227  22 839 754 834 816 190 669 206 623 670 887 132 211 111 880 156 276
 898 815 792 192 186  54 703 804 139 505  80 636 115  91 145 737 849 386 173 778 197 108 170 646 131 826  24 767 773 795
 784 739 424 152 866 851 126 885 529  90  66 649 155  88 801 862 692 882 130 814 114  93 165 521 166 136 110 280 838 507
 710 836 213 800  59  76  49 806  97 667  55 706 210  71 122 214 803 871 109 829 630  68 714 869 119  63 842 770 868 269
 195 870 855 562  92 102 243 574  99 658  56 693  51  53 532 783 832 769  41 172 101  98 511 530 716  78 844 817 695 893

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.98445e+06us (= 3984.45ms, 3.98445s)
Wall-clock time (full program): 4.04861e+06us (= 4048.61ms, 4.04861s)
Satisfaction error: 0
Number of search iterations: 1415
Number of local moves: 769 (including on plateau: 248)
Number of local minimum: 81 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10672
Total number of local moves: 5851 (including on plateau: 1826)
Total number of local minimum: 608 (including on plateau: 210)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 887  44 140 891 545 511 131 454 675 800 120 132 658  74 853 807 819 108 880 363 580  35  41  39 817 107  57 178 870 899
 640 874 889 295 534 127 143 780 118 765 827  83 111 185 659 768 588  58 837 617 162 175  77 883 773 148  96 854 336 113
  62  63 894 180 538 769 693 808 239 628 117 119  54 240 835 738 872 142 813 481 884  48  69 674 644  46  33 885 846 101
 672  32 173 161 895 396 882 687 112  97 225 174 700  91 699 814 591 810 743 123 821 751 126 156 779 232 582 152 562 277
 242  66 217 292 888 789 816 169 102 141 231 867 419 198 838 841 871 510 467 188 605 145 287 222 859 869 159 353 822  42
 781 124 302 249 868 666 865 160 166 209 138 158 881 243 612 848 710 711 241 274 214 803 134  93 794 255 712 205 777 322
 522 235 171 163 594  73 886 224 144 801  95 151 785  78 875 268 176 650 331 852 815 253 285 307 763 284 702 855 863 314
 850  49 282 221 329 825 305 857 271 349 147 638 746 246 862 294 203 293 782 272 820 364 378 137 720 135 251 858 878 153
 811 340 254 204 772 192 263 244 279 729 320 356 788 318 278 182 312 313 726 337 496 715 216 876 397 226 890 851 630 200
 812 186 334 418 831 452 207 257 248 206 276 344 758 321 600 326 227 847 866 830 897 646 167 190 451 784 303 165 280 286
 523 347 486 341 717 836 311 460 355 350 739 516 393 345 228 172 213 663 445 898 657 609 269 270 275 448 864 211 308 266
 372 406 544 362 236 439 446 438 395 480 261 839 515 324 892 218 342 401 633 456 793 541 459 367 662 358 258 310 354 414
 900 567 267 385 252 681 343 392 896 309 778 106 770 273 229 398 259 678 299 352 371 394 432 405 325 557 470 525 440 462
 536 389 407 453 475 443 304 281 468 436 387 449 528 426 338 346 564 499 283 519 487 555 893 490 425 417 504 323 429 461
 260 476 386 420 377 404 327 656 427 435 783 606 373 408 473 483 328 348 493 375 731 382 400 391 447 531 552 296 368 579
 332 422 621 333 421 471 441 416 512 424 411 437 262 684 463 549 548 458 527 495 533 100 444 498 428 403 509 503 376 494
 492 647 383  26 370  80 598 450 551 517 415 455 300 369 524 645 624 380 537 423 641 179 478 390 694 469 335 518 559 466
 146 597 529 497 698 388 457 474  29 442 521 465 149 508 472 489 626  82 625 639 434 484 402 477 479 485 384 615 563 359
  17 491 431 691 540 381 399 616 553 584 592  79 122 500 505 542 648 554 237 680 189 220 589 586  21 412 574 595 590 577
 181 642 651 599  72 622 618 506 695 629  89 464 196 535 543 546  18 155 502  53 187 317 550 703 256 526 669 631 607 753
  30 637 704 610  61   4 583 636 585 826 576 643  34 566 501 734  43 201 593  84  28 351 634 575 539 741 121 635 608 632
 410 660 568 730 571 596 697 619  70  37 722 799  38 560 115 752 547 604 208 104 130  11 653 530 573 705 125 756 212 413
 105 565 802 578 288  55  15 620 716 627 430 602 652 749 409 569 109 177 361 690 139 558 572 514 194 532 374 692  81 740
 238 755 686 727  98 688  10  92 707 718 714 670 230 723 129 507  56 168 556  75 683 379 764   9 164 767 664 513 234 791
 587 721 623 732 360  31 570 733 668  36 482 561 757 614  14  99 735 210 193 488 219 696 667 747   1 679 245 154  65 828
 365  71 745 786  52 844  27  88 611 795 682 297 601 834  68 265 744 289 136 724 298 689 843  51 649 581 708 223 247 202
 750 797 833   3 301 290 676 613 357 824 655 150 116 713  24  94 215 856  47 685  59 771 796 706   5 291 737 339  25 787
 330 701  23 775 316  60 823  13 873  90 809 661 199 842 110  87 728 736  50 766 133 798 250 748  64 665 792  22 233 818
 654 805 103 790 319 677 673  12 861 191 709 845 520 671 183 114  45 774  85 306  76 742 761 719   2 776  16 170 157 759
   8 806  67 603 197 725   6 760 832  40 264 849 860 877 184  20 754 840  19 366 433 804 879 762 315  86 829 128 195   7

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.7621e+06us (= 3762.1ms, 3.7621s)
Wall-clock time (full program): 3.82789e+06us (= 3827.89ms, 3.82789s)
Satisfaction error: 0
Number of search iterations: 1271
Number of local moves: 818 (including on plateau: 355)
Number of local minimum: 66 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9539
Total number of local moves: 5866 (including on plateau: 1820)
Total number of local minimum: 484 (including on plateau: 221)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 784 520 114 767 189 691 723 264 865 873 874 182  85  73 221 143  58 436  72 188 897 745 496 145 790 721 814 151 103 531
 617 896  94 107 271 200 219 687 828 734 878 468 303  75 267 877 788 148 463  97  61 773 484 677 119 490 853  96 886  59
 864 702 786 172 703 863 883 305 888 857 616 732  93  68  84  69  51 126 156  99 575 339 524 570 125 230 190 882  87 876
 551 262 195 861 598 168 881 131 101 775 824 154 792  90 679 417 153 112  55 860 590 132 338 735 247 768 825 307  52 862
 682 871  48 137  63 893 111 233 867 747 869 715 139 340 133 248 191  46  37 850 818 169 604 890 526 892 813 142 294 147
 827 488 728 134 185 671 400 513 846 796 661 646 352  74  67  57 150 210 193 899 292 214 844 557 900 334 875 201 184 217
 777 841 198 270 194 273 314 596  80 847 852 830 328 116 157 344 870 282 225 315 258 801 836 872 202 766 313 296 162 300
 539 742 390 284 544 120 614 887 268 321 231 771 656 140 261 165 218 160 380 701 880 252 895 245 782 793 453 318 332 173
 781 785 227 180 634 898 433 404 798 845 286 246 563 324 240 208 317 249 255 708 306 868 574 174 597 399 207 278 456 275
 638 215 110 398 774 171 565 686 336 834 731 320 533 355 213 316 203 118 810 253 591 373 804 884 885 431 155 337 117 359
 758 822 222 358 859  88 216 508 362 494 678 229 631 293 276 272 319 281 269 699 724 485 752 283 811 486 322 393 167 458
 370 396 454 428 848 470 413 674 534 420 211 354 516 403 260 464 304 866 891 251 263 528 842 346 308 259 477 369 309 287
 327 855 242 266 438 232 446 601 312 738 395 507 440 635 384 475 894 371 372 461 257 492 450 434 473 386 448 449 405 330
 408 341 426 379 487 452 348 523 206 495 374 250 329 419 414 489 889 331 443 807 649 471 366 457 474 499 442 381 439 527
 502 410 285 364 799 375 333 343 602 424 540 555 228 407 351 277 478 310 467 357 564 535 418 481 472 376 427 423 851 561
 335 397 274 164 483 466 480 537 455 576 409 416 809 377 391 582 288 462 770 429 347 353 444 594 529 342 360 479 546 421
 581 356 501 615 505 517 451  76 363 241 560 432 235 493 425 554 422 435 639 613 511 378  81 412 460 640 430 619 569 401
 589 506 704 437 367 411 536 104 301 205 585 603 204 503 465 368 683  77 163 660 519 566 629 280 498 518 642 447 562 383
 509 385 514 102 394 121 573 389 558 325 548 123 592 497 469 689 545 695  54 482 515 654 224 791 504 500 611 552 583  17
 302 158 543 684 115 644 580  15 541 350   1 532 553 645 588 627 612 559 713 196 549 510  95 476 108 361 571 595 651 641
  47 159 538 512 186 608  34 365 550  16 199  62 556 709 665 522 542 643 714 521  31 567 666 568 650 530 459 579 739 578
  86 657 584 749 623 685 648 106   2 298 605  64  26 587 675 593 621 655 762 387 406  91  40  32 681 445 630 628 525 624
  53  78 673 668 698 637  60  83 751  89 176 761  10 625 746 736 680 688 667 586  92 756 265  29 741 223   5 547 730 662
  82 138 609 748  56 647 239 402   3 161 183  42 722 606 737 805  44 607 633 694 632 170 197 705  79 719 622 821 835 577
 234 179 815 787 289  24 652 720 636  39 676 181 716 725 626 808 326 778 323  25 149 740 105  23 392 109 178 817 726 717
 299 618 823 659  18 833 707 712 236 192 254  21 124 794 744 826 757 743 690 209 600  27 212 129  41 128 122 692 572 733
  98 220 760 599 243  50   7 812 297  70  45 802 780 779 700 658 776 856 769 610 718  13 141 729 256 696 311 670  36  14
 136 388  11 843 291 806 753 795 238 127  28 839 620 706 711   6 226 693 764 279  20 755 663  38 415 146 664 175 710 669
 727  30 789 800 829 349  65 290 672 135 177 840 797 837 803  66 345 819 653 244 697   8 144 772   9 295 166 849  71 237
  12 100 858  43 832 152 831 754  19 491  49 838 783 820 763 854 765 759 113  35   4 750 382 187 441  33 130  22 816 879

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.34226e+06us (= 4342.26ms, 4.34226s)
Wall-clock time (full program): 4.40645e+06us (= 4406.45ms, 4.40645s)
Satisfaction error: 0
Number of search iterations: 1667
Number of local moves: 872 (including on plateau: 283)
Number of local minimum: 89 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12517
Total number of local moves: 6022 (including on plateau: 1985)
Total number of local minimum: 837 (including on plateau: 253)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 802  58 585 578  53  57 679 834 589 541 381 157 878 872 873 397  46 180 113 420  55 256  49  23 795  47 854 884 681 778
 890  32 638 833  29 144 103 817 119 227 122 476 648 847 828  36  97 127 845 716 591 759  35 855  34 887 694  85 153 848
 680 239 885 869 161  99 104 137  48  89 141 603 244 858 846 164 877 194 722 738 117 550 751  33  79  43 868 899 686 791
 900  92 867 445 193 125 162  28  39 565  73 850 732 134 608 569 898 700 777 621 142  91 240 891 176 187 745  83 811 771
 234 424 844 807 894 233 259  40  62 587 205 812 831 889 782 303 883 133 341 827  82 181 232 201  75 897  95  78 824 460
  98 613 705 625 267 876  66 291 285 634 170 636 173 895 852 642 758 574 879 772 124 138 132 106 743 159 768  42 182 310
 282 652 784 755 880 189 837 116 196 577 258 175 761 211 830 600 115 166 490 605 306 146 121 750 662 243 714 130 836 128
 264 579 290 598 123 314 464 892 208 369 265 357 839 305 215 794 301 701 359 863 169 188 865 214 866 297 693 168 149 806
 270 861 185 860 401 313 286 199 893 269 482 826 375 136 308 356 274 785 737 728 325 881 236 184 402 248 340 320 832 203
 250 631 280 536 100 220 289 361 406 896  86 251 210 452 351 870 354 724 736 798 859 311 254 816 172 109 765 281 430 717
 242 718 171 626 363 362 294 322 192 309 886 819 287 299 179 670 271 769 599 511 409 226 263 221 842 327 786 374 783 395
 332 534 321 849 749 268 396 386 339 477 470 543 323 349 437 821 304 528 272 669 537 410 288 249 775 380 539 316 318 336
 328 747 493 584 276 378 366 353 466 509 355 494 545 458 319 295 481 293 666 711 531 391 504 796 329 292 368 399 403 385
 228 326 373 555 350 644 224 650 429 431 370 540 549 628 803 252 296 457 498 647 372 342 262 862 491 532 195 523 413 273
 530 459 432 556 387 324 411 492 333 525 463 358 510 416 551 348 383 415 450 612 405 653 388 434 645 453 423 433 389 337
 576 469 533 480 473 526 422 516 478 427 544 501  14 515 472 438 479 393 496 345 331 371 446 553 486 335 495 485 461 455
 633 618 623 302 521 465   9 499 506 684 559 419 527 404 439 560 514 593 421 398 436 384 108 441 522 408 688 279 107 448
 497 163 417 152 503 449 573 440 483 770 456 475 343 596 484 360 520  60 200 150 563 664 392 512 615 447 519 500 646 566
 607 167 507 315 689 583 687 347 580  21 529 418 467 414 468 147 407 561 110 140 517 488 557 489 602 474 344 564 619 697
  31 284 542 241 586 667 581 487 616  51  27  74 671 535 663  64 719 673 257 379 661 376 651 524 582 562 139 677 538 657
 567  90 592  88 614 741 752 617 609 246 502  50 245 660 435 204 558 148 283  41  45 594 733 712 610 683 624 763  87 622
 656 471 570  70 300 568 682 649  26  59 547 508 219 597 630 155 723 451 390 111  68  63 572 655 588 635 546 590 748 668
 444 260  65 365 709 518 571 442 788 213 620 632 154 659 212 255 627 338 699 330 800 640 298 692  15 703  56 702 696  12
 754 346 101 229 792 637  44 704 611 658 793 129 674  69  80 706 575 253 641 190 856  17 261   5 654 548 554 639 394 601
 710 604 675 198 145 382 757 731 735 767 799 143  11  81 197 713 112 766 158  30 400 760 843 428  25 690   7 818 165 665
 730 237 209 156 513 804 643 426 266 685 726 231 708 744  84 275 367 725 364 377 727 454 787 729 225  16 312 871  22 102
 629 678  93 207 183 840 505 174 829 797 875 317 595 114 178 734 552   4 756 217 720 789 825 206 118 606   1 864  13  96
  19 882  20 412 672 815 813 742 676 874 753 126  61 202 230 857 740 278  38  67 715 774 779 462 334 762  52   3 222 135
  94 443 707   6 780 814 695  18 888  72 235 822 698  71 151 191 247 835 216 425 851 810 853 352 307 781 277  24 776  76
 238 838   8 218 809 160 841 805 820 186 823 773 223 105  10 739  37 691   2  77 801 808 790 120 746 764  54 721 131 177

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.28156e+06us (= 3281.56ms, 3.28156s)
Wall-clock time (full program): 3.34763e+06us (= 3347.63ms, 3.34763s)
Satisfaction error: 0
Number of search iterations: 938
Number of local moves: 748 (including on plateau: 205)
Number of local minimum: 25 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7072
Total number of local moves: 5032 (including on plateau: 1351)
Total number of local minimum: 285 (including on plateau: 168)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 888  88 887 650 139 774 577 875 680 499 815 102 202  97   8 125 689  91 108 695 213 151 705 647 884  62 210 720 741 193
 117  18 679 655  48 855 726  13 539 166 865 703 478 674 107 885 616 723  63 850   2 120  90 819 882 170 847 111 132 562
  96 122 802 843  61 407 700 167 835 153 816 142 556 820 150 240 630 660  54 141 208  34 861 852 883  43 174 474 764 827
 173  30 599 900 230 214 601 198 573  92 738 189 576 828 178 877 282 307 187 664 106  27 848 587 782 115 211 864 641 898
 182 175 604 295 281 874 755 181 731  86 540 378 807 112 221 823 201 859 712 725 194 158 613 844 838 109 100 306 290 521
 219 259 717 241 305 652 327 653 688 628 797 460 250 876  77 868 104 203 191 860  95 143 128 849 863 118  36 398 808 702
 504 186 780 200 318 348 899 177 822 362 722 130 862 238 190 268 777  52 179 895 260 291 137 872 744 435 113 440 681 633
 265 164 739 155 197 730 375 304 686  72 825 420 563 821 156 284 607 857 239 756 204  85 793 425 234  58 526 292 873 810
 185 216 897 514 392 253 871 269 405 667 434 147 760 199 220 231 809 342 124 889 325 366 336 353 317 264 276 789 878 787
 552 346 683 144 750 414 840 188 757 183 572 129 786 222 149 280 424 277 534 762 788 232 403 381 340 399 349 470 380 781
 805 245 233 215 255 274 826 360 605 287 629 163 779 217 263 267 678 338 334 509 328 294 770 637 891 271 359 707 279 697
 811 298 496 394 418 329 379 384 443 796 354 404 343 468 371 323 288 283 892 737 310 476 285 254 365 448 351 368 804 643
 409 442 311 299 747 324 249 332 289 794 363 301 256 319 391 426 531 866 314 441 451 472 345 537 341 569 337 635 538 886
 694 228 401 520 691 446 335 481 462 508 386 237 432 541 270 532 836 322 347 326 412 522 511 333 501 408 309 484 417 623
 550 469 387 339 376 393 395 612 416 437 300 527 459 492 839 444 242 445 377 477 419 453 431 621 485 312 350 500 571 397
 528 374 361 512 524 488 389 595 308 506 385 463 246 669 357 594 383 390 273 560 148 606 622 561 491 430 428 344 461 519
 579 402 358 582 372 545  31 523 516 497 574  40 423 487 436 396 513 364 510 352 482 473 645 456 449 465 590 410 547 498
 593 710 494 564 146 458 651 597 466 490 530 415 517 529 489 589 592  14 634 382 464 421  21 567   4 486 330 675 480 207
 518 455  69 575 411 495 555 676 671 257 467  73 591 570 554 454 525 551   7 457 734 662 639 505 553 507  28 123 536 297
 110 854  17 711 585  71 121 433  78 244 261 515 192 611 503 670 608 640 672 596 583 690 439 636 502 331 565 648 624   5
  37 684 168 450 578 483 429 131 668  22 543 632 176 765 610 580  49 603 618 471 658 479 706 355 127 696 677 558 367 195
 406 740 321 600 771 581  74 803  46 759 196 609  38 657 893 598 642  55 649 134 754 716 559 247  39 718 493 313   1 103
 767 693 251 733 475 614  67  19  59 776 370 729 296 533 772 682  57 566 619  84 588 773 568   3 172 841 557 369  35 447
 638 620  75 631 356 617 212 548 656 162  56 701  12 586 626  42 659 704 584  44 749 799 665 303 602 663 769 226  51 159
   6 748 157 715 452 171 625 766 236 728 154 721 758  68 673 813 542 831 753  83 644 724  11 209  94 812 615 160 145 101
 806 661 119 126 814 742 743 698  66 699 235 879 184 165 858 105 388 791 438 258 727 666  25 252  10 544 719 223 272 302
 798 763 286  89 752 685  87 829 224 373 136 736 745 817 881  80  23 708 845  60 654 851  33  41 227 713 732 114  98 135
 320 837 735  50 535 138 400  82 243 768 248 890 422  20 894 709  53 315 834  70 832 896 116  65 746 795 801 133 275 293
 413 818 262 784 751  64  47 846  81 790  24 824 761  15 692 169 549 152 778  32 316 842 427  79 140 853 833 869  26 278
 546 870 627  29 785  76 229 775 266 714 180 856  45  99 687 161 218 206 646 205 867  93 783 225   9 880 830 792 800  16

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.50557e+06us (= 3505.57ms, 3.50557s)
Wall-clock time (full program): 3.5709e+06us (= 3570.9ms, 3.5709s)
Satisfaction error: 0
Number of search iterations: 1129
Number of local moves: 665 (including on plateau: 278)
Number of local minimum: 44 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8339
Total number of local moves: 5356 (including on plateau: 1671)
Total number of local minimum: 412 (including on plateau: 194)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 565  23  22 870 650  30 773  21 106 584 606  16 639 854 708  82  68 867   2 724 792 711  43 884 116 670  93 783 777 436
 712 887  55 701  84 114 766  80 714 617 188  24 608 491 210  89  61 139 264 749 173 896  73 886 772 894 163 808 445 852
 657  63 514 688 100  54 659 208 196  87  26 127 763 760 836 218  69 877 130 153 124 129 178 878 697 895 851 900 843 835
 891  52 176 452 669 102 844 160 647 141 869 179 646 759 730 183  79 270  66 515 518 897 189 885  72 519 119 162 892 832
 736 201  97 798 889  58 645 107 872 720 198 128 718 806 333 140 164 827 679 737 822 214 109 195  77 224 200 156 864 801
 610  99 879 860 203 883 699  27 298 552 180  56 853 322 689  95  46 159 868 667 125 227 880 206 117 898 212 190 893 722
 622  41 171 825  74 281 890 235 165 375 309  88 750 532 799 335 207 863 818 791 234 287 738 148 113 182 691 492 782 677
 432 351 120 226 767 758 788 350 391 790 364 221 756 393 741 229  83 217 625 846 329 209 643 166 318 253 181 493 733 742
 591 283 111 237 839 343 888 292 215 427 865 325 855 435 811 347 245 268 809 263 228 588 232 342 266 334 280 419 807 570
 793 246 222 225 108 262 282 251 331 754 600 231 356 248 755 437 409 286 828 797 820 260 746 332 271 294 636 395 609 731
 702 320 359 360 346 289 236 344 275 676 881 410 372 354 729 279 462 508 284 899 291 254 317 269 418 170 686 704 656 665
 856 172 306 304 357 223 174 293 383 698 257 873 328 258 831 259 243 197 719 789 311 370 373 345 441 386 823 840 611 495
 411 340 400 461 423 336 425 297 299 838 447 416 486 369 644 475 388 796 256 389 379 341 367 303 466 417 876 459 478 533
 859 426 313 480 448 319 323 420 434 473 521 349 424 494 527 352 453 278 366 390 310 569 487 428 464 440 721 314 637 496
 472 397 380 511 442 481 469 482 371 362 561 376 499 405 449 451 463 547 474 524 465 365 394 399 384 516 523 272 576 505
 477 503 489 468 501 305 392 415 471 378 548 368 502 497 520 401 443 483 558 403 567 337 556 433 407 498 414 488 338 355
 421  53 602 429 500 377 404 583 439 456 525 506 582 578 103 551 623   7 457 550 573 398 455 444 458 549 543 446 339 564
 358 562 596  44 575 460 484 581 545 615 535 586 619 144 540 470 387 302 450 566 438 620 613 529 454  45 431 614 230 122
 158 682 528 593 642 652 517 507 654 396 572 544 408   6 402 150 664 624 538 612 512 607 531 560 534  85 138 143 240 316
 239 680 522 653 363 589 546 618 479 185  10 526 557 554 348 574 648 649 598  31 599 541 118 509 638 542 277 381 276 265
  76 713 585 603 513 467 626 641 690  60 674 684 220 152   4 785 666 568 238 308  64  48 640 661 555 706 539 580 250 199
  25 685 632 744 563 710 191 616 577  28 115 628 590 587  36 726 627 723 633  42 536 510 177 476 592 537 301 660 101 147
 273 774 663  71  62 579 161 504 630 242 671 748  37 824 137 594 635 662 219  49 655 597 605 668 693 678 112 683 184 105
 142 715 727   8 675 768  35 751   1 672 819 705  18 764 104 658 559 703 241  29 778 601 233 126 812 761 374 326 216 194
 307 651 829 267 753 202  11 717   5  86 530 629  81 734 249 604 845 204 595 694  20 762 327 634  47 728 735 770 247 252
 121 681 804 621  65 786  78 743 816 205  14 779 312 805 187 780 692 382  94 155 757 747 290 631  38 135 673 871  40 213
 296 769  90 695 315 716 167 874 781 330 285 490 261 134 288 732 857 776 353 295 740  51 709 175 830 810  70  91 211 324
 321 834 826 110 696 707 186 802  75 700 787 862 149  96 412 833 784 193 687 136 571  98 861 133 803 146 485  57  33 132
 300 430 745 192 154 847 725 775 813 274 413 841  67 151 361 849 850 123 422 255 771 875 765  12 814  34 553  15  39  50
  92 882 752  19 739 817 131 821 842 794 145 800  59   9  32 837 795  17 244 157  13 406 866 858 848 169 815   3 168 385

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.20843e+06us (= 3208.43ms, 3.20843s)
Wall-clock time (full program): 3.27432e+06us (= 3274.32ms, 3.27432s)
Satisfaction error: 0
Number of search iterations: 893
Number of local moves: 598 (including on plateau: 121)
Number of local minimum: 29 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6710
Total number of local moves: 5032 (including on plateau: 1229)
Total number of local minimum: 241 (including on plateau: 159)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  11 822 168 829 747 728   9 181 552 258 841  60 304  36  41  10  33 834 859 351 731 808 229 833 109 733 798 830 723  47
 813   1 128   8 824 669  37 832 332 799 326 146 193 267  30 416  45   7 835 276 771 792 816 727 218  48 836 755 777 791
 758 810 230 843 800  65  89 770 490 793 243 174 133 183  38  44  43 292 774 814 664   4 648 169 285 153 805 809 730 862
 157 581 124   6 756 111  24 677 786 753 244 255 328 206 264 122 136  18 784 739 802 678 775 706 374 252 782 750 628 697
  95 711  19 825  15 765 156 703 722 378 672 754 232  58 127 139 718  32 721 338 736 700 636 743 151  77 653  67 744 828
  62 564 189 717 719  17 207 440 707  69 682 725 144  21 846 352 203  27 704 179 749 735  76 705 262 671 713 602 761 667
 142 795 633 811 797  99 538 689 586 702 663  31   3 574 684 204 184 681 807 307 315  92 644  14 256 790  12 620 748  94
 166 126 141 738 543 592 411 647   2  93 542 732  34 659 821  88 776 674 643 268 585 569  59 662 182  46 650 716 630 720
 213 695 726 694 528 554 235 708  16 614 145 104  87 513 480 171 656 613 657 627 699  26 237 683  20 740 685 194 595 600
 670 544 553 691 710 635 355 270 539 116 746  81 555 701 714  98 358 666 522 154  71 563  40 462 503 178 618 597  54 751
 464 403 688 562 467 560 498 427  72  53 483  13 327 611 556 349 361 516 517  25 559 624 525 603 158 680 515 652 616 631
 598 212 424 584 532 579 134 452 617 106 629 622 575 509 420 281 474 394 514 114 570  52 196 634 518 492 583 606 668 426
 447 465 536 615 439 497 192  22 485 445 481 373 475 549 577 494 649 219  39  29 531 621 712 387 587 642 380 693 511 423
 477 112 482 412 456 491 476 242 573 487 434 533 505 417 443 484 523 507 486 406 572 454 341 535 311 589 402 294 534 537
 639  79 337   5 604 295 453 302 675 506 601 488 461 660 607 418 433 519 370 446 529 457 496 316 567 404 590 444 504 310
 407 557 395 364 425 463 493 442 432 408 568 419 317 345 540 499 398 366 448 641 399 550 455 508 594 459 441 290 414 478
 274 277 530 489 541 312 608 612 313 293 479 470 521 314 393 471 645 257 334 646 388 347 357 850 661 450 500 400 362 421
 371 319 435 324 344 449 626 591 867 495 391 353 869 385 187 898 375 548 289 325 335 287 605 215 823 246 438 298 422 405
 745 279 413 342 524 247 625 772 848 365 236 501 409 458 367 321 430 369 320 900 336 897 248 384 376 372 415 318 261 437
 322 812 275 159 472 331 565 599 226 815 852 383 468 502 469 773 225 303 211 363 381 273 436 888 863 356 283 428 251 231
 263 637 392 348 340 282 729 512 259 875 308 779 429 199 339 851 266 368 410 820 840 431 692 234 864 186 198 329 172 163
 254 588 284 117  35 783 651 460 882 241 883 155 737 300 260 769 297 377 222 853 191 866 265 305 301 878 333 780 343 105
 806 309 855 221 397 360 638 881 280 655 382 789 860 115 306 205 245 558 165 759 278 202 845 223 299 827 323 224 217 291
 271 451 286 296 148 874 896 386 135 176 877 854 510 842 130 551 188 253 208 801 170 831 679 359 696 818 150  50 396 233
 899 216 870 379 162 868 890 401 698 527 173 873 817 228 167 767 861 858 214 288 108  84 152 121 781 103  64 330 227 389
 566 220 804 269 102 107 884 238 113 239 137 147 580 778 871 766 752 837 119 520 709 161 658 665 593 582  63  23 132 880
 619 547 826  83  75 724 561  70 201 578 131 856 734 788 886 576 785 240 138 466 100 200 690 125 673 632 857  68  96 190
 885 350 762 768 143 118 571  56  82 847  66 640 676 715 185 764 879 473 390 526 209 546  80 210 610  57 197 892  61 757
 849 195 250 129  74 101 787  55 876 175 249 609 545 819 872 893 891 844  73 354  97 623 120  85 794 894 140 110 889 123
 272 838 760 887 796 839 177  78 149 654  51 596 687 763 895 741 686 865 742 180  90  42 803 164  86 160  91 346  49  28

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.53291e+06us (= 3532.91ms, 3.53291s)
Wall-clock time (full program): 3.59686e+06us (= 3596.86ms, 3.59686s)
Satisfaction error: 0
Number of search iterations: 1124
Number of local moves: 709 (including on plateau: 230)
Number of local minimum: 58 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8283
Total number of local moves: 5641 (including on plateau: 1678)
Total number of local minimum: 359 (including on plateau: 188)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 213  60  73 570  98 836 387 125 870 588 575 812 732  19 823  76 629 886 763 100  67 805  33  34 890 709 807  27  51 857
 745 442 888 796 157 869  89 111 299 776  70  55 889 127 735 197 895 864 130 158 175 149 117 106 720 900 768  44 568 676
 728 161 837 893  88 234 755  58 775 139  45 124 762 104 772 204 174 844 145 223 120 891 168 615 778 774 687 892  80 445
 109  68  71 801 821 264 693 651 616 884 110 229 636  92 548 190 783 822 182 845  38 756 878 251 611 284 883  42 140 217
 186 828  77 793 317 330 841 181 318 861  52 105 791 187 797  81 777 108 279 155 162 751 225 258 899 782 852 742 180 600
 115 698 222 749 133 897 867 176 344 297 356 233 866  65 550 286 748 851 247 800 252 736 141  87 833 874 287 292 239 274
 319 724 280 670 230 761 627 171 311 604 146  57 830 151 753  46 847 253 193 173 200 661 353 862 842 896 184 296 304 771
 172 242 191 694 221 256 814 562 250 669 194 271 809 112 799 381 820 876 164 129 198 881 848 295 664 291 273 343 228 868
 345 347 177 690 214 269 711 189 818 406 342  79 525 277 885 165 512 235 804 290 305 859 336 785 605 547 856 138 421 383
 650 843 401 659 263 285 713 457 376 521 278 219 237 216 354 312 379 201 294 792 865 527 310 704 520 402 196 392 255 894
 270 365 324 481 249 315 838 371 368 416 877 309 254 397 584 334 438 346 879 553 163 645 414 601 556 816 293 118 224 717
 358 232 389 432 557 339 765 326 314 275 240 545 265 411 555 260 399 377 831 420 465 591 754 819 672 497 267 493 335 332
 231 482 349 643 507 283 685 396 516 571 147 417 582 207 403 468 341 367 386 455 313 577 563 681 619 898 325 248 407 448
 502 404 366 490 340 549 378 373 528 348 459 337 443 429 458 419 266 431 695 426 394 513 370 362 767 483 447 276 887 375
 532 302 428 451 535 268 574 369 409 425 607 534 478 412 400 328 503 524 405 433 350 741 440 393 621 446 363 498 331 415
 307 486 316 489 552 477 536 469 487 492 682 424 641 479 289 511 495 595 496 472 635 510 413 434 167 485  63 303 522 288
 476 480 501 540 467 514  50 374 581 508 372 439 470 599 422 357 435 506 430 450 321 359 427 364 546 533 454 624 463 453
 614 281 569 529 449 122 391 494 390 444 466 626 437 634 594 388 361 576  21 464 566 384 596 227 156 475 653 539 460 609
 630 559 491 209 558 585 159 573 554 169 504 603 203 684 586 617 638 462 642 282 329 246 456 114 236 327 488 530 640 441
 385 608 579 298 631  23 102 395 700 452  40 509 646 740 262 567 518 706 423  62 590 322 537 583 178 398 461 517 660 623
 606 500 811 170 572 671 220 212 692  83 515 589 484 560 526 657 542  99 543 474 564 226 531 418 301 351 107 644 662 185
 620 123 654 244 628 625 565 759  59 137 647 436  26 739 306 610 618 597 152  56 551 519 544 725 188  74 598 794 738 183
 744 578 689 150 719 683 238  17 663 410 505 875   7 780 360 561  22 538 688 699 787 272  95 333 218 132 113 846 708  85
 677 722 622 179  25 746 103 766 658 592 637 580 202 718  96 593  66 703  37 665 210 257 655  14 131 142 752 587 668 712
 128 649 779 205 832   9  31 758  29 701 648 734  94 714   4 798 136 499 632 613 770 134 241 675 382  43 730 871 674   2
 612  61 691  90  20 715 338 810 723 206 817 471 673 686  48 860  78 119 656  35 825 153 726 729  93 215  10 679 666 710
 678 308 784  28 882 721 259 829 143  64 747 702 300 707 211 727 737   3 781 773 802  16 261 320  97 473   1  49 757 355
 716 769  54 352 835 696 243 827 705  69 854 803  53 697 166 858  84  47 789 855 840  13 680 323  18  32 760  91  41 245
 808 541 116 208 743 101 408 863   8 602 788 667 144 839 199 815 148   5 633 790 834  15 880 639 121 154  24 850 380 192
  39 652 786  12 872  72 135 853  11 806 795 731  36 733  30 849 126  75 195 873 824   6 523 764  86  82 813 750 826 160

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.27119e+06us (= 4271.19ms, 4.27119s)
Wall-clock time (full program): 4.33541e+06us (= 4335.41ms, 4.33541s)
Satisfaction error: 0
Number of search iterations: 1543
Number of local moves: 638 (including on plateau: 176)
Number of local minimum: 113 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12316
Total number of local moves: 6226 (including on plateau: 1878)
Total number of local minimum: 767 (including on plateau: 238)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 884  77 135 753  50 877  55 688 771 818 386 855 544 852  60  57 142 875  45 843  95 879  89 105 111  83 478 882 139 887
 774 895  29 725 100 743  78 871 499  80  52 150 718 578 829 120 840  41 473  69 896 770 484 165 124 115 677 183 869 568
  43 888  68 716 817 811 101 894 613  13 269 873 830 893 125  99 878 143 345 128 126 868  58 138  54 184 801 193 705 841
 805  51  79 885  65 891  37 799 564 230  12 897 630 331 881  73 552  70 178 847 195 673 110 175 136  40 880 762 823 844
 764 898 182 864 866 637 203 672 748 172 207  67 518 678 272 140 626 158 694 148 310 758 162 133 176 118 662 186 850 646
 872  84 892 802 789 500 211 432 668  38 556 103 806 682 129 119 228 155 530 109 824 863 353 117 876  42 216 226 719 574
 239 286 263 595 261 615 874 243 212 258 312 619  81 819  82 102 809 208 169  30 900 883 242 870 816 833 306 576 427 585
 303 106 268 649 217 687 198 845 795 238 735 250 785 766 270 284 814  16 704 259 297 699 395 455 152 114 859 249 257 849
 233 400 144 709 201 765 265 848 842 221 476 209 808 798 194 853 241 166 586 287 363 695 423 200 271 202 755 369 164 827
 658 264 180 622 291 597 341 701 760 707 797 316 652 610 314 154 231 381 347 218 890 757 185 354 305 589 431 348 300 215
 889 311 457 689 295 729 227 248 746 371 379 244 549 454 433 298 343 283 690 213 435 614 452 717 420 693 326 247 462 301
 624 412 382 710 254 684 375 282 599 365 666 372 385 260 290 352 445  26 815 488 384 616 447 349 324 418 404 521 380 886
 246 359 428 360 252 698 346 266 480 256 786 529 322 520 449 267 421 540 334 422 899 654 559 319 361 736 313 612 444 337
 366 392 393 618 430 702 511 703 320 189 538 536 468 495 321 374 296 405 685 479 424 466 332 236 647 494 543 477 285 390
 493 355 523 325 503 318 542 281 794 592 550 437 378 441 497 715 525 253 438 469 339 451 367 251 504 513 548 411 409 293
 356 465 434 377 368 464 492 621 419 436 439 506 524 474 373 569 470 329 245 487 510 408 391 528 562 579 429 394 370 496
 302 333 577 336 308 327 617 443 448 481 417 517 498  18 628 669 173 516 566 351 507 463 328 584 620 397 460 458 634 539
 558 502 512 594 567 275 526 489 482 399  96 661 376 515 483 527 357 638   8 440 485 459 501 406 575 446 601 307 453 277
 596 657 571 262 442 294 603 670  31 683  76 222  33 450 631 471 633 491  46 663 535 174 425 713 573 475 561 708 340 486
 557 642 398 456 407 278 509 113  63 605 387 779 338  91 235 780 835 600  98 588 636 413 546 606 679 565 403 153 625 130
 563 641 467 279 581 273 551 508 170 330 714 653  23 255 740 541 505 533 181 734 645  90 656 607 383 461  19 590 681 141
 583 514 737 220 727 167 519 655  17 587  88  44 157 131 846 696 741 691  74  56 643   6 545 640 724 623 644 697 580 163
 123 803 570 156 680 161 664 350  87 560 335 632 134 490 700 553 751 532 602 754 796  14  10 609 591 415  75 674 582 112
  85 547 791 149 790 192 650 280 288 401 733 686 292 205 761 726  36 767 629 555 199 179 825 171 813 472 188 784  22 299
 598 772 728  49 792   1 531  20 147 635 237 720  27  62 608 651 593 858 627 730  15  28 822 667  59 732 534 665 554  53
 426 692 756 177   5 389 831 127 151 639 537  24 315 414 659 648 787 867 358 522 752 160 821 834 769  25 276   4 206 344
  35 388 854  93 768  94 826  97 304 783 604 675 289  71 750 225  39 804 711 777 219  21 763 828 865 793 132 168 137 402
  32 232 839 145 104  72 776 274 745 712 747 187 396 323 837 807 107 676 775 773  66 234 781 706  34 782 416 122 204 611
 146 240 851   3 723 210 832  48 410 856 572  92 861 108   2 788  86 744 742 759   9  61 722 836 191 738 214 810 671 190
 362 309   7 197 862  64 224  47 342 860 812 660 778 731 116 857  11 749 820 317 121 159 721 196 800 838 364 739 223 229

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.46064e+06us (= 3460.64ms, 3.46064s)
Wall-clock time (full program): 3.52493e+06us (= 3524.93ms, 3.52493s)
Satisfaction error: 0
Number of search iterations: 1078
Number of local moves: 643 (including on plateau: 159)
Number of local minimum: 47 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7242
Total number of local moves: 4630 (including on plateau: 1162)
Total number of local minimum: 347 (including on plateau: 155)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 253  37 652  40 896 869 785 829 888 692  71 779 366 756  84  49  73 160  67 866  93 727 850 159 187  99 734 836  43 575
 628 887 843 113 776 865 411 537 841 772 125 711 544 775 436  39  59  18 179 703 149 372 761 147  28  42 712 114 877  51
 735 241 180 790 635 707 247 900 849 407 101 638 262 185  74 806 110  77 192 842  83 832 803  97  66 696 828 860 109 163
 341  35 668 890 884 870 658 607 897  98 439 838  57 854 130 637 107 663 162 466 158 872 795 115 152 122 435 198 240 127
 710  91 844 132 852 773 231 524 452 219 148 244 550  79 140 741 105 338 229 621 201 847 871 816 754 867 601  92 255 188
 725 139 700  78 851 812 770 558 781 443 329 822  96 800 165 583 217 183 237 523 248 257 848 408 448 348 660 270  70 146
 653 242 235 318 646 673 559 898 648 120 271 349 751 467 303 157 263 194 119 821 437 719 447 830  29 296 833 444 626 167
 782 258 417 100 604 172 891 892 171 250 228 878 717 861 208 787 199 353 279 789 215 280 502 464  64 371 768 239 133 643
 695 310 330 212 632 259 245 659 709 831 354 682 680 323 106 811 291 273 221 738 151 882 421 236 204 405 895 412 264 284
 875 268 874 302 894 164 344 657 644 885 168 206 664 218 121 814 474 535 325 360 859 326 232 161 378 403 265 283 483 333
 793 373 428 295 541 451 516 462 390 375 391 314 862 216 321 889 272 309 817 347 376 669 266 424 500 252 625 431 227 383
 827 386 261 328 591 381 345 509 505 744 398 384 845 276 491 742 361 297 470 478 301 489 392 189 174 455 370 429 298 799
 450 356 868 394 460 569 449 706 385 557 442 899 528 254 380 521 578 427 430 249 324 256 445 419 511 300 350 277 374 357
 315 377 402 367 459 332 501 477 616 755 418 438 893 337 454 485 307 251 362 282 352 587 355 446 175 481 629 358 556 748
 588 518 312 415 461 507 463 492 401 288 243 387 476 469 416 409 432 334 542 440 576 517 453 363 526 410 739 305 720 313
 311 379 565 495 327 506 571 422 564 294 520 456 586 320 577 547 222 285 612 364 399 351 482 465 508 388 494 574 441 490
 389 316 496 609 368 420 504 395 306 155 697 527 580 246 552  76 425 532 154 582 540 551 546 475 397 522 617 396 649 493
 599 473 670 562 286 570 536 267 213 202 290 331 434 487 141 369 498 365 633 596 426 579 573 406 667 510 104 602 486 640
 593 534 594 471 207 480 499 144 322 287 563  65 721 423 519 677 590 606 561 610 123 538 404 193 624 619 566 514 413  55
 124 656 581 634 200 533 713 128 512 608  13 472  41 539 723 238 722 639 650 260 584 702 335 724 529 661 137 690  24 143
  30 543  86 753 336 615 567 319 525  27 600  63 278 530 731  60 618 636 645 103 597 275 681 589 484 630 224 642 715 613
  11 595 531 515 293 545 118 169  53 196 611 675 111 548 757  46 665 549 592 497 716 134 614 503 808 701   8 777 572 605
 292 698  85 684 230 687   2 317 458 457 704  32 209 771 676  52 746  22 705  81 641 553   9 798 674 488 400 837 694 513
 233 603  72 699 177 568 730 281 623 672 732 117 468  44 627 433 780 714 691 299 214  25  14   4 620 718 145 554 805 853
  45 769 693 671 289  87 205 181 269 688 666 758  47  10 651  50 839 726 802 210 823 678 226 801  21 864  33 728  23 662
 136 150   5 818 166   7 598 346 234 304 622 747 190 797 740 342 733 764 736 220 886 108  80 729 765  19 737 156 820 560
 186 876 116  88 142  36   1 126  61 655 824  82 308 647 685 197 585 856 339 359 815  90 786 762 834 846  16 686 745 766
 170 804 191 881 138   6  89 102  75 873 880 223 225 767 708 414 631 863 791  12 749 173 131 826 840 809 129  20 211 784
 343 743  38 835 112  48 783 555  69 479 810 195 274 176 792 689 819 750  94  34 825  31 135 813 788 178  68 774 883 382
 683 858 778  26  62   3 184  56  54 182 857 203 752 340 807 855 794 796 879 763 654  95  58 153 760  15 393  17 759 679

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.21558e+06us (= 3215.58ms, 3.21558s)
Wall-clock time (full program): 3.27978e+06us (= 3279.78ms, 3.27978s)
Satisfaction error: 0
Number of search iterations: 911
Number of local moves: 697 (including on plateau: 182)
Number of local minimum: 30 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6821
Total number of local moves: 5219 (including on plateau: 1352)
Total number of local minimum: 213 (including on plateau: 163)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  23  68 207 798  24 459 278 304 270 290 878 211 426 875 857 814 865 841 824 301 870 108 827 834  57 141 151 862  46   6
  56  60 694 263  16 861  30 792 775 782 390  27 192 389 351 815 852 534 822  45 800 130 779 521  47 133  14 685 832 828
 833  43   8 335 142 813 777 755 829 812 720 819 177 781 200 785 768 757 384 355 283 371  54 107  22 710  32   1  11 831
 799  49 272  17 118 224 784 808 823 803  29 221 217 360  62 809  38 790 404 549 774  31 780 802  35 786 208 801 312 810
 806  75 732 202 346 132 761 753 793 742 220 461 159 149 307 733 741 795 664  36 752 121 699  98 288   3 161 796 262 728
 787 749  26 292  71  15 804 756  19 687 210  85 129 315 227 760 667 725 769 421 744 136 531 716 144 825 109 772 253 771
 717 738  33 718  64 711  82 164 698 645 134 112 219 317 218 715 791 708 739 691 658  92 789  99 222 681  67 745 236 712
 383 631  73 235 154 111 704 293 600 695 206 662 244  76 576 679 622 656 705  20 612  44 689 636 322 740 640 736 101 670
 646 673 592 113 281 647 683 629  63  93 680 585 167 181 294 696 653 553 573 602 701   2 703 567  25  39 648 611 156 659
 654 623 603 104 327 560 719 198 595  21 686 533  83 252  79 519 625 633 697 644  40 497  50 550 688 580 615 541 245 554
 613 601 135 594 289 605   5  53 568 642 243 577 338 433  55 626 638 558 591 551 535  52 405 684 587 618 578 596 148 597
 628  42 674 566 137 581 561 606 608 492 545 212 502 431 414 462 455 540  41 598 570 559 499 443 571 619 590  37 525   7
 575  97 486 494 302 548 569 529 630 547 523 536 572 442 396 372 556 524 542 480 607 593 368  34 562 473  80 504   9 565
 516 513 493 117 369   4 453 505 417 491 391 470 474 425 528 464 503 412 512 481 477 517 468 429 537 555 452 546 458 538
 527 460 487 490 415 510 407 475 454 381 379 506 543 408 530 501  10 393 496 514 472 310 584 479 434 483 509 478 448 432
 488 365 482 438 579 428 358 557 511 359 677 451 532 400 345 515 463 467 419 353 424 410 520 398 422 526 456 350 375 447
 331 508 445 891 624 449 332 457 409 326 495 427 441 706 374 465 589 476 430 450 344 385 500 469 291 364 444 363 343 387
 485 437 347 440 586 308 370 609 392 380 863 403 376 713 471 436 354 835 394 325 386 356 357 439 362 420 287 336 651 397
 411 265 348 321 665 367 319 663 340 366 276 378 382 843 872 324 401 423 867 296 413 700 266 399 418 435 388 328 766 275
 466 273 416 342 639 305 406 446 330 334 402 295 693 797 826 264 395 297 237 846 323 885 341 318 702 274 303 377 610 373
 195 361 855 754 617 249 333 320 280 839 582 196 805 764 669 311 260 250 269 882 876 284 203 313 737 188 286 261 309 267
 186 251 869 655 616 193 131 246 848 634 864 231 853 838 751 306 230 300 229 830 228 588 214 277 258 242 339 314 747 247
 299 563 552 874 599 226 489 851 172 238 352 239 657 643 285 209 155 282 241 204 169 816 879 119 627 845 672 298 692 268
 146 484 223 767 682 722 818 349 255 190 729 807 637 661 788 205 337 120 175 256 240 850  89 860 329 183 709 173 498 233
 170 259 734 676 844 866 248 180 178 150 724 759 773 666 660 158 232 140 162 225 604 842 201 168 743 189 877 216 614 257
 165 892 139 730 721 890 271 316  91 507 765 849 858 197 621 215 160 157 152 105 185 817 143 234 671 884 727 171 735 147
  51 811 896 176 776 652 871  78  74 213 199 649 723  66 714  77 126 174 124 887 184 620 145 836 895 106 518 187 840 847
 574 837 254 873 731 163 103 668 635 564 194 179 675 191 859  94 138  61 153 116  65 770 583 110 880 707 868 522 900  48
  88 894 762 182 898 166 726  69 100 279  87 889 650 115 127  90 128 102 122 632  95 881 821 886 783 641 899 794 539  70
 897 893 678  58 883 750 123  86 758  13  72 746  18  81  59  96 763  12 778 820  84 748  28 690 856 125 888 114 854 544

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.44013e+06us (= 3440.13ms, 3.44013s)
Wall-clock time (full program): 3.50565e+06us (= 3505.65ms, 3.50565s)
Satisfaction error: 0
Number of search iterations: 1177
Number of local moves: 879 (including on plateau: 302)
Number of local minimum: 40 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7412
Total number of local moves: 5156 (including on plateau: 1542)
Total number of local minimum: 302 (including on plateau: 184)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   5 774 520  91 655 275  69 812 834  65 208 622 773  92 244 808 795  23 119 887 801 148 880 243 617 138  84 866 173 894
 211 386 883  12  56 103 482 870 123 216 730 540 351 460  57 260 484 791 104 802 871 583 675 823 884 126 194 120 422 896
  78 200 509 106 146  62 900 546 868 761 335 755 811 735  34 170 891 242 256 785  22 726 704 532  86 142 714 419 569 411
 793 179 175 169 167 819  80 869 316 222 193 668 809 632  51  42 822  90 218 388 731 519 836 453 185  16 882 762 625 804
 740   7 792 113   2 692 136 854 282 134 595 737 863  97 306 207 549 233 117  17 770 840 837 828 145 856 178 609 232 747
 442 160 851  89 226 843 183 201 137 526 397 890 653 462  72 234 796 576 262 860 291 821 713 329  32 192  44 767 620 846
 187 124 829 669 278 685 227 300 198 240 562 873 766 875 153 237 600 204 258 803 348 650 572 203  35 588  68 827 294 862
 283 725 400 107 162 336 317 788 654 373 698 757 618 225 231 630  54 694 190 629 881 280 697 706 334 164 350 456 661 115
 281 401 718  61 213 613 276 250 850 223 624 715 368 416 274 191 636 867 378 705 171 574 309 895 472 110 197 820 363 544
 265 555 312 602 369 181 215 301 339 166 775 307 885 879 165 434 897 374  99 865 552 356 269 423 380 284 449 855 303 659
 314 288 364 100 188 612 290 186 459 214 676 564 745 844 184 352 899 235 346 736 295 471 467 563 347 688 391 752 254 691
 114 367 293 382 463 245 578 393 333 230 285 696 683 667 575 389 358  94 355 547 296 403 257 810 528 545 474 849 838 468
 633 377 338 322 567 475 408 753 264 541 573 424 217 381 372 523 496  95 515 637 279 448 729 360 323 196 432 525 886 426
   3 362 693 490 359 626 858 533 524 177 414 554 535 406 302 413 504 268 503 665 513 480 478 315 236 189 663 551 464 437
 494 446 461 592  20 310 343 621 604 392 320 444 370 499 831 511 365 489 487 331 531 404 390 570 398 292 734 440 501 325
 584  30 739 431 438 598 305 376 202 759 707 353 534  50 452 491 271 470 394 428 571 690 337 493 638 430 405 486 542 311
 479 457 614 607 582 492 366 429 477 469 628 371 415  37 782 458 473 500 506 385 842 510 436 210  73 402 441 445 517 112
  88 326 421 439 599 133 577 721 313 645 539 559  41 251 686 695 141 159 433 425 651 409 660 495 565 550 327 361 644 662
 646 543  63 451 619 876 263 579 340 498 476 420 219 157 587 538 878 354 560 270 530 328 418 553 677 852 580   9  81 150
 454 466 155 784 259 228 566 805 537 273 465  79 593 108 585 529 277  58 673 154 684 341 319 483 682 648 680 427 807 396
 656 318 778 568 507 267 641 558 748 497 512  67  38 298 781 548 128 649 615 121  98 716  13 605 603 596 666   4 209 710
 412 872 687 724 608 728 589 516  15 702  71 140  52 627 344 671 149 681 601 330 399 324 616  55 556 304 518  87 652 485
 751 594 379 643 794 249 168  48 591 639  64 239 195 581 521 672 701 699 708  74 634  29 754 611 825 152 561 109 502  28
 746 606 272 723 610 777 898 135 102 664 455 116 780  70 817 800 182 743 689  85 678 287  46  82 642 407 375 266 221 241
 722 700 180 586 833 125 635  10 744 712 410  66  93 342 709 787  39 383 771 212 640 877 597 206 522 847 299 158 205 105
 727 670  53 720 658 417 758 143 238 129 742 647 481 733 741 631 387 889 893 130  18  40  25  26   6 859 760 163 786  45
  43 813 144 789 835 892 557 508 703 790 255 435 345 679 357 246 151 172 783 286 101 220  24 798 750 848 536 224  75 156
 830 756 384 505 818  19 799  31 443 768   8  14  77 845 657 857  27 769 841 261 248 308 132  49 853 732 738 488 147 111
 719 139 176 864 861 816 199 127 514 711 797 289 122 253 806  60 118 888  76 450  36 674 229 749 297 772 764 321 527 161
 815 874 332 776 623  21 832 252 763 779   1 174  83 814 839 131 447 826 765 247  33  59  96  47 824 590  11 349 395 717

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.78524e+06us (= 5785.24ms, 5.78524s)
Wall-clock time (full program): 5.85382e+06us (= 5853.82ms, 5.85382s)
Satisfaction error: 0
Number of search iterations: 2634
Number of local moves: 937 (including on plateau: 339)
Number of local minimum: 187 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 19977
Total number of local moves: 7685 (including on plateau: 2731)
Total number of local minimum: 1544 (including on plateau: 336)
Total number of resets: 7
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 531 105 883 885  76  85 821 635 880 859 665  47 121  29 879  34 792  33  68 649 177 678 180 824  32 679  59 806 890 113
 127 894 886 623 128 611  69  43 895 844 752  36 150 120 847  21 878  92  41 718 202 709 823 390  25 583 224  87 820 877
 185 569 492 888 149  97 868 109  50 861 654 318 227  60 872 136 805  28 804 197  96 749 223 882 704 808 123  39 786 736
 200 119 667 403 743 268 838 254 641 834 186 103  75 187 604 188 663 162  26 425 715 580 745 876 159 798 513 179 554 810
 673 512 778 391 892 347 182  62  67 146 714  83 158  63 870 156 568 165 175 785 192 897 871 773 279 766 125 456 761 608
 351 763 873 900 214 822 218 190 320 208 866 124  79 210 671 145 765  64  81 858 344 734 850 767 143 612 110 132 789 312
 672 835 670 525 313 141 891 249 133 148 342 296 240 213 653 198 676 130  18 852 541 875 277 899 108 874 247 389 404 706
 341 265 628 731 303 851 153 893 270 238 825 142  15 212 799 260 750 173 221 540 267 511 629 853 415 387 305 104 620 814
 134 719 707 747 189 311 183 235 848 236 762 168 354 336 668 304 233 543 306 677 256 827 201 724 209 686 307 290 471 884
 244 783 637 869 237 262 215 401 400 775 346 167 289 231 800 322 377 281 261 589 230 560 248 889 449 443 553 315 729 613
 864 332 690 797 170 856 258 374 422 264 842 194 329 331 681 378 573 327 252 898 356 520 255 257 160 430 251 367 674 413
 586 791 558 787 283 625 316 333 484 355 476 521 328 323 317 657 365 287 319 610 366 509 370 299 325 408 232 865 432 388
 444 405 503 493 310 491 298 269 499 465 487 321 666 409 505 464 470 896 828 349 466 559 416 467 280 495 152 334 392 382
 546 447 545 414 481 297 887 446 457 324 314 507 363 605 440 292 288 350 603 486 195 504 372 417 498 380 881 338 439 399
 564 530 483 445 475 566 295 364 360 419 463 510 689 397 359 330 437 501 489 357 361 458 337 522 451 502 585 436 477 353
 469 570 385 375 482 452 527 506 490 536 426 402 473 424 627 494 480 459 412 595 335 454 420 453 381 139 472 398 438 441
 126 448 101 555 643 386 523 576 598 429 575 301 528 326 698 488 567 479 406  58 532 242 352 508 348 547 383 478 617 697
 393 343 229 285 669 442 460 565 591 621 339 694 626 632 550 394 450 205 544  66 582 410 548   2 542 534 574 579 211 435
  82  51 291 172 740 524 516 485 601 519 557 497 572 455 418 599 411 597 396  70 379 174 708 431 712 272 517 721 496 552
 112  40 217 138 658  80 427 537 619 634  14 474 777 693 286 602 551 587 739 276 539 371 468 140 638 243 699 648 652 656
 137 514 275  71 615 239 660 581 549 664 245 854 421 696 144 614 461 561 584 500  35 282 594 250 790 533 609 640 204 193
  19 266 535 203 705 428 607 691  56 593 114 738 562 606  42 645 154 685 700 273 717 433 600 538 644  49 757 730 206 219
 692 369 122 163 616 795 622  38 563 662 220 703 630 713 161 590 618 434 784 358 578 407   5 191 732  17 759 733  74 166
 294  84 423 711 682 526 222 867  90 345 596 684 807 373  30 639 181 702 839  52 760  98 744  27 754 225 770 636 300  54
 803 171 115 176 819 659 169 571 813 642  12 860 811 688  24 556 164 655 720 284 631 111 462 196  16 646 651 675 309 106
 837 216 184 118  73 178 661 830 234   7 683 687 802 862   8 735 302 840 624 592 829 131 742  86 695  46 680 515  72 246
 788  91  94  57 779 588 809 157  11  44 518 833 723 746  65 815 362 781 751 155 647 135 226 278 726 710 293 727  77 529
 701 741 395 102 271 716 793 633 801  89 259 650 843 863  22 832  20 816 577 253 728  95  13 368 771  55  53  37 263 755
 774 725  61 107  31 100   4 780 764 748 147 845  45 857  99 831   3 846 818 199 722 228 758   1 776 340 849 768 241  48
 826 817  88 384 769 772  23 841   9   6 116 756 812 855 376 796 151 836 129 794 737 274  78 207 753 308 782  93 117  10

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.66881e+06us (= 3668.81ms, 3.66881s)
Wall-clock time (full program): 3.73406e+06us (= 3734.06ms, 3.73406s)
Satisfaction error: 0
Number of search iterations: 1197
Number of local moves: 782 (including on plateau: 264)
Number of local minimum: 64 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8896
Total number of local moves: 5742 (including on plateau: 1671)
Total number of local minimum: 457 (including on plateau: 204)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 204  21 870 522 758 831 243 819 814  39  47 677 205  45 361 868 644 350 826 789 276  27 137 669 857  26 127  82 845 536
  76 469 869 278   4 852  10 670 767 225  91 862 184 730 254 858 721  83 775 785 112 120 727 802  93 166 764 781 187 200
 808  29 470 796 828 856 378  31 822 149   1 782  80 134  11 873 800 160 871 850  43  77 860 821 794 169 183  12 812  15
 795 859 837 281   7 154 219 710 274 198  35 740 699  56  36 707 231 865  53 772 290 246 685 784 766 206 295 818 849  48
 718 810 788 786  14 529  38 829 803 128  34 713 255  88 102 746 580  58 768 273 351 260 827 732 684   6 121 714 744  16
 736   8 695 751 561 119 105 750 757  69 179 853 692 693 140 720 642 745 701 266  63 385 253 620   9 167 163 763 742 168
 734 807 661 779 664 324  25 643 667  61 671 689 697 760  17 624 129 753  73 101 657  49 741   2 709 209  81 733 302 153
 694 652 683 631 738  59 336 666 557 215   3 654 650  96 672 728   5 659 806 604  72  18  20 608 606 216 151 663 770 283
 755 615 625 556 676  74 299 708  46 106 541 696  89 687 637 682 458 430 662 679 345  13 551 555 602  42 245 660 291 190
 656 655  55 633 573 521 303 596 600 352 546 610 480 595 426 586 162 678  70 157  75 298 724 535 668 244 558 621 320 218
 567 632 626 581 571 519 213 634 630 207 226 217 113 514 605 647 115 593 572 177 583 421 623 599 618 268 464 513 133 334
 443 570 473 537 488 191 327 493 532 311 259 506 318 627 584 723 251 410 360 474 524 408 540 569 564 240 538 645 309 301
 585 591 549 526 509 250 413 616 489 471 490 484 436 592 391 507 199 498 472 613 392 307 552 485 523 210 435 463  85 382
 429 377 448 612 566 403 356 531 516 444 461 419 393 323 504 476  19 425 495 502 501 414 439 462 560 294 543 622 525 456
 619 467 475 483 603 452 188 503 468 398 434 454 466 390 447 440 539 457 397 453 354 460 401 412 459 337 478 568 481 432
 431 437 494 411 465 512 505 511 359 418 335 482 486 362 500 450 496 372 477 594 446 416 445 451 492 384 497 518 364 405
 374 673 816 349 423 326 577 441 383 542 442 424 343 407 368 404 317 545 381 530 292 517 387 341 230 836 528 373 396 550
 314 344 544 333 533 286 780 376 427 415 340 438 565 371 388 358 395 665 563 365 890 510 366 319 310 579 399 339 367 636
 527 304 297 433 328 293 576 420 357 520 379 824 375 271 316 400 639 547 394 711 885 681 332 369 353 574 211 306 315 578
 428 380 347 325 322 680 628 330 370 515 705 313 221 329 296 386 867 248 553 839 300 648 277 229 346 731 331 258 607 706
 406 342 261 891 338 641 589 232 284 640 575 402 783 235 534 203 686 262 279 202 674 609 308 256 269 799 348 173 590 704
 305 280 174 257 239 355 617 588 835 813 389 185 769 321 754 196 833 275 241 289 898 598 224 287 238 554 776 189 449 587
 108 282 104 272 126 417 491 830 181 726 756 288 792 312 233 142 861 249 158 236 893 635 877 222 182 700 884 227 614 717
 152 265 264 195 146 739 479 100 252 653 817 114 748 285 844 178 548 875 155 715 658 722 117 888 214 651 638 150 263 690
 201  99 193  37 242 878 719  66  57 864 866 138 186 881 846 164 508 156 698 562 270 811 165 363 876 854 688 237 143 747
  65 778  68 176 882 582 774 208 247 743 797  64 725 234 161 132 798 144 223 597 823 834  98 228 180 855 611 148 499 841
 194 171  60 900 170 805 691 103 159 809 712 175 820 879 729 124 125 220 847 123 107 815 192 702 212 759 109 118 842 843
 139  54 646  92 791 267 874  28 629 801 848  84 147 749 773 141 409 790 136 135 777 675  23  24 145 804 716 840  86 892
 172 895  79  52  78 559 899  33 111 832 765 131 197 787 761  22 487 116  87  32 897 703 735 110  62 883 896 886 455 793
 880 649  44  40 872  41 863  50 122 851 771  97 601 762 825  30  51 887 422  90  67 838 889  71 894 752 737  95 130  94

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.5433e+06us (= 4543.3ms, 4.5433s)
Wall-clock time (full program): 4.60773e+06us (= 4607.73ms, 4.60773s)
Satisfaction error: 0
Number of search iterations: 1829
Number of local moves: 984 (including on plateau: 420)
Number of local minimum: 93 (including on plateau: 50)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13678
Total number of local moves: 6272 (including on plateau: 2113)
Total number of local minimum: 941 (including on plateau: 251)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   7 195 699 110 227  26 839 858 154 827 121 104 844 304 761 623 417  77 791 129 877 816 846 784 138 800   2 757  97 285
 118 349  38  24 833  20 793 235 219 857  95 107 689 275 883 246 758 719 766 117 818 875 853 741 106 231 413 887 335 115
 842 318 158 860 870  44 854 831  53 801 145  72 748 147 767 778 100  36 795  31  25 840 780 233  79 851  14 324 267 852
 819  17 750   8 792 174 797 747  90 786 112  12 727  19 880 140 328 783 787 212 814 336 681 186 237 735   5 608 161 772
 873 173 571 815   6 180 688 740 698 143 714 656 884 103 848 467  93 686 759 168 127 527 176 393  35  49 200 773 260 710
 749  54 808 617 756 374 577 248  41 704 715  58 869  13 679  46 240 788   1 151 663 170 616 553 155 742 563 694  15 856
 817  23 562 570 671  98 733 709 697 236 259 658 718  75 721  52  63 576 775  22 567 163 625  55 255 812 619 724  18 642
 611 644 868 874 636 141 419  64 609 280  10   4 707 301 605 287 202 738 677 683 684 198 206 691  87 477 113 657 279 763
 635 669 404 583 599 123 585 633 264 391  78 135 631 148 560  84 156 462 799 590 533 132 806 575 283 708 507 675 146 621
 725 640 646 662 497 265 705 736 723 144 639 638 505 172 496 128  61 122 263 626  62 252 798 659 351 651  37 476  82 754
 604 460 746 581 555 225 768 624 160 511 210 592 566 445 430 594  32 461 221 464 386 109 515 598 258 632 508 622 125 513
 674 501 685 578 603 342 597 615 558  11 469 223 509 524 473 503 313 519  27 540 525  69 610 379   9 549 466 499 480 665
 506 596 514 652 544 348 408 543 557  43 323 360  56 529 472 532 306 452 512 552 568 340 428 546 370 453 326 395 612 672
 498 526 655 522 312 203 401 483 653 634 600 350 487 270 504 531 292 438 545 474 387 556 214 489 375 444   3 580 572 517
 382 530 322 409 443 500 643 414 482 398 333 548 329 416 541 896 249 429 565 377 523 468 372 320 338 485 481 397 470 455
 588 435 420 385 376 454 271 493 389 307 396 380 561 407 680 510 394 535 357 479 564 405 120 369 447 411 458 516 537 871
 303 484 491 319 402 607 486 388 390 456 433 502 406 676 542 368 582 538 330 620 352 286 358 434 751 300 441 354 648 268
 490 254 534 660 442 589 381 859 359 290 216 355 399 618 437 211 421 432 273 365 678 436 314 440 584 383 492 426 726 451
 457 601 613 321 305 587 378 415 424 729 410 673 403 667 295 331 790 573 465 296 222 367 353 294 664 448 475 243 559 157
 528 299 449 471 197 823 431 363 272 373 720 518 392 256 284 892 881 591 364 356 412 579 302 327 629 337 257 205 762 245
 213 293 241 308 418 771 310 879 347 400 234 247 309 696 339 278 488 343 362 297 886 734 777 899 666 289 807 298 179 207
 346 641 124 153 334 687 288 215 760 722 744 450 178 690 192 282 822 315 427 834 244 711  81 845 627 495 269 126 843  70
 182 794 366 281 119 804 131 478 774 217 595 547 316 770 266 149 668 196 521 218 164 888 893 361 732 175 695 209 745 261
 232 803 136 317 251 606 250 226 311 183 494 872 224 849 277 332 439 166 730 341 194 661 713 891 838  88 835 193 810 253
 102 190 134 262  74 539 204 239 654 291 820 828 536 647 169 764 602 446 345 841 765 717 181 229 737 201 895  99 728 276
  39 802 344 238 900 753 111 199 551 706 274 785 185 702  83 850 829 189 159 752 184 167 425 130 805 865 569 701 188  30
 208 628 187 867 152 755 137 116 550 586 781 650  89 630 230 459 614 878 242 422 739 554 325  57 826 108 809  42 703 171
 101  67 897 142 177 824 105  91 866 220 830 712 133 692  51 769 836 861 114 837 371 520  71 796 847  60 649 191 593  92
  45 716  59 876 162 864  86  34 228 885 890 779  47 743  21 637 645  16 463 832  85  65  48 165 863 670 825 811 882  73
 821 813  94  50 862 789 139  40 682 384 855 700  68 731  29 776 894 150  80 889  96 574  28  76 423  66 782  33 693 898

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.52859e+06us (= 3528.59ms, 3.52859s)
Wall-clock time (full program): 3.59372e+06us (= 3593.72ms, 3.59372s)
Satisfaction error: 0
Number of search iterations: 1103
Number of local moves: 718 (including on plateau: 245)
Number of local minimum: 52 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8479
Total number of local moves: 5654 (including on plateau: 1489)
Total number of local minimum: 417 (including on plateau: 195)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  13  24 840 812 291 529 845  25 179 872 166 157 133  81 857 783 843 112  40 801 819 820 109  33 807 860  43 736  60 825
 218  94   7  28 786 467 793  29 220 726 230  19 834 322 779 849  77 300 794 367 817 851 865  93 796 798 252 830  17 257
 356  20 804 255 226 722   9 808 758 319 549 150   8 232 682 846 223 250 328 818 788 298 784 153 832 814 125 640 681  37
 236 748 740 156 765 472 371 749  52 738  10  26 304 430 799  11 751 284 627 742 787 833 718 229 423 688  16  36 687  87
 280 790 827  88  46 182 452 635 753 590 275 126 652 201 713 115 774 672  82 772 421 727 593 775 429 437 147 203 737  21
 110 806 690 651  74   3 369  39 711 795 117 710 251 177 756 773 245 721 750 685 744  53 842  54  61 829 159 501 763  76
 271 797 777 666 124 454   5 677 655 695  64 541 426  27 717 611 606 145  55 691 760 684 731 122  22 658 396 358 697  83
 270 770 678 683 531 637 361   1 714 762 132 663  65 680 546 581 636 103  70 708 638  35  18 705 196 624  31 303 671 703
 345 723 676 692 140 662 290 615  23 745  67 661 235  14 757 631 567 397 422 679 610  15 667 689 338 547 509  49 660  90
 139 614 616 782 699 617  85 607 571  30 592 238 578  12 712 656 702 294 644 584   4 621  34 522 123 445 477 248 565 704
 118 557 630 622 202   2 360 598 646 444 517 582 239 528 540 706  38 119 620 329 521 673 533 492 207 475 586 293 693 645
  75 623 516 733 185 612 574 221 365 599 563   6 216 551 650 449 641 191 228 654 561 496 648 512 100 480 608 311 568 579
 134 524 459 570 504 583 116 395 313 555 580 597 411 591 440 425 558 414 438 468 545 378 589 471 629 664 474 128  68 494
 390 486 490 511 344 392 489 569 553 515 493 552 488 453 527 556 183 141 560  57 346 491 554 339 224 604 497 625 484 602
 393 499 391 520 406 470 441 532 432 436 628 525 503 564 518 121 455 398 510 342 537 335 403 619 442 434 389 405 450 417
 495 530 550 287 443 386 478 460 601 457 382 410 526 465 399 538 483 479 447 458 498 347 431 519 487 264 412 324 333 626
 523 370 286 292 448 771 701 387 401 514 366 351 502 755 349 427 385 539 544 383 384 461 419 315 752 466 368 424 306 326
 355 274 407 276 350 856 800 354 464 352 885 375 759 376 227 413 776 380 715 296 373 433 244 308 362 388 336 572 428 381
 732 894 317 279 394 408 289 456 476 340 791 761 364 363 435 334 237 481 211 415 325 485 473 312 780 404 374 768 418 199
 854 343 372 267 600 331 642 469 573 348 633 262 359 869 439 341 823 605 295 848 357 268 309 420 210 254 318 653 277 176
 824 316 288 321 542 269 265 189 241 855 891 219 850 353 302 305 297 893 402 535 858 281 301 720 639 299 197 506 310 247
 821 144 314 283 792 323 507 186 863 332 278 700 785 828 320 272 543 596 379 263 377 747 416 155 282 215 668 649 273 204
 864 233 164 225 816 266 805 548 698 249 172 675 327 200 330 192 881 853 809 111 130 209 882 234 505 171 256 576 260 874
 728 154 205 285 566 837 813 307 102 120 754  98 337 888 214 217  99 789 839 180 206 198 190 895 724 258 897 873 500 242
 877 101  95 831 243 746 836 151 890 149 884 212 686 859 152 261 781 889 194 222  91 136 187 259 446 168 900 508 173 588
 609 246 253 862 879 142 165 870 178 113 766 899 575 536  47 240  58 595 158 170  97 767 146 195 409 896 868 709 175 892
 587 127 161  41 769 778 734 847 815 163 725 741 462 193  66 871 114 162 138 184  63 883 104 875 129 107 878 160 835 803
 844 167 852 867 231  56 143 208  69 577 213 886 716 643  50  71 613 585 826  89  92 135 131 822 657  48 707 866 513 838
 603 730  78 148 719 463 108 887 137  80 174 739  44 665  86 861  84 534 743 105 670 181 562 876 694  51 729 188 841 735
 451 811  32 482 400  79 669 696  62  45 618 634 880 659 106  59  42 594 647 559  96 674 632 802 810 169 898  73  72 764

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.52756e+06us (= 4527.56ms, 4.52756s)
Wall-clock time (full program): 4.59168e+06us (= 4591.68ms, 4.59168s)
Satisfaction error: 0
Number of search iterations: 1765
Number of local moves: 875 (including on plateau: 369)
Number of local minimum: 96 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13337
Total number of local moves: 5844 (including on plateau: 1929)
Total number of local minimum: 959 (including on plateau: 229)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 117 853 266 289 147  98 848  38 869 823 870 746 337 104 196 258  30 818 343 750 190 697 414 183   8 713 774  66 828 842
 762 890  32 144 844 731  72  84 345 838 714 143  29 735 772 132 793 816 717 807 252  92 148 118  46 491 298 846  28 796
 773 703  17  23 759 849 771 783  54 868 866 342 139   4  25 106 778 101 690 852   7  56 674 110  39 634 141 847 622 882
 791 787 509  14 779 228 658 794 788 811 837   6 850 668  19 186 786 820  16 764 177  79 184  93  95 408   2 840   3 523
 206 617 292  48  20 730 681 191 733 798 827 684 222 719 380  96 812 800 725 734 322 241 220 236  12   9 219 817 638 486
 352 803 765  37 109  49 747 741 133 742 832 724 664 705 662 316 722 804 140 821  44 221 644  70 174 329  91 650  11 413
  61 647 261 547 810 557 614 743 782 615 682  67 814  40  21  15 711 721 573 728  35 112 492 135 666 111 302 687 616 350
 685  41 129 160 751 656 707 695 632 781 670 673  36 606  82 373 809 749 157 686  47 165  78 235  60 553 301 822 593 583
 535 642 255 248 660 612 676 579  27 696 826 618  80 712 637 268 704 834 692 544  33 182  58 613 619 242  50 607  13 253
 142 699 217 510 602  18 752 534 633  77 641 367 168 677 706 571 698 407  10 566 436 130 688 672 646  73 625 536 609 105
 569 610 227  53 526 445 490 578  42 508  22 556 624 552 767 546 718 694 680 648 313 161  62 598 518 136 185 596 770 321
 559 587 189 497 503 591 575 563 514 537 545  34 561 629 520 600 592 439 715  55 340 296 531 116 590  64 229 394 768 382
 323 550 254 290 530 558 551 581 533   5 542 652 419 500 484 555 426  81 594 621 267 238 585 549 595 372 560 416 574 310
 360 406 432 347 425 435 519 437 493 398 522 538 391 424 675 320 495 524 430 489 548 521 376 467 151 442 335 388 645 582
 502 441 501 459 478 375 476 409 451 515 473 378 397 631 487 440 483 357 449 282 506 570 480 562 325 377 392 412 411 496
 601 457 505 341 358 275 479 379 311 295 529 403 262 516 461 448 504 485 472 401 512 462 466 468 455 701 611 299 460 599
 498 438 433 381 368 475 507 279 528 477 361 344 513 586 383 334 444 458 362 471 463 539 402 481 404 824 393 431 308 630
 245 317 384 443 339 385 417 488 465 567 427 399 428 456 283 285 364 865 450 247 469 649 400 527 272 659 883 429 244 729
 387 291 371 857 389 319 169 294 876 351 265 540 243 276 315 410 446 330 896 287 568 395 716 327 543 420 831 421 176 806
 589 359 864 517 369 355 263 218 415 532 482 365 653 300 273 346 264 370 464 353 580 422 860 307 251 332 797 326 541 748
 203 271 584 678 899 452 336 324 374 239 233 356 192 181 792 525 405 277 200 178 754 470 784 727 260 795 683 363 240 740
 434 349 867 777 234 214 312 212 284 202 274 249 328 366 841 333 114 309 756 278 854 669 423 474 753 572 667 293 314 763
 213 232 511 665 897 166 354 396 179 223  86 856 880 318 280 829 172 126 874 288 815 494 805 577 565 732 386 180 215 201
 892  94 859 636 173 270 863 877 204 281 257 155 875 167 208 303 195 103 736 246 789 830 738 224 623 663 872 193 188   1
 231 390 447 873  90 885 134 879 194 131 331 454 884 137 198 761 138 205 597 158 620 887 211 691 745 348 679 286 769 162
 226 256 655 639 878 120 153 128 635 259 119 209 766 107 627 843 305 152 210 269 862 757 651 710 744 891 113 225 709 297
 163 170 700 833 230  85  75 122 237 603 100 154 643 799 790 886 187 250 150 689 626 825 628 693 801 554 608 125 640 149
 785  88 418 708 145 845 102 338 881  87  83 851 207 755 304 835 159 499 121 164 564 819 156 808 858 175 661 895  89 115
 654 453 671 775  57 898  43  71 123  59  68 894 306 737 588 893  45  69 199  76 720 813 576 855 836 871  51  99 888 127
 657  74 900 726 146 839 171 760 780 197  31 758 604 108 739 702 216  52  97  63 802 723  65 889 861  24 776  26 605 124

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.82473e+06us (= 3824.73ms, 3.82473s)
Wall-clock time (full program): 3.88677e+06us (= 3886.77ms, 3.88677s)
Satisfaction error: 0
Number of search iterations: 1324
Number of local moves: 717 (including on plateau: 258)
Number of local minimum: 86 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9936
Total number of local moves: 5792 (including on plateau: 1769)
Total number of local minimum: 552 (including on plateau: 197)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 707 152 855 895  98 788 739 815 722  29  54  68 716  52  36 125 891 560 868 160 635 116 701 819 104  79 898 404  80 349
 159  77  74 127 771 873 818 723 827  70 881 150 646 704  23  55 756 656 774  61 808  69 573 877  93 342 507 883  71  67
  57  58 436  18 103 710 793 833 537 874 531 812 687  96  90 126  73 592 609  56 748  14 702 893 888 894 175 889 172  49
 852 214 133 485 745 563 875 872 636 158 201 140 149 699 110 153 170 278 706 197 632 227 143 696 134 459 899 797 865 327
 218 124  50 196 896 835 695 663 694 151 112 168 796  86  78 106 156 679 690 157 708 705 853 897 324 450 654 870 313 191
 187 863 828 204 673 886 162 167 766 264 787 294 493  87  89 115 892 749 671 180 823 108 185 260 851 385 193 848 262 243
 179 219 488 142 628 290 887 247 558 225 107  59 841 316 383 239  88 857 847 226 824 194 138 900 209 834 750 840 249 751
 144 746 246 128 765 612 772 381 760 259 287 288 878 203  25 240 263 864 814 148 830 323 862 206 231 552 252 672 282 482
 575 299 275 234 762 691 539 285 890 614 314 332 879 261 272 356 241 668 293 336 255 884 281 359 308 536 683 688 228 177
 190 236 718 301 871 740 312 213 557 658 216 269 876 302 186 372 430 361 639 229 790 472 253 242 376 698 732 595 343 338
 412 257 555 463 498 296 640 413 720 344 390 375 377 426 362 245 422 648 657 477 382 395 767 456 403 768 370 561 248 188
 355 452 291 352 747 325 317 358 685 256 277 451 364 860 340 202 298 405 856 321 363 330 399 434 371 674 742 588 270 832
 571 280 415 391 593 345 251 310 326 411 421 378 476 480 483 289 429 826 398 447 351 386 329 442 292 869 786 467 346 727
 388 350 354 265 368 535 458 374 339 406 400 495 444 445 307 503 801 365 454 328 550 407 320 410 443 845 465 577 303 816
 419 367 540 548 497 408 373 306 564 431 543 479 401 418 510 562 337 475 469 437 423 501 462 460 402 474 425 369 393 522
 348 409 496 527 439 284 357 279 453 587 173 885 478 466 394 384 396 582 438 428 473 566 417 414 387 448 494 517 427 569
 353 579 389 590 461 586 513 530 487 484 505 341 318 470 424 529 120 471 420 491 432 509 514 489 464  17 504 523 545 457
 268 500  91 486 578 528 603 601 184 492 551 379   6 519 541 506 608 568 659 574 542 502 620 455 433 164 638 360 309 250
 538 761  35 490 223 511 211 130 199 238 576 591 556 600 684 581 647 435 237 645 594 520 597 508 618 205 305 137 512 631
 549 565 554 604  46  66 616 644 233 559   4 532 135 660 625 624 589   7 666 627 664 607  37 547 669   8 468 311 650 649
 585 758 446 121 195 570 661 692  42 217 596 752 533  47 637 333 499 526 304 676 516 621  75 665 606 230 222 189 546 655
 132 677 583 615 232 139 567 633 297 584 598 779 131 525 515 736 791 101 155 599  51  16 675 610 798 271 123 315 641 626
 643 717 416 731  84 334 730 111 224 572 580 800 141 524 712 629 534  41  28 622  43 518 709 169 703 207 617  31 611 734
 803 721 737 630 129 613 221 689 178 481 653 686  12  27 634 715  26 210   2 769  92 651  24 652 743 331 642 266 781 397
 682 670 773 700 113  39 119 726  38 802  20 713 521 757 794 838 602  83 154 273 258 719 667 122  76 166 392 198 807 693
 792  30 725 783 347 267  65 724 182 804 785 605 145 729 850 741  13 192 254 846 215 728 619  72 697 319  94  19 776  97
 784 755 839  10 322   9  15   1   5 733 662 744 753 770 825 759 763 105 136 735  53 680 366  32 821 553  40  21 775 449
 754 829 274 738 244  11  48 711 163 678 714  60 100 844 867 843 777 441   3 780 235 681 171 165 806  99 208 295 795 181
 837  33 854 859 276 544 114  22 809 799 764  85 283 300 858 831 822 147 102 810  64 866 220 118  82 789 174 176  95 782
  34 817  45 882 811 117  44  62 440 335 813 805 380 842 861 778  81 623 212 880 161 200 836 146 183 849  63 109 820 286

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.50291e+06us (= 3502.91ms, 3.50291s)
Wall-clock time (full program): 3.56765e+06us (= 3567.65ms, 3.56765s)
Satisfaction error: 0
Number of search iterations: 1135
Number of local moves: 684 (including on plateau: 245)
Number of local minimum: 62 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7915
Total number of local moves: 5327 (including on plateau: 1526)
Total number of local minimum: 347 (including on plateau: 198)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 900  61 643 737 783  57 770 177  63 819 868  84 885 597  34 754 658  26  80 501 882 824 858 200 891  48 101  88  59  67
  77 307 687 759  93 610 873 803 661 124 825 600 194 771  83 552 638 218  51  27 854 262 826  95 285 660 167 113 421 879
  86  62 810 664 116 753 834 125 258 878 796 143 838 764 126 886 683  89  42  76 843 150 731 310 245 104 442 795 199 667
 586 226 657 399 670 871 766 739 156  68 860 220 179 865  78 720 736 197  41  65 893 269 876 467 550 305 488 154 202 212
 221 146 768 685 855 311 672 280 129 122 842 275 740 132 182 730 613 157 114 112 191 189 883 615 881 890  82 816 110 772
  40 862 892 758 840 198 859 168 121 251 785 214 256 895 115 622 756 265 102 119 557 213 757 267 546 301  85 209 712 750
 573 176 640 484 848 242 805 257 138 241 674 268 849  94 264 691 894 499 530  96 273 778 438 884 356 105 377 120 225 696
 535 205 592 822 260 230 494 898 350 308 342 272 255 874 234 814 636 431 369 338  90 183 506 211 864 178 828 227 833 336
 841 164 877 880 232 366 596 296 896 853 203 259 266 274 160 776 794 779 277 247 253 169 634 315 291 284 851 137 206 339
 306 192 489 889 361 802 793 287 528 186 279 224 577 352 429 830 668 650 358 299 852 223 382 235 283 316 231 309 319 866
 601 899 288 787 392 184 748 351 175 219 742 297 371 328 456 327 618 888 416 870 386 799 276 375 248 364 270 397 236 207
 417 340 322 789 329 817 701 395 281 407 345 800 278 314 228 331 432 588 808 165 286 710 313 282 347 508 436 370 401 775
 673 383 302 406 379 408 515 318 294 292 447 497 346 290 473 303 611 811 827 439 537 856 343 376 298 337 531 440 449 334
 495 519 496 445 423 293 705 304 427 373 529 466 385 511 471 321 608 585 514 409 454 390 493 594 360 435 378 325 394 413
 485 498 656 483 626 411 403 389 359 271 419 128 404 734 252 444 475 402 595 590 396 243 481 415 420 606 526 400 433 571
 414 450 332 381 434 330 344 405 384 517 455 289 477 357 500 437 388 463 476 478 428 607 458 587 581 534 505 490 425 589
 513 520 578 527 380 539 353 631 564 480   3 470 446 538 524 582 443 441 479 462 542 398 341  16 374 516 468 502 424 461
 349  25 507  14 486 565 142 525 544 671 556 624 254 448 412 560 452 554 570 555 536 572 474 612 669 563  64 651  38 523
 127 426 171 250 543 579 326 549 630 522 558  19 713 575 616 348 174  29 599 533 238 492 451 633 583 472 422 593 603 741
 210 510 106 365 469 518 324 482 620 561 621 725 686 666 521 562 320 244 133  13 453 675 547 677 117 647 512 584  99 548
 391 532 140 151 728 107 367  37 460 642 602 676 629 680 457 170  39 190 567 693  72  32 509 706 464 743 711 729 659 632
 145 619 201 263 682 646 233 625  18 465 553 598 545 574 635  98 193 181 719 333 504  54 569 644 698 580 568 707 704 161
 222 665 217 139  45 111  22  11 652 723 714 541 716  31 700 240 135 688 604 832 639 695 204 752 109 718 760 655 820 155
 566 614  43  60 735 708   2 769 591 733  28 679  50 551 788 153  49 163 628 637 697 692  79  47 703 649 684 662 663  92
 430 648  91 354 559   1 491 755 773  44 173 812 239 645 850 158 355 767 144 503 774 410 159 784 172  73 745 709 761 136
  75 875 777 118  56 627  36 738 215 312   8 623 836   6 694  53 187 831 690 845  74 300 540  66 641 762 362 765 722 681
 815 872 261  69 747 196  46 185 867   4   7 749  71 418 727 216 295 809 751 829 368 699  10 792 609 780  52 689 123 459
 818 844 726 130 152 617  17 797 653 790   5 763 786  81 847  24 180 148 393 782 387 208 166 715 100 801 806  55 654  70
 717  12  58 372  97 605 147 487 839 804 246 363  15 141 798 237 162 678 781 821  21 721 108 823 807  87 746 791 897 134
 887 863 188 335 195 813 131 732 869 835  30 837 229   9 861 576 323 744 857 846  35 702 103  20  23 149 317  33 724 249

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.55095e+06us (= 4550.95ms, 4.55095s)
Wall-clock time (full program): 4.61487e+06us (= 4614.87ms, 4.61487s)
Satisfaction error: 0
Number of search iterations: 1803
Number of local moves: 863 (including on plateau: 367)
Number of local minimum: 106 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12560
Total number of local moves: 6116 (including on plateau: 2008)
Total number of local minimum: 821 (including on plateau: 235)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 391 896  79 107 709   5  75 173 595  86 679 602 532 506 899 409 664 619  78  48 212 895 699  63  82 883  43 874 865 747
  91 873  55  23 204 118 150 163 778  80 825 853 638  74 855 725 702 192 100  70 610 892 700 183 866 828  31 886 852  98
 890 648 900  27 200 222  61 645 787 140 757 366 195 145 797  69 768 580 872 102 197 188 719 618  49 829  47 776 876  45
 103 605 142 848 166 161  66 185 592 703 816 785 765 772 789 812 661 194 232 112 494  73 881 113 169 756 847 406 134 133
 207 681 156 109 871  94 794 433 262 131 791 175 894 172 869 143 666 637 178 160 520 258 859 740 132 639 793 649 252 250
 840 735 668 507 135 864 122 171 182 115 741 743 245 585 824 327 770 518 146 148 139  76 830 167 885 504  52 541 755 180
 206 867 151 670 199 460 187 796 780 479 392  96 880 802 202 446 884 264 101  83 210 582 656 888 214 818 138 490 269 305
 279 673 275 219 254 309 276 889 882 329 746 246 223 569 225 527 806 861 328 268 216 318 447 891 256 750 259 696 321 177
 311 798 266 644 234 242 301 186 868 147 641 111 349 814 237 322 831 820 201 330 344 857 594 476 339 571 235 790 253 403
 205 893 336 561 153 775 170 342 549 215 277 493 369 302 267 751 326 413 424 288 863 897 730 588 121 614 430 535 184 444
 203 762 340 839 378 299 394 477 854 285 320 389 271 431 307 282 218 312 308 860 351 347 683 752 343 813 300 732 291 374
 323 487 337 674 278 529 804 633 646 231 742 286 338 707 383 363 236 450 319 360 448 372 559 314 224 606 412 653 517 284
 421 120 341 621 468 600 274 584 726 325 455 795 898 570 331 356 164 731 251 415 390 466 555 106 382 475 334 438 454 469
 748 280 423 716 459 357 599 399 380 193 303 248 596 297 445 386 359 416 471 441 573 296 523 401 500 408 875 547 434 442
 368 437 240 887 292 566 563 425 496 414 451 333 354 352 449 551 511 542 429 467 524 315 472 462 488 443 377 484 458 365
 387 550 420 486 436 435 650 324 426 510 583 478 539  36 350 608 440 316 531 576 362 464 353 508 514 388 398 371 587 489
 463 498 313 402 481 418 461 483 379 355 411 525 560 405 419 456 457 474 453 591 473 361 332 538 581 306 577 370 598 375
 428 521 631 189 667 544 503  90 530 396 543 558 126 492 410  99 568 432 554 658 519 601 345 247 470 346 572 289 512 675
 620 480 680 165 540 265 717 575  77 534 465 108 578 611 533 528 628  65 564 625  25 627 249 682 565 260 513 298 385 553
 671 579 556 404 499 781 557 221  62 485 154  46 593 159 677 546 128 536 522 497 629 695 395 281 295 257 779 255 548 708
 738 196 567 270 509 452 632 692 515 381 422 635 516 367 690 227   9 615 713 745  26  92 125 491 589 283 502 261 651 604
 623   8 691 162 715 684 574 310  20 693 609 105 176 241 622 616 634  11 763 642  38 712 211 729 760  60 624 397 358 727
 706  87 761 439 643 427 626   3  24 767 230 665 612 647 617 152  10  44 654 640 718 495  84  37 705 198 721 407 685 711
 672  85 603 287 660 545   6 694 586 733  14 723 737  68 744  18  95  59 773 834 714 526  71  22 657 243 552 376 821 597
 659 123 158 782 688 304 736 728 136 537 174 758  51 766  64 724 244 698 832 655 720 384 119 157  34  93 613 294 562 722
  88 114 844 590  39 764 803 149 505 823  32 809 739 263  89 141 137 687 850 734 400  29 124 482 800 701 815 233  42 689
 669   7 784 364 805 817 501 317 217 878  41  72 652 226 127 607 348 686 769 851 801 807 208  97 836  40  16 117 676 179
 811 220 239 710 155 636 786 753 130 879  33 662  12 663  53 704 749 272 209 417 826 777 104 856 810 168  17  15  30 819
   1   2 788 697 837 792 754 842 238 849 678  67  58 843  13 846 273 213 862  21 838  57 129 827   4  54 808 144 110 870
 393 290 771 116 841  50 373 833 293 822 190 783  19 630 228 774 229 858  28 877 335  56 759 799 845 181 835 191  35  81

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.86e+06us (= 4860ms, 4.86s)
Wall-clock time (full program): 4.92597e+06us (= 4925.97ms, 4.92597s)
Satisfaction error: 0
Number of search iterations: 2075
Number of local moves: 824 (including on plateau: 343)
Number of local minimum: 154 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14818
Total number of local moves: 6525 (including on plateau: 2526)
Total number of local minimum: 1041 (including on plateau: 323)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 880 168  79 838  69 809 899  75 609 191 604 502  71 211 722  66 106 100  50 787 864 154 888 872 132  43 158 784 884 900
 724 867  65 123 828 777  85 735  72 832 797 765  67  76 696  32 119 163  33 669  98 638  31 769 650 175 860 751 879 139
 826 598 858 837 113 783 179 749  93 747 583 878 152  95 738  62 120 148 136 874 394 260 681 417 108  81 159 895 741 210
 680 258 110 562 393 863 892 625 104 812 124 708  83 112 885  59 176 151 479 606 277 240 595 133 893 608 876 869 205 137
 659 727  28 866 898 671 126 857 142 173 733 868 167 220 695 285  73 189  48 871 107 847 612 378 234 683 217 628 343 170
 854 877 165 701 213 820 742 116 105 790 851 861 219 324 281 131  39 748  96 525 249 202 194 875 387  89 539 853 140 529
 302 821 273 616 670 730 804 834 195 185 786 881 198  63 822 246 241 332 305 756 235 274 814 253 203 236 157 815 346 122
 886 883  84 823 109 698 757 870  90 243 808 882 269 153 890  80 192 801 169 339 201 830 891 326 178 239 300  77 216 231
 734 678 171 688 370 726 762 117 873 263 840 731 290 406 673 187 469 781 278 310 227 675 199 323 352 186 156 348 396 306
 894 430 257 614 844 317 134 825 212 723 802 215 366 312 303 325 293 764 242 224 328 836 408 221 791 155 481 576 296 327
 401 345 451 761 519 627 237 852 446 208 760 656 262 391 495 177 321 771 467 330 341 544 435 710 255 299 426 372 340 316
 360 266 291 575 434 543 487 763 491 897 574 364 390 347 388 449 209 373 261 307 720 308 461 304 405 358 292 740 887 271
 248 411 166 729 613 549 579 666 441 896 172 651 320 431 459 457 662 284 496 265 432 407 444 286 610 338 402 359 289 453
 361 318 362 534 386 623 429 700 569 288 476 438 254 409 425 455 384 568 889 439 319 315 436 385 259 536 592 538 515 313
 440 508 322 424 454 634 478 677 399 767 433 337 521 309 475 480 416 463 578 294 267 533 410 462 392 414 331 415 412 470
 334 513 581 442 368 427 607 468 420 344 421 380 483 437 418 460 443 563 342 485 524 540 365 488 553 356 545 428 482 298
 552 379 601 287 620 395 619 450 333 477 404  18 499 498 301 692 389 445 594 618 403  12 588 419 447 492 528 375 577 503
 489 532 398 238 350 275 493 464 564 585 546 374 471 448 297 637 668 474 363 766 458 218 371  25 376 504 591 558 516 466
 484   8 500 276  52 351 541  58 626 377 526 490 663 537 630 799 465 640 382 452 523 397 422 511 400 381  88 586 633 717
 559 646 653 486  53 349 527 183 660 353  70 456 561 631 599 600 501 149 644  13 554 510 214 716 643 506 621 357  99 602
 693 573 512 184 355 279 687 244 699 196 530 200 624 597 268 589 603 570 641 679  38 580  87 648 713 642  20 413  19 632
 572  91 571 182 664 230 551 282  41 197  47 222 617 702 584  11 714 685 566 657 655 518 256 709 647 818 103 507 494 622
   6  86 547 114 250 280  40 535 743 596 283 473 531 732 635 593 739 645 654  30 774 229  23 560 555 737 694   1 587 843
  36 590 704 174 782   9  68  26 565 629  42 207 676 691 128 842 497 145 658  21 794 706 665 367 162 611 758 775 472 715
  34 138 776 505 190 193 247 336 522 272 582  78 824 725  97 712 550 682 517  94 721 636 556 711  49 689 684  16 674 705
  61 264 855 141  10   7 329 118 788  55 161 150 841 605 160 816 806 652 690  45 697 649 354 795 752  74 807 225 746 862
 181 270 796 520 773   3 101 144 856 615 245 135 793 667  22 798 831 226 800  37 835 115  29 770 744 753 111   4 514 827
  15 204 736  64 542 295 314 223 846  92  51 233 750 785 180 845 817 369 792 810 707 779 728  56  54 805 661  17 718  27
  44 557 754 129 813 127 755 335 146 548 143 130 850 772 147 811 839 383 567 423  14 252 639   2 768 848 686 228  60 745
 206 509 849  82 780 125  46 188 865 164 121 232 703 829 102 819 833 251 778 789 759 311 719  24 803 859 672   5  35  57

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.45084e+06us (= 3450.84ms, 3.45084s)
Wall-clock time (full program): 3.51608e+06us (= 3516.08ms, 3.51608s)
Satisfaction error: 0
Number of search iterations: 1073
Number of local moves: 710 (including on plateau: 140)
Number of local minimum: 44 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7848
Total number of local moves: 5163 (including on plateau: 1209)
Total number of local minimum: 367 (including on plateau: 167)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  40 887 878 198 765  96 669 872 202  52 126 855 848 319 851 143  36 415  18 139 845  61 277 755 740 746  14 843 791  34
 846 432 801 134  77 317 238 697 857   6 743 658 853 780  10 250 269 400   7 727 847 183 219 832 491 769  11 810  43 208
 797 509  41 304 775 239  33 421 804   5 185 815 852  37 817  12 732 315 695 106 777 718 748 830 353 678  15  39 837  26
 842 624 785  56 253   3 244 863 820 703  65 468 861 699 826  42 120 288 665  22 834 115 365 192 472 784 133 564 762  45
 792 211  88  51 782 217 723 618 805 471 231 796 806 767  24 187 499  55  54  25 774 232 159 600 530 747 725 702 825  19
 828 617 675 225 156  67  87 756 752   4  81 676 476 685 781 596  32 181 751 163 716 155 190 800  21  70 768 742 821 643
 607 313 671  63 141 436 613 649 773 637 545 744 816  16 734 377  28 221 713 688 693 260 108  13 357 652 802 574  72 199
   2 236 660 672 302  80 392  20 520 512 687 717 776 709  71  17  38  49 739 505 629 646  35 691 210 728 814 612 735 711
 111  98 686 331 223 178 630 833  89 396 726 452 446  23   8 623 681 341 696 737 536 587  93 651 256 527 715 595 684 563
 550 633 591 206 166 193 158 664 561 647 532 654 535 724 677 395 394  48 641 254  27  82 123 714 130 531 680 628 721 656
 615 101 627  85 597 170 621 424 533 366 100 700 589 663 546 318 720  50 620 517 543 162 151 524  95 662 568 622 586 640
 648  73 642 609 340 375  29 429  75 240 552 137 610 750 483 590 507  46 666 585 698 645 604 399  30 682 496 593 577 405
 502 567 480 407 114 361   1 500 763 362 346 418 339   9 449 506 455 555 425 638 704 573 578 570 408 470 458 515 541 501
 511 434 575 447 248 605 553 440 525  69 460 504 598 513 493 559 443 334 450 420 631  44 485 479 197 557 529 498 569 345
 544 495 371 497 478 526 614 428 487 522 414  83 310 549 321 397 410 230 381 537 565 444 560 404 466 534 463 510 325 650
 469 869 431 503 556 580 494 352 548 461 465 401 364 547 448 281 518 562 336 475 437 416 388 323 332 337 327 464 462 369
 359 294 347 508 705 385 306 823 326 488 417 798 679 355 368 894 372 486 338 356 482 271 354 433 566 182 380 477 376 390
 423 870 382 411 419 528 865 438 328 599 350 635 273 329 409 343 378 778 291 459 374 403 312 344 827 274 280 305 398 490
 314 860 335 222 611 516 276 295 427 383 270 391 422 492 484 673 481 616 882 430 435 330 393 442 883 363 373 255 303 358
 167 692 456 844 523 745 694 540 360 113 413 301 265  92 439 349 445 867 263 287 252 761 808 229 625 538 426 386 311 324
 216 730 241 877 474 738 790 351 293 893 441 322 160 297 266 571 770 632 308 284 467 333 881 300 838 157 207 220 169 289
 243 307 367 342 387 788 772 136 898 668 286 320 112 856 205 733 835 876 261 299 195 731 799 204 729 215 245 292 131 283
 890 636 242 884 412 764 757 454 226 576 379 653 203 282 109 180 298 871 272 172 278 874 866 267 519 257 290 309 348 247
 601 811 119 683 285 712 899 249 316 279 152 235 264 858 579 760 795 542 171 218 177 233 473 862 551 402 154  62 224 849
 188 164 124 793 850 896 753 140 213 754 708 194 196 228 105 787 779 451 102 594  64 875 868 145 657 168 251 258 584 626
 138 161 214 719 900 670 707 142 186 829 606 184 212 457 200 602 149 741  78 892 117 873 275 296 818 891 259 122 268 809
 148 189 234 608 147 581 227 237 107 749 840 135 209  79 619 246 129 667 822 836 165 758 812 262 854 153 813 864 128 897
 103 592 888 558 831 406 144 582  60 803 690  91 146 701 554 639 839 655  90 706  31 841 514  68 384 150 736 453  59 201
 132  53 389 644 824 771 179  86  58 807 819  94 191 116 880 786 689 521 895 783 125 370 489 710 110 173 789  74  99 859
 889  57 175 634 174 572  47  76 603 121 886  84 104 583 759 659 674 722 885 661  97 539 588 176  66 118 794 127 766 879

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.88367e+06us (= 2883.67ms, 2.88367s)
Wall-clock time (full program): 2.94772e+06us (= 2947.72ms, 2.94772s)
Satisfaction error: 0
Number of search iterations: 766
Number of local moves: 633 (including on plateau: 113)
Number of local minimum: 23 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5072
Total number of local moves: 4534 (including on plateau: 865)
Total number of local minimum: 99 (including on plateau: 98)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 895  96 874  46 880  62  85 172 780 882 867 101 529 633  98 838 754 158 712  37 729  47 137  74  50 775 574 693  40 897
 808 886  59 100 854  61 755 878 845 651  64  80 567 177 138 605 856  91  54  79 692 105 182 822 150 881 201 758 865 251
 842 119  48  51 837 577 872 744 695 724  77 133 790 152 879 746 655 332  81 126  63  69  67 161 203 776 824 896 800 176
 648  95 826 213 204 113 715 793 700 738 156  72 683 795  83 200 756  68 179  53 749  73 247 667 228 654 893 840 186 888
 656 885 861 275 774 356 602 835 877 211  57 212 819 170 167 730 764  58 320 257 273 768  82 108 163 437 697 718 198 185
 763 130  75 894 239 445 523 843 864 855 181 103 850 777 117 814 662  65 110 160 374 832 261 159 898 262 171 727 169 192
 770 180 862 857 274 206 760 787 833 313 277 241 671 637 322 841 638 244 120 146 193 402 210 612 102 799 260 639  52 267
 615 321 397 245 745 123 606 711 765 271 153 357 208 291 155 572 728 252 202 545 558 325 812 863 276 807 367 717 269 259
 740 323 629  22 296 859 645 248 531 794  76  56 876 650 342 564 750 306 309 249 669 199 365 286 225 873 368 802 314 149
 418 407 353 255 448 301 660 188 543 786 231 404 280 570 214 458 426 270 168 178 899 817 416 330 562 674 853 457 381 568
 626 465 361 312 852 858 604 166 569 462 860 298 378 294 347 282 468 382 500 184 440 628 234 319 705 304 232 666 391 328
 460 428 475 463 370 285 327 816 831 455 372 884 221 414 190 406 348 476 452 237 623 805 553 646 345 424 283 484 140 302
 806 307 236 547 264 385 847 226 565 341 287 447 544 441 253 305 664 411 336 412 900 890 557 295 431 292 173 608 421 324
 542 377 510 598 887 340 482 889 337 246 243 383 379 456 541 439 386 318 539 375 891 373 339 376 350 438 491 278 369 343
 454 467 538 481 329 584 388 507 419 461 360 403 398 288 488 443 563 556 401 479 485 489 394 363 506 575 355 487 464 390
 409 550 478 316 423 387 346 351 470 290 593 459 566 515 395 349 586 266 389 495 410 413 526 498 494 554 474 536 444 533
 453 405 399 326  12 432 400 352 505 641 581 284 422 501 480 589 537 546 334 384 658 571 497 532 540 486 644 380 592  32
 433 354 611 518 559 256 219  42 517 174 297 673 450 502 596 535 511 687 408 504 220 610 530 652 576 197 516 238 603 527
 216 396 534 132 509 548 127 415 242 622 508 600 521 525 499 338 233 665 632 496 209 672 513 520 573 635 128 254 670 583
  13 607 364 473 493 552 114 344 109 631 555 699 681 466 483  88  60 392 691 435 303 595 590 788 524 587 551 451 427 449
 144 677 609 582 752  14 217 585 265   9 679 549 624 519 492  43 272 767 620 643  20 189 704 514 614 625 429  17 560 781
 175 619 782 594 621 393 293 675   4 721 601 722 129  99 617 689 112 709 707 659 420   5 579  86 657 111 218 371 678 469
 187 425 653 742 139 618 223 690 299 772 661 512 147  70 561 685 333 434 627 702 145 229 471 668 716 207  87 300 684 528
 578 613 714 640  93 680 616 227  97 472 279 522 118  24 783 703 183 733 649 708 116 281 591  36 698 122 747 142 720 630
  71 636 731 710 599  26 121  92  39 417 797 741  29 766 839  55 141 682 696 834  35 771 792 597 446  49 647 115 791 250
  94 796 143 762  10 804  18 191 240 157 642 701 154 761 871 713 104 442   7 779 263 726 732 268 688   3 503 430 778 735
 215 875 151   1 676 810 315 477  27  84 759 849 335 366 828  89 362 821 737 851 311 769 580 205  28 490   8  21 736 739
  19 870   2 751 135 809 725  78  15  34 757 803  11 124 706 230 308 753 820 866 694 106 801 634 125 195 164 436 719 825
 134  41  44 773 235 785 224 148 310 107 811 359 818 789 869  30 289 883 892 798 358  33 663 588 829  25 827  31  38 784
 331 165 196 836   6 846 686  45 222 194 734 868 317 743 162 136  66 748 823 844 815 723  90 848 813 258 830  23  16 131

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.06497e+06us (= 3064.97ms, 3.06497s)
Wall-clock time (full program): 3.13037e+06us (= 3130.37ms, 3.13037s)
Satisfaction error: 0
Number of search iterations: 805
Number of local moves: 647 (including on plateau: 114)
Number of local minimum: 29 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5348
Total number of local moves: 4475 (including on plateau: 1126)
Total number of local minimum: 166 (including on plateau: 124)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 859 142 823 223 292 790 115  41 302 807 232 869   8  43  61 750 731 187   7 240 842 846 801  21 291 704 777 808 870  33
 151 855 877 242 567 114 145 394 131 812 405 847   5  16  46 753  34 792 111  87 827 310 863  13 712 211 830 814 805 746
 244 749 613  58 217 245  51  42 756 744 714 848  24 160 660 795  62 303 122 159 794 780 890 844 809  94  14  32 838 854
 185 675 636 658 385 759 218  72 765 350 802 662  15 751  22 431  35 429 120 101 767 857 728  11  37 764   6 798 740 736
 367 772 606 272   1 197 128 787 782 755 204  59 254  64  75 369 289 698 106  74  84 709 735 555 672 784 741 831 757 788
  40 639 791 113 216   3 668 717 729 422 747 683  38 718 277 191 294 253 182 175 834 659 785  12 483  79 593 545 776 853
 317  98 670 199 147 173   2 485 781 640 689 663 336 702 215 306 136 638 372 381 586 656 622  71 715  26 692 742 804 651
 168 582 696  50 149 179 125 103 700 705 549 269  10 673 666 799 719 634 251 162 598 743  20 399 476 661 556 649 487 737
 206 623 786 625   9 183 646 614 612 681 648 530 445 635  18 212 234 208 214 559 602  27 645 585 479 676 550 529   4 730
 383 841 678  25 374  23 201 652 607  48 578 627 643  28 163 276 259 629 284 531  52 471 475 540 690 703 691 697 592 754
  44 427 426 562 548 482 228 532 564 514  19 456 537 633 611  99 346 608 280  47 328 588 693 587 721 490 565 669 342 569
 502 533 739  88 552 481 581 398 583 573 615 465 501 641 574  17 135 460 301 535  81  39 720 495 546 684 453 542 177 504
 434 519 637 437 443 444 184 605 609 518 455 411  73 544 560 391 319  29 516 597 524 526 554 577  36 428 523 596 402 624
 621 380 339 467 617 459 557 551 543 509 363 373 599 153 506 117 356 610 464 463  90 600 508 365 424 491 458 325 589 618
 361 553 507 619 377 511 442 521 594 527 285 279 438 503 665 324 520 468 371 425 392 576 418 435 396 568 439 603  82 316
 415 335 357 488 379 421 478 513 362 400 494 401 572 393 512 454 682 441 432 505 417 522 436 632 783 414 247 321 312 397
 333 499 446 274 462 305 497 449 470 452 331 466 408 575 496 631 376 430 448 461 473 450 477 347 343 345 763 403 654 451
 789 486 344 297 773 489 655 257 616 287 355 329 724 348 498 738 534 828 528 370 266 326 166 209 132 419 420 388 708 236
 686 275 484 296 416 299 340 352 384 271 334 727 677 413 433 769 570 725 878 390 386 195 330 410 282 580 318 515 492 288
 723 409 378 395 722 300 387 278 270 873 811 338 406 359 407 480 337 864 642 138 412 354 304 440 202 858 469 264 382 313
 664 221 295 358 688 261 311 225 341 821 298 351 897 375 165 766 584 360 695 628 733 194 308 898 896 235 262 389 155 141
 806 246 327 881 323 349 250 309 850 252 368 229 353 879 314 447 571 268 547 322 561 884 493 604 892 320 293 219 102 256
 726 888  54 263 818 832 563 845 150 172 238 205 169 404 590 595 680 706 710 768 237 889 307 210 273 130 181 180 474 258
 713 891 239 867 778 893 849 124 224 231 286 164 835 366 281 758 679 118 457 707 500 170 243 797 226 203 290 265 161 200
  69 167 171 882 220 674 894 109 364  91 591  67 868 213 667 687 536 824 826 732 190 186 315 699 748 579 233 283 423 207
 626 189 148 762 852 793 815 198  31  66 836 833 895 134 872 472 885 146 810 886 840  85  56 267 119 241 193 121 188 156
 630 174  80 820 685 839 822 861  49  57 800 126 650 222 900 133  92 116 856 819 539  77 139 866 178 112 883  95 817  78
 517 137 104 779 647 510 816 770 176 566 249 255 734 899 774 525 775 538 711 657 260  83 332 129 248 829 154  86  97 158
  65 110 196 862 701 694 876 837 140 227 143 887 541 875 843 123 880 152 558 825 192 620  63 752 105 127  70 761 230  60
 871 100  68 653 157 813 671 874  30 144  76  96 860 796 644 107 865  53 716 771 108  93  89 745 601 760 851  45  55 803

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.40086e+06us (= 5400.86ms, 5.40086s)
Wall-clock time (full program): 5.46992e+06us (= 5469.92ms, 5.46992s)
Satisfaction error: 0
Number of search iterations: 1026
Number of local moves: 609 (including on plateau: 149)
Number of local minimum: 64 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 17053
Total number of local moves: 7294 (including on plateau: 2642)
Total number of local minimum: 1200 (including on plateau: 318)
Total number of resets: 5
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 693  62  59 751 823 193 109 115 713  78  33 892  55  22  64 846 665 817 700  60 744 886 875 130  67 697 104 515 857 890
 413 459  38 183 446  37 656 117 242  61 112  25 110 874 142 767 556 743  82 519 848 584 859 723 562 896 100 649 900 812
  96 879 469 853 644 844 128 830 398  34  49  23 766  90 699 252  84 727  91  69 493 791 540 321 872 815 819 531 152 156
  99 136  45 899  98 126 177 852 755 160 508 179  21 408 864 194 645 833 154  94 733 679 881 161 426 835 884 782 569 318
  66 125  48 792 895 226 821 116 845 240 303 475  29 626 839 877 847 898  54 150 662 274 769 170 286 541 134 655 617 135
 209 294 200 159 869 704 334 706 711  39 885 206  19 184 827 164 754 218 585 173 234 785 765 189 868 801 121 616 651 245
  50 212 208 227 756 144 897 496 865 269  97 165 175 278 172 220 805 834  92 196 816 623 630 860 724 734 129 806 825 210
 148 275 199 831 229 870 296 795 558 243  80 259 311 488 180 326 429 894 263 204 858 277 811 330 836 682 253 703 650 237
 202 365 889 282 279 205 123 567 891 310 317 241 163 843 867 151 854 166  65  89 842 804 549 143 740 590 203 709 606 460
 211 190 249 181 736 888 312 217 636 855 145 185 228 230 366 512 689 223 261 364 510 814 593 285 681 800 377 668 851 258
 378 146 315 314 866 147 448 451 582 293 566 288 250 676 262 735 436 534 343 336 737 355 621 385 316 620 410 673 752 280
 499 873 401 383 328 738 421 337 444 360 329 764 357 712 299 231 341 295 883 396 346 392 430 400 340 505 399 362 686 264
 395 331 371 409 370 887 583 826 670 376 893 222 491 588 368 465 313 308 153 327 393 304 716 276 349 555 449 507 384 236
 344 363 386 431 176 215 373 397 420 300 354 347 457 701 272 463 613 324 603 352 611 244 563 596 525 810 619 387 610 659
 474 472 453 335 609 351 455 481 391 506 536 382 407 417 599 390 248 494 551 520 477 464 422 380 479 466 402 356 503 495
 468 456 454 290 389 516 381 388 578 423 367 375 369 438 490 535 442 648 568 498 445 595 406  71 500 433 405 411 538 638
 511 514 714 424 518 552 319 624 323 576 338 492 504 256 542 439 522 372 643 425 374 579 289 394 480  32 443 487 359 470
 483 530 427 605 450 489 517 108 192 640 301 482 441 414 452 447 602 361 502 432 560 478 273 509 561 214 720 415 434 476
 565 546 557 687 683 691 404 219 292 298 622  79 592 657 607 628 529 523   6 696  47 521 332 435 281 232 715 118 255 698
 632 527 629 652 631 564 440 169 284 597  68 539 513 111 486 573 543 608 574  30 225 639  11 612 604 333 554 548 358 461
 707 654  41 471 132 634 726 730  44 526 580 666 437 283 658 637 615 547   3 550  16 614 342 781 661 309 428   7 188 528
 692 591 575 570 671 685 544 246 353 601 799 572 672   2 725 729 106  51 532 633  53   4 267 688 139 198 778  42 379 618
 577 777 705 537 587 265 776  14  81 669 589 501 553 305 739 559 545 708 759 763   8 187 322 625 141  56 780  72 213 102
 674 690 731  75  73 667  58 741 646 721 680 600 772 291 127 760 137  43 647 762 467 403 350 103 235 105 642 247 497 571
 664 773 594 107 224  12 820 684 207 663 458 794 840  93 695 748  76 158 653 694  74 627 297 753   9 155 789  86  18 750
 768 138 758 233 485 320 702 598  17 533 771 746 742 710  20 162  40 635 871 850 270  88 133 677 268 462 149 306 260 803
 861 660 798  95 157 131 174  36 124 837 784 775 824 484 722 419 251 120 829 793 802 168 182 822 787 339   5 307  28 201
 813 719 473 783 271 586  10 581 191 761 832 675 863 790 101  27 239 114 418 786  13  52  24 818 195 167 882 348 266 717
 788   1 880 186  57 416 779 749 221 828 862 728 809 747 254 119 287 197 774 876 641 171 178  70 238  87  15 678  83 796
  35 757 849 770  63 412 732 325 841 718 257 838 745 797  77 140 302 122 856 878 216 113  85 808 345  46 807 524  26  31

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.44709e+06us (= 4447.09ms, 4.44709s)
Wall-clock time (full program): 4.51323e+06us (= 4513.23ms, 4.51323s)
Satisfaction error: 0
Number of search iterations: 947
Number of local moves: 877 (including on plateau: 292)
Number of local minimum: 11 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13313
Total number of local moves: 5611 (including on plateau: 1827)
Total number of local minimum: 954 (including on plateau: 210)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 744 397 810 116 751 846  54 165 214 760 361 849   8  37 166 808 150 489 201 832 866  26 190 250  11 824  90 872 743 885
  91 461 847 263 763 790 748  39 210 826 155 837   2 298 719 430 565 806  74 877 836  57 699 174  48   9  95 818 136 842
 115 395 857 328 761 787  59 827  46 876 168 601 856 114 753 172 392 869 261 880 788 126 247  80 169 343  18   4 816 807
  19 657 814  21 711 841 783  51  38 804 411 756 815   3 310 737 180 878 217 717 772  45 139 153 311 675 256 641 564 196
 801 391 696 100 745  32 515  69 594 631 108 823 774 188 645 235 129 870  97 692 778 125 676  23 275 732  44 701 855 171
 643 119 734  83 651  73 738 821  36 677  75 644 794 336  55  28  15 653  82 798 673 274 708 694 468 739 492 776 622  14
 730 655 616 251 688 805 729  43 460 323  77 379 724 178 598 290  93 624 179 770 702 591 390 523  10   7  84 620 686 690
 659 234 718 224 828 685 817  47  42 566 635 698 757 200 363  31 143 682  52 660  70 791   1 780 302 606 182 693 536 513
 610  88 663 538 599 873 286 710 501 781 109 524 454 176 672 141 158 714  20 548 506  41 338 138 232 666 364 769 573 723
 629 183 376 705 638 547 402 535 292  29  64 681  24 221 613  60 500 520 796 628  78 649 647 541 415 623 164 607 727 621
   5 225 679 669 583 521 360 586  71 674 441 639 658 110 527 193 584 577 773  49 485 700  50 596 130 571 299 713 473 574
 330 630 626 522 339  61   6 614 602 615 640 475 543  66 568  63 400 558 512 687 387 228 667 561 316 570 325 578 519 507
 532 695 444  68 204 487 627 646 491 636 542 597 544 511 517 380 525 609 508 314 533 465 386  17 428 349 280  13 612 555
 425 557  22 617 633 569 595 587 212 498 474  27 642 514 455 452  30 398 249 432 600 341 530 447 457 588 579 654 405 526
 572 470 443 381 545 419 357 464 377 480 581 550 408 463 407 593 482 409 301 435 494 580 270 436 546 367 534 467 333 351
 429 418 503 559 529 459 318 401 423 366 554 481 426 582 592 445 539 456 389  12 471 446 439 497 516 484 342 505 416 518
 373 716 531 537 358 406 820 285 551 417 822 356 372 540 306 795 345 326 334 322 284 479 393 268 553 437 449 300 331 509
 374 656 466 502 414 421 528 297 478 278 450 327 661 344 585 499 472 413 504 453 312 495 369 476 670 383 469 442 294 483
 403 288 431 365 223 296 562 370 289 422 385 882 218 721 458 689 835 347 348 279 399 384 603 309 691 556 433 227 254 848
 448 884 313 291 404 576 362 148 378 184 883 355 277 552 864 488 731 255 308 394 359 637 208 304 486 283 549 382 337 875
 207 664 410 668 320 276 244 353 340 496 854 273 215 749 510 388 191 346 767 493 324 782 240 715 720 265 825 424 220 236
 230 831 222 746 238 211 175 335 706 303 412 282 281 560 192 736 811  65 893 317 287 797 608 233 762 683 752 231 368 248
 198 112 162 860 245 262 396 891 352 307 881 243  87 789 216 771 619 242 886 420 293 160 786 703 830 181 765 229  62 567
 634 733 144 266 195 371 131 863 834 213 862 259 151 887 315 865 812 272 589  94  86 632 427 258 766 260 590 305 267 434
 892 867 202 709 219 604 246 123 838 226 203 269 122 758 879 839 768 799 354 237 295 170 747 722 152 124 438 321 264 128
 900  92 101 252 462 107 133 742 890 209 605 257 121 329 177 575 662 127 819 712 134 851 728 852 440 853 899 159 140 187
 206  98 105 451 103 697 840 652 754 147 704  85 802 779 156 350 680  40 611 205 678 777 740 784 775 173 707  96 185 135
 189 563 490 759 113 241 167 874 896  79 149 137 829 895 199 809 785 102 792  76 319 845 894 271 868 117 750  72  89 146
 650 332  56 803  99 120 684 871 741 625 671 111 186 726  33  35 194  16 755  25  58 858 142 897 375 850 898 735 888  81
 477 104  34 861 154 132 833 106 859  67 239 118 764 889 665 618 725  53 844 157 648 163 253 813 793 197 843 161 800 145

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.34552e+06us (= 3345.52ms, 3.34552s)
Wall-clock time (full program): 3.4218e+06us (= 3421.8ms, 3.4218s)
Satisfaction error: 0
Number of search iterations: 1034
Number of local moves: 733 (including on plateau: 184)
Number of local minimum: 47 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6865
Total number of local moves: 5084 (including on plateau: 1239)
Total number of local minimum: 266 (including on plateau: 166)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 790 100 151 891 684 775  39 683 611  38 160 851  37 104 751 168 128  54 516 794 478 521 895 443 113 880 875 869  92  24
 806  64 114 897 863 858 532 680  77  59 639 605  96  63 583 212  74 124 762 455 109  58 178 894 856 865  98 886 385 623
 793  52 898 701 703 782 860 819  94 139 211 823 182 148 140  60  95  70 660  36  50  57 826 111 449 885 244 892 883 852
 817 226 250 899 582 815 795 718  90 375 203 271 626 136 890 144 173 180 609 840 196 220 889 172 804 103 650 130 120 592
 882  89 159 517 534 772 685 874  67 213 759 781 632 188 238 278 515 223 850 252 251 288 169 572 126 896 755 163 117 670
 777 311 270 312 590 881 493 624 157 132 774 807 398 487 296 458 122 229 204 353  91 294 825 707 789 183 821 346  49 735
 671  93 230 833 838 558 878 769 241 436 726 566 577  80 830 746 281  47 887 141 170 275 192 119 750 291 176 199 193 722
 214 218 619 698 569 778 166 884 150 326 509 483 261 268 873 293 345 325 636  62 228 161 788 888 827 331 792 362 253 208
 741 242 272 696 637 843 864 859 893 187 391 266 231 286 194 537 198 232 237 739 243 635 401 745 134 292 330 441 301 448
 678 273 370 653 849 557 686 649 339 900 300 412 812 217 234 444 256 320 162 283 824 267 340 763 207 477 123 318 596 206
 245 743 313 630 663 205 791 265 581 484 879 219 235 342 405 682 349 246 329 757 210 247 407 689 236 351 842 471 372 327
 343 420 328 348 631 841 742 260 306 620 344 215 335 400 285 613 392 290 853 549 424 316 427 813 747 459 201 496 233 284
 359 857 369 305 451 307 666 222 388 542 367 341 287 423 381 548 510 877 360 439 350 872 508 831 195 366 410 333 334 317
 462 257 601 365 361 280 379 522 422 425 338 453 498 355 465 332 543 481 408 387 570 421 276 714 470 594 373 855 540 368
 371 404 323 321 221 394 861 681 399 489 573 383 445 539 358 314 403 442 600 519 310 308 454 805 380 354 461 356 610 437
 551 504 492 474 417 414 552 377 679 125 376 397 337 485 472 395 309 501 466 571 553 262 488 525 615 438 396 322 675 347
 457 431 452 409 297 463 529 497 413  87 526 511 456  30 434 127  48 708 541 710 625 468 644 382 563 473 500 618 411 705
 576 691 298 536 499 505 393 512 655 561 440 435   4 621 490 264 545 145 319 430 279 616 429 480 591 546 464 533 179 479
 502 595 562 527 495 503  28 518 580 699 165 209  13 450 428  69 648 523 555 486 761 406 507 175 560 659 389 416 494 593
 661 535 771 108 269 299   1  51 390 259 550 664 766 513 447 475 603 612 538  29 564 647 597 227  35 629 446 634 665 530
 556 598 567 302 469 171 254 152 606  23 608 706  72 482 575 520 415 638 476 752  18 547 602 418 574 154 110 753 720 677
 640 579 565 514 197 433  84  88  27 673 189 131 585 809 185 524 641 730  73 642 814  34 658 190 693 754 723  66 607 667
  61 672 662  81 491 115 277 118 694 802 129  19 808 756  82 734 651 715  43 711 584 155   5 116 589 587 690 731 749 688
 177 728 770 174 239  79 460  76 149 588 656 363 800 554 727 289 818 822 147 700 643 810 687  71 143 240 617  10 787 191
 137 695 692 181 133 121 258 184 578 721 384 249 829 784  56 402 531 816  42 709 604 797 713 216  32 627 652 669 657  46
   2 737 744  86   6  78 336  14 836 820 167 704 702 654 697 559 773  15 378 202 799 844 112 303 544 138 668 780 712 105
  40 506 676 798 200 146 352 528 776 426 674 186 599 867 274 854 633 834 324 740 717 614 357 295 156  33 622 102 142  44
 106 783 801 225  75 153 101 255 732 725  53 733 386 796 764 845 847 719  41  85 374 785  65 364 419 724  12   3 758 786
  17 467  99  26 304 107  21  68 748 765 586 716 738 832 646 767 803 729 628 135 848 779  45 224 760  22  20 736 870   9
  83 645  97   8 248 282 432 568 837 876 839  16 768 846 315 862 866 868 871   7 828 811  31 263 158 164  55  25  11 835

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.8603e+06us (= 3860.3ms, 3.8603s)
Wall-clock time (full program): 3.92473e+06us (= 3924.73ms, 3.92473s)
Satisfaction error: 0
Number of search iterations: 1392
Number of local moves: 690 (including on plateau: 227)
Number of local minimum: 94 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10075
Total number of local moves: 6190 (including on plateau: 2024)
Total number of local minimum: 520 (including on plateau: 218)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 781 619 815 133  41 843 360 586 151  26 621 637  65 686 669 723  36  22  77 754  83 881  67 808 654 867  80  18 840 572
 868 493 860 152  10  91 571 550  55 121 198 811  32 768 671  87 897  93  72 779 486 898 684 861 438 882  79  61 846 101
 823 899 645 852  73 323 479 552  59 417 522 829  66 833 609 821 888 126  57 786 153 735  46 489 112  89 172  30 884 146
 150 784 812 877  50  86 831 638 144 134 794 704 108 737 708 138  56  39  47 703 261 857  76 646 889 232 832 187 805 190
 194 762 848 127 182 132 886 690 162 607 115 763 166 769 758 816  37 147 176 736 853 655 120 155  94 502 200 113 858 892
 221 642 404 248 252 827 851 711 211 207 171 214 893 818 856 225 237 879  88 743 125 872 223 332 797 195 160 217 196 700
 841 870 854 174 212 169 891 734 233 201 606 593 128 820 580 100 210 275 246 772 576 855 249 468 222 243 878 117 231 167
 285 633 810 292 204 276 885 817 226 330 683 874 265 202 819 177 239 604 193 592 240 283 826 809 234 242 350 179 803 143
 304 628 629 227 206 342 570 864 753 273 729 631 209 643 795 340 338 272 253 801 673 492 255 785 236 278 219 312 317 141
 297 541 364 366 229 511 482 624 358 807 374 622 354 379 264 436 220 329 315 721 539 313 259 793 900 895 251 203 435 334
 250 869 557 205 149 303 865 512 298 353 709 876 258 836 307 419 286 421 310 732 245 335 351 716 896 186 299 443 262 267
 224 871 402 390 394 270 837 663 740 320 535 385 355 418 368 428 372 488 452 484 472 326 880 508 235 331 333 293 473 268
 282 520 845 311 387 660 495 875 440 433 392 578 352 337 429 376 308 426 883 367 454 344 396 365 447 322 401 213 477 400
 279 445 532 345 501 397 359 356 887 410 357 373 280 483 616 289 386 380 415 370 620 491 381 442 406 391 890 439 455 540
 388 530 371 377 399 475 427 375 328 389 566 437 430 408 416 302 378 431 471 517 470 524 521 444 538 494 515 588 525 481
 509 382 409 449 518 543 514 460 314 257 542 441 556 393 309 305 407 403 463 411 636 425 589 500 534 450 181 490 565 560
 321 300 395 343 467 469 587 287 405 553 623 451 413  78 336 513 547 254 499 600 398 456 555 583 611 519 506 432 453 561
 420 424 594 485 573 527 461 281 383 478 549  11 537 474 465 510 577 189 503 341 554 564 574 296 568 446 348 466 505 412
 598 183 363 528 569 651 274 301 504 531 256 559 664 670 579 369 497 545 384 448 316 215 526 118  62 498 653 462 507 685
 714 306 544 679 529 423 168  68 459 602  71 269 650 548 124 612 698 712 361   4 122 614 641 458 114 617 644 657 516 591
 551 294 156 563 680 584 266 244 414  16 487  43 632 627 199 546 533 659 693 601   6 558 599 197  29 585 692 689 676 696
 608 284 319 603 675 695 347  97 626 738 230 208 590  42   8 668 648 536 647 228 677 157 667 615 263 752 596 697 140 154
 605  95 109 699 625  99 362 325 727 682  84  81 728 111  96 725 562 859 649 173 634 496   1 295 662 774 581 835 175 666
 597 271 346 745 788 656 188  64 707 730  98  60 327 164  27 635 691 777 866 129 339  52 717  44 567 824 718 674 595 119
   9 290 178 862 770 523  40 238 701 722 630 618 706 658 318 582 863 422 771  20 766 116  51  75 324 742  13 733  69 705
 639  49  17 751 764 640  38  70 180 748 672 105 694   3 216 744 107 828 747 103 750  74 661 184 480 192 792 796 710 761
 749   7  53  85 822 277 131  82 767 731 260 145 678 218 159 724  90 787 715 247 778 652 741 713  21 746 476 759 137 765
  63  48  15  54 757 847 135 288 802 782 783 610 806 142 776 130 790 780 687 148  25 104 813 102 720   2 702 775  31 798
 185 457 241 789 850  34 170 814 800  23 825 123 834  92 873 110 773 726 756 191 830 136 755 139 849 161 163 799   5  12
 760  19  28 804 839 842  45 349 681 894  33 464 739 158 165 665 844 106 719  14 434  35 291 575 613  58 791 838  24 688

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.68512e+06us (= 3685.12ms, 3.68512s)
Wall-clock time (full program): 3.75268e+06us (= 3752.68ms, 3.75268s)
Satisfaction error: 0
Number of search iterations: 1226
Number of local moves: 841 (including on plateau: 274)
Number of local minimum: 48 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9177
Total number of local moves: 5966 (including on plateau: 1929)
Total number of local minimum: 431 (including on plateau: 207)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 883 346 843  16 776  31 781 812 130 435 361 842  55 263 774 850 188  43 846 789 172 159 429 184 296 826  26 221 841 297
 303 540 819  58 216 204 704 775  59 690 767 746 132 250 304 863  29 710 832 831 294  70 547  86  25 823 828 323 677  10
 110  56   3  35 808 101 765 134 199 679 665 788 246 666 780 787 739 794 833 518 248 167 837  80 144 816 113 411 807 186
 459 163 785  68 368 128 635 799 138 678 829 881  21 708 838 873 193  32 777 680  85 722 561  46 803  13 117 152 855 108
 391  45 778 827 100  11 759 768 266 202 701 655 414 207 712 650 734  38 870 177  40  83 783 805 725  47 784 555   4 384
 271   7 599 825 760 215 860 779  44 301 762 486   6  20 698 796  72 662 749 741 106  37 729 585 173 590 719  73 727 123
 629 410 642 715 786 268  24 757  60 211 676 462  63  41   8 836 711 632 718 818  78 770 716 175  92 511 546 192 670 298
 394  23 797 801 668  54 756   2 122 383 672 747  67  49 686 744 695 697 691 531  77 517 214 573  74 644 652 242 631 312
  50 208 684 592 647 230 598 637 274 224 597 742 612 618 653 305 143 633 563 675  15 120 133 671 542 613 602 243 755 136
 161 140 674 444 622 151 559 717 689  33 648 283 658 646  18 792 579 611 624 702 299 557 104 623 209 639 593  17 661  62
  22 190 571 570 606 360 487 522 395 564 638 550 645 750 560 493 445 619 600  28  96 620 114 536 630 566 628 115  69 526
  84 424 574 502 685 278 568 200 434 286 464 549 505 438 231 510 576 492 478 565 206 575 507 519 553 534  61 494 614 609
 498 577 463 521 667 257 353 428 700 567 483 157 479 488 386 469  12 558 513   1 380 523 474 468 420 584 499 530 419 641
 449 421 538 376 398 408 514 743 537 430 495 535 450 481 554 453 355 473 289 539 317 477 401 403 528 508 433 437  64 509
 596 520 617 404 325 392 529 351 319 496 352 587 552 339 482 490 306 515 367 280 657 451 440 425 503 371 416 562 220 651
 442 389 282 458 545 308 475 350 399 366 387 340 471 397 610 484 405 640 595 533 621 527 491 516 569 415 375 300 284 541
 318 489 626 396 455 532 342 407 390 706 345 497 358 378 409 465 524 272 525 417 548 439 377 582 457 472 418 436 512 423
 402 466 422 313 362 551 388 441 709 893 293 735 782 363 452 302 456 328 426 359 821 295 372 356 431 269 354 480 330 364
 751 292 259 116 876 572 333 379 382 758 162 373 334 338 594 336 470 369 501 347 608 288 703 285 500 443 432 604 447 663
 847 588 332 291 150 583 227 370 343 867 882 261 168 349 331 270 348 412 195 885 616 879 329 337 258 249 244 736 476 692
 769 772 238 307 210 448 324 427 357 705 335 607 406 326 868 252 182 178 105 446 656 233 890 164 320 804 374 858 260 694
 898 601 197 217 385 891 316 226 688 726 166 738 290 853 223 277 889 176 205 265 754 381 287 310 322 165 255 766 311 737
 682 699 103 124 820 504 241 603 886 191 174 229 874 795 236 219 659 111 247 344 834 275 839 170 578 180 245 763 256 634
 745 851 267 254 460 895 615 400 393 790 112 235 309 327 160 240 279 865 147 862 849 222 148 461 158 273 696 721 225 556
 649 815  75 145 239 900 141  19 877 723 262 189 888 878  94 341 892 149 234 155 660 844 664  91 864 137 264 276 237 813
 580 730  57 800 181 861 773 253 728 139 118 107 752 869 212 194 365 544 185 605 748 171 321 830 707 218 591 506 187 183
 589 884 213 899 127 896 251 232 753 281 131  79 687 135 714  30 581 154 196 102 669 857 314 871 201 835 454 764 413 203
  53 315 153 894 156 875  39 740 543  90  42  27 810 771 724  89 806 817  98  81 673 625 467 811 733 169 142 793 125 854
   5 822  48 866  51 880  82 179 887  87  99  52 798 643 109  71 654 119   9 146 627 840 126 859 852 713 845 824 636 586
 485 732 856 681  66 731  76  65 814  14 897  36 683 129  95  34 228 872  97  93 761 791 198 693 848  88 809 121 802 720

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.70454e+06us (= 3704.54ms, 3.70454s)
Wall-clock time (full program): 3.76859e+06us (= 3768.59ms, 3.76859s)
Satisfaction error: 0
Number of search iterations: 1220
Number of local moves: 621 (including on plateau: 149)
Number of local minimum: 74 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9185
Total number of local moves: 5648 (including on plateau: 1605)
Total number of local minimum: 476 (including on plateau: 219)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 886 274 794  69  74  42 188 730  16 676  55 158 138 900 147  97 300 829 460  61 632 666 548 707 808 885 611 842  35 887
 121 891 743 882 108  79 168  95 708  94  91 875  65 612 133 110 177 208 127 818  83 722  56 871 812 880 801 816 872 497
 605  48 412  57 878  44 760 758 877 223  64 896  99 800 101 160 172 714 148  70 859 807 546 547 165 294 836 802 131 642
 898 149 870 485  66  78  47 670 224 273 180 838 355 150  86 124 129 636 122 581 786 787 524 718 873 351 832 895 143 645
 136 190 703 182 550 132  89 815 192 813 139 205 137 352 111 100  26 890 681 261 785 723 753 824 839 713 252 869 156 897
 153  27 277 400  93 874 264 862  20 811 249 211  34 817 181 193 209 835 797 104 194 652 745 881 679 884 278 848 144 799
 141 322 854 539 206 313 892 677 302 475 154 843 290  98 266 134 450 775 579 381 298 285 728 184 389 259 754 658 370 899
 520 219 220 166 379 146 427 649 283 819 276 780 247 894 697 467  41 229 672 320 846 253 893 378 739 357 610 614 119 255
 368 162 804 323 272 889 243 712 339 516 244 304 230 349 314 228 461 805 305 217 210 662 537 774 279 234 844 826 301 763
 250 222 342 853 396 163 242 715 265 888 288 321 318 204 225 245 426 668 803 343 883 664 504 416 239 263 764 704 270 631
 281 189 414 530 287 256 312 809 329 604 761 442 334 377 236 260 271 879 317 587 346 393 849 404 360 454 694 481 418 641
 382 441 508 827 199 226 518 197 340 684 387 756 297 251 413 384 216 476 788 363 380 324 776 471 841 289 347 456 372 606
 212 306 373 528 196 303 366 417 498 810 409 174 492 291 326 282 500 580 790 268 325 750 784 406 315 876 560 552 361 465
 534 474 529 444 590 308 496 402 502 446 385 371 348 405 237 422 185 583 391 533 863 411 319 299 731 316 489 564 423 515
 397 310 674 359 390 621 506 394 436 437 644 218 451 341 592 495 482 337 327 455 431 449 510 561 398 613 488 459 375 365
 532 464 353 383 424 572 542 729 466 483 438 462 367 501 570 116 331 419 463 392 425 336 480 443 673 525 421 354 513 338
 575 376 453 448 468   2 490 452 388 623 386 566 555 535 540 627 531 432 551 332 447 544 433 505 569  46 526 369 435 311
 292 768 726  52 543 574 536 183 491 429 479 403 178 499 358 509 493 538 103 601 549 582 458 415 680 782 350 195 469 280
 603 617 157 624 517 521 618 620 478 215 503 145 651  80 657 626 732 232 155 439 698 335  40 689 428   1 600 345 755 434
 445 678 595  87 711 511 507 484 573 152 457 598 643 487 608 567 721 333 173  33 470 619 105 640 562 769 512 214 179  82
 633 410 114 791 541 599  31 128 576 295 494 736 635 646 585 671 420 309 597 591  29 659  13 596 648 519 307 167 699  76
 557 472  38 710 594 691 667  62   9 589 655 709 752 628 545 742 578 202 656 401 106 118 682  88 275 607  43  18 762 559
 556 669 688 822 660 629 683 161 851  21 615 120 571 125 701 616 554  25 176 175 609 654 553  53 241 724 140 200 716 207
 523 783   6 665 565 858 109  92 796  11 837 647 602 593 630 663 717 568  72 634 693 113 130  54 201 700 233 170 748 102
 558 749 477 720 563 702  45  49 527 286 820 440 588 781 696 806 695 126 747 735  30 117 186  37  77 639 622  32 514 151
 399 746 267 240  58 584 779  23 577 262 793   8 744 792 625 690 814 254 777 706 772   3 221 687 430  67 135 198 789  75
 719 860 686  24 850 868 661 169 740 364 330  59 834 107 831 828 725  50 473 771  12 115 293 586  28  84 246 187 757 258
 759 821 123  17 770 692 751 142  73 235 650 741 847 685 840 823 637 159 231 798  60 638 344 238 227  10  14 296 855  39
 395  22 203 766 737 374 733 833 866 328 865  81 861  51 857 705 795 356 765 778 675  63 248   7   5 284 191 213  96 362
  85 856 112 522 830 864 845 486 773 653 867 408 852 164 407 825 727  68 269 767  19  71 257  36   4  90  15 171 738 734

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.04581e+06us (= 4045.81ms, 4.04581s)
Wall-clock time (full program): 4.11818e+06us (= 4118.18ms, 4.11818s)
Satisfaction error: 0
Number of search iterations: 1590
Number of local moves: 875 (including on plateau: 416)
Number of local minimum: 110 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10196
Total number of local moves: 5767 (including on plateau: 1714)
Total number of local minimum: 629 (including on plateau: 226)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  19 588 509 259 398 132 291 796 177 690 852 181   4  14  65 740 282 865 419 822 855 111  66 136 800 794 871 525 866 388
 839  17 853 170 760 113  24   3 117 831 784 293 733 832 851 811 138 859 194 799 769 378 249  67 854 829  98  12  60 178
 837 874  45 810 861 173  52   2  61 713 678 283 825 875  21 833 221 613 337 671 755  99  64  63 711 401 695  10 857  75
 699 707 840 693 878 199  69 753  35  87 759  40  16 881  49 672 646 742 266 781 817 205 185 338 744 403  53  57 709 192
 535  29 536 718  11  81 148 734 166 674 843  93 188 622 771 827 726 619 312 757 650 124 325  26 341   8 858 442 686 665
 330 715 682 732   7 206 189 735 652 579 772 184   5 594 677 870 200 700 250 590 738 211  50 309  91 270 676 145 673 683
 696 694  30 687 752  28 372 489 150 354 808 159 656 792 238 664  85 721 272 743 636 425 692  20 574 816  18 174 747  23
 675 411 130 547 670  31 201  88 289 766 806 139   6 648 500 598 632 644 560 649 621  36 165  13 658 708 750 252 681 641
 812 688  25 586 864 424  74 568 770 581   9 241 242 603 610  27 661 666 213 654 471 456 498   1 642 115 660  34 663 657
 631 541  44 768 589 153 258 680 669  54 653 229  42 723 724 689 497 627 575 565  37 366  33 234 668 157 584 633 587 505
 620 546 639 496 601 705 274 763  71 545 609  39 243 507 697 414  32 611 637  86 667 529 134 356 737  82 618 278 466 513
 463 571 262 561 534 445  51 472 304 317 562 494 302 551 437 634 481 585 543 606 284 217 567 344 418 553 563 416 523 455
 608 572 133 730 576 479 298 659 149 444 542 261 475 506  22 554 519 453 556 550 480 470 698  83 540 464 628 191 427 448
 557 452 521 473 518 544 400 410 295 305 408 353 368 495 745 468 492  15 569 625 441 559 616 245 449 365 592 417 436 382
 508 374 384 501 394 360 485 395 413 499 406 428 635 476 552 430 370 597 432 421 533 355 375 474 390 511 438 580 345 454
 334 342 443  76 600 526 297 577 514 516 604 433 459 423 465 457 379 578 371 439 362 484 422 615 351 404 477 532 486 549
 582 396 524 488 208 350 599 467 292 783 520 469 607 320 493 517 329 314 265 538 352 490 326 795 447 405 225 361 531 522
 415 373 818 446 397 251 662 393 530 512 503 386 528 179 440 385 429 462 767 460 450 327 323 451 197 380 399 515 324 813
 369 364 321 275 412 294 539 279 377 564 290 612 296 232 458 346 841 310 898 212 420 725 340 722 788 787 147 555 434 308
 502 409 773 339 287 478 638 299 307 223 276 847 643 328 435 269 868 510 748 318 203 685 281 558 348 828 219 392 171 333
 246 336 651 257 343 247 630 313 702 882 402 798 780 244 236 461 123 237 193 277 583 779 701 741 256 331 363 778 319 306
 268 228 227 332 322 758 691 316 838 260 288 602 391 712 431 162 764 230 835 101 239 624 491 623 226 720 367 716 482 271
 220 198 172 140 254 872 751 893 315 389 183 842 595 215 357 100 873 335 754 218 706 749 896 836 347 273 214 426 144 248
 216 303 182 301 127 876 593 267 815 161 196 824 629 168 209 143 125 359 884 119 566 717 845 890 407 487 160 826 233 887
 142  38 846 235 286 776 849 210 774 154 128 765 679 285 240  84 739 155 146 255 169 626 376 791 889 762 190 640 387 899
  92 163 785 809 895 848 746 104 883 202 114 807 860 187 879 151 264 349 207 108 224 383 900 573 156  58 756 830 105  77
 204 804 891 888 106 856 850 129 819 175 231 591 805  70 186  97 121  48 300 126  43 736 504 834 176 820 886 761 195 263
 164 110 483  46  95 786 728 122 537 548 137 797 844 141 180 118 527 112 135 167 280 802 867 777  94 647 801 885 803 782
  55 897 152  72  56 814 894 719 704 645  79 596  89 789 684 892 793 158 655 253  96 120 703 869 109  47  78 821  59 617
 877 775 614  80 714 710 862 880 790  62  73 729 570 103 863 102 358  41 222 605  68 727 823 731 107  90 131 311 116 381

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.322e+06us (= 3322ms, 3.322s)
Wall-clock time (full program): 3.38691e+06us (= 3386.91ms, 3.38691s)
Satisfaction error: 0
Number of search iterations: 1021
Number of local moves: 724 (including on plateau: 194)
Number of local minimum: 45 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7508
Total number of local moves: 4958 (including on plateau: 1096)
Total number of local minimum: 354 (including on plateau: 130)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  86 135 716 672  94  30 897 726 671  80 209 163 622 720  84 860 536  47 785 587  57 113 161 717 745 861 185 204 878 874
 854  89 401 296 109  82 847 872 715 551 119  90 578 818  77 702 686 137 208 802 131 888  85 767 899 730 737  24 123  98
 807  44 101 577 159 694 192 851 723 179  69 152 523 891 106 783 615  43 855 658 181 103  78 659 654 811 482 871 617  37
 777 174 243 118 130 633 218 771 696 374  54 128 689 831 497 791 464 147 202 677 257 115 262 640 733 856 837 368 762  71
 794 606 591 898 780 725 231 637 251  66 288  61 846 718 129 707 580  53 220 792 127 134 168 412 562 894 228 146 819  52
 768 197 838 896 346 809 110 763 533  74 256  72 738 889 575 176 581 104 150 626 151  65 727 833 376 881 186 177 535  83
 222 188 624 887 267 747 839 144 880 158 414 247 714 853 273 884 579 219  62 550 221 164 178 900 722 171 832 157 276 143
 289 182 232 852 223 755 183 189 821 148 227 437 865 284 682 417 776 142 154 703 341 375 592 876 848 121 597 138 801 265
 234 380 895 796 196 664 190 210 879 349 275 367 238 317 285 170 759 240 280 520 169 770 890 735 869 205 332 282 681 338
 213 249 352 648 845 800 308 395 421 458 287 268 866 286 511 340 758 303 345 830 805 410 212 258 662 160 381 404 406 334
 342 883 674 313 447 756 369 436 775 396 245 266 235 316 731 371 804 241 225 419 344 306 295 670 712 242 415 269 754 264
 328 400 309 679 270 816 199 364 438 407 314 299 387 524 422 326 877 393 836 519 327 455 379 413 571 503 423 330 502 505
 271 312 333 298 465 774 329 435 470 339 446 483 403 449 405 355 553 882 461 795 409 322 233 480 893 460 463 356 293 348
 335 378 515 360 372 870 305 365 602 336 448 362 486 875 692 155 481 331 337 532 201 433 555 315 719 467 432 390 474 392
 319 653 272 426 297 281 547 429 673 411 528 638 559 531 466 357 427 402 557 492 456 397 236 516 496 394 391 259 611 494
 475 534 484 556 593 452 526 434 420 518 473 472 521 499 485 501 471 605  51 399  29 444 384 513 477 680 351 666 491  11
 323 253 468 504 418 385 359 442 358 690 538 318 350 278 279 354 570 595 621 252 589 476 454 441 291 527 537 549 657 639
 498  40 479 439 451 136 507 217 431 558 529 566  67 563 248 488 283 398 311 366 629 604 701 574 304 616 612 634 620 646
 545 539 625 514 651 583 609 585 596  10 517 250 500 445  95 568 302 522 647 382 603 180 430 469 229 627 495 542  15 440
 736 383 790 608 669 140 601 478  28 459  63 614  27 457 277 489 548 584 554 141 508 541 506 493 255 453 424 416 687 586
 565 607  64  75 695 125 582 650 102  39 487 834  79 641 600 676  17 761 810 370 610 572 613 594 260 530  21 631 194 711
 540 628 112 685 709 172 509 294 261 840 708 741  81 576 200 691  22 667 428 166 630 510 462 211 195 619 162 598 552 546
 675 443 100 301 699 292 772 193 343 668 698 732 660  76 561 636  96 661 543 237 588 512 560 132 116  41 590 618 191 781
 644 569 573  36 697  73   1 752   4 705 649 663 599  14 751 704  49 642 635 107 224 693 710  19 122 700  68 656 643 813
 782 729 797 263 769 389 721 645 567 652 544 153 198  13 713  42 325 724 655 111 778 120 310  91  93  46 665 706  99 815
 145 787  87  59 564 307 803 684   7 765 757 843 184  33 623  60 361 734 239 347 808 525 779 214 216   2 786 784 324 688
 632 823 678  38  50 321 742  58  56 835 817 857 226 353 490   6 149 388 789  92 825 750 814  31 246  35 798 764 108 744
 203 822 114 408  45 244  34 425 230 850 868 849 133  88 683  16 215 863 799 386 885 859 760  55  26 788 175 828  20 844
 105 748 156 187 739  97 173  23 290 827 864 728 841  12 749 858 377 820 753 207 746 806 842 167  18  25 117 743 373 124
   8 740 892 126 766 363 812  48 274 773 824 862 300 165 826  32 254 867   3 450 886 873 139 320 206  70 793   5   9 829

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.23165e+06us (= 3231.65ms, 3.23165s)
Wall-clock time (full program): 3.29976e+06us (= 3299.76ms, 3.29976s)
Satisfaction error: 0
Number of search iterations: 984
Number of local moves: 652 (including on plateau: 212)
Number of local minimum: 35 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6231
Total number of local moves: 4558 (including on plateau: 1284)
Total number of local minimum: 209 (including on plateau: 142)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 898 651  65 461 687  87  64 739 568 251 733  85  93 892   7 759 864  52  30 775  40 700 751  19 889   5 876 707  73 694
  60 891 558 224 787  91  51 823 185 198 570 141 704 175 616 155 856 147  50 652 504 532 508 591 871  48  82 740 857 848
 104 829 897 716 746 868  44 818 142 265 618 216 790 173 630 128 162  46  75 645 715 815 747 126 860 138 106  88 900 108
 133 768  68 899 573 830 197 721 146 202 735 112 874  66  97 837 120 307  99 752 306 862 208 590 661  43 887 882 159 381
  61 519 840 620 895  98 154 617 143 153 827 767 244 283 841 215 380 757 221 422 312 240 822 267 851 559 203 884 262  58
  62 782 878 696 737 100 118 817 179 116 772 894 292 213 784 187 448 196 391 779 308 182 192 111 498 121 879 865 774 144
 276 338 594 634 613 204 849 792 280 236 816 833 174 359 781 222 250 237 217 284 248 135 738 858 699 294  74 731 566 183
 193 586 191 723 796 883 209 885 256 169 163 234 842 263 683 843 397 184 334 839 719 295 888 101 720  90 172 386 226 245
 289 748 190 870 711 223 530 750 869 148 205 298 281 150 355 188 259 320 810 717 233 854 385 352 531 218 305 709 771 246
 199 853 327 389 669 243 272 589 366 167 713  56 335 414 706 351 266 227 614 811 873 304 595 353 657 890 249 369 349 309
 200 611 321 701 207 293 365 253 358 219 697 435 866 171 831 303 252 220 886 622 462 330 210 629 655 247 302 742 794 333
 254 393 242 496 214 257 875 410 324 896 877 847 211 382 269 430 676 859 228 241 580 363 347 314 575 412 356 282 522 383
 880 341 342 852 310 392 291 515 550 402 396 343 825 563 726 318 540 206 255 427 584 326 526 450 529 274 160 378 290 524
 415 445 736 425 388 373 644 509 258 405 525 376 331 419 336 433 893 372 549 745 374 544 279 278 621 367 424 439 325 287
 646 576 418 472 536 479 277 316 348 413 453 632 628 403 442 459 407 379 469 339 598 370 505 411 354 285 604 311 488 497
 423 431 394 399 322 466 437 481 377 440 688 556 451 390 401 484 409 562 395 467 470 476 426 480 323 475 561 471 408 452
 446 420 406 384 455 416 554 565 473 511 301 703 557 436 582 483  54 537 268 609 345 456 140 474 463 548 512 346 606 465
 332 507 428 501 574 684 368  96 588 528 494 513   1 487 364 673 599 130 180 502 541 482 493 429 337 553 653 500 486 492
 555 156 597 516 297 691 454 542 478 387 490 499 444 517  76 464 518 527  89 625 165 477 495 514 417 608 535 601 119 662
 585 124 547 178 232 686 543 421 449 633  95 510 671 682  53 685 340 551 457 168 581 545 659 615 238 600 506 328 231 602
 578 113  39 286 660 538 672 212 186  10 489  27 607 728 631 754 145 571 552 344 107 667 677 447 434 546 539 612 679 665
 710 485  37 371 137 458 593 533  41 670 635 668 674 643  63 619 702 778 605 123  86  24 520 560  42 603 770 194 523 648
 718 127 639  26  79 521 729 176 807 567 129 649  21 763 225 640   9 587 835 264  69 809 664 468 329 836 743 296 115 675
 443 441 730 375  77 577 432 170 698 801   8 638 761 734 201 235 636 765 569   2 786 189 637  15 195 239 749 161 641 610
 708   4 732  84 642  80 647 230 623 795 319 300 534 855 361 260 627 769 624  57 744 800 136 755 117 725  72  49 270 596
  14   6 131 229   3 805 812  36 572 705  78 712  35 579 626 681 756 350 824 114 583 844 678  38 317 438 776 315 650 808
 806 288 357  29 152  67 804 181 760 799  71 654 753 832 164 110 656 780 834  59 798 134  20 828 105 845  18  83 762 766
 867 261 362 139 151 826 764 157 758 802 313 692  31  94  55 783 785 695 398 166 693 658 122 846 177 850 158  47  92 773
 863 689 727 360 273 491 103  12 861 814  34 102  81 821 820  25 400 714 819 666  11  32  22 803  17 881 741 724 564  45
 797 132 722 460 592 788 663 149 872 813 271  23 404  28 789 791 109 690 838 299 680  70 125 793  33 777 503 275  13  16

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.29909e+06us (= 3299.09ms, 3.29909s)
Wall-clock time (full program): 3.36338e+06us (= 3363.38ms, 3.36338s)
Satisfaction error: 0
Number of search iterations: 923
Number of local moves: 726 (including on plateau: 205)
Number of local minimum: 24 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6862
Total number of local moves: 5328 (including on plateau: 1393)
Total number of local minimum: 245 (including on plateau: 138)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 560 817 818  37  12 331   1 857 793 880 203 895  48 763 246 720 797 759 231 323 684 222 869  57  52   5 782 118 567  68
 219 111 177 846  92 345 746 264 813 725 499 900 372 757 172 314 855  17  53 760 833 183  33 297 269 395 731 141 740 856
 292 852  34 806 127 366 822 327 767 777  64 519  41 893 295 276 850 773 849 434 827 377 188  11 185 106 824  19   7 807
  29 693  69  61 321 289 775 484 815 774 811 285 176 867 666  55 819 801  62 679 698 174 820 100 125 250   3 234 808 772
 424 744 108 628  16 237 851 166 805 193 142 165 711 695  28  10 770 837 116 473 575 699 585 266 112 672 877 132 823 655
  32 690 706 749 175   6 754  25 638 771  60 654 694 794  58 215 750 778  13 257 732 468 129  36  31 702 803 415 632 748
  15 647 838 692  51 207   2 641 788 677  88  49 642 696 652 160 810 631 644 330 653   8 735 452  86 683 665  66 256 651
 109 649 736 779  22 241 764 643 524 669 714 605 637 659  39 147 839 687 167 416 531 691  21 255  84 105 730 290 178 584
 307 721 589 340 260 630 619  80  23 664 741 635 625 729 762 124 437  76 546 646  99   9 151 249 515 636 667 259 673 703
  45 686 676 272 196 518 633 603 591 539  14 645  85 523 689  75 617 715 658 601  20  42 650 258 713 113 712 117 790 719
 168 375 616 662 489 543 462 674 361 588 508  56 640   4 609 614 656 574 251 268 596 670 559 253 563  73 566 553  24 540
 267 135 620 580 476 205 550 607 200 511 587 121 450 648 428 558 532 568 236 320 562 599 615 324 505 481 513 303 527 487
 512 520 389 418 122 497 600 564 680 556 187 403 594 626 506 657 447 458 282 465  65 542 582 284 376 570 554 440 593  26
 537 441 448 490 501 525 482 671 463 349 274 598 414 445 454 495 592 442 400 391 578 446 261 346 478 498  18 412 522 544
 417 318 459 425 309 517 514 294 398 551 453 408 471 480 549 557 493 240 436 385 411 538 618 432 507 494 390 413 528 510
 470 526 479 606 435 373 565 326 386 438 443 457 420 503 548 348 392 328 430 786 427 233 621 521 394 343 341 449 423 504
 496 483 364 333 581 355 358 431 406 410 421 291 399 595 536 347 350 516 475 898 545 368 624 466 492 429 242 388 509 407
 402 313 533 338 734 892 204 426 335 370 380 455 477 456 460 367 356 474 439 858 363 486 485 627 555 384 329 387 444 186
 756 383 339 530 365 814 322 469 661 488 405 675 218 502 293 275 336 397 864 879 472 337 239 629 301 288 357 362 217 342
 739 393 243 401 451 787 271 887  96 208 881 870 381 206 227 317 382 306 352 681 299 862 224 840 433 310 248 590 344 286
 697 298 315 325 836 865 354 155 586 829 265 378 816 422 319 409 360 371 668 868 464 228 254 608 280 173 148 752 277 195
 728 181 150 192 780 785 235 792 279 216 369 226 296 273 796 769 209 404 660 610 312 737 704 634 305 302 230 571 396 374
 534 199 104 214 708 854 359 742 379 184 727 278 238 131 804 622  38 334 419 311 229 825 604 467 874 707 223 577 716 114
 583 316 232 623 899 710 878 225 211 244 896 351 170 101 281 848 220 156 529  78 705 802 700 179 884 153 221 832 201 287
 871 573 123  95 678 663  81 115 308 198 894 102 304 171 831 812 194 212 262 107 283 766 885 758 882 738 137 781 561 130
 701 213 875 270 491 164 154 169  50 146 841 158 828  63 611 688 120  93 263 159 353 535 798 873 717 847 883 743 547 162
 747 842  79 860 776 682 138 161 182 180 576 613 853 247 252 612  97  83 844 191 197 639 133 826 579 845 332 751 144  54
 709 163 809 119 872  43 761 149 685 210 190 834 572 103 768 799  70 134 722 110 202  77 157 783 718 784  94 866 136 876
 597  90 861  59 843  44  71 733  47  72 800 859 791 128  67 723  87 461 753 140 300  89 145 889 755 541 821 724 886 139
 552 143 726 765 897  27 189 835 245  98  82  30 152  35 569 602  40 890 891  91 500 863 126 795 745 888  74 830  46 789

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.90336e+06us (= 2903.36ms, 2.90336s)
Wall-clock time (full program): 2.96705e+06us (= 2967.05ms, 2.96705s)
Satisfaction error: 0
Number of search iterations: 691
Number of local moves: 585 (including on plateau: 98)
Number of local minimum: 17 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5041
Total number of local moves: 4599 (including on plateau: 749)
Total number of local minimum: 90 (including on plateau: 92)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 870 861 687 733 681 124  30 140  40 714 649  53  29  92 125  83 796  62 869 168 545 770 889 114 824 819 813 835  69  31
 259 730 142  77 773 161 839 875 841 898 703  39  49  81 179 131 897 120 437 565 527 159 150 746 115 807 880 842 394  99
 182 886 882 116  86  91  89 723 119 828 879  66 104 113 786 157 900 597 823  76 671 667 590 567 512 885 781  84 110 145
 584 817 747 891 876 139 129 184 127 679 711 769 207 282 135 233 724 657 865 216 736  80 160 123 102 858 155 868 171 290
 158 748 877 109 888 585  42 133 474  95 827 193 176 153 170 147 893 229 618 873 273 815 235 563 162 764 768 760 610 177
 220 167 190 359 128 892 244 799 218 887 148  56 105 230 845 209 896 547 594 112 617 670 281 111 874 847 674 883 575 137
 836 194 101 294 208 151 763  87 175 287 871 399 302 256 279 834 722 536 741 211 542 275 258 766 203 719 811 731 528 435
 134 899 647 702 156 247 214 890 270 784 729 833 299 213 126 192 412 322 754 222 537 429 878 265 301 619 362 456 318 305
 409 859 307 136 202 408 783 335 793 205 894 655 271 340 843 285 293 312 212 231 814 676 243 804 354 646 331 378 251 245
 246 188 829 389 277 541 217 323 848 798 680 344 215 250 295 306 637 672 728 227 866 254 350 822 240 221 367 248 801 336
 454 757 341 330 257 556 219 328 884 382 872 662 262 509 266 310 347 314 348 369 734 663 181 297 288 800 414 242 831 298
 327 223 352 274 200 264 332 370 278 360 625 863 283 308 581 855 401 832 604 862 860 234 269 300 392 544 320 446 582 374
 397 267 329 289 309 895 366 413 363 407 559 643 477 343 504 404 398 615 400 321 838 691 280 555 405 557 319 496 333 342
 419 599 447 549 390 317 422 364 425 524 381 384 365 402 592 239 531 550 388 403 759 423 489 530 415 600 387 375 351 495
 339 502 385 358 455 640 558 225 349 421 470 443 450 436 368 284 337 543 433 326 744 487 505 583 406 606 448 566 418 430
 484 444 458 488 325 431 416 353 503 345 451 571 461 372 492 493 501 249 626 485 648 466 428 518 395 434 426 432 441 379
 373 396 478 465 453 483 457 410 529 588 237 516 498 459 568 580 468 634 548 552 521 480  19 510 380 393   5 540 452 523
 596 560 476 462 445 146 607 442 296 511 180 268 611 482 569 616 471  41 638 525 154 440 572 439 420 417 538 469 624 500
 261 479 491 620 499 165 467 579 526 324 286 191 621 668 449 486 506 152 196 650  18 603 517 578 821 424 609 564 204 561
 732 554 481 591 613  68 534 704 475 507 532 562 598 472 698 519 464 497 186  45  13  38 614 660  12 187 753 608 228 570
 654 551  67 630 707 513 682 576 577 717 106 141 642 460  94 602 377 143 315 605   1 197 535  26 795 263 546 697 623 673
  57  90 508 665 727 236 593 515 241 688 291 644 311 629 738 699 587 144 490 675 132 103 700 664 772 100 686  93 164 573
 755 346 696 669 658 810 721  48  64   8  44  54 765 639 553 652 376 303 725 574 260 252  74  58 690  52 692 586 713 678
 633  37 631 720 622 777   9  82 653 494 313 173 641 659 709  36  78 595 334 726  33 107 645  75 716 189 693 628 651 856
  73 224  79 750 782 383 695 787 761 226 427 601 745 706 684 705 149 183 178 683  55 656 803 635  72 108   4 117 438 806
 708 292 612 739  34 361 712 749 788  27  50 771 837 776  17 357  28 818 121 185 356  65 737 316 636 522 632 255 272 742
 767  85  98  47 758 710 391 849 210  63  21 751 792 778  51 780  46 790  59 809 371 666 802 627 589  10  14  43 694 844
 661 118 473 195  22 756 514 463 232 138 169 775 774 808 701 846  70 794  23 830 386 752 253 198 812  25  20   6 851 850
  60 520 689 852 130 825 685   7 677 539 172 304 820 718 743 735  11 411 174 826 338 533 857 276 715   3  35  61   2 797
 867 122  15  16 854 840 785 762 779  71 238 791 805 881 355 740 199 853  88 163 166 864 201 789  97  96  32 206 816  24

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.29522e+06us (= 3295.22ms, 3.29522s)
Wall-clock time (full program): 3.35933e+06us (= 3359.33ms, 3.35933s)
Satisfaction error: 0
Number of search iterations: 893
Number of local moves: 800 (including on plateau: 210)
Number of local minimum: 16 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7259
Total number of local moves: 5518 (including on plateau: 1393)
Total number of local minimum: 295 (including on plateau: 167)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 818  76  15  82  37 816 874 783 810 642 690 204  73 106 779  17 319 888 493 467 256 289 793 243 610 418 753 878 230  56
 453 853 616 526 258 773 668 624 719 295 290 384 735  94 664 130 216 188 197 861 277 108 744   8 772  24 142 873 846 177
 609 670  14 788  62 675 627 666 731 185 163  85 785 789 476 320 509 191 758 152 356 238 379 645 310 738 392  22 297 883
  44 658 427 463 774 333 355 826 806 201 138 148 587  12 881 769  34   4 759 488 161 574 822 715 202  83 283 724 728 516
 459 502  10 757 631   7 784 327 121 397 315  70 229  93 796 872 698 120 648 140  40 545 824 755 893 481 336 831 801  33
 362 660  47 743 707 280 544 850 536 583 391  38 656 528 817 659 147 688 162 183 809 155 213 790   1 209 132 798 181 646
 303 381 632 676 633 763  61 246 792 103  67 322 182 284 614 859 198 706 721 870 677 302 144   6 439 722 276 331 579 626
 170 253 837 756 622 705 215  43 598  58  27 718 692 867 762 882 100 786 358 474 531  51  26 145 194 667 136 647 636 559
 264 227 843 450 764 363 732 573  97 429  36 220 370 775 369 564  66 848 643  52 723  95 657 590  79 542  64 543 811 726
 550 649 458 604  45 778 662  55 673 639 734 712 720 828 487  68 515 348 589  32 165  25 445 247  80 630 261 588 703 225
 326 761 637 532 613 316  49  57 456 298 717 886 577 860 171 469 151 864 519  28 451 537 594  11 539 447 580 405 562 102
 273 470 446 495 599 552 581 584  20 422 233 278 172 433 770 576  42 767 146 682 522 271 556 733 512 586 520 530 533 211
 218 869 565 555 263 653 403 153 654 765 486 437 160 617 511 629 808  69 129 180  31 449 454 373 554 603 365 620 324 618
  59 704 425 416 699 435 123 663 452 366 444 179 394 557 189 436 462 700 393 431 498 553 475 750 572 505 465 385 330 455
 252 569  81 335 460 501 529 540 473 628  89 461 109 423 411 457 563 254 795 799 408 834 709 442 507 395 634  98 399 360
 695 134 424 300 547 477 328 489 417 739 591 483 357 479 894 714 693 428 503 378 597 111 154 224 546 304 606 504 164 235
 825 702 341 506 669 414 372 407 122 174 623 802 352 400 412 156 672 368 496 426 309 291 406 661 432 288 374 337 611 567
 255  48 104 527 375 329 332 438 558 685 551 232 730 217 187 351 713 434 771 794 521 683 602 251 184 497 681 815 440 210
 615 499 466 274 221 823 301 807 345 343 410 892 321 205 219 314 265  54 876 371 389 827 575 448 234 380 865 353 323 500
 200 596  13 430 312 386 800 354 491 175 889 525 754 402 259 737 607 782 325 561 523 340 137 169 377 166 592 240 855 518
 746 158 313 478 186 383 242 741  87 346 267 890 625 342 541 115 729 193 293 863 787 854 364 266 749 281 736 367 262 311
  18 415 226 317 464 112 691 538 840 791 885 748 382   2 820 299 349 334  16 376 387 621 601 208 275 582 549 651 605 413
 694 159 777  75 133  74 268 747 510 752   9 725 566 835 480 292 513 508 635 832 257 844 359 839 260 272 484 199 222 195
 534 350 492 697 887 306 711 390 244 638 742 443 780 203 114 239 236 192 396 640 231 548 608 279 494 131 678 135 895 282
 768 398 766 404 176 781 237 619 517 641 571 287 286  99 107 105 421  91 178 401 841 740 652 585 149 805 665 270 119 836
 600 514 245  60 338 212  86 269 110 650 830 842 241 898  21  63 803 157 687  84 866 294 560 570 710 813 862 125 167 838
 812 250 868 716 347 845 296 127 223 339 797 896 655 207 139 471 701 871 214 535 124  19 388 150 776 568 249 143 593 196
 441   5 899 485 118 285 117 344 680 128  78 113  46 880 116 745 689 760 318 821 851 804  92 833 578 858 524  53 168 686
 847 884 679  29 879  50 708 190  72 897 595 472 228 409  90 307 814 248  77 468  71 684  41 852 875 490   3 877  35 644
 305 101 849  39 696  88 819  65 361 206 857  23 751 671 419 900 482 674 420 126 856 829 141 727 612  30 308 173  96 891

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 9.47148e+06us (= 9471.48ms, 9.47148s)
Wall-clock time (full program): 9.53589e+06us (= 9535.89ms, 9.53589s)
Satisfaction error: 0
Number of search iterations: 5294
Number of local moves: 1711 (including on plateau: 967)
Number of local minimum: 465 (including on plateau: 115)
Number of resets: 2
Number of restarts: 0
Total number of search iterations: 39480
Total number of local moves: 11869 (including on plateau: 5158)
Total number of local minimum: 3401 (including on plateau: 634)
Total number of resets: 15
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   2 291 142 828 262 844 312 814  15   3 885 823 806 750 380 301  17 246 851  59 563 881 102 800 822 790  70 829   4  23
  38  60 177   1 206 884 695 360 855 857 865 815 784 871 116 277 797 109 794 198  24 853  50 236  87 883   5 135 749 734
  96  72 389 751 155 798 212 787 721 272  20 838 843 819  53 302 663 298 868 322 858 757  65 146 807 707  35  13 140 708
  74  98 158 804 189  69 321 785  22 766 736 744 759 760 224 285  40 210 826  62 593 774 113 748  76 792 628 836 335 688
   6 802 266 596  93 743 275 776 240 699 255 850 754 771 397 160 731 310 841 115 666  46 221 719 783  18  48 710  10 614
 704 706  25 761  79  19 157 630   7 691 781 384 812 877 259 156 676 138 862 356 186 703  39 780   9 674 228 728 376 712
 518 575 629 746 680 580  26 678 795 729 692 565 694 773  12  95 793  54 803  80 148 655 205  27  61 223 274 686   8 711
 645 693 631 679 668 233 290 195 619 348 578 617 687 569 211 208 778  28 566  31 215 639 343 627 549 675 147  58 209 779
 714 554 646 741 752 595 257 216 506 427 727 605 632 523  55 120 625  33 497 574  63  14 144 770 541 715 281 542 100 546
 451  88 229 615 641 604 237 581 447 398 434 767 590 622 234 573 670 162 517 349 174 481 422 637 667 634 218 367  73 633
 656  81 606 538 669 477 119 537 723  99  89 638 621 557 125 534 572 154 556 325 314 643 313 463 665 640 307 479 457 558
 730 592 588 696 602 151  16 516 651 701 471 141 543 561 594 426 511 659  21 354  51 472 273 533  56 504 495 587 480 540
 591 513 449 478 509 400 222 435 672 124 789 620  43 512 431 583 544 404 520 487 201 485 418 493 550 409 276 503 433 421
 490 607 440 428 560 474 402 600 501 562 492 462 496 609 522  97 387 461 529 488 105 612 345 394 429 359  11 444 548 661
 564 660 425 388 330 453 491 505 424 415 395 577 346 439 405 445 454 411 483 340 391 570 408 551 498 432 375 355 526 459
 381 419 413 525 378 677 508 318 383 450 475 555 456 392 350 539 466 373 502 553 455 586 396 500 326 403 414 416 448 458
 527 468 484 441 545 406 528 532 320 337 476 339 344 342 366 900 830 363 443 446 410 390 465 362 597 338 316 352 341 507
 470 271 303 309 407 371 584 808 873 535 417 385 248 423 442 361 245 304 420 353 436 753 648 372 297 377 717 382 515 489
 437 357 368 499 329 589 547 200 238 568 370 733 895 369 401 180 235 579 299 530 718 464 772 280 412 175 786 494 333 358
 293 825 289 243 393 611 782 217 332 524 849 379 374 300 613 839 265 775 306 239 241 178 552 226 251 430 720 317 856 296
 347 270 308 258 311 334 821 294 168 876 269 254 167 305 891 682 282 892 152 598 897 623 762 227 323 510 664 264 328 438
 286 284 467 214 288 268 576 219 690 399 336 364 122 194 810 805 197 890 279 654 763 880 642 486 242 232 722 145 848 213
 231 582 840 225 899 673 866 886 150 183 252  52 207 196 658 817 324 739 253 735 386 199 519 136 351 287 599 179 799 292
 536 649 185 220 250 260 460 244 230 331 585 278 295 204 732 834 452 698 184 820 896 263 689 847 567 104 618 662 283 139
 788 153 652 327 127 854 742 832 365 129 176 170  47 110 765 685 172 870 182 769 681  71 531 187 861 247 745 319 702 256
 315 192 833  45 869 123 514 249 121 261  49  75 149 193 626 747 813 610 161 684 893 118 777 163 898 867 644 845 603  78
 842 791 159 875 811  67 740  29 816 131 188 202 469  82 671 134  32 601 137 831 203 165 882 650 267 164 879 827 697 173
 768 108 852  94 171 809 482  41 106 700  68 181 169 166 521 608  37 635 473 846 657  30 818 190 636 801 872 859 716 101
 824 860 725 107 726  64 709 103 647 111 143  36  77 114 887 705 863 713 133 559 571  84 864 130 132  91 683  92 874 888
 191 894 837  83 616  85 624 128 878 889 653  66  86 112 764 117  44 796  57 758 756 126 737 835 755  34 738  90 724  42

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.37775e+06us (= 3377.75ms, 3.37775s)
Wall-clock time (full program): 3.44207e+06us (= 3442.07ms, 3.44207s)
Satisfaction error: 0
Number of search iterations: 1086
Number of local moves: 676 (including on plateau: 213)
Number of local minimum: 57 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7731
Total number of local moves: 5806 (including on plateau: 1845)
Total number of local minimum: 300 (including on plateau: 212)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 147 794 724 849  88 791  39 201 250 146 821 151 118 835 842 223 504 807 103 783  68  19 872 754 797  46 127 757 723 136
  80 125 137  51 869 756   8 841 262 140 829 134 264 739 867 493 718 780  34 812  11  12 831 844 580 225 858 787  28 400
   4 476 249 857 792 703  25 836 174 752 781  82  24 838 622 398 697 353  73 828 454 207 716 877  76  55 827  10 677  52
  21 727 628 475 166 233 218 800 194 181  85 124 215 766 856 719 686 818 372 487 132 778 651 742 762  23 811  22 793  30
 234 196 704 532  20 673 749 728  33 768 777 357  16 672 726 779 846  86  13 864   6   7 840 101   2 371 560 361 795 699
  48 150 105 753 799  17 694 709 241 253 663 303 299 634 833 579 761 160 139 616 772 214 691 771  36 184 748 653 661  29
  79 288 657 317 480 665 130 814  66 126 722  95 158 689 866 591 711 593 113 851  58 759 834  18  38  57 640 824 684 592
 279 705 688 607 603 708 668  31  91 257 650  69 289 554 731 106 732  61   1 676 654 182  26 652 735 313 611 693 474 669
 240  75 713 636 581 606 696 700 155  45 666 129 175 675 682 102 111  41 408 561 717 685 667 660 491 255 751 656 543  93
 536   5 121 212 595 385 555 600 639 326 506 545 583 510 681  78 566 707 601 522 670 245 237 538 450 306 459 169 710 458
  72 517 687 246 468 679 574 425  92 170  42 336 471 620 615 714 584  50 550 599 505   3 516 627 646 311 534 750 563 549
 310 108 721 556 565 513 544 635 518 300 448  15 552 632 519 390 631 135 165 645 619 523 774 630 401 189 436 119 422 500
 302 152 460 281 573 598 472 515 594 210 577 570 349 596 405 501 528  14 805 248 396 706 503 558  64 479 553 358 535 613
 410 527   9 430 478 626 439 530 414 420 617 564 219  90 421 438 483 567 575 488 389 557 424 572 495 294 537 520 423 559
 569 485 498 187 327 462 524 323 442 470 582 292 337 512 531 409 407 445 529 426 362 434 839 244 395 586 496 507 509 386
 588 547 433 348 542 444 455 318 382 489 418 380 484 441 373 486 502 492 344 464 861 282 332 609 351 482 602 412 202 452
 562 578 429 775 367 228 360 435 456 625 366 720 381 263 375 383 891 490 477 437 340 305 379 511 473 413 329 404 417 346
 568 855 453 876 265 341 539 427 648 621 254 743 315 316 226 808 393 378 298 277 270 335 272 319 291 641 416 546 432 392
 525 892 144 610 461 338 301 347 597 446 394 365 587 320 374 443 548 269 898 376 521 497 481 283 324 415 297 848 411 203
 736 618 328 342 330 463 384 397 729 590 451 369 698 276 258 260 213 860 514 809 388 399 163 261 179 633 364 230 469 804
 623 871 309 604 321 280 138 271 747 785 247 428 406 359 387 798 431 784 449 356 801 368 259 331 275 647 343 334 208 355
 571 845 116 295 266 176 333 211 875 886 377 664 862  67 238 852 391 837 467 308 191 880 268 290 180 655 307 161 370 576
 823 339 278 744 322 826 843 896 199 825 285 863 730 227 256 363 314 200 304 183 154 499 447  60 830 690 209 293 274 239
 738 112 859 229 157 220 895 702 624 345 193 643 741 188 232 267 149 614 662 325 216 692 296 899 853 803 198 224 222 217
 894 286  96 205 887 810 312 164 671 533 273 820 642 167  84 758 133 352 874 122 815 638 221 284 746 733 197 402 206 190
 882 658 878  74 231 782 114 120 822 806 354 802 649 195  32 769 185 419 817  87 819 236 177 117 644 465 235 242 115 789
 608 585 145 870 252  59 832 153 740 541 192 763 884 243 100 440 156 725 589 107  62 629  43  98 674 712 885 526  89 813
 770 251 889 287 159  40  94 168 773 508  70 883 796 900 148 109  44 540 881  71 734 786 637 123  99 888  97 865 204 701
 403 143 879  81 678  37 764 141 350 494 765 755 612 142 172 131  27 171 715  83 683 850  65 695 868 854  35 680 466 776
 893 605 178 186 873  56 816  77 737 457 110 551 659  49  63 128 173 767 745 104 847 788  54  47 760 790  53 162 890 897

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.41901e+06us (= 3419.01ms, 3.41901s)
Wall-clock time (full program): 3.49707e+06us (= 3497.07ms, 3.49707s)
Satisfaction error: 0
Number of search iterations: 1059
Number of local moves: 729 (including on plateau: 226)
Number of local minimum: 42 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7889
Total number of local moves: 5823 (including on plateau: 1745)
Total number of local minimum: 322 (including on plateau: 220)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   9 165  12  21 810  70 356  22 122 869 881 861 883 833 786 855 867  29 658 840 161  18  23 247  75 880 834 264 180 884
 239 361   5 843 750 422 241 811 301 742 868 842 873 731 860 291 826  46 281 315  65  76  26 831  27 878 103  34  20 807
 268  35 566 505 805  98 186  83  56 856 797 814 760 847 819 127 848  28 416 796 107  14 119 802  24 849 844   7 292 747
 764 167 155   6 653  81 366 774  88   4 330 789 886 310 895 748 853 260 200 547 683  79 173 858 201 755  17 846 233 794
 572 153 137 717 339 168 123 781 272 306 587 726 845 113 672 741 770 560 235 830 679 648 157 489 277  49 664   8  94 803
 757 207 234 870 876 474 143 578  25  53  40 772 700  33 864 675 852  16  62 684  31 719 278 712 546 758 617 787 116  36
 694 181 258 721 660  86   1 724  71  54 645 357 699 743 808 640 642 179 613 681  19 711 250 696  37 754 117 580 172 722
 637  44 283 687 593  48  59 342 226 677 612 689 486  38 693 688 738 440 232 543  15 710 372 766  89 656 605 713 118 716
 550 270 299 692 782 229 182 638 358 577   2 586 599 703 767 537 610 678 626 607  63  78 202 628  32 553 649 374 138 506
 584 320 284 483 556 156 141 614 151 262 515 525 594 429 542 629 850 604 102 581 144 446  52 635 319 481 751 727 608 430
 627 212 349 636 615 555 294 595 561 633 406  73 583 623 569 520 190 500 582  82 298 454 256 463 285 495  90 609 575 785
 663 389  10 510 562   3 158 730 288 522 513  67 563 427  11 632 502 528 570 459 600 524 355 646 318 728 655 625 491 466
 558 391 333 602 530 565 519 436 279 455 327 670 487 434 601 444  92 526 457 611 477 665 585 359 214 433 438 223 467 337
 509  13 471 420 240 381 606 529 507 532 516 365  45 630 472 371 497 620 480 533 589 521 352 496 383 488 666 536 253 494
 621 534 451 340 557 464 445 387 426 590 473 100 504 450 478 322 479 297 364 662 461 348 465 476 503 549 517 428 417 407
 442 514 413 266 369 512 492 321 508 485 437 408 392 425 452 695 350 449 545 341 460 541 384 405 644 418 567 498 388 394
 344 616 591 435 415 404 493 397 313 293 305 484 448 618 447 523 531 551 424 469 453 412 458 323 733 518 385 354 396 382
 316 571 390 499 304 490 409 267 456 739 259 439 706 776 411 254 224 896 393 220 548 325 468 219 775 311 441 475 331 603
 265 634 431 443 631 900 598 324 501 410 462 564 295 375 353 432 274 296 816 351 368 246 740 196 668 414 421 544 183 380
 307 667 841 470 347 362 874 346 650 875 573 673 419 290 231 286 423 289 198 838 386 326 373 242 651 273 398 261 308 338
 400 769 377 211 135 734 812 334 619  99 622 806 378 395 257 401 363 360 759 282 702 343 597 222 643 187 399 302 744 263
 249 793 771 174 248 792 835 192 877 768 170 203 275 402 230 205 379 317 732 329 403 245 705  55 674 312 237 749 827 367
 176 511 624 300 243 865 756 784 669 691 813 195 332 175 213  85 271 191 125 482 552 215 723 148 879 276 251 866 817 287
 892 837 576 140 216 839 795 280 680 160 783 328 238 128 345 193 221  57 763  97 720 208 859 888 685 159 217 194 790 227
  93 836 885 225 188 815 671 244 829 715 252 105 162 704 309 134 185 801 729 108 773 890 639 210 206 154 736 126 690 101
 228 800 823 818 539 753 682 899 538 269 169  47 120 149 166 145  87 887  84 335 568 894 574 314 697 106 708 152 746 218
 121 891 641 897 189 686 735  39 828  42 825 197  60 147 115  95 199 820 657 178 698 737 799 184 780 132 136 863 714 110
 788 718 559 209  80 647 588 854 882  72  96 124  43 163  50 114 177 832 809 554 893 798 761 150 707 164 131 527 821 204
 791 376 857 139 112 661 652  61 725  64 104 370  66 659  41 871  69 654 535  30 777 745 872 778 592 109 779  91 824 111
  51 540 889 236 171 255 303 129 709 701 133 336  74 765  58 862 146 804  68 130 822 579 898  77 851 676 142 752 762 596

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.11163e+06us (= 4111.63ms, 4.11163s)
Wall-clock time (full program): 4.17744e+06us (= 4177.44ms, 4.17744s)
Satisfaction error: 0
Number of search iterations: 1579
Number of local moves: 892 (including on plateau: 404)
Number of local minimum: 88 (including on plateau: 48)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11440
Total number of local moves: 5875 (including on plateau: 1980)
Total number of local minimum: 740 (including on plateau: 230)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  25  68  36 210 783 267  66  32 767 268 819  87 202   3 796 823   1 182 820 398 874 779 860 788 807 693 857 299 855  50
 824  14 338 186  62 412  18 112  67 716 694 105 150 123 321 884 258 310 833 707 842 878 259 852 825  34 790 242 894 765
 811 795  29 740 449 827 282  76 212 759  30 313 372  23 121 880 476  77 704 342 749 785 791 766   5  90  88 241 847 835
 209 830 100  28 843   4 301 346 106 193 680 799 108 146 752 813 757  47 361 725 340  80 731 726 809 750   6 269 851 805
 792  57  79 712 544  13 174 109 787  97 684 147 200  17 647 776  15 157 735 293 668 552 849 777 801 122 845 410 686 770
 831 691 102 730 729   7  44  81 232 401 804  85  24  73 156 664 661  45 718 319 775 756 632 886  61 663 826 148 717 654
 715 751  51 697 899 283 764  48  21 116 695 161 175  71 256 628 690 294 681 349 761 706 698  41 107 223 866 571 610 587
 645 617  38 184 861 666 627  19 227  37 579 199 500 125 173 703 418 364 644 339 634 667  11 659 638 475 607 581 642 636
 658 613 355 205  22  75 561 660 522 246 832 236 621 565  16 743 325  83 589 138 727  94 562 722 705 563 577 218 662 620
 803 720 618 594 480 583 129 737 679  35  43 456 590 537 180 558 189 602  12 153  27 489 688 762 560 386 541 132 631 601
 557 616 473 586 739 656 507 624 582 596 140 144 578 653  39 542 192 646  33  53 608 595 469 446 604 592  40  42 493 670
 458 564 296 637 648 455 348 529 600 588 569 358 651 728 468  20 119 261 417 465 416 490 605 442   9 676 429 264 528 477
 322 585 433 657 385 559 536 593 428 525   8 237 532 619 383 584 448  31 514 139 629 555 527 526 723 332 509 151 598 447
 643 640 531 400 501 574 591 519 466 288  91 452  26 609 496 511 538 545 510 440 461 520 535 392 478 445 381 329 251 352
 481 384 377 443 409 580 484 543 524 512 575 495 626 487   2 436  95 453 549 441 474 431 533 505 570 485 167 534 397 523
 450 420 308 479 869 516 326 280 408 498 513 291 399 471 652 554 374 318 491 597 334 426 438 274 521 345 434 567 518 444
 320 380 553 497 149 395 376 359 713 354 411 494 388 890 451 439 375 547 315 814 272 460 252 413 405 323 402 711 633 424
 517 403 347 568 606 317 311 486 356 437 333 492 298 483 506 396 798 848 472 774 419 390 502 262 482 168 305 467 393 379
 430 300 266 435 415 228 178 427 721 794 360 709 499 470 818 235 612 432 853 733 530 249 330 194 191 351 391 828 335 201
 253 454 724 763 307 877 203 327 856 344 887 457 286 277 394 290 745 324 369 687 179 350 306 162 263 800 373 736 464  58
 295 343 316 245 312 846 459 297 423 896 371 599 309 233 867 243 673 900 302 862 876 224 250 166 170 370 353 872 196 247
 387 270 741 865 115 422 781 406 303 292 556 674 275 176 254 231 806 714 331 220 285 881 217 225 378 623 882 389 328 488
 234 214 734 655 669 868 700 817 117 171 810 504 230 257 287 229 515 782 284 871 145 304 858 211 279 155 414 815  72 314
 273 834 873 362 187 289 883 836 337 808 540 572 738 747 682 165 260 357 603 238 240 265 336 226  84 172 548 671 183 206
 154 197 672 677  74 898 365 708 248 772 213 675 769 821 696 204 615 778 208 854 103 216 239 159 839 276 367 421  99 198
  96 864 850 244 859 158 551 699 111 143 185 889 635 863 793  69 425 742 341 611 163 278 614 665 113 780 160 363 188  63
 190 164 802 152 181 539 641 841 838 875 222 685 812 789 368 463 382 576 101 142 177 141 134  54 622 840 281 746  55 702
 127  70 892 221 169 719 844 550 891 503 366 753 879 683 701 207 748 760 566 546  64 126 114 271 639 137 124 689  52 104
 120 462 797 215 118  78 649 829 837 573  98 692 870 822 732 133 219 630 110 135 650 768  86  46  56 888 893 744 255  10
 895 195 784 128 131 404 816 625 136 678 407 755 773 754 508  92 786 710  49 130  93  60  89 897 771 758  59  65  82 885

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.41759e+06us (= 3417.59ms, 3.41759s)
Wall-clock time (full program): 3.48192e+06us (= 3481.92ms, 3.48192s)
Satisfaction error: 0
Number of search iterations: 1087
Number of local moves: 739 (including on plateau: 282)
Number of local minimum: 56 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6916
Total number of local moves: 4579 (including on plateau: 1318)
Total number of local minimum: 359 (including on plateau: 137)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 869 189 828 104 858 131 130 535 710 636  44 661 731 764  42  53  37  32  41 647 122 852 718  49 892 726  50 886 282 896
  90 735 829  43 707 712 127 797 835 234 746 163 803 885  46  27 132  67  80 821 567 101 499 686 854 167 100  74 883 705
 827 900 145 108 809 724 702 178 740 125 582 891 847 813 300 119 196  16  63  97 327 168 156 102 703 767 124 680 595 711
 105 684 837 215 838 143 335 562 793 888 688 792 725 830  81 164 165 106  73 250 812  96 504  34 128 195 755  93 730 894
 237 860 785 794 262 834 139 762 752 118 667 887 777 898  70  25 170 511  11 162 229 126 340 225 796 790 193 113 233 749
 815 648 743 140 716  14 213 479 770 643 289 630 681 851 185 546  77 631 138 201 115 134 586 172 615 884 208 117 579 695
 246 320 169 211 317 779 878 706 814 623 568 890 805 889 230  45 266 617 141 160 161 114 856 866 171 177 426 123 576 371
  86 638 194 380 333 235 203 882 605 786 833 599 823 198 330 204 221 358 311 817 269 260 897 135 116 540 314 302 765 881
 209 671 179 180 808 893 219 646 773 264 651 864 347 342  78 517 368 551 251 224 745 822 723 287 218 238 283 248 637 279
 336 701 202 265 223 370 355 766 594 245 618 243 349 321 274 734 639 682 514 395 899 151 872 337 305 364 326 442 753 240
 402 721 295 268 665 276 408 292 693 263 312 508 277 284 319 826 309 806 313 789 281 379 772 350 222 307 849 285 832 212
 476 818 301 306 316 175 411 481 704 367 611 304 414 255 339 359 820 580 763 256 296 210 870 417 259 649 387 298 634 439
 354 697 290 345 303 516 352 685 383 474 859 382 392 437 394 410 449 863 430 348 329 244 341 188 328 267 895 438 662 460
 413 506 440 397 560 522 419 239 632 434 475 343 525 373 384 722 590 299 376 433 464 601 362 374 425 544 472 334 435 422
 443 412 409 484 404 578 463 424 361 543 457 415 547 436 489 360 432 501 469 445 462 451 389 444 338 473 423 366 538 559
 533 492 500 465 524 385  30 344 523 626 471 378 429 459 390 278 494 561 622 446 391 455 396 318 569 427 496 288 653 572
 491 293 619 509 407 528 365 247 480 486 541 529 497 418 468 478 518 291 453 452 369 513  22 441 573 555 495 308 584 585
 575 254 613 490 447 261 386 372 393 625  61 554   3 485 456  98 526 381 549 645 483 537 627 589 510 467 610 515 458 545
 659  47 556 531 493 420 587 150 129 512 232 242 574 539 403 642 183 228 325 658 597 521 502 656 570 700 592 598 181 488
 406  91 566 558 602 614 616 536 356 550   1 654 400 477 608 192 591 236 628  58 629 609 176 520 596 466 120 527 454 678
 461 152 207 612 532 375 758 121 153  89 200 664 564 507 670 401 708 220 673  72 780 607  54 687 530 672 657 666  99 624
 733 431 732 709 552 650 692 112  79  20 258 581 214 633 804 487 331 270 542 548  95 713 644 679 534 519 297 606   2  48
 759 133 761 620 588 498 593  15  10  35 103  56 144 191 717 505 503 577 663 571 689 669 324 603 553 800 583 696 398 158
 557 217 799 737  85  94  52 640  28 600 399 565 621 719 683 655 728 280 691 448 720 660 173  88   7 802 450 677 166 174
 675 190 363 676  57  59 699 154 272 751 322   6  65 199 774 668 754 323 747 715 742 783  87 760 604 294 694 346  84 652
  82 249 748 784 332 768 674 206  40 788 184  13 205  83 744 698 750 635 351 778 801 839  62 842 729  64  68 811 148  39
  24 388 159  12 416 769 781 273 110 771 286 227 186 111 824 819 855 714 843 816  66 798 257 787 482 353 845  51 182 310
 736 836  92 876 136 107 231 791 155  75 757  36 142  29 877 857 846 775 782 739 756 641 109 149  19 157 861 880   8  60
 840 187  17 825   9 810 844 253 271  69 421 241 405  18 741 776  26 563 865 377   4 428 470 862 848   5 690 874 738  38
  76  55 137 871 216 275 853 867 357 875 879 197  23  71 795 850 831 841 807 147 315  33 727 868  21 146 252 873 226  31

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.88167e+06us (= 2881.67ms, 2.88167s)
Wall-clock time (full program): 2.94587e+06us (= 2945.87ms, 2.94587s)
Satisfaction error: 0
Number of search iterations: 684
Number of local moves: 575 (including on plateau: 165)
Number of local minimum: 6 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4976
Total number of local moves: 4545 (including on plateau: 854)
Total number of local minimum: 100 (including on plateau: 97)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 867 114  76  24 663 736 886 548 676  11 891 416  29  36 810 884 834 889  88  27  53  43  70 633 628 132 877  22 765 787
 780 900 150  60 504 469 862 144 729 893 846 613  37  89 844 858 856  69  81  98  48  84 149 748 725 176 859  46 756  42
 830  58 897  67 872 813 105 671 827 107 147 596  93  32  31 825 892 803 178  57 639 118  66 576 505 133 870 226 642 839
 894  30 103 864 543 777 776 874 578  80 214 749 213  51 104 143 805 898 568 126  72 664 122 851 162 248 815 237 816 138
 243  75  54 170 890 711 326 494 808 172 895 605 142 217 135 309 828 127 796  63 156 193 713 819 472 826 666 169 566 875
 720 179 100 160 712 183 809 818 391 116 174 751 134 216 175 833 832 797 215 153 157 553 177 721 885 837 665  38 706 308
 747 296  47 131 640 649 251 690 774 484 487 741 151 197 263 795 854  45 164 313 253 186 883 879 254 256 659 878 345 203
 250 343 210 269 849 786 207 564 869 244 233 660 180 188 199 277 163 167 373 152 865 679 852 824 835 719 398 306 700 154
 707 206 260 414 744 868 235 789 380 338 234 822 348 318 171 271 270 195 887 873 330 899 242 265 368 275 641 218 632 315
 236 317 320 161 728 620 366 686 781 799 881 880 314 190 209 289 292 238 219 232 285 355 896 857 322 299 680 273 394 396
 221 335 336 441 811 390 388 767 303 350 801 842 246 871 448 205 421 198 470 888 268 378 307 675 329 386 508 325 316 291
 185 311 473 305 697 360 128 740 745 571 480 699 356 347 408 261 288 393 709 670 310 404 371 493 262 449 608 475 715 302
 817 293 438 379 544 592 352 653 705 284 191 585 882 415 466 357 252 422 645 369 410 300 635 324 411 208 638 295 304 349
 377 381 502 512 323 432 399 444 241 227 876 478 845 459 528 333 437 499 361 267 450 462 522 412 463 401 584 625 435 240
 481 607 389 400 312 460 290 363 496 353 561 514 534 489 513 595 358 342 468 558 359 431 511 370 395 427 520 532 495 392
 557 337 500 491 420 418 428 479 440 429 453 413 424 510 321 328   9 554 506 426 531 471 559 443 614 610 403 456 384 601
 545 667 603 446 367 486 588 599 344 661 600 536 447 458 556 464 354 375 286 229 483 452 423 327 130 433 374 461 436 385
 372 612 442 587 445 409 546 319 474 454 376  82   2 430 542 569 550 455 501 574 572 165 476 451 551 535 383 407 619 615
 652 465 617 573 362 630 533 457 527 488 626 434 582 540 537 492 646 467  21 517  26 220 419 552  95 402 102 525 518 490
 681 406 688 541 110 108 627 145  64 672 181  90 590 521 497 579 575 507 516 382 509 695 580  99 115 621 482 793 586 555
  49 634 677 577 245 201 365 524 280  41 222 146 529 691 644 583 636 477 565 560 523 616 656  34 597 563 239 648 279 714
 604 785 570 806 228 117 655 140  55 547 657  71 684 425 530 598 716 120 567 609 519 629 591 187  86 538 158 673  19 631
 339 581 682 669 129 196 693   5 192 257 624 136 760 683 723 618   1 643 589 526 718 212 405  35 678 694 194 622 123 788
 112 732 562 602 387  62  25 334 230 539  56 281 696 792 647 662 743 650  79 731 651 594  78  10 734 276  39 791 606 814
  50 773 549 689  59   3 717 247 223 752   4 166 782 515   8 266 703 762 503 674 800 735 724  92 124 710 283 766 182 654
 111 658 701  20  33 200 727  87  52 754 211  73 397 668 761 121 109 685 692 807 863 836 726 139 784 106 148 698 755 593
  61 783 798 764 225 189 255 202  68 708 704 346 843 746 733 750   6  77 702 272 802 860 775 249 341 137 101 821  13 184
 125 439  96 840 332 753 204  94 282 611 759 498 866 841 763  91  18 770 739 823 278 141  83 340 804 757  65  97 168 838
 417 351 820 831  40 155 758 364 294 794 119  28 637 850 790  85  23 778 769 768 737 853 173 298  17 623 259 861  16   7
 485 847 855 722 301 742  14 274 687 779  12 264 772 730 159  74  44 113 258 771 848 287 331 812 829 738 297 231 224  15

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.19514e+06us (= 3195.14ms, 3.19514s)
Wall-clock time (full program): 3.26165e+06us (= 3261.65ms, 3.26165s)
Satisfaction error: 0
Number of search iterations: 963
Number of local moves: 717 (including on plateau: 188)
Number of local minimum: 41 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6053
Total number of local moves: 4390 (including on plateau: 1108)
Total number of local minimum: 248 (including on plateau: 146)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 872  25  22 269 778   4 736 273 804  38 282 821 859  73 183  80 865 819 846 153 290 191 829 230 107 786 481 847 773 179
 870  21 802 863 866 706 686 808 348   6 394 839 836 115 172 224 757 763 362 119  97  69 193  58   5 139 775 862   2 758
 369  26 114 826 770 488  98 794 727 259 711 807  62  44  46 122 771 762 124  61 251  85 841  40 764 722 816 851 799 365
  49 801 187 810 765 104 214 681 246  11   9  84 769 177  15  39 225 861 752  90 693 354 791 781  60 787 731 850 849 730
 800 811 233 714  30 683  59 648  81 210 241 690 743 759 160  83 827 746 590 149 257  20 776 632  35  78 675 643 817 325
 220 625 719 640 767   3 373 747 457 404   8 152 723 144  88 260 751 855  72  65 202   7 789 753 666 687 659 843 655 181
 148 656 692 652 724 595 658 541 636  17  53 101 740 537 276 185 130 720 400 247  87 205 766 248 607 756 696 619 678 145
  50 614 335 867 725 540 596  19 688 515  10 234 738 644  48  71 201 612 105 128 391 606  16 710 677 732 579 651 712 701
 458 650 556 602 589 217 150 633  57 604 123 298 670 708  14 151 639 502  55 277 489 173 585 698 709 661 662 721 695 169
 483 649 168 561 544 238 372 574 511 195 526 116 620 676 647 634 530 745  12  36   1 492 629 573 578 524 577 575 558 171
 131 456 211 668 520 618 413 697  18 667 334 184 592 534 198 449 684 430 559 324  93 702 531 425 564 375 563 466 509 600
 147 611 165 462 482 129 285 583  56 519 694 312 707 543 566 568 539 560  77 613  27 642 510 713 638 132 549 572 516 598
 493 550 628 231 631 588 504 410  29 525 409 360 118 503 433 608 287 499 521 555 616 470  68 435 441 735 569 538 447 314
 546 615 576 513 490 445 135 459 523 601 512 141 418 376 473 332  28 399 553 517 617 508 545 451 476 219 484 603 395 565
 518 480 467 378 542 562 495 460 423 343 532 581 419 439 415 386 472 341 471  13 454 591 498 505 453 320 536 437 414 570
 465 552 621 622 443 837 421 522 356 586 548 336 361 309 380 427 403 388 557 387 275 384 382 487 405 567 329 401 436 328
 416 500 571 267 420 398 623 452 311 408 426 446 379 390 609 333 703 428 463 440 402 411 344 507 342 527 450 878 358 313
 673 533 352 438 448 793 455 321 308 346 383 432 322 256 777 593 461 501 310 551 888 485 477 496 272 497 319 268 192 368
 889 305 768 584 283 374 729 385 208 389 353 876 178 297 664 397 396 371 830 366 718 239 469 367 271 323 363 491 337 295
 514 166 597 237 215 228 478 350 792 407 824 674 303 339 264 479 296 406 823 806 726 317 266 895 475 377 206 286 429 340
 680 355 848 442 229 370 630 227 879 814 587 672 331 279 663 506 280 307 338 327 774 347 284 242 304 412 315  51 213 809
 300 288 306 289 252 737 243 351 884 262 223 381 657 326 679 682 255 605 852 893 869 143 393 891 240 293 232  32 161 796
 637 253 669 164 244 222 174 858 897 357 159 627 291 486 818 835 254 138 610 880 294 739 898 136 834  54 103 359 209 316
 831 417 691 199 318 349 302 221 877 140 705 431 112 779 216 689 207 258 528 820 653 700 133 330 785 468 236 134 196 790
 894 265 364 125 270 805 886 204 175 665 783 784 345 278 671 699 760  67 250 899 874 641 301 110 197 292 142  63 126 580
 281 120 444  23 158 645 203 189 494 838 734 660  47 887 883 881 716  70 186 761 832 860 108 162 812 900  96 155 194 176
 170  41 235 868  52 582 263  86 755 864 654 474 218 854 704 715 212  95 842 815  99 803 113 109 750 157 885 200 146 754
 529 424 857  31 749 261 844 100 121 828 798 188 274 156 825 635 624 154 782 646 547 742  74  92 299 733 245  34 741 182
  37 873 190 137 117 892 896  66 748 875 728 422 249 717 788 599  79  89 554 780 535 845 111 626  64 180 167  43 882 226
  45 833 127  33  94 102 594 856 106 822 772 392 434 890 840 853 163  24  91 797 464 744 795 813 685  82  75  42  76 871

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.04862e+06us (= 3048.62ms, 3.04862s)
Wall-clock time (full program): 3.11951e+06us (= 3119.51ms, 3.11951s)
Satisfaction error: 0
Number of search iterations: 851
Number of local moves: 622 (including on plateau: 193)
Number of local minimum: 35 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5196
Total number of local moves: 4307 (including on plateau: 1048)
Total number of local minimum: 161 (including on plateau: 120)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 785 394 190 120  85 884 659 878 883 742 103  15 672  54 888  93 141 640 831 134 623 546  78 699  37 671  59 614 846 151
 817 680 233 136 159 898 718 712 167 774 765  86 695 148 107 886 185 108 834  80 651  35 560 837  34 126 131 743 673 537
 752 762 138 836 115 506 140 648 850 593 603 295 689 121 255  14 254 738 857  32 702 143  70 764 244  83  52 900 841 518
 882 306 874 829 824 144 875 665 851 798 703  28 741  45 292 106  55 202 196 164 759  12  43 596  25 736 482 258 284 740
 885 132  75 102 880 570 581 858 594 769 840  71 845 283 133  74 114 889 198  73 827 281 160 215 191 586 789 130 691 679
 559 101 507 117 206 270 856 753 666 597 730 127 895 229 169  40  72  49 639 137 848 716 111 727 628 873  33 894 304 662
 800 139 157  98 180 897 532 781 847 881 732 174 795 203  57 218 256 312 301  92 756 737  96 749 181 661 213 339 668 663
 710 294 162 404 453 274 696 490 763 859 158 128 896 297 123 187  29 171 170 385 747 166 899 683 155 892 288 266 877 893
 598 277 389 285 384 754 615 721 472 646 677 327 664 193 182 252 338 349 245 457 261 872 217 337 199 278 188 890 807 641
 567 478 235 175 221 263 849 697 558 618 844 231 755 257 347 184 271 461 318 273 852 386 313 259 194 251 287 735 813 823
 504 324 204 358 296 152 551 414 746 428 799 383 484 330 373 342 207 493 720 891 616 197 377 264 387 843 241 362 424 805
 539 149 310 286 403 298 154 423 588 627 802 876 436 462 393 437 519 500 395 624 417 421 476 325 253 282 418 456 464 782
 797 470 561 455 398 412 369 344 391 635 682 357 444 307 430 492 587 575 466 368 446 275 438 475 776 402 212 262 323 366
 486 334 243 411 449 526 842 534 669 517 731 211 346 529 319 451 729 612 267 388 336 552 375 222 576 350 427 280 425 378
 420 431 591 289 400 555 458 352 512 571 535 302 359 524 463 390 179 573 481 585 468 419 397 450 494 408 433 440 480 556
 332 467 401 341 714 326 602 488 340 351 426 505 422 610 465 399 407 315 293 333 687 547 510 569 483 548 374 268 435 557
 331 568 432 460 299   6 471 311 429 345 578 502 371 544 321 592 405 469 448 322 363 434 792 540 442 372 625 579 626 538
 376 522 577 447 410  68 491 604 335 249 439 564 562 328 508 745 443 441 260 496 314 239 545 498 600 531 521 633 246 523
 265 525 303 396 515 828 711 638 232 279 353 572  66 674 636 382 381 589 637 536 489 477 513 694 153 514 118   3 656 380
 365 445 364 582 361 501 485 681 308 360   5 565 595 499 692 533 474 406 583 320 487 770 200 787 653 124 495 209 100 566
 195 509 734 479 688 777  24 290 305  26 104 650 214 497 806 473 611 574 516 690 452 189 608 709 511 553 613  82 605  31
 367 563 693 654 520 530  76 125 550 247   2 631 329 686 698 528 617 620 655 541 186  18 601 276 549 705 701 580 226  41
 225 652 606 676 647 112 183 343 216  97  50 779  36 619 609 685 607 527 715 723 224 780  42 722 554 630 632 725  38  61
  77 678 503 670 584 300 105 220 392 135 309 760  69 748 870 675 757 684 147 773   7 708 717 210 758 621 542 223   4 269
 205 230 768 644 161  21 177  84 409  67 156 622 150 860 814 590 866  16 660 751 240 838 819 116 415 771 744 854 176 291
  10 812 726 793  27 713 208 163  47 238  88 820 192 809 801 772 867  17 658 634 227 109 707 454 783  65 778 724 250  23
  51 761 794  91 543 355 826  87 165 316 645 416 119 700  53 642 804  89 766 790  46 818 796   1 822  44 767 810  81 317
 219 629  62 728 887 839  13 172 110 142 354 862 145 667 719 706 833 379   8 228 370 808 459  95 830 201 788  99 750 413
  48  22 815 784 871  79  11  19  90 599 242 865 356 649 879 811 704 853 122 863  58 786 821 178 733 248 739  63 168  39
 348 861 868 869 835 657 237  20  30   9  60 791 173 643 113 816 803 864 129 832  56 236 775  64 855 146 825  94 234 272

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.14403e+06us (= 4144.03ms, 4.14403s)
Wall-clock time (full program): 4.20959e+06us (= 4209.59ms, 4.20959s)
Satisfaction error: 0
Number of search iterations: 1476
Number of local moves: 806 (including on plateau: 291)
Number of local minimum: 84 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11362
Total number of local moves: 6016 (including on plateau: 1925)
Total number of local minimum: 702 (including on plateau: 248)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 889  69 823 816 683 838 741 806 800 899  85  98 199 158 829  91 145 215 137  99 793 595 285 636 103 251  53 755 146 478
 774 893 884 105 724 132 643 758  46 747 101 113 202 104  92 715 718 136 343  48 848 811 116 407 660 394 120 881 890 110
 611 111 767 791 879 888 693 876 163 894  81 786 211 109  88  78 139 153 122 142 603 882 200 180 511 859 877 566 169  86
 836 144 863 662 609 294 574 895 677 778  80 176 255  33 124 711 178  43 108 227 869 857 140 496 186 615 842 684 194 365
 757 870 687 782 334 885  68 777 465 769 187 624  63 166 374 364 157 175 900 242 699 170 174 541 100 886 151 846 107 195
 237 290 697 776 825 892 780 129 826 266 135 668 128  41 714 233 663 250 179 252 691 184 627 214 433 520 853 628 224 160
 239 232 880 262 827 218 878 389 841 865 173 626 133 112 162  67 867 293 114 106 700 810 486 804 653 472 258 801  76 171
 731 191 681 304 360 265 391 855 256 362 317 355 521  74 898 238 840 225 274 188 586 246 868 288 813 717 332 686 248 405
 381 341 738 563 887 286 462 390 839 212 347 725 207 172 167 177 375 189 183 259 549 837 638 891 771 275 354 866 123 311
 784 243 861 799 134 305 834 379 291 338 456 671 708 330 247 223 314 263 190 138 457 785 535 327 570 719 310 597 443 264
 883 208 602 439 299 231 289 382 315 789 210 675 257 426 346 423 363 260 309 858 530 349 798 271 844 335 321 669 489 345
 236 461 616 358 216 279 351 307 466 431 319 519 762 253 342 369 460 395 592 325 652 386 833 340 622 551 416 897 385 376
 695 441 579 287 585 282 406 378 497 617 292 864 419 393 249 241 356 518 608 359 571 488 427 344 284 353 567 582 415 418
 367 148 606 370 402 468 553 539 366 331 411 268 545 459 499 506 409 444 276 414 632 537 513 372 425 781 540 498 313 523
 543 487 544 383 357 270 453 435 333 397 526 328 482 448 514 815 467 261 361 629 527 387 399 458 301 552 504 491 495 368
 650 417 396 437 398 501 336 451 410 403 326 352 533 896 220 388 371 509 442 474 494 447 463 492 479 430 484 490 528 298
 454 475 300 428 316 538 575 297 529 614 532 596 477 500 296 436 619  28 578 568 524 546 679  35 420 639  25 424 473 594
 452 525 318 392 600 587 480 493 670 324 515 542 165 634 306 613 445 384 339 267 432 438 469  30 308 569 502 323 690 703
 516 449 320 481 678 665 625 503 559 126 633 235 421  23 710 440 534 554 401 573 350 584 118 645 155 204 572 348 588 505
 536 599  22 621 557 620 550 470 651 647 412 230 548 558 429 581 547 666 531 641 281 591 164  51 130 229 607  32 809 205
 213 510 278  89 754 476 631 464 561   7 694 201 181 674 577 657 102 698 590 576 149 644 269 795 508 206 706  82 564 659
 152 672 143 280 676 517  59 556  45 121 610 154 413 820 604 712 728 555 562 688 408  18 522 720 377  54 646 312 635 756
 228 733  55 446 655 623 471 422   8 580 727 649 277 822 772 705 117 630 702 589 329  14  21 648 565 240  73 156 775 483
 583 673  42  34  26 753  20 704  40  79 792  97 749 680 593 560 656 745 764 667 209 654 193  16 234 637 807  60 735 713
  62 512 192 685 182  27 664 283 125  37 759  94 640 598 723  64 830 696 716 734 295 737 119 766   9 605 612 302 746 701
  83 872 222 221  77  58  13  44 168 618 642 254 824 709 808 790 722 862 732 739  19   5 788 787 197  56 601   4 750 850
 141 742  95 203 159 736 131  10 245 303 803 763 819 831 821  12 244 874 740 692  31   1 658 400 507 185 845  66 661 797
  52  38 219 682   6  50 485 380 743 115 843 828 726 814  36 721 730 770  15 404  90   3 851 752 773 226 150 450 761 802
  57 337  61  71  93 744 198  47 768 817 689 273 796 873 779 729 147 875 860 765 127  75 707  49 794 871  65   2  11 835
 373 832  24 748 217  87 161  96 812  29 818 751 854 805 196 856 272 849 847 852  70 434 455 760 783  84 322  17  72  39

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.53838e+06us (= 4538.38ms, 4.53838s)
Wall-clock time (full program): 4.60306e+06us (= 4603.06ms, 4.60306s)
Satisfaction error: 0
Number of search iterations: 1785
Number of local moves: 830 (including on plateau: 212)
Number of local minimum: 143 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13376
Total number of local moves: 6433 (including on plateau: 2327)
Total number of local minimum: 935 (including on plateau: 299)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 152   3 443 836 140 837   7 793 285 455 371 798 767  15 778 788 877 162  53 128 556 867 878 835 482 221 147  65 755  21
  13  36 786 827 179 771 144 868  24 803 865 507 223 194  88 700 832 186  84  23  89 826  29 857 831 210  37 882 730 871
  12  28  20 795  19 858 634 214 259 606 708 850  61 159 751 745 822 763 131  80 679 275  66 791 163 352 187 799 873 815
 567 825 151  11 145 861 249 764   8  26 776 590 649  55  48 781 640  25 729  75 697 301 669 797 715   2   5 726 749 879
  52 743 425 677 411 757 255 802  32 801 843 388 698 180  95 806 748  34 121  18 374 364 707 851 769   1  63  70 710 720
 254 693 168 608 181 126 773  22  83 681 654 324 780  56 805 787 852 154 662 115 766  38 784 846  79  40 196 794 444 750
 234 632  41 699 172 667 101 619 138 636 651 727  86 466 782 721 736 600  76 160  43 246 683  16 738 361 543 742 680 519
 129 642 216 233 205 737 148 753 176 595 712 505  39 102 106 691 602 705 734 518 675 139 127 653 724 336 166 779 629 739
 605 672 228 775 261 547 644 631 576 647 587 200 638 618 451 685 563  87 584 627 114  14 108 570 134   4 122 236 829 758
 637 565 645 318 262 719 650 686 517  47 552 504 404 379 530 483 560  62  96 663 703 209 591 532 601   9 135 414 558 484
   6 718 571 635 217  17 585 569 446 549 573 204 664 501 689 613 522 655 624 528 714 433 110 206  10 155 439 611 575 376
 540 620  64  59 229 626 354 520 641 363 690 199 614 657 464 733 656 598 207 586 303 441 588 475 499 272 323 535 125 534
 212 440 271 462 202 643 453 506 341 594 333 498 546 479 510 559 577 416 557 579 597 288 545 599 111 564 430 368 362 473
 550 437 480 449 347 427 538 596 536 345 393 435 407 215 436 508 235 628 648 553 402 694 224 378 592 607 283 195 521 456
 604 306 589 551 615 251 385 617 389 431 418 268 526 395 459 136 495 533 394 331 469 542 702 583 485 461 422 512 381 265
 488 349 514 312 524 682 375 447 338 408 572 603 452 426 523 328 201 574 369 566 555 383 409 399 434 544 460 337 465 478
 525 403 295 810 454 568 424 410 334 250 493 457 492 684 293 486 332 314 420 529 297 847 316 531 516 357 491 610 197 380
 633 582 468 348 463 472 372 313 398 396 421 415 489 872 471 281 541 578 282 339 497 247 382 367 386 513 511 477 527 474
 309 289 792 161 476 487 894 276 423 335 326 756 353 470 355 344 429 213 562 302 838 881 190 305 450 621 500 317 502 359
 898 417 412 660 717 294 329 390 419 322 855 343 360 392 405 320 377 356 257 346 494 777 192 438 299 890 687 373 270 226
 358 277 291 263 772 304 310 308 800 807 239 849 400 284 342 173 401 387 279 458 785 841 670 266 300 844 725 325 150 307
 287 193 709 442 704 370 790 315 883 248 267 783 839 245 232 384 290 340 539 413 188 884 311 298 280 823 668 406 292  92
 581 211 848 676 665 264 189 891 296 365 231 625  98 646 899 241 253 185 673 351 350 548 448 230 330 840 760 274 278 269
 752  42 869 132 854  68 830 117 860 859 191  27 327 716 808 321 137 862 688 580 174 445 177 503 711 397 515 260 258  35
 770 814 593 622 754 490 391 220 554 119 218 237 156 167 175 165 273 227 876 740 242 735 244 219 812 741 695 789 225 252
 428 885 623 141 467 105 183  74 864 701 203 112 171 824 612  60 182 819 762 747 184  94 842 661 809 616 813 208 240  85
 875 120  77 286 744 158 820 123 759 866 104 366 692 887 874 256 149 732 880 856 164  81 659  71 146 671 796 157 116  30
 731 897 432 133 630 153 674 118 537 103 109  44 811 765 178 319  91 834 143 821 723 238 142  90 893 639 804 509  54 900
 817 609 678  33 818 198 169 481 853 100  78  31 666 892 243  50  97 658 222 761 130 768 889  49 170 728 706 652 896  73
 496  67 816 561 888  58 845  72 746  57  82 870 107 774 113  51  45 828 863 722 713  69 833  99  46 696 886  93 124 895

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.3092e+06us (= 3309.2ms, 3.3092s)
Wall-clock time (full program): 3.3739e+06us (= 3373.9ms, 3.3739s)
Satisfaction error: 0
Number of search iterations: 1000
Number of local moves: 700 (including on plateau: 211)
Number of local minimum: 47 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6381
Total number of local moves: 4702 (including on plateau: 1291)
Total number of local minimum: 259 (including on plateau: 165)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 726 738 339 875 152 793 871  48 891 496 134 782  58 839  89 104  93 553 899 143 203 887 135  40 193 164 110 641 633 886
 604 142 218 852 877 855 851 103 866 155  61 843  77 765 117  99 722 785 696 223  49 310 137  34 128 831  78 640 497 900
 715 826 880 573  83 648 161 126 868 849 119 179 150 626 200  35 189 109 770 771 106 240 707 102 898  56 808 598 896 227
 614 692 450 790 101 789 219  85 889  94 149 410 275 883 181 187 532 685 772 156 121 739 241  66 700 112 897 837 734 115
 870 731 269 853 172 711 180 763 892  84  67 184  50 688 204 249 224 768 741 561  52 373 879 222  88 828 132 795 676 209
 780 437 211 819 192 744 848 393 802 139 111 344 183 823 141  92  71  53 818 281 417 689 893  51 888 120  73 803 841 458
 330 878 188 682 144 895 882 846 567 105 173 850 311 825  65 124 170 199 322 277 338 794 169 890 151 190 279 616 637 618
 854 572 358 608 231 723 287 176 535 525 182 205 363 677 294  87 212 670 401 821 326 796 867 407 228 306 214 860 260 470
 804 186 838 300 471 571 159 197 864 809 215 177 178 758 299 201 301 191 628 810 207 881 362 360 230 752  55 359 591 761
 844 414 520 273 416 645 736 345 636 784 290 615 280 686 256 208 714 732 324 328 376 225 382 213 217 288 278 613 242 635
 861 787 498 302 399 653 238 446 743 335 884 481 265 372 272 268 355 773 236 390 303 235 403 325 461 378 264 620 337 631
 505 519 443 283 473 705 292 270 582 508 246 366 405 348 361 233 194 724 500 799 370 574 332 424 421 486 245 568 523 816
 263 202 619 386 387 622 453 365 493 506 253 276 442 316 503 894 858 885 404 165 331 502 251 347 425 394 314 364 482 813
 775 488 495 289 271 555 305 531 654 477 334 282 517 381 492 438 315 321 507 389 428 527 385 434 354 510 656 538 558 309
 441 550 440 639 540 267   3 323 350 586 448 460 560 349 625 317 623 293 546 632 478 377 395 578 412 491 449 420 487 436
 467 388 375 431 409 444 600 452 392 475 609 380 447 480 479 342 592 603 515 312 522 674 413 518 402 514 391   6 429 454
 533 472 319 406 371 234 485 552 313 400 465 286 476 530 547 716 397 589 456 427 464 551 430 459 379 663 541 329 630  95
 353 352 526 599 408 250 549 596 257 298 564 581  33 566 284 490 509 396 367 577 827 624 432 369 563 587 529 512  98 419
 423 343 652 466 336 422  54 474 266 356 662 612 463 501 585 499 483  63 346 543 634 210 559 451 651 545 629 536 661  90
 554 691 484 606 175 368 565  18 327 611 468 162 680 544 687 701 684 445 593 113 583 548 418 694 426 174 627 308   2 259
  41 131 710 504 643 171 774 534 244   7 528 638 516 133 597 576  72  46 557 698  27 595 539 681 655 742 679 383 524 570
 118 220 153 489 709 341 695 462 157 610 753 766 673 296 584 575 154 605 727   9 542  10 668 750 658 513 718  76  69 415
  29  75 719 712 621 333 708 521 163 704 556 834 580 100 650 740 666 185 717 127 537  59  62 494 594 667 690 261  37 374
   8 511 664 130 747 146 384 562 254 735 457  38 702  13 697 748 703  97 123 469 590 569  45 198 706 644 749 295 755 776
 138 167 788  31 862  64 642 777 291 683 791  79 778 125 737 602 675 351 108 762 721  15 814 767 672 649  22 116  36 252
  68 255 239 148   4 145 607 669  42 657 746 693 764 136 729 812 439 411 258   1 713 320 806 769 815 800 646  60 720  43
 129 757  39  26 822 206 671 665  44 678 832  96 865 114 601 728 274 647  21 824 783 304 829 874  81 659  30 147  70 699
 307 845  25  74 817 160  47 588  28 435 797 751 830 243 617 811 807 221 140 196 863 226 216 285  91 433 873 798 833 158
 195  24 297 107 842  32  17 872  19  57 801 805 869  80 786 847 754 660  11 876 745 579  16 856 781   5 779 168 237 398
 166 122 759 262 840  23 232 756  86 357 820 340 725 318 836 792 733 455  12 835 859  82 730 857 247  14 760 248  20 229

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.30851e+06us (= 3308.51ms, 3.30851s)
Wall-clock time (full program): 3.37426e+06us (= 3374.26ms, 3.37426s)
Satisfaction error: 0
Number of search iterations: 942
Number of local moves: 662 (including on plateau: 186)
Number of local minimum: 38 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6963
Total number of local moves: 5578 (including on plateau: 1509)
Total number of local minimum: 240 (including on plateau: 176)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   2 819 869 744 796 227  42 830  21 408 800 228 327 226 825 217 202  73 374  67 844 296 789  39 766 738 753 792 394   7
 851  14 866 770 764 649 853 867 849 810 252 205  62 210 746   3 264 154 102  22 241 167 881 141 213 236   8 786 803 726
 610 762  20 785 794 151 815 331 854 121 714 161 138 323 787 113 188  23 443 461 719 166 820 442  32 782 773 267 335 585
 816 843 776  40 821 131 827 735 109 750 348 778 180 625 152 354  51  36  66 698 759 713  82 292 690 808  17 712 129 177
 482  19 826 841  15 654 864 728 647 806  97  99 211 669 846 256 198   9 721 194 733  84 737 223 677  30 736 807 262  44
 703 670  27 637 793 657 660 812 848 316 734 140 497 133 126 552  87  37 760  77 695  83  49  75 871 661 691 724 339  61
 366 364 741 682 522 270  11 192 767 299 709 156 260 110 745 297  45 732 577 563 704  52 553 155 710 697 702 636 624 274
   6 727 672 775  46 101 623  12 777 601  18 190 379  43 701 338   1 715 784 686 621 693 747 573  29 598 566 619 731 143
 285 679 694 504 569 244 653 136 716  68  24 115 620  81 663 187 388 291 543 711 739 644 645 486 642 628 523 614 395  28
 219 664 681 547 684 104 641 240 666  96  16 163  95  63 771 160 602 725 549 633 449 749 498 652 626 692 613 536  79 302
 230 755 509 561 579 491 646 705 439 175  60 609   5 575 467 356 249 164 481 673 501  69 574  94 596 529 607 606 534 676
 276 347 622 583 488  47 468 527 685 560  10 255 587 541 594  13 535 525 597 521 595 651 604  65 680 555 508  26 464 586
 123 643 414 558 556 505 590 235 524 545 208 589 176 559 616   4 334 470 479 516 393 599 446 435 430 632 485 503 465 483
 397 493 456 495 433 463 538 373 554 639 436 382 350 441  48 420 423 603 372 539 487 429 506 437 472 490 386 507 542 404
 189 591 447 492 406 448 405 144 411 630 582 346 475 580 122 428 362 618 459 409 502 588 532 269 489 484 513 546 548 500
 389 352 358 531 530 474 528 455 512 385 576 283 893 537 288 473 592 401 268 410 466 336 445 567 469 341 444 476 387 349
 551 462 494 400 471 458 452 520 544 371 424 550 381 330 453 818 510 434 396 399 351 402 303 460 451 850 432 173 306 369
 656 259 324 477 322 320 222 300 317 811 892 426 814 345 418 584 570 600 251 294 325 370 421 478 353 496 357 390 743 380
 627 355 480 304 457 301 361 805 514 333 363 258 874 422 359 837 838 305 861 329 431 201 360 378 416 284 417 407 261 377
 887 593 413 311 247 376 526 343 319 337 511 298 707 809 398 717 683 326 278 897 318 277 438 454 206 340 185 178 835 308
 419 831 312 114 412 184 181 768 295 384 392 391 896 870 271 668 440 238 289 368 875 186 266 615 265 403 344 224 856 758
 769 280 383 450 279 889 204 321 342 801 659 699 891 313 310 540 655 174 282 139 225 900 273 168 275 197 220 242 788 847
 756 158 832 365 212 687 233 314 170 519 246 817 200 120 765 720 858 307 375 287 293 209 898 795 193 232 250 234 748 722
 578 183  57 195  88 822 882 257 272 863 328 840 243 696 367 855 797 772 171 263 332 658 215 899 248  71 157 127 761 518
 557  53 315 169 229 862 245 499 159 221 839 886 860 791 309 631 568 857 199 617 107 879 100 730 885 231  86 142 203 286
 427 130 117 149 833 629 146 105 182 571 834 634 562 700 150 740 674 845  90 779 237 611 112 718 859 425 214 207  93 742
 894 128  50  33  72 836  41 662  76 754 640 675 253 281 884 605 763 823 162 877 125 148 135 804 119  89 888 883  92 723
 191 179  58  74 790 239  34 533  38 165 667 638 751 689 145 865 517 780 868 783 254 852 116 828 608  64  59 895 147 688
 106 872 671 172 111 515 799 118 873  98 564 880 216 635 134  56 706 813 876 218 103 729 890 565 137  54 752 132  70 650
 153 290  31 757 196 781  25 648  35  78 572 824 612 798  55 708 415 665 842  85  91 774  80 678 108 878 829 124 581 802

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.02509e+06us (= 4025.09ms, 4.02509s)
Wall-clock time (full program): 4.08934e+06us (= 4089.34ms, 4.08934s)
Satisfaction error: 0
Number of search iterations: 1384
Number of local moves: 660 (including on plateau: 211)
Number of local minimum: 92 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10630
Total number of local moves: 5546 (including on plateau: 1627)
Total number of local minimum: 735 (including on plateau: 201)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 829 178 167  22  42  90  26 844 168 139  55 697 648 827 152  72 818 877  81 835  37 669 896 749 804 153  17 858 870 895
  87 506 570  88 782 166  75 544 893 714  91 628 664  99 830  38 836 677 223 878 871 746 107 117 734 143 405 744  84 175
 158 887  48 883  61 899 127 772 104 102 779 823 631 755 886  69 840 767 130 616 172 718 160  77 833 140 825  47  62 144
  76 191 128 132  25 874  50 622 133  92 252 745 743 190 813 119 518 650 445 723 527 741 864 156 884  97 889 783 880 173
 203 206 126 856 150 111  73 214 629  56 776 694 163 892 577  83 386 636 314 740 602 627 288 135 796 869 621 888 181 623
 136 476 819 215 138 885  54 216 164 192 654 703 860 237 526 608 537 764 326 808 189 754 204 120 897 210 224 800 550 249
 108 109 225 161 118 141 847 196 232 124 799 605 185 787 763 142 630 876 176 868 179 766 891 730 199 182 832 259 633 752
 170 248 149 169 174 147 262 333 258 372 245 875 797 821 678 391 861 761 264 770 222 807 146 193 230 578 793 324 715 762
 340 231 371 188 339 110 282 344 890 277 801 343 756 335 777 540 894 848 346 292 780 328 266 137 546 162 765 347 261 619
 274 285 620 318 357 180 309 389 116 879 530 790 760 159 576 268 287 811 500 291 684 290 187 786 726 270 599 412 341 521
 387 312 334 311 256 123 327 250 316 350 778 385 410 422 873 569 850 679 690 325 872 297 284 898 279 228 298 302 394 716
 358 382 332 242 449 272 403 211 251 355 255 853 572 408 729 286 757 671 845 271 342 375 473 171 455 296 855 374 710 562
 368 426 306 399 304 376 509 440 503 431 421 366 428 338 429 733 611 380 613 365 795 238 369 805 345 471 348 321 330 747
 379 492 377 400 305 468 308 472 337 295 432 535 307 737 396 420 465 517 460 457 413 458 497 862 501 367 370 289 539 660
 505 487 411 359 424 417 425 414 496 395 393 407 464 477 283 900 462 416 609 510 351 439 373 520 401 545 233 384 486 529
 502 397 349 244 354 558 615 360 600 499 461 459 566 454 322 239 466 511 430 519 390 618 423 456 451 437 361 475 549 450
 469 479 478 589 594 435 481 419 438 663 552 489 482 443 444 278   4 485 418 433 567 574 515 531 528 446 582 470 221   8
 514 480 453 565 557 398 331 610 538 493 635 474 547 596 533 235 378 551  34 560  52 575 556 592 523 555 205 448 121 406
 571  13  11 606 579 653 498 588 593 586 452 542 634  16 504 488 587 131 404 642 402 516 522 525   9 564 554 508 591 226
 657 490  85 536 573 561 559 595 680 495 590 209 356 103 240 260 441 392 467  70 483 682 683 583 494 666 236 649 532 148
 617 607 692 604 673 388 696 548 513  36  80 165 674 659 198 688  44  45 727 195 704 507 543 662 212 553 640 601   1 243
 603 724 849 541 722 672 585 698 670 614  64  96  71 731 177 246  59  27 197  78 665 301 568 612 637 791  51 702 563 201
 625 632 806 712 624 721 681  40 580 534 668 491 155 122 151 427 213 129 781  66  89 218  94 691 675 706 294 644 705 241
 750 598 647 656 775 784 719 524 759 643 693 145  98 785 265 597  41  19  18 125 655 154 708  30 695 735 247  14 336 300
 753 667 584 814 771  63 815 646 581 638  68  60 362 711 293 816  23 106 769 687 299 100  82 323  67 701 257  31 742 686
 748 676 736 810  12 739 758 738  58 822 207 281 227  86 310 652 442 112 709 184 641  46 824 626 113 484 254 685 220 315
 812 651 803  15 863 700 846 732 768 792 689  79 303 713 352 842 115 105 329  95 313 253 263 409  57 645   6 728 208  29
 774 854 320 699 857 751 200 725 319 865 267 280 436 114 415 809 363 275 881  93  65 157  32 383   7 820 186 317 788 463
  35   5 852 720 839 194 837   3 794 843  39  20  33 229  21 841 234  24 447 802 381 512 831 434 364 658 851  10 828 834
 707 826 867 661 798 639 817  28 134 219 789 276 183 269   2 859 353 273 882 217 773  49 866 202  53  43 717 101  74 838

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.30772e+06us (= 3307.72ms, 3.30772s)
Wall-clock time (full program): 3.38055e+06us (= 3380.55ms, 3.38055s)
Satisfaction error: 0
Number of search iterations: 1046
Number of local moves: 669 (including on plateau: 227)
Number of local minimum: 53 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6568
Total number of local moves: 4477 (including on plateau: 1248)
Total number of local minimum: 333 (including on plateau: 173)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 899 350 838 885 112 846 752 737 252 199 870 101 572 601 584 805 363 283 797 123  41  93  73 108 701 745  67  58  63 597
  62 889  85  99  86 841 102 862 128 135 869 626 807 762 688 787 561 133 387 188 892 365  79 516 888  82 878  71  38 609
 162  70 857 143 415 573 134 735 514 396 880 867 872 785 629 144 722 462 823  45 171  97 170 127 213  94 881 844  54 636
 157 845 237 894 322 882 206 778 586  49 568 590 623 631 833 520 211 749 640 182 177 163 409 145  81  92 896 176  47 826
 208 234 126 138 865 835 193 860 607 814 497 853 758 229 645 403 181 664 661 360  96 227 107 238 858 891 167  56  59 685
 900 603 183 113 122 837 813 874 241 668 258 782 180 658 351 243 898 713 539 257 264 269 178  65 667 136 843  74 110 676
 743 854 327 172 232 281 890 621 198 769 678 794 220 877 202 260 215 821 792 313  75 221 228 203 197 275 739 200 231 887
 125 825 236 121  60 192 165 469 160 784 565 201 583 723 834 897 558 465 728 159 216 337 849 276 146 166 796 818 323 738
 299 714 224 185 111 186 137 677 810 651 552 883 405 770 800 328 339 876 687 222 311 493 523 293 419  98 149 196 338 839
 246 253  77 280 751 254 830 614 864 505 724 760 169 847 262 333 466 730 511 375 802 247 292 395 190 279 319 191 268 681
 555 309 715  90 356 291 210 571 310 855 832 324 435 398 482 455 223 783 476 895 270 747 267 277 242 358 306 326 366 791
 416 274 567 225 451 376 289 472 518 576 542 287 362 421 367 244 346 765 893 582 732 436 212 495 420 540 296 316 763 332
 618 265 308 447 330 255 288 654 340 599 575 381 808 490 434 386 248 517 410 368 297 364 702 347 535 408 413 521 388 819
 475 406 574 342 439 450 372 550 470 496 491 485 399 499 531 512 370 467 392 390 431 545 534 594 305 302 509 438 538 209
 488 304 400 377 427 217 315 536 699 828 341 460 510 471 349 259 432 543 371 591 537 374 530 508 380 610 443 249 437 529
 331 382 486 473 479 423 474 600 394 616 168 433 489 336 468 325 402 445 361 525 884 428 459 401 524 519 369 354 463 504
 615 383 378 461 458 589 498 334 662 391 118 179 417 379 581 515 284 430 412  18 580 587 298 663 556 564 483 546 707 429
 492 595 522 501  24 506 569 335 608 422 321 620  68 675 503 411 263 329 453 649 548 414 418 353 686 557 611 527 500  35
 559 480 684 766 680 448 464 154 139 230 109 226 553 593 449 653 674  13 352 646 446 588  12 619 731 348 579 748 566   6
 404 106 440 424 560 647 755 373  64 477 184 637 544 385 622 635 655 214 218   5 563  83 481 708 632 669 624 484 806 116
 613 577 533 672 700 513 709 219 303  31 314 670 551   1 294  66 173 194 625 554 307 502 494 578 648 642 528 532 690 282
 673 592 320 641 721 634 683 158 155 425 130 692 643  37  23  42  57 261 598 659 652  14 712 703 585 454 628 779 812  32
 441  20 547 541 705 507 706  48  72 312 114 633 711 141  61 777 691  39 117 605 697 693 357 793 604 665 251 827 716 124
 444 384 570 744 710 233 150 131 657 273 271  17   3   9  91 804 627 606  25 696 720 718 781   7 809 772 602 753 719 189
 682 704  43 526 452 656 301 456 120 300 698 164 639 666 272 795 727 151  27 725 780 343 750 773   2 756  36 596  89 286
  69 345 811 638 746 105 803  10 742 359 788  16 152 393 119  30 207 295 290 562 650 820 245 840 612   4 689 786 729 660
 156 734 671 863 549 644  53 318 617 397 775  26  88 174  87  28 103 407  52 873 754 879 829  15 767 774  11 790 886 195
 801 256 266 115 679 132  19 104 816 694  76 147 717 317 771 250 866 478 630 278  55 851 824 815  50 875 205 344 695 389
 842  21 726 768 798 140 776  78 733 235  46 204 142   8 426 868 836 240 148 822 487 761 850 861  33 789 153  84 355 285
  40 741 764 871 175  22 859 187 736  29 161 457  95 239 757 740 817 442 100 848  80 856 852 799  34  51  44 831 759 129

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.17943e+06us (= 4179.43ms, 4.17943s)
Wall-clock time (full program): 4.24388e+06us (= 4243.88ms, 4.24388s)
Satisfaction error: 0
Number of search iterations: 1521
Number of local moves: 796 (including on plateau: 261)
Number of local minimum: 71 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11797
Total number of local moves: 6330 (including on plateau: 2173)
Total number of local minimum: 702 (including on plateau: 295)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

   2 285 803 830  35  53 337  58 150 832 766 831  13 881  68 854 823 888 825 864 572 505 708  28 191  36 197 838  21 221
 877 817  66 118 234 120 336 741  87 742 774 398 194 884  12 880 887 890 802 837   8 822 176  34 836  99 352  54 155 283
 757  14  67 827 188 513 292 805 109 210 758  30 751 858 842 808  17 856 749 869   7 690  81  63  32 119 849 395 820 139
 779 703 747  20 775 546   1 185 133 631  19 734 222 759  65 694 810 704 829 809   9 855 199 231 816  25   3 202 812 198
 715  38  46 651  11  16  37 789 726  39 727 311 144 840 763 739 787 717 738 762 701 765 187  50 602 278  88 114 786 348
 719 358  60 635 323  27 126 772 117 439 716 662  45 714 729 764 486 781 750 385 594 381 259 736   5 192 794  47 761 138
 653  76  15 735 246  10  40 737 576 656 573 632 182 324 780 733 724 785 732 696 664 595  94 592 629  23 148  90 695  80
 646  43 710 754  85 401 313   4 723  42 711 730 671  59 728 102 731 657 473 615 721 807  48 648 712 123 134 253 652 219
 591 686 636 663 165 559 164 687  24 678 680 659  78 153 617 828 623 677 255 630 634 104 235 644 756 203  77  92 538 179
 582 655 643 675 579 548 318 626 156 149 707 672 706 599 539 622 633 647 239 637 100 154  62 271   6 228 688 196 356 522
 638  22 491 610 666 368 306 698 700 556  91 590 449 625 684 526 509 611 578 103 521  72 212 661 503 237 520  82 529 357
 510 645 190 492 517 603 200 261  55 570 580 571 601 512 316 627 619 496 560 598 640 262 308 390 669 111 129 366 528 589
 525 600 128 549  31 555 482  26 569 346 516 566 483 242 567 574 575  49 364 564 469 476 593 527 561 535 498 467 458 620
 422 609 699 540 420  29 419 448 434 459 511 514 534 485 536 293  18 461 563 392 322 466 524 489 474 497 463 587 413 494
 545 551 441 425 531 493 339 583 438 487 427 477 416 408 507 444 405 471 543 266 604 373 479 504 370 365 455 307 484 377
 402 423 465 447 396 338 481 404 460 518 369 424 386 506 495 502 478 378 499 363 451 542 501 332 442 533 588 537 383 472
 544 353 673 225 480 429 565 394 446 326 382 490 291 407 350 189 725 399 668 437 433 475 305 388 391 642 435 799 431 443
 310 440 468 453 883 833 410 361 362 432 457 328 523 412 406 376 387 462 641 351 380 384 355 341 426 624 500 414 375 421
 409 889 227 379 676 783 515 329 331 333 436 819 335 317 302 532 343 314 400 342 397 143 891 344 275 581 374 470 281 748
 403 274 347 294 454 297 586 428 295 270 798 857 596 286 300 371 418 340 260 658 430 846 584 290 312 654 273 568 211 815
 345 886 450 327 417 760 530 309 445 806 319 320 349 660 389 354 238 264 289 452 873 232 868 223 279 682 393 614 186 256
 263 743 298 282 415 334 608 488 788 233 325 175 284 773 248 360 136 301 679 272 372 900 367 304 280 778 865 618 167 859
 251 168 276 174 740 146 821 519 862 720 541 172 621 299 180 330 303 456 267 252 359 296 697 258 268 767 667 709 650 746
 171 321 229 218 771 795 872 215 243 871 170 220 814 628 224 265 250 122 101 213 722 173 585 882 249 577 896 769 244 705
 315 214 137 157 834 597 863 895 866 777 240 106 718 206  83 158 135  75 127 166 287 612 847 160 853 835 649 692 226 685
 115 744 874 693 894 159 784  69 878 230 247 184 241 207 130 147 257 169 217 550 116 193 605 800 776 851 793 702 201 689
 254 162 796 861 683 824 755 860 209 195 464  97 845 145 131 178 183 112 142 205 152 839 558 811 121 841 110 813 562 607
 125 288 893 163 899 782 508 124 897 792  57 843 752 141 848 151 132 161  84 107 216 236 804 867 277 411 674 898 181 204
  95 616 770 245  93 753 681  61 691  71  56  51 606  96 875  44 797 208  33  41 876 140 670 879 791 818 790 269 852 547
 552 892 870  73  74 844 826 639 745 105  98  52 665  89 801  70  86  64 108  79 885 177 713 768 613 850 113 553 557 554

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.62167e+06us (= 3621.67ms, 3.62167s)
Wall-clock time (full program): 3.68717e+06us (= 3687.17ms, 3.68717s)
Satisfaction error: 0
Number of search iterations: 1169
Number of local moves: 848 (including on plateau: 208)
Number of local minimum: 42 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8736
Total number of local moves: 5625 (including on plateau: 1594)
Total number of local minimum: 432 (including on plateau: 187)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 863  90  66 854 174 514  35  32 126 891 793  51 828 866 894  38 664 788  39 535 889 222 857 486  81 718  34  88 118 881
 663 737 855 773 869  47 886 761 899  61 785  75 228  42 890 859  89  56  93  74 865 843 724  60  67  24 874  50 225  41
 799  96 885 233 806 826 480 452 116  82  54 204 202  40 900 888 701 549 134 156 103 777 752 608 157 668  44 895 264 644
 768 198 880 765 175 747  95 176 816  59 413  55 735 152  57 867 674 651 113 211 194 736 795 689 876 598 100 109 159 652
 746  53  91 730 477 794  48 265 892 548  83 186 732 153 896 887 779 622 132  58 213 808 775 646 299 862 144  49  71 476
 693 532 260 183 271 533 275 606 229 129   1 305 792 141 208 267 879 722 168 207 893 805 627 809 846 171 162 104 825 872
 812 243 216 169 858 814 789 161 219 140 832 272 297 124 170 142 561 877 155 209 328 837 741 884 232 505 318 220 699 691
 601 249 177 748 284 709 270 883 302  94 803 239 841 251 324 205 824 727 287 223 197 241 650 776 139 749 172 554 313 683
 870 105 217 252 261 700 254 199 278 783 308 215 242 835 185 195 873 770 525 237 875 729 570 844 191 393 276 334 338 661
 317 800 190 282 246 682 293 760 332 707 355 131 227 234 236 898 698 619 224 357 786 375 656 829 192 266 370 787 316 350
 853 288 386 319 279 625 158 767 258 178 897 830 769 257 240 196 694 623 536 256 347 292 740 639 376 352 283 385 290 402
 280 235 286 291 343 550 399 839 115 325 850 340 396 840 315 431 346 364 300 416 372 418 759 706 210 754 447 349 482 757
 311 400 367 484 378 677 353 861 407 790 556 391 335 827 285 408 359 510 436 360 231 404 494 478 506 448 345 409 337 368
 537 521 380 882 374 411 366 851 369 281 441 339 450 351 323 460 444 379 420 481 365 362 712 405 464 301 445 410 451 540
 381 474 473 326 387 511 392 457 341 395 329 633 519 356 483 455 456 428 467 403 423 449 578 509 620 513 424 438 388 507
 437 434 543 520 422 471 466 398 322 490 551 425 429 439 430 560 541 496 401 547 435 336 373 571 577 491 479 354  85 492
 462 344 586 294 544 309 636 529 321 320 475 512 502 415 426 470 539 377 524 542 432 463 446 427 503 592 412 127 499 487
 461 587 493 414 468 383 397  84 382 528 122 516 472 394 497 488 515  28 557 590 440 599 331 504 584 523 589 562 538 469
 442 647 555 546 648 203 458 597 526  33 443 419 642 574 702 508 146  17 138 582 501 563 417 101 495 453 743 684 485 247
 136 498 527 697 600 358 579 660 581 653 545 465 673 686 659 610 164 163 534  10 591 670 330  46 605 576 628 167  36  68
 585  45 454 567 624 314 669 658 500 459 615 565 666 596 572 629 145 119 552 489  25 573 250 384 758  80 569 238 678 137
  98 632 621 594 726 253 593 613  78 406 106 553 603 705 704 558 193 206 604 637 575  14 160 165 649 107 695 771 641 255
 173 687 638  70 133 310 655  13 617 703 518 640 626 692 602 723  37 151 810 614 618 667  12 221 675  22 612 643   2 631
  27 719 713 559 531 117 630  63 734 312 200 583 609 248 798  72 244 147 755 595 721 123  86 327 784 580 635 753 715 135
 421 611 738 179 801   4 725 263 745 564 634 711 201 728  79 690  99 149 708 662  65 295 188 154  29 681 607 871 733 180
 218 671 781 530 121 214 731 307 672 566 665 762 189 568  20 588 303 150 654 766  43 269 125 289 763 130 823 780 796  21
  73 821 212 390 811  52 836 363 657 696  97 831   5  23 751   9 849 852 815 791 818  76 184 273 166 716   8  15 645 680
  18 717   3 742 685 348 778 277 878 688 112 804  69 389  16 274 304 813 764 856  64 245  87 120 822 226 676 848 744 148
 128 371 102  30 111 517 262 433 772 774 750 847   6 756 842 114 333 298 868 834 838 143  19 259 110 296 782 714 845 361
 342 710 820  92 108 522   7 187  31 860 182 616 230 833  11  26  62 864 802 817 268 181  77 306 739 720 819 807 797 679

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.97053e+06us (= 2970.53ms, 2.97053s)
Wall-clock time (full program): 3.03521e+06us (= 3035.21ms, 3.03521s)
Satisfaction error: 0
Number of search iterations: 798
Number of local moves: 706 (including on plateau: 132)
Number of local minimum: 19 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4948
Total number of local moves: 3989 (including on plateau: 1031)
Total number of local minimum: 157 (including on plateau: 117)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 524  25 644 129 770 383 125 840 144  77 864 862 835 119  96 656  61  90 157 630 123 763 822 141 219 827 755 836 109 889
 110 573 873 162 658 617 691 156  78  24 897 774 841 209  27 678 727  56  62 388  82 752 348 876 732  55 861 134 186 888
 102  47 885  83 649 807 532 107 671 233 531 831 810 898 112 869 131 155  94 824  91 734  87 244 127 843 171 286 877 684
 237  35 865 900 667 693 160 182 199 103 653 895 740 512 201 767  98  48  64 680  89 896  68 181 243 609 406 808 646 870
 854 117 614 152 891 828 267 111 206 133 565 245 738 652 126 650  99 172  97 773 161 735 205 783 118 321 714 832 496 860
 142 223 249  86 640 899 213 260 468 637 886 583 273 855 203 230 128  88 138 846 179 785 190 189 874 847 169 762 717 756
 165 569 258 198 256 779 216 194 863 240 882 195 280 663 271 290 786 149 287 830 627 311 202 883 191 758 148 477 705 842
 283 708 879 192 868 875 226 215 227 150 675 535 143 542 166 210 211 196 338 789 178 212 884 305 167 866 234 718 731 792
 175 214 765 163 850 743 207 356 193 485 736 158 364 298 299 333 741 122 257 798 709 788 295 300 104 274 389 859 745 795
 269 737 363 251 748 314 303 184 272 606 289 328 366 769 174 335 801 221 566 826 834 252 452 324 325 536 424 852 401 393
 288 662 527 277 672 414 386 344 856 337 768 660 247 893 352 353 374 304 278 618 802 259 307 329 332 248 387 284 376 581
 411 349 319 330 242 360 412 380 359 502 407 595 296 696 355 270 263 894 276 587 315 460 594 749 443 494 250 421 887 599
 425 853 346 418 354 664 514 377 306 347 395 674 375 327 437 458 331 312 447 497 282 515 408 814 341 222 343 228 892 613
 405 420 382 427 467 403 475 430 881 410 450 449 323 890 316 320 466 402 491 301 342 326 392 435 415 547 453 446 529 522
 511 444 441 540 431 471 416 538 442 648 519 551 426 417 302 313 384 439 399 469 499 379 473 398 478 476 492 440 370 409
 510 371 448 465 561 526  10 397 505 367 294 372 480 419 585 445 619 459 576 470 600 373 462 317 541 394 463 464 521 501
 558 593 544 543  36  30 513 654 549 455 601 432 520  12 433 533 556 396 400 357 486 567 423 645 438 508 461 506 525 241
  41 481 482 528 279 472  93 744 456 712 404 523 487 509 518 689 564 575 434 180 647 598 608  17 429 568 638 368 422  49
 592 262 200 571 636 187 584 385 164 500 539 217 545 275 582 631 572 498 369 488 490 553 634 557 507   9 548 661 493 266
 563 516 517 726 579 114 632 605  31 350   5 120 754 116 621 550 537 559 633 570 534 604 626 562 590 153 479 504 220 145
 578 546 224 628  67 723 686 560 589  75 204 413 659 310 577 639 597 495 729 113 297 665 591 530 666   6 574 603 108  63
 586 602 293 629 101 611  15 683 140  52 351 623 616 612 596  18 707 607 474  54 724 454 706 655 580 552 624 620  57 173
 642 681  81 690 183  19 703  85 753 780   1 236 670 635 641  40 692 668 555 285 588 146 503 235 688 746 742 428 264 135
 695 229  72 685  73 704 483 676 811 610 255  65 484 115 625 804 643 784 728 208  76 622 733  53 800 185 677  79 309 232
 797 615 292 554 130 281 775 747 197 711 268 239 694 336 781  39  20 880 657 154 358 106 679 829   2 697 791  74 361 451
 698 702 177 716 794  71 725  32 699 819 218 761  37 669 793 651 720 722 700 188 340  16 787 139 764   7  42 231 176 121
 782 291  60 766  95 159 817 715 812 719 682 751  58 238 776 136 710 803 809  23 771  45 750 345 805   3 378  26 124  66
 673 322 739 820 318 147 713 849 701 760  70  28  29 365 857 867 390 799 818  46 813 168  13 796  14 816  80   4 457  43
 878 489 151  38 246 170 833 871 806 858  84  92  44 105 872 730 334 844 845 132 721 362   8 851 759 261 772 225  34 100
  21 839 825 848 254  51 790 838 137 815  22 308 381  59 821  11 253 778 837 391 757  69 265  33 823 687  50 339 777 436

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.27706e+06us (= 3277.06ms, 3.27706s)
Wall-clock time (full program): 3.34146e+06us (= 3341.46ms, 3.34146s)
Satisfaction error: 0
Number of search iterations: 962
Number of local moves: 668 (including on plateau: 166)
Number of local minimum: 51 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6870
Total number of local moves: 5442 (including on plateau: 1413)
Total number of local minimum: 261 (including on plateau: 183)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 854 215 109 755 192  44 787 868  48 267 739 460 666 839  57  32 593 139 634 893 261 131 105 859 763 313 891  81  28 892
  95 363 574 595 102  31 439 771 716 158 235 726  16 222  78 600 188 779 499 273 114 567 749  65 863 729 810 713 631 814
  93  72 537 159 429 874 890 646 196 166 504 645 884  92 100 864 130 164  67 539 129  37 804 108 134 824 797 894 841 896
 143  74 647 462  96 844 218 806 229 149 560 887 596 625 112 835  88 133 765 753 288 118 757  70 231 128 451 888 683 879
 182 865 662 803 592 232  84 866 247 176 738 622 524 345  73 658 180 116  80 640 148 420 629 146 446 799 447  76 833 886
 280 170 876 325 156 536 707 692  66 240 869 777 889 377 205 115 163 895 220  75 668 249 482 175 899 198 737 167 478 829
 127 194 191 858 147 160 480 766 826 211 512 186 712 283 352 228 815 837 852 284 171 819 718 173 845 327 572  29 776  64
 621 343 813 253 106 709 820 721  55 237 860 371 780   1  99 412  79 208 754 715 264 206 604 846 490 330 731 153 279 655
 340 234 875 745 245 230 362 550  86 258 564 513 740 561 444 842 861 501 453 195 408 679 113 375 294 174 586 443 286 558
 637 104 828 335 785 336 898 801 287 538 853 676 137 471 255 275 221 378 183 248 342 867 316 871  91 259 686 172 204 461
 475 268 372 594 769 239 435 636 665 297 612 736 314 344 368 260 169 350 254 748 493 857  43 348 727 291 651 207 251 742
 469 278 216 463 339 290 399 209 425 383 274 821 500 193 373 250 355 304 849 783 311 830 262 430 836 654 527 282 557 653
 415 455 386 281 364 328 305 544 322 508 308 723 689 581 409 390 495 111 323 241 484 772 823 528 691 400 597 135 426 481
 402 347 728 418 354 310 422 795 644 298   6 456 573 403 423 389 770 547 551 312 465 324 438 428  89 413 816 301 793 300
 588 675 391 457 353 338   3 416 414 515 445 485 464 747 511 615 387 257 525 296 404 750 598 483 190 394 591 332 385 506
 407 289 331 467 440 571 570 178 219 565 302 432 620 831 380 185 532 382 410 534 613 366 431 396 509 458 433 807 370 487
 349 477  60 256 541 503 542 522 812 488 553 452 459 295 441 529 121 436 624 743 411 393 535 424 562 473 617 449  27 421
   2 556  98 632 563 223 897 379 800 489 883  40 454 138 599 533 548 583 660 151 543 392 678 397  39 589 341 514 474 320
 603 518 669 633 661 751 578 189 630 334 126  63 110 271 802 450 585 523 552 357 602 472 576 520 272 554 351 200 168 395
 406 374 568  53 635 486 704 187 498 605  54  11  87 152 569 329 530 696 677 419 711 491 507 526 764 628 265 575 516 492
 577 606 626 417 442 616 623 213 369 427  52 517 277 641 698 590 643 519 384 376  15 448 587 545 101 505  71 705 818 107
 584 708  49 494 697 150 154 333  19 872 140  47 388 834 466 549 531 470 546 618 762  20 476 673 226 699 270 838 685 217
 652 601 649 706 609 670  21 496 672  45 752 162  35 142 648 614 580  24 610 398 681 656 555  69 880 521 202 784  59  22
 650 582 244   9 161 657 688 307 702 694 744 638 201 725 664 579 639 735   7 125 717  83 132 540 356 611 238 566 120 401
 781 700 117 690 808  10 337  68 497 695 214 317 203 671 701 319 306 760  36  58 848 619 479 309 468 714 184 746 827  33
 786 796 144  14  56 768 123  26 832 659 882 225 680  50 703  51 682 124 199 843 607 510 805 733 293 710  94 782 181 157
 840 877  85   5 855 798 315 346 789 847  97 243 359 292 684 210 722 732 674 165 759 321 233 741 326 502 141  41 434  82
 850 862 774 900 252 246 318 136 873 734 285 778 212 811 817 758 856 236  13 730  46 437   8 663 103 122 177  90 367  61
   4  34 269 724 881 792 358  25 559 870 155 145 227 756 693 788 365 809 851 761 608 405  42 775 360 119 179 720 224  17
 303 878 627  12 885 773  38  23  18 790 197 361 719 822 791 266 381 767 263 242 642 276  30 299 667  77  62 825 794 687

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.94852e+06us (= 5948.52ms, 5.94852s)
Wall-clock time (full program): 6.01262e+06us (= 6012.62ms, 6.01262s)
Satisfaction error: 0
Number of search iterations: 2861
Number of local moves: 1032 (including on plateau: 360)
Number of local minimum: 249 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 19821
Total number of local moves: 8115 (including on plateau: 3023)
Total number of local minimum: 1482 (including on plateau: 391)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 538 108 786 845 767 720 466  20 607 601 628  31  43 764 726  14  30 768 790  51 868 842  29  58 169 113  95 627 550 861
 355 886 250 801 777 229 135  94 894 588 230 525 100  73 808  59  13 577 885 118 890 651  81 201 228 881 693 260 354 879
 150 144  68 683 892  63 196 195 816 772  96  86  53 160 851  71  78 874 692 153 848 876 888  50 758 642  75 865 794 626
 239  35 292 897 757  45 672  98 840 485 234 190 125 134 596 172 164 810 880 198 900 512  97 829 649 149 895 177 872 572
 111  55  54 613 766 213 775 369 828 832 166 390 345 104 465 200 128 745 850 567 804 789 329  33 342 532 173 680 712 545
 120 594 813 616 702 235 714 256 812 729 206 174 143 224 716 167 193 493 776 154 730 731 611 199 380 304 236 131 531 825
 276 248 341 755 709 252 856  77 181 750 188 210 137 255 889  16 274 311 609 307 327 783 165 884 883 743 184 316 853 736
 852  57 815 797 733 242 273 205 366 754 222 407 168 122 763 266 361 870 208 130 544 422 893 110 704 717 225 314 376 599
 139 348 589 258 762 133 305 310 705 827 347 666 275 455 416 232 290 830 216 351 296 738 202 338 534 891 249 392 725 696
 317 381 689 313 559  89 261 371 451 873 223 418 263 402 505 882  66 500 653 124 413 899 300 238 662 558 264 350 770 721
 898 237 156 739 652 226 324 285 325 821 878 267 219 409 406 335 231 860 318 436 257 591 374 279 388 699 301 277 581 746
 370 295 592 359 711  85 309 393 560 253 343 896 278 259 449 494 522 397 410 269 521 718 280 346 817 706 482 254 440 707
 431 492 811 506 363 194 473 583 624 489 417 405 875 251 491 272 331 472 330 291 570 548 387 227 454 377 479 452 433 487
 632 373 367 496 574 398 566 439 547 401 420 379 470 446 476 516 799 362 442 456 403 336 551 328 408 358 423 365 486 298
 321 639 333 364 467 360 326 262 483 509 459 464 386 507 554 426 312 618 480 303 478 453 282 443 791 357 503 399 582 654
 394 448 404 463 411 612 617 353 323 435 536 537  46 497 415 419 268 444 414 527 511 499 615 518 391 475 504 412 638 389
 400 530  64 352 495 682 299 337 667 302 434 502 368 519 498 427 484 322 430 481 396 425 546 450 561 576 474 563 510 421
 520 468 515 432 189 549 319 445 597 523 471 147 542 600 385 462 339  83 541 286 501 429 556 650 540 562 469 441 670 284
 671 621  32 340 151 578 102 675 528 614 587  24 634 535 490 526 553 673 297 676 685 293 669 584 289 197 580 457 283 171
 395 700 141 579 306 565 633 571 543 382  38 447 595 697 383 640 573 107 598  48 508 513 460 792 186 192 555 684 437 247
  92 524 744 265 334 529 575 622  69 145 593 645 656 728 217 660 688 121 643 722 207 287 661 798 163 344 428 665 214 176
 691 552 221 610 178 514 687 625   7  15 517 788 677 568 127 458 605 800 723 658  90  84 585 694 220 136 631 648 315  91
 629 641 602 378 119 732  82 769 557  11 603 703 539   2 116 604 741 240 586 820 663 182  44 664 155 590 606 749 117 271
 698 701 765  25 320 659   3 678  12 209 773 695 819  40 233 787 778 158 170 734 623 203 690  18 674 349 635 822 115 129
 747 461 384 187  74 620 668 533 488 148 681 655 630 727 185 686 779 288  62 795 126  93  27 823 564 157 759 679  65 424
 826 735 241 218 308 657 756 818 152 647 805  72 742 737 161 748 760   5 162 710  21 138 837 782 180 204 740 142  36 175
 869 637 771   9  60 866 105 708  88  39 636 784 846 814  87 871 833 375  49 834  37  67 646 753 761 114  80 619 101  56
 785 859  26 211  42 796 807 844  99  70 215 332 836 857 244 438 713 212 132 877 106 109 793 781 372 719 887   4 103 246
  41 724 847 281 146 809 855 774 270 179 854 841 862 780 569 803 858 183  10 608 140 243  79   1  47 839  23  19 824   6
   8  22 802 123 191 863 356 806  76 112 715 835 843 849 294 864 751  17 159 831  52  61 838 644 245  34 867 752  28 477

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.58717e+06us (= 3587.17ms, 3.58717s)
Wall-clock time (full program): 3.65275e+06us (= 3652.75ms, 3.65275s)
Satisfaction error: 0
Number of search iterations: 1235
Number of local moves: 752 (including on plateau: 232)
Number of local minimum: 51 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7951
Total number of local moves: 5025 (including on plateau: 1349)
Total number of local minimum: 369 (including on plateau: 160)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  48 895  96 824 814 825 127  89  43 875  34  31 714  85 606 794  72 889 894 795  45  15 666  30 693 759 791 885  70  11
 703 888  53 897  51 577 129 879 118 862  57  58 591 495 864 776 798 884 883 660 117  79  73  41  84 733 141  81 872  71
 640  78 166 109 157 741 809 632 133 866  76  90 635 815 228 626 718 838 854 600 643 179 212 737 143 685  68  97 893  47
 729  99 555 857 107 735 370 743 128 110 230 197 878 646 863 137 585  46 876 881 485 126 104 208 144 869 891 209 642  65
 151 873 786 148 871 730 173 587 149 792 101 142 775 768 652 753 627 136 191 843 519 100 140  69 176 892 240 244 688 199
 684  49 424 201 251 623 132  91 678 629 181 231 882 842 721 807 757 138 638 511 182 175 146 192 899 797 200 724 615 115
 835 346 226 285 134 712 607 293 250 123 162 145 491 826 851 811 810 194 569 639 497 171 268 156 784 816 300 355 589 270
 213 139 670 242 186 255 170 846 887 705 135 261 874 546 844 841 218 222 202 694 267 337 880 351 512 687 219 234 575 303
 398 223 778 249 184 278 359 297 745 187 339 252 787 664 697 358 800 105 281 805 840 834 320 259 247 611 164 620 679 155
 428 198 690 238 389 849 767 291 102 758 195 362 740 521 325 276 886 318 692 720  93 330 284 260 333 662 391 372 783 262
 306 280 686 307 388 272 292 356 335 382 837 236 368 711 781 263 896 304 245 777 507 365 233 287 574 818 248 380 779 302
 257 377 610 254 423 344 305 371 283 409 332 450 525 855 890 445 386 298 898 295 636 338 403 379 650 334 311 336 822 299
 455 407 865 457 350 317 832 265 474 229 442 410 728 520 217 310 369 782 470 420 376 421 343 390 489 416 316 480 532 433
 367 373 667 357 454 378 870 366 441 426 614 459 412 394 328 557 341 309 417 384 353 411 622 360 608 422 554 462 342 467
 499 361 548 510 352 437 659 399 535 456 392 345 434 469 463 900 290 405 496 319 531 348 327 323 449 465 438 425 504 436
 524 313 460 503 573 483 481 453 566 477 381 395 515 466 544 505 488 431 490 556 321 547 363 475 415 432  22 446 374 516
 486 550 443 522 406 564 451 461 440 561 501 427 542 294 570   5 444 472 579 473 241 458 656 413  54 468 572 494 492 476
 500 418 288 402 502 493 508 383 400 498 517 464 315 347 644 562 484 340 435 538 439 625 448 528  19 349 576 539 396 558
 599 447 116 543 582 401 385 533 452 478 602 593 482 205 514 605 296 509 158 269 273 487 641 649 243 537 770 375 183 588
 618 513 177  83 603  59  55 551 571 526 552 612 308 211 700 671 601 553 189 594 331 695 578 657 529 314 471 545  64 584
 592 534 196 563 681 567 256 715 621  87 609 756 540 312  42 709 207 560 604 131  26 541 518 568 397  61 536 581 289 716
  77 565  67 598 624 616 506 673 159 654 676 628  29 214  35 672 235 637 631  44 239 723 658 689 114 161 710 597 523 761
  94 680 408 668 617 232 419  75 698 595 596 675  23 119  86 113 124 630 633 277 648 590 549 749 755 204 677 661 237 683
  39 699 326 530 702 193 527 691 174 734 708 751   2 206 165 264 147 613 583 279 647 789 682   9 717 172 707 655 103 701
 796 754 253 653 696  18 329 706 726  92 674 669 125 216 271  28 203 780 153 364 773 725 752 665  37   7 739 160 387 764
 748 651 430 793  10  95 765 731 766 404 808 820 227 112 168 221  62 769 163  74 266 645 663 799 804  17 722  16 180 586
 813 704  25   6 762 713 559 634 763  88 772 738 130 190  24 246 322 479  21  40 746 185 823 868 831 324  14 847  98 750
 830 829 788 744 785  56 819  63 852 393 286 719 154 301  32  33 150 827  80 258 771 727  12 747 821 121 122   8 354 833
  82 220 860 111 801 210 853  66 848  13 856 760 120 429 108 224 580  20  38  50 836 817 877 845 188 215 803 859  36 790
   4  52 858 861  60 742   1 275 178 106 850 839 169 736 282   3 619  27 152 225 867 732 274 812 806 167 802 828 414 774

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.50047e+06us (= 3500.47ms, 3.50047s)
Wall-clock time (full program): 3.57167e+06us (= 3571.67ms, 3.57167s)
Satisfaction error: 0
Number of search iterations: 1120
Number of local moves: 636 (including on plateau: 198)
Number of local minimum: 60 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8422
Total number of local moves: 5350 (including on plateau: 1657)
Total number of local minimum: 439 (including on plateau: 199)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 900  53 137 703 108 117 139 822 454  56 656 735 111 138 771 171 106 730  78 864 194 876 839 813 180 623 759 795  71 516
 831  95  50  80  70 862 712 603 251  60  42 776 815 114 719 202 278 606 143 796 702 751 120 681 304 863 136 740 468 645
 558 131 897 196 249  89  77 866 854 247  98 872  32 706 122 172 783 677 183 843 784 732 164  86 805 281 103 874 142 892
 553 300 825  97 218 622  96 873 778 215  74 835 168 163 617 159 277 124 121 810 772 725 181 232 591 826 471 792 891 109
 225 141 144 200 896 561 331 456 802 790 158 741 859 483 821 179 125 176 214 841 786 284 679 235 630 491  81 812 140 234
 820 151 134 129  91 887  73 881 219 130  90 878 233 631 502 459 895 870  93 289 710 708 211 546 899 672 149 780 165 220
 301 150 321 297 270 875  63 499 695 195 311 208 153 127 817 197 279 829 713 699 889 779 175 836 480 868 198 806 193 292
 675 343 201 265 746 333 206 668 280 145 330 879 420 227 877 146 126 400 315 696 834 844 890 701 243 325 204 804 207 185
 250 254 305 288 269 353 190 846 847 244 358 212 335 313 893 238 767 157 676 720 861 711 385 365 295 827 182 769 369 236
 470 258 348 237 323 691 293 599 442 309 345 360 174 757 674 884 684 840 367 299 308 253 287 785 298 286 341 726 503 374
 217 268 273 241 223 604 448 616 446 160 419 504 324 478 842 396 161 433 727 512 694 262 259 852 248 858 527 707 590 226
 307 485 209 492 283 628 557 793 326 272 484 894 332 510 428 334 462 451 524 474 494 256 414 749 257 436 457 458 429 320
 303 282 376 438 427 486 349 473 383 461 739 518 533 496 416 493 291 577 426 704 575 350 586 388 274 723 342 370 379 357
 285 445 541 544 382 871 373 481 275 447 302 263 449 744 406 539 638 386 327 431 463 246 294 489 537 521 632 425 401 378
 186 506 497 670 413 466 609 595 361 465 390 542 312 412 444 394 513 375 515 440 314 328 405 621 519 354 397 424 508 540
 255 415 359 366 368 363 422 319 435 467 395 532 372 495 476 399 600 660 534 469 392 479 464 477 587 572 322 430 511 580
 362 564 452  19 536 381  54 393 423 579 589  49 649 570 460 659 472 549 437 482 583 547 551 501 526 636 507 432 509  44
 352 574 635 525 550 531 488 310 351 434 391 608 475 565  23 610 371 530 692 337 346 693  43 612 666 296  26 318 607 556
 505 529 563 619 578 404 714 189 199 682 338 543 389 596 538 568 646 377 490 340 571 602 585  17  57 364 403 380 148 581
 523 545 671 643 613 155 601 123 421 657 554 418  84 517 500 658 552   2 221 686 592 629  83 216 683 569 627  48 410 514
 648 520 562 618 678 347 752 169 614  10 528 555 661  31 154 620 639   7 633 205 229 647 598 271 487  58 811 242 654 567
 588 624 673 709 664 650 417 224 222 763 387 559 548  65 203 640 597 642 266 105 573 306  28 239 593 665   5 261 566 733
 133 689 737 655 669  38 809 498 773 765 651 178 736 724 128  36 766 113 755 191 228 184 455 104  88 245 731  75 777 584
 560 680 716 408 576 775   6 402 260 644 652 407 443 522  72 729 653  40 798  68  21 594 605 116 119 276 828  67 760 718
 761 625 535 750 801  22 814 101 110 384 441 100  82 705 316 743  39 742 582 356  30  69 641 398 860  35 824 107 734 808
 690 853 799 845   1  34 611 213  18 700 717  45 768 615 118 823  64 788 252 264   3 187 819 688  24 170 855 166 687 698
 818 637 728  33 794 662 782 173  11 715 663 147 758 135 344 838 797  15 770  92  76  62 754 132 781 167  13 152 832 634
 102 883  12 697 857 240 774 156 722 850 753  47 745 721 336  41 856 192 748  79  99 177 747 112 685  66 869  55   9 885
  20 667 807 865  25 439 888  59 787 789 898  94 791 626 267 849  51 816 830  14 162 188 453 803  61  87 833 290   4  52
 317 848   8 886 837  29 867 115 756 880 762  16 764 329 231 339  27 411  85 409 230  46 800 450 738 355 882 210 851  37

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.70477e+06us (= 3704.77ms, 3.70477s)
Wall-clock time (full program): 3.76992e+06us (= 3769.92ms, 3.76992s)
Satisfaction error: 0
Number of search iterations: 1196
Number of local moves: 798 (including on plateau: 235)
Number of local minimum: 45 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9146
Total number of local moves: 5476 (including on plateau: 1483)
Total number of local minimum: 447 (including on plateau: 195)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 388 141 888 605 121  32 213 868 387 851 610 651 606 897  25 889 771  56  39  90 729 822 562 118 796 125 715  73  80 367
 866 652 886 777 168  41 794 386 100 890 135 542 566 836  28 526 283 128 136  26 172 780 721 107  76 696  85 828 584 700
 864 573 895 830  49 768  84 852 723  54 101 872 769  67  69 881  83  99 245  62 163 845 877 745 795  96  57 158  66 773
 697 454  60 898  52 137 103 854 488 861 204 859 805 162  23 649 673 149  43 191 604 878 759  53 178 588 899 201 238 755
 672 174  68 792 892 165 109 793 113 250 643 818 519 200 231 716 893 192  91 127 615 666 807  97 674 894 129 215 123 837
 740 177 147 675 198 900 145 495 184 341 684 642 196 306 124 703 856  88 153 175 647 826 781 827 846 360 197 131 208 763
 692 139 193 816 254 322 884 711 214 216 860 279 683 263 210 337 750 284  74 225 863 824 654 896 313 275 132 157 104 891
 875 321 229 641 202 212 401 741 161 660 612 791 815 194 271 548 332 234 305 249 766 842 887 318 232 203 399 154  51 869
 728 186 277 259 616 280 539 432 865 309 823 311 876 342 358 241 874 146 166 288 691 883 598 261 247 799 226 282 323 289
 329 441 297 785 352 268 885 517 328 338 871 308 748 581 380 698 671 363 242 303 587 549 630 314 188 255 336 252 326 373
 709 207 357 779 295 185 563 880 206 319 458 374 848 409 299 812 658 278 227 754 618 626 620 324 244 239 256 246 468 257
 404 220 316 320 350 286 638 648 371 353 370 511 669 416 349 440 448 381 841 882 783 607 569 276 195 462 377 382 300 351
 525 325 119 395 366 302 810 770 428 476 378 522 457 431 426 670 393 463 331 470 718 555 469 375 451 379 281 450 437 343
 346 438 394 596 266 586 389 505 564 298 384 510 372 532 414 593 365 396 376 521 567 524 503 354 464 413 390 513 435 507
 430 364 392 452 467 453 447 369 574 486 383 407 493 344 285 356 417 492 444 436 479 708 534 465 406 518 403 421 514 576
 472 397 460 547 424 345 405 262  34 427 253 546 347 572 535 474 531 481 559 504 500 423 398 528 418 614 699 335 541 484
 471 490 477 446 497 433 512 422 552 494 143 580 359 520 459 159 411 439 483 466 445 301 400 590 515 478 575 442 527 429
 487 583 533 240 496 408 663 105 629 412 667 537 334 348 508 456 499 597 501 455 502   4 410 485 473 415 461 551 585 171
 205 682 613 304 506 656 623 330  44 540 594 633 251 362 538 265 516 560 664 582 221 264 248 420 443 544 568 553 150 636
  30 556 482 290 530 577 611 189 554 688  21 312 498 677 621 260  16 558 529 425 269 287 258 632 589 655 489 608 602 702
 340 689 650 579 550 634  82 236 617 228  81 628 144 646 557 112 631 622 627 480 219 274 179 639   8 523 619 603 591 727
 475 760 536 571 609 565 733 243  19 592  59 402 167 317 661 142 570 712 680 361 120 176 333 624 693 102 713 685 665 230
 491 764 595   7 747 775 130 339 578 686  22 116  48 825 681 218 117 653 659 717 291  15 434 719 151 644 701 545 739 108
 106 695 599 114 676 736 292 156 662 133 705  38 294 744 722 293 391 687 625 637 237 173  37  31 737 111 657 821 645 761
 222 690 640 224 679   6 327  87 694 756 732 122  64 714 800 296  78 601 735 600 307  27 233 738 170 543 879 746 765  40
  65  29 839  47  12 838 419 272 731 788 725  36  55 833 742  70  63 784 840 787 385  50 126 753 803  95 668 710 790 160
  98 757 720  17 873 798  94   5 832  93 635  75 270 817 809 802 199 844 368 789   1  42 115 211 786 743  14 749 867  92
  89 724   9 217 704 734  33 813 310 751 857 134 808  35 831  45 782 772 858 235  58 187 140 835 774 752  13  20 843 152
 138 209 820 110 797 806 776  71 706  77 190 804 273  79 801  11 183 730 819 849 509   2 223 762 778 180 707 850  86 169
 561 678  24 182 767 267 811 164 847 148 315 155 181  46 758 853  61 726 855 829 449 355  10  18  72 814 870 834 862   3

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.51131e+06us (= 4511.31ms, 4.51131s)
Wall-clock time (full program): 4.5761e+06us (= 4576.1ms, 4.5761s)
Satisfaction error: 0
Number of search iterations: 1872
Number of local moves: 839 (including on plateau: 328)
Number of local minimum: 128 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12621
Total number of local moves: 5575 (including on plateau: 1775)
Total number of local minimum: 940 (including on plateau: 241)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  55 821  93 857 263 845 780 843 698 644  86  53  41 872 190 809 854 878 136 101   8 130 792 833 743 305  14 310 370  91
 359  94 442 840  21 729  13 507  42  69 453  78 206 766 344 838 765 740 850 177   1 828 484  40 871 705 683 181 709 680
 109 678 737 825 770 193 755 811 118  72 100 336 782 849 523 746 822 789 269  97   7 288 221 270 858 257  19 827 107 280
 839 859  29  45 112 836 626 111   9 141 132  22  48 853 722 351 826 745 331 242  39 837 808 832 635 240 726 217 724 578
 196 805 153 815 165 800 749 614 829 613 149 116  25 714 739 754 624 167 741 226  87 760 159 753 656 143  47 104 205 607
 212 855 340 775 565  18 620 763 352 660  32 412 194 873 236 374 735 669 702 208  77 810  51 696 762 328 117  70 376 633
  81 781 648 628 681 566 774 460 786 598  96 654 330  10  37 798 658 721 758  62 692 646  50 527 210  59 691 127 384   2
 736 715  30 673 694 632 651 514 580 306 131 649  11 615 701 841 712 122 744 324 166 679   3 562 634  98 238 561 189   4
 195 662  31 670  27 625 629 341   5 630 128 659 401 777 249 531 674 752 604 144 559 576 589 616 666  49 738 203 121 664
  76 717 232 129 586 573 661 742 668  73 239 546 504 817 719 480 358 168 700  88 218   6 657 638 448 652 621 584 185 430
 636 619 187 551 583 537 690 133 748 113 469 524 265 643 513 521 590 516 110 200 496  68 543 716 695  60 512 541  26 710
 534 699 134 451 797 593 417 235 567 642 234 247 164 505 447 517 568 428  12 357 548 350 125 647 594 585 631 547 253 687
 550 431 441 601 429 490 603 597  44 450 241 577 492 596 440 222 579 600 356 478 611 549 391  15 592 581 487 618  33 421
 595 564 483 602 582 473 571 545 519 321 388 558 282 219 422 456 529 622 420 353 617 556 464  35 155 655 445 366 146 572
 482 894 432 884 426 308 423 466 427 439 522 387 501 459 231 385 481 489 396 552 381 395 411 463 488 380 301 342 372 398
 406 314 418 540 510 458 382 835 455 563 557 468 292 539 254 349 479 343 511 525 493 436 393 465 506 354 424 383 409 454
 315 437 407 477 449 544 312 323 307 335 502 246 886 645 461 723 751 264 526 708 419 444 462 413 361 410 158 433 435 362
 476 289 346 299 535 443 515 756 533 365 641 389 639 302 245 279 434 868 184 569 367 250 474 297 498 560 392 360 785 425
 309 452 900 415 267 471 399 408 286 325 605 788 892 520 494 718 378 294 390 332 326 860 397 355 198 243 404 339 472 278
 771 403 653 377 400 313 446 369 379 363 870 248 542 338 320 230 298 255 852 842 371 438 329 295 347 864 285 499 416 402
 851 271 697 311 154 287 260 364 368 689 518 470 831 229 273 532 251 290 761 704 386 345 823 291 750 211 277 216 812 293
 223 197 486  79 334 256 175 707 890 275 677 296 538 304 866 252 303 171 317 734 862 536 530 262 192 485 169 803 802 794
 284 106 686 373 333 102 150 316 207 727 606 319 879 268 776 467 176 491 375 706 327 244 861 204 497 779 124 874 688 570
 747 237 672 186 863 259  71 414 140 684 528 156 575 172 233 115 162 188 202 731 816 875 147 897 348 713 847 768 599 170
 899 179 693 105 671 848 228 274 281 764 773 160 394 173 214 183 180 667 300 799 725 191 261 215 283 807 772 258 813 405
 609  36 896 730 163 145  34 224 893 856 888 793 887  54 650 318  17 178 161 637 757 553 503 276 120 457 201 759 640  80
 623  38 495  65 880  52  64 135 663 225 844 895 820  74 220 322  95 783 588 703 846 213 182 137 227 675 891 865 796  99
 711 148 882  20 889 199 804  16 877 272 555 824  90 174 337 266 126 103 509 610 665 475 830 819  46 587 778  85 142 676
 612  63 720  84 209 114  28 138  57 801 733 769 881  66 869  56  67 139  83 732 834  58 791 885  43 682 728 508 898 867
  24 151 152 108 157 806 685 554 787 500 818 876 123  89 790  82  23  75 627 574 814 119 784  61  92 591 795 767 608 883

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.11356e+06us (= 3113.56ms, 3.11356s)
Wall-clock time (full program): 3.17942e+06us (= 3179.42ms, 3.17942s)
Satisfaction error: 0
Number of search iterations: 821
Number of local moves: 555 (including on plateau: 123)
Number of local minimum: 34 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6122
Total number of local moves: 4961 (including on plateau: 1149)
Total number of local minimum: 177 (including on plateau: 144)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  60 864 770  75 862 548 769 764  42  97 807  49  52 843 161 106 878 721  28 711 678 259 121  48 716  12 221 470 886 897
 854 884 701  87 115 132 760 131  94 586 759 190 158 109  65 590 873 137 100 668 120 883 675 250 899 599 156 847 889 204
 858 545 891 262 143 189 123 667 492 101 863 653 124 180 238 633 808 148  51 748 473 852 539  46 672 102 110 893 871 240
 877 596 857 689 215 103 882 610 758 150 837 146 203 224 782 644 881 692 176 516 323 457 213 117 288 192 193 616 136 142
 880 635 714 141  91 195 733 734 160 183 841 855 173 177  57 615 822 145 712 900 226 674 272 162 658 887 282 294 185 112
 315 430 750 232  99 885 235 791 139 169 766 562  81 266 246 647 279 155 258 868 787 612 866 358 894 186  30 249 867 493
 134 827 875 144 339 271 839 775 836 300 812 222 202 302 200 331 208 533 352 157 167 278 277 125 876 175 543 874 892 649
 133 283 540 856 111 305 178 890 818 205 243 505 281 196 831 869 211 374 353 747 317 402 870  80 370 354 851 449 263 630
 225 788 535 140 412 316 765 810 800 424 684 872 126 218 147 330 231 832 233 898 489 174 159 606 347 289 219 703 130 613
 365 849 577 181 349 296 771 745 833 284 419 298 640 421 335 691 359 304 201 820 888 414 396 395 179 405 229 334 307 230
 541 838 356 237 403 348 342  95 825 165 328 252 494 322 368 563 341 823 369 634 817 409 254 379 850 287 715 247 214 699
 636 285 270 293 413 360 276 444 388 245 638 796 321 393 292 830 217 441 865 749 337 386 363 236 318 390 751 398 394 790
 309 257 376 520 373 308 435 471 306 268 375 565 216 587 484 879 381 793 391 639 382 655 326 378 303 280 442 735 425 656
 468 361 459 544 350 853 399 371 490 895 517 453 477 198 269 332 297 549 295 585 608 312 286 458 311 344 705 244 456 629
 526 267 488 380 472 496 428 657 462 461 523 536 260 351 525 573 557 626 410 432 420 261 499 534 478 455 436 550  13 439
 397 415 628 483  40 310 355 685 480 522  74 474 479 514 377 476 627 447 346 508 532 515 426 611 503 452 440 450 592 357
 437 366 485 367 467 417 527 506 589 418 206  85 464 511 529 460 743 662 475 454 482 560 528 507 411 556 256 433 487 127
 443 466 392 429 531  18 546 681 518 501 568 509 362 502 498  34 389 552 581 264 427 338 583 605 385 600 241 574 431 547
 558 698 567 423 422 594 500 510 682 463 564  61 576 465 486 122 620   8  64 324  54 118 601 553 641 598 575 602 723 343
 663  70  98 512 555 504 683  14  19 416 559 113 597 595 679 199 625 593 451 579 495 182 551 781 372 739 717 210 670 274
 666  44 184 572 669 537 660 513 757  83 632 105 673 469 652 153 407 643 619 149  27 242 542 622 561 481 554 191 789 319
 621  71 718 661 730 710 631  32  59 570 588 645 401 524 538 154  72  73 677 299 618 521 582 301 345 623  37 720 654 340
 569  96  82 786 753 725 687   1  86 829  55 746 803 617 773 209 696  67 835 119 530 704  58 834   4  41 188 752 650 220
 690 253  26 761 591 731   2  78  79 694  31 364 821 519 584 234 651  23 700  33 762 763 719 804  92 688 713 194 664 251
 727 709 187 706 738 491 255 168 151 845  11 642 828 768 777  69 329 446 695  16 607 740  22 776  17 580 724  84   7 400
  45 383 275 792  10 708  66 164 816 604  15 223 665 707 774 798 671 686 434  50  68 801 614 603 646  89 448  63 571 726
   5 207 135 609 772 785  25 152 722 728 170 784 648 697 861 387   6 783 566  88 702 755 578  35 336 754 313 794  62  56
  39 327   3 811 814 819 384 248 325 813 212 805 729 744  47 333  21 265 676 114 693  43  29 737 842 756 742 228 107 809
  36  77 172 659 780 116  20 680 736 859 104 273 846 806 802 406  24 197 778 408 166 129 767 779 108 860 840  90 171 826
 438 624 404 163 896 445 239 128  53 637 314 732 815 290 138 848 291 797 824  38 320  76 799 795  93 741 844 227   9 497

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.88802e+06us (= 4888.02ms, 4.88802s)
Wall-clock time (full program): 4.95184e+06us (= 4951.84ms, 4.95184s)
Satisfaction error: 0
Number of search iterations: 2142
Number of local moves: 793 (including on plateau: 270)
Number of local minimum: 145 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14438
Total number of local moves: 5809 (including on plateau: 1598)
Total number of local minimum: 1064 (including on plateau: 213)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 566  72 137  59  94 641 864 776 749 110 792 803 813 876 546 862  56 807 187 829  87 185  75 117 778 104 890  96 142 402
 103 889 140 820 796 112 771 861 689 580 598 339 169 881 694 102 149 547 204 870 129 802 686  36 872 141 175  49 210 101
 858 166 866 106 133 116 886 578 649 873  62 680 538 119 120 113 123 816 663 860 158 825 672  73 878 138 208 896 207 135
  97 669 261 224 168 312 794 758 602 851 899 154 877 124 893 114 259 875 865  99 245 152 793  83 157 131 863 247 304 645
 660 202 160 720 623 887 804 708 167 894  48 176 885 215 489 366 775 646 666 801 151 260 752 147 165 127 593 144  85 199
  92 270 136 810 288 845 895 251 879 502 656 543 254 125 874 262 536 832 421 109 234 252 418 770 563 240  88 696 107 567
 888 760 255 808  93 846 459 900 128 892 214 833 198 196 100 163 291 834 229 263 148 146 844 854 411 186 217 246 271 842
 297 374 310 579 126 250 783 452 171 841 819 871 226 211 738 241 818 307 189 162 192 898 868 230 155 891 221 318 265 712
 244 700 299 698 282 243 507 632 764 323 817 790 856 190 351 417 316 731 239 220 236 553 757 284 336 294 173 542 268 453
  70 306 122 576 311 326 769 422 897 391 372 768 442 325 843 376 815 548 470 184 882 290 396 474 237 193 223 377 433 677
 232 535 278 655 341 327 577 549 431 518 338 883 513 266 859 383 523 880 188 534 267 309 828 335 213 178 274 693 195 413
 362 682 301 838 373 466 511 365 826 242 388 429 375 308 420 475 344 363 761 161 295 484 445 426 349 384 298 670 343 831
 519 393 654 405 264 354 467 440 451 286 276 458 450 568 468 490 313 400 300 346 401 332 721 449 416 747 463 780 552 352
 201 766 269 322 398 287 869 464 545 517 460 570 434 447 390 380 699 510 280 480 403 253 428 483 302 277 256 809 321 695
 554 477 361 648 469 387 600 358 461 328 406 527 465 437 462 492 498 357 569 419 424 504 454 485 368 379 499 348 139 640
 509 392 473  45 537 367 430 592 496 436 541 446 476 457 456 530 371 497 320 435 571 628 258 495 544 347 389 486 394 597
 382 359 488 533 525 522 438 526 448 385 399 314 506 404 412 281 439 337 409 585 586 303 423 356 408 604 555 661 558 369
 395 238 564 279 443 591  18 521 529 333 690 355 633 596 572 611 481 197 516 584 582 636 500  10 581 590 520 132 478 340
 606  60 716 587 415 573 397 249 560 539 618 115 479  95 471 524 639 725 625 531 668 607 216 487 111 557 622  91 441 191
 615 248 503 228 637 610 275 667  65 493   9 505 565 588  67 589 616 702  47 688 528 414 272 627 653 559 728 315 613  89
 629 305 482 664 345 665  53 182  90 209 425 143 614 727 658 514 583 231 561 697  24 638 360 515 594 651 765 350 662 179
 678 273 848 212 750 378 153 296  19 791 181  33 512 635  81 822 540 574 455 532 624 617  68 601 556 683   4 550 444 605
 713 233 609  76 619 657  51 222 671 608 603  86 729 508 562 798  13  84 704 494 575 121  23 805 631 626 675  80 620 319
  14 717 612 659 650 839  61 156  39  98 203 227 200 840 621 687 370  63 172 673 781 773  77   1 705 756 684 595 691 551
 685 329 772 644 714  25 427 706 324 692  42 331 257 837 634 711 170  74 145 743 763  37 194 748 105 724  12 676 789 205
 823 709 736 381  17  41   8  27 317  66 710 647  38 836  58 701 432  79 814 285 739 718 334 755  15 407 719 630 732 741
 342 830 754   6 723 740 218  34 643  40  20 745  16 722 177 715 785 183 767  22 410 130 364 501 849 806   5 491 735 742
 652   7 779 289 835 235 206 737 108 353 225  28  54  82  43 733 134  26 759 799 852 784 472 812 787 293 797 744 855  35
   3 730 599   2 751  46  44  29 679 150 857 386 782  50 164  52 753  71 707  32 774  64 762 853 746 821 788  69 884 867
 726 824  31 642 795 827 180  57 118 174 847 330 159 850 292  11 674 219 283  78 786 800  55 703  30 681 811 734 777  21

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.94071e+06us (= 2940.71ms, 2.94071s)
Wall-clock time (full program): 3.00487e+06us (= 3004.87ms, 3.00487s)
Satisfaction error: 0
Number of search iterations: 753
Number of local moves: 671 (including on plateau: 149)
Number of local minimum: 16 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5300
Total number of local moves: 4868 (including on plateau: 899)
Total number of local minimum: 91 (including on plateau: 117)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 160  72 868 545 535 894 835 870 578 897 616  38 873  93 737  48 134 608 649 703  52 694 785 103 833  29  63  47 143  13
  49 876  42 784 809 458 861 807 712 163 629  66 770  96 667  94  39 812 792 845 174  81 195  88 827  83 754  46 817  79
 132  19 878 753 866 135 648 244 761 455 677  32 893 129 816 158 108 102 606  90  51  84 857 781 637 175 155 856 660 757
  95  35 202 888 848 240 746 869 768 178 374  50 726 162 243  70 305 885 522 552 728 837 859 177 672 157 890  75 145 217
 167 165 228 201 264 194 729 632 872  98 679 105 437 296 887 383 168 855 881 582  62 321 767 156 742 841 889  67 722 125
 106 860 193 137 884 800 740 883 220 170 469 173 891  56 864 184  82 850 689 853  44 203 852 251 410 213 384 293 435 326
 197 227 262 232 690 219 765 245 846 325 620 275 268 309 741 298 161 708 641 772 180 133 739 895 705 289 715 231 645 182
 877 122 140 312 844 530 867 783 149 112 288 257 799 341 579 159 260 414 698 810 218 169 719 320 823 235 191 343 763 393
 246 152 115 299 584 265 875 274 283 300 756 335 511 237 815 117 559 900 773 797 350 788 224 183 531 189 205 824 778 250
 352 128 258 871 364 444 577 308 471 892 171 302 692 238 270 206 225 329 898 732 874 738 502 200 510 196 358 389 749 271
 286  54 447 207 313 896 646 899 282 252 863 882 323 292 281 507 357 457 568 636 303 482 315 386 716 330 267 539 366 363
 508 318 353 233 775 854 301 269 405 480 829 842 263 304 430 226 340 348 666 847 462 222 259 359 614 285 297 346 657 423
 432 347 344 473 362 697 431 472 336 398 311 439 479 557 879 236 337 681 332 509 506 256 403 324 818 370 334 519 404 529
 295 247 209 212 415 830 349 373 440 327 319 333 599 602 532 886 418 416 306 684 272 466 465 291 836 467 487 498 464 477
 573 517 354 387 433 376 560 419 547 443 294 385 459 413 249 624 476 442 351 391 475 434 494 512 499 610 401 356 674 367
 453 378 402 365 408 339 380 407 585 504 501 276 448 445 381 518 654 478 533 554 446 528 461 369 525 438 382 372 421 564
 486 527 526 571 591 454 426 460 390 436  43 491 470 451 565 428 136  57 551 427 342 411 597 612 409 656 495 609 424 474
 452 493 537 706 581  99 425 631 449  31  65 541 192 520 540 500 490  37 549 399 687 604 704 496 279 394 503 598 521 492
 523 375 441 590 605  18 146 166 468 643  60 483 223 345 653 566 575 556 328  36 515 699 655 553 239 617 635 613 589 600
 572 505 514 489 198 412 417 536 626 463  41 392 524 658  26 290 622 603 254  69 592 534 583 516 190 567 821 563 400 538
 596 688 587  58 338 513 199 544 576  53 634 714 204 543 488 550 548 588 234 229  45 558 542 593 154 618 176 644 633 668
 769 561 702 780 277 164 101 179 497 485 208 422  17 621 395 630 652 586  91  87 601 669 242 787 185 710 680 724  55 638
 735 682 693 662   8 317 107   7 118 611 661 663 377 569 138 760 639  97 110 139 594 721 121 650 151 665 664 748 331 777
 766 802 790  40 546 731  76 322 625 752 142 627 253 743  61 709 607 241  20 456 758 717   4  80 273 750 153 723  78 670
 555 795 481  15 287  12 562 700 675 673 791 840 230 678 147 647 623 595 111  24 736 696 355 580 210 701 640 148   5   3
 828 782 713 707  11 718  92 109 100 813 360 820 216 804  77 764 849 388 361 126 642  10 248 803 420  14  34 779 131 796
 686 695 659 751 406 396 144 116   9 822 368 776 574 683 711 685 793  33 450 187 831  22 307 676 104 801  16  71 124 619
 819 806   1 379  64 691 188 119 628 838 671 808  27 744  86 825 734 150 113 215 284 725 120 211 114 570 805 615 371 794
 798 429 733 745 186 730 181 221  74  21 261 314   6 747 130 720 762 214 266 280 865 397  68 774  59 786 310 851 755 832
   2 858 843 123  23  89 141 651  25 880 814 834 771 839 127 727 862  85 172 484 826 316  73 789  30 759 811  28 255 278

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.80861e+06us (= 5808.61ms, 5.80861s)
Wall-clock time (full program): 5.87297e+06us (= 5872.97ms, 5.87297s)
Satisfaction error: 0
Number of search iterations: 1561
Number of local moves: 807 (including on plateau: 336)
Number of local minimum: 101 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 19557
Total number of local moves: 7889 (including on plateau: 3044)
Total number of local minimum: 1466 (including on plateau: 341)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 448 318 848 654 806 624 674 808 893 131  87 229 211 109 861 110 718 115  86 856  69 884 102 517  55  61 860 839 150 392
 824 900 204 809 789 200 509 122 142  37  64 153 188 113 781  93 607 899  30 877  82 846 851  36  76  51 859 853 872 648
 857 198 463 881 170 106 869 491 542 630  11  18  99 710 794  40 765  78  34 118 152 875 309 776 888 173 887 858 127 596
 878  70 174 874 790 180 876 708 169 870  74 148 709 100 128 254 845  92  81 160 164 727  88 474 114 652 719 844 814 739
 745 317 260 818 891  89 158 802 133 680 800  65 796 569 892 162 568 117  91 166 227 583 129 314 120 657 742 807 157 660
 618 883 460 816 898 896 225 655  85 672  97 251 728 675 275 137 812  83 178 256 212 598 107 138 456 161 764 230 297 852
 763 116 371 499 257 201 363 564 239 319 108 224 685 879 190 293 679 749 168 206  77 703 163 885 404 838 787 815 241 729
 795 208 222 791 265 175 339 897 217 810 276 761 184 819 271 313 867 362  94 303 154 616 894 278 194 662 527 185 366 670
 547 274 238 664 247 350 191 792 793 882 365 604 215 103 223 295 864 353 459 320 165 889 836 255 242 747 372 338 156 736
 732 177 214 189 329 890 340 423 213 358 209 755 383 854 376 141 725 236 402 409 895 369 288 248 282 720 868 286 399 805
 693 301 310 285 428 298 467 735 665 269 381 622 830 336 417 382 335 416 283 429 341 741 364 449 487 758 723 196 244 330
 623 834 172 421 291 432 585 572 397 433 465 514 202 355 455 259 375 345 398 284 281 462 267 347 702 841 501 430 452 820
 689 246 373 606 437 410 451 380 147 608 361 751 396 515 435 368 258 544 488 304 466 379 422 458 406 886 636 235 471 389
 551 426 378 405 302 357 325 395 346 343 760 837 306 348 370 436 555 367 620 377 481 360 266 431 645 847 556 305 407 413
 667   6 447 464 566 610 415 558 442 473 480 522 477 446 418 390 445 498 323 424 541 552 332 441 386 394 578 567 385 268
 528 434 393 444 494 548 210 531 438 311 334 457 560 562 468 493 403 337 472 440 328 495 384 419 496 387 427 643 508 571
 482 529 425 408 420 207 502 352 216 411 586 439 631 625 374 510 483 489 503 520 512 589 534 593 637 331 634 144  41 388
 104 538 486 698 443 500 289 525 550 570 588 280 523 535 545 511 454 650 504 506 557  80 530 565  84 561  33 612 656  38
 195 470 497 579 124 524 536 475 151 597 521 590 461 485 492 490 533 476 651 575 539 182 573 414 450 300 292 686 591  66
 231 546 484 264 600 594 559 659 629 577 507 349 537 714 344 513 391 478 401  49 601 261 580 692 312 243 205 584 516  95
  32 712 668  62 628 574 582 193 700 121 549 576  42  24 704 677  47 682 779 759 640 237 595 130 543 639 219 611 711  79
 240 782  14 603 563 479 775 112   8 187 681 726 197 554 519 671 226 540 505 638 641 250 722  12 756 632  17 744 581 140
 139 587 683 644 627 669  13 218 647  26 621 234 105 678 602 697 245  59 694 663 673 181  31 676 619 249 199 592 707 737
 203 617 661  16 783 813   9  21 757  45 553 233 400  60 734 715 220 731 688 750 767 599 780  68 171 134 351 653 684 299
 221 873 746 192 642   4 823 279 322  56  57 469 696 811 687 753 263 633 724 754 666  72 695 613  20 316 232 132 605 159
 176 691 799  25   2 614  19 315 788  54 849 733 183 770  43 840 143 766 786 831 658 307 321 277 740  10 290   7 705 773
 111 272 865   1  46 252 125  48 798 649 842 804 327  22 101 721  50 706 748 646 826 453 701 752 855 526  73  75 778 342
  90 828   3  98 354 273 730 287 785 717 777 359 772 253 797 762 146 829 827 713 324 119 615 803 699 294  23 145  58  35
  63 333 835 126  15 821 690 186 771 862 769 768 871 135 123 609 167  53 635  27 626  39 774 716 843 149 136  71 784 518
 270  29 822 179 308 825 866 412 532 817 743  44 801 356  96 880 326 832 863 155 850  67 262 738 833 296   5  28  52 228

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.31576e+06us (= 4315.76ms, 4.31576s)
Wall-clock time (full program): 4.3801e+06us (= 4380.1ms, 4.3801s)
Satisfaction error: 0
Number of search iterations: 1685
Number of local moves: 780 (including on plateau: 221)
Number of local minimum: 114 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11548
Total number of local moves: 6122 (including on plateau: 2000)
Total number of local minimum: 740 (including on plateau: 228)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 892 468  96 847 762 726 843  36 895 752 611 165 820 635 450  77 862  27  58 691  37 170 160  46  91  29 115 429 841 884
  47 889  99 185 827  42 754 186  54 151 667 881 891 753 614  67 533 161 856 665 580 621 869  97 143  69 751 230 750  83
 163 369 880 789 809  39 697 106  59 101 152  18 730 854 619 169 661 196 792 682 120 852 893 183  57  72 828 887 660  78
 166 622 806 767 786 262 734  35 145 190 141 162 646 898 218  70 528 865 154 886 236 220 900 379 350  89 760 481 736 283
  23  60  80 224 513  38 804  98 123 707 275 466 663 793 808 112 712 866 705 899  56 816 521 202  66 812 772 205 875 221
 425 625  68 119 859 833 746 180 148 100 878 168 713 821 782 189 725  84 257 544 191 403 780  63 824 267 796 595 211 121
 459 657 243 204 791 237 438 715 203 356 883 263 858 280 837 337 864 795 292 785  71 287 269 896  88 296 385 201 177 348
 150 659 125 118 213 134 676 888 139 368 844 174 890 863 668 286 554 822 273 290 318 392 778 223 442 182 897 645 108 396
 285 832 207 239 588 340 743 142 823 122 212 208 779 247 706 111 770 373 124 871 278 765 874 231 264 219 831 701 365 265
 434 868 313 353 798 343 716 324 194 359 339 245 398 436 310 107 357 745 311 358 885 329 156 849 855 480 192 652 342 467
 363 708 476 404 724 146 686 178 834 117 807 258 297 511 232 321 727 656 388 274 254 253 282 620 268 334 519 757 338 783
 401 803 261 346 835 333 387 445 485 393 452 624 422 249 430 412 216 799 314 644 335 699 298 293 341 462 302 787 439 308
 241 484 411 312 586 391 596 383 367 364 328 825 482 577 694 405 655 256 506 284 578 489 355 698 289 332 276 277 597 477
 325 271 279 351 420 424 677 510 496 415 380 266 483 583 382 200 377 437 410 894 461 244 472 345 860 882 225 386 605 455
 500 443 435 457 449 525 417 441 499 305 299 238 610 378 566 548 838 259 493 495 432 454 562 372 464 407 374 366 473 416
 291 492 307 494 300 331 426 402 460 306 570 295 352 371 567 664 319 527 553 558 456 447 530 471 423 632 428 419 550 574
 536  17 360   9 507 584 255 604 627 246 630 384 685 206 606 623 376 546 633 397 516 591 421 541 408 409 613 113 603 469
 490 250 637 336 501 463 395 446 517 526 479 400  26 512 573 531 561 327 733 505 458   6 540 497 617 535 465  85 532 572
 547 288 582 475 487 563 347 559 601 675 491  43 470 618 520 518 110 542 320 187 488  62 538 529 448 722 556 370 361 498
 381  49 720 509 323 589 242 653 486 523 128 593 590 539  30 703 104 609 629 155 639 140 453 576 431 551 640 600 555 375
 433  41 474 631 354 585 164 565 560 690 557 579  32 568 634 771  73 714 683 114  16 615 608 504 413 628 503 138 390 478
 598 127 650 599  48 688 126 642  20  44 616 704 508 769  14 672 105 418 718  94 649 133 670 399 671 742 344 235 651 861
 763 406 552 607  55 826 131  24 638 658 739 543 132 147 109 692  50  10 679 522 729  82 153 732 515 612 575 851 389 594
 564 214 848 737  34 818  81 829 811 502 171 678  19 197 144 444 440 248 814  22 362 744 673   2 756 788 514 251  75 735
 695 222 741 587   3  11 158 641 805 800  92 731  40 137 136 773 674 581 784  45 801 534  21 647  51 414 135 693 721 842
 813 281 666 210   4 777 157 867 710 684 643 571 301 159 199 602 719 175  12 304 819 636  79 524 700   1   7 654 696 545
 303  86 592 102 309 717 195 857 709 790 537 845 198  33 569 879  87 215 662  52 766 738  25 781 853 774 330 167 228 116
 648 711  65 870 326 747 260  90 252 768 272 817 179 149 877 626 172 451 173 184 680 810 233 839 749 846  95 316 234  76
 764 723 802 758  64 794 394 797  15 775 229 702  74 129  28 830  31 130 176 687 755 689  53 759 317 748 226 188   5 873
 815 850 740 876 240 209 270 872 840 728  93 669 227 103 193 776 315 681  13 427 549 294 349 217 761 181  61 836   8 322

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.17746e+06us (= 4177.46ms, 4.17746s)
Wall-clock time (full program): 4.24159e+06us (= 4241.59ms, 4.24159s)
Satisfaction error: 0
Number of search iterations: 1560
Number of local moves: 672 (including on plateau: 227)
Number of local minimum: 105 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11872
Total number of local moves: 6053 (including on plateau: 2051)
Total number of local minimum: 746 (including on plateau: 211)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 515 689  74 842 703 164 788 163  51 893 775 888 792  64 821  61  98 866  73 135 147 112 102 896  91 107 837 120 802 846
 700 746  57 759  53 797  77 849 116 758 716 782 815 179 756  33  94 685  46 150 800 129 145 838  58  96 895 877 428  81
 879 677 505 891 111 183 254 810  97 833 852 798  56 101 882 100 157 662 121  45 268 154 529 828  49 205 778 894 158 638
 783 711 118 791 142 110 184 617  60 851 651 830 645  66 127  39 200 812 202 105 813 181 166 730 676 738 417 871 238 641
 713 604 230 664 900 691 834 374 375 701 654 752 344  65  72  80 130 831 177 216 835 159 290 880 133 474 793 249 125 170
 897 823 368 250 188 853 770 187 217 606 795 769 178 143  79  70 144 889  67 281 138  62 153 876 829 727 779 315 222 840
 707 710 283 413 168 151 870 688 297 619 867 722 134 326 108  44 261 644 155 211 352 169 600 729 298 768 693 755 223 550
 637 856 176 287 228 175 890 656  68 731 683 695 794 246 396 244 508 850 173 213 309  38 862 646  69 690 717  88 278 312
 694 661 190 765 234 226 304 878 608 663 857 591 182 193 427 259 272 294 256 322 714 314 386 435 339 393 767 227 247 817
 749 680 350 302 379 219 824 271 285 847 622 624 274 258 381 204 351 436 316 373 796 252 286 726 348 354 623 401 203 781
 653 665 264 207 394 280 635 237 408 698 603 747 307 372 376 388  83 292 232 860 149 313 233 899 446 898 630 318 329 599
 625 332 201 243 293 214 750 235 301 612 457 321 597 240 395 421 162 640 892 331 422 383 305 595 445 859 626 371 363 884
 649 762 377 319 367 359 357 390 543 430 557 590 488 464 524 345 404 347 335 336 308 478 387 634 391 647 491 273 483 480
 453 544 452 511 494 364 433 493 382 402 320 517 323 415 526 578 449 577 380 291 362 477 439 448 499 562 548 486 406 384
 330 467 385 485 303 506 503 419 549 479 400 426 328 513 540 541 520 405 567 450 498 639 431 342 410 440 407 365 425 442
 536 341 231 594 370 279 564 334 495 378 533 512 475 398 657 539 441 389 461 516 416 563 607 300 509 296 502 492 369 418
 438 472 481 497 655 397 424 411 358 514 409 460 451 521 456 434  87 432 507 538 615 522 473 576 429 535 458   1 454 510
 195 621 489 210 466 579 128 501 589 349 277 361 137 669 582 518 602 610 574 573 523 666 583 266 245 551 392 675 500  84
 148 471 455 484 575 221 338 476 412 554 444 267 558 605 586 636 620 571 469 658 542 531 682 569 194 126 324 528 468   3
 257 443 519 581 527 671 629 462 547 366 333 325   6 552 265 584 585 525 327  93 572 465 609 114 667 447 198 568 741 537
 317 242 580 545 463 490 555 616 627 109 534 239 570 310 530 724 660 113 592 414 532 559 613 229 670 504 355 652  40 131
 306  99 598 560 659 632 263 587 356  42 197  29 668 735 628 642 241 282 648 556 360  15 346 199 643 886 172 736 687 743
 248  16 744 191 754 725 546  10 631 340 122 353 565 684 601 614 777  92 699 733 719 712   2 160 674 139  11 561 596 496
 167  48 679 470 618 786  30 106 721  50 180 269 705 789 152 633 740 284 766 787 104 799 343  31 739 209 255 826 742 487
 136  14 611 785 185  24 124  37 841  54  85  43 673 806 832 827 805  86 753 715 732 865 748  90 311 215 174 706 672 566
  25  89 864 728  17 681 678 140 709  32  13 189 861 763  41 760 873 212 868 773 420 686 757 206 737 588  23   8 692  82
  71 224 772  18 650 708  95 784 337 141 156   4 704 839 115 718 771 289 696 776  35 825 819 236 697 220 459 117 836 403
 260 186 808  76 855 803 192 161 858 171  59  36 848 816 761 780 720  78 801 437 103 869 734   5 702 119  52  75 874 276
 165 288 811  26 881 745 251 751 863 270 218 123   9 593 844 854 885 275 809 807 208 774 822  20 399 299   7 196  27 295
 262  34 843  21 883 482 225 872 814  22 146 253  28 790  55 845 875  47 553 820 723 804  63  12 818 423 132 764 887  19

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.5051e+06us (= 5505.1ms, 5.5051s)
Wall-clock time (full program): 5.57004e+06us (= 5570.04ms, 5.57004s)
Satisfaction error: 0
Number of search iterations: 2446
Number of local moves: 925 (including on plateau: 390)
Number of local minimum: 171 (including on plateau: 54)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 18161
Total number of local moves: 7460 (including on plateau: 2836)
Total number of local minimum: 1425 (including on plateau: 354)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 367 874  49 871 186  23 145 811 760 582  38 159  87 581 854 764  31 851 860 780 849   8 443 142 307 772 196 224 372 529
 768 194 804 755 689 532 221 855 815 799 698  73  88 819 842 843  33 465 879   2 822   9 338  56   7 707 336  16  29  21
 805 828  14 719 122 836 191 285 209 326  44 676  35 239 830 141 123 788 821   6 732 301 702  84 308 728 379 711 816 716
 262 771  97 334 211 834   3 750 773  20 375  64 454 204 839 247 158 800 185   5 859 686 714 421 655 721 668 400 806 199
 617 840 720 869  13 753 150 398 829 763 713 747 835 130 681  55  17 735 779  94 607 164 418  10  92 129 253  77 867 160
 717 113 669 784 100 427 244 653 670  54 496  59 795 235 672 222 680 743 571 614 580 298 659 225 513  74 325 542 675 106
 134 705 752 593 166 861  18 212 703  66 739 240 789  53 726 138 666 366 387 646 691 761 664   1  26 665 248 679 722  98
 274 733 688 594 562 329 217 493 718  25 227 740 723 648 596  50 649 745 109 564 626 488  12 176 611 181 242 380 758 357
  58 572 792 736 566 608 358 673  15 198 628 533 624 709 776 163 259 647 168 574  79   4 640 264 101 710 625 682 650 103
  28 444 695 700 521 697 125 549 619 214 704 502 638 599 631 133 169 674 155 585  11 257 637  32 621  71 634 642 677 551
  63 629 663 554 609 692 291 429 523 219  19 656 567  46 516 165  30 658  60 495 635 448 388 424 550 645 579 684 570 708
 132 606 553 485 468 683  65 207 569 208 632 384 671 506 654 588 467 434  36 459 602  76 519 269 471 539 504 610 590 528
 557 499 481 507 463 534 300 583 393 230 201 445  40 527 441 524 584  22 530 597 587 436 479 453 577 575 433 492 503 522
 373 501 565 473 456 578 461 505 447 246 466 144 414 292 518 435 293 464 460 639 544 509 498 431 381 535 511 604 422 350
 568 615 497 401 457 361 452  90 487 312 508 538 491 430 396 515 548 526 462 483 693 405 545 354 411 446 277 383 472 392
 369 598 833 490 458 482 319 261 537 423 432 408 323 234 474 378 451 589 455 442 306 402 333 525 560 419 478 476 540 520
 389 898 216 397 439 374 512 627 437 450 438 546 510 489 616 362 415 202 286 541 355 341 774 514 352 403 377 563 279 413
 233 260 340 738 332 335 475 699 304 846 404 892 407 449 412 477 346 425 243 309 368 213 813 552 420 385 887 276 305 370
 847 315 440 382 484 416 603 349 410 316 365 318 391 353 390 395 470 321 782 360 255 252 786 605 480 486 866 313 348 417
 271 297 345 406 351 881 657 857 268 337 331 900 394 426 284 265 327 302 359 280 409 317 344 555 254 342 172 827 872 885
 897 320 386 363 228 295 652 258 245 531 536 288 287 356 226 724 712 192 741 203 661 278 347 662 290 868 778 249 215 727
 573 310 270 223 742 328 852 622 877 832 281 376 272 231 175 812 623 685 303 162 314 888  95 706 256 183 810 126 266 322
 715  47 289 197 238 184 687 831 189 643 251 137 267 824  42 794 282 399 890 120 263 641 886 737 701 275 838 746 229 173
 781 121 161 232 371 136 845 148 311 751 146 195 118 749 273 644 613 296 586 210 339 797 182 696 875 856 178 826 188 891
 595 187  67  99 785 865 636 814 171 667 131 236 837 756 343 825 748 170 543 798 151 600 153 767 791  80 167 205 110 218
 143  68 894 111 884  86 844 193 757 592 694 157 283 330  39 620 863 250 500 124 220 848 561 850 140 870 775 116  43 660
 558 127 180 241 862 117 803 115 177 734 547 428 864 807  51 364 802 294 612 878 104 770 190 725 324  96 744 119 105 777
 576  78 883  81 200 114 817  75 107 633 790 880 818 882 154 630 754 112 174 876  91 769 237 808 793 108  57 690 149 179
  83 809 102  45 787  72 731 139 147 820 858 899  24  52  37 591 801  61 517 796 206 766  89 853 889 494  93 128 896 730
 762 156  70 135 765  82 841  34  48 678 823 895 469 559  27 651 601 299  62 873 556 783  69 618 759 152  85 729  41 893

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.13038e+06us (= 3130.38ms, 3.13038s)
Wall-clock time (full program): 3.19579e+06us (= 3195.79ms, 3.19579s)
Satisfaction error: 0
Number of search iterations: 937
Number of local moves: 811 (including on plateau: 200)
Number of local minimum: 23 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5757
Total number of local moves: 4565 (including on plateau: 1191)
Total number of local minimum: 195 (including on plateau: 120)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 398 858 767 134 838  41 690 407 737 785 802  57 864 847  65 758  54  42  16  27  21 873 820  74  45  83 900  22 675 815
 886  31 783 817  17 136  71 879 822 880 855  47 603 899  55 807 689  58  63 157 654 159 861 175 111  20 163  37 892 888
 893 100 703 875 743  52  60 793 294 839 195  25 634 865 161 878 644 183 126  75 373 246 775 146  32  87 191 872 796 859
 840 843 854 699 118  89 130 510 818 688 846 147 102 104  38 730 719  88  85 633 171 209 841 457 108  84 845  90 732 897
 842  79 801 685 894 193 214 874 482 809 704 110 113 222 320 825 650 235  30  80  62 216 694 265 128 400 156 710 824 898
 881 199 152 630 662 857  69 821 832 552 830 180 236 135 121 804 713 139  43 176 244 278 585 226 895 154 252 140 826 883
 831 302 225 620 618 276 876 724 766 746 142 117 168 141 125 686 789 109 174 207 119 205 726 777 290 206 304 600 819 827
 637 231 167 715 772 203 318 527 833 652 202 273 546 182 277 185 896 192 271 181 245 218 717 272 259 337 869 744 860 734
 885 219 239 317 669 211 150 762 240 641 341 331 241 261 342 889 251 269 264 433 258 684 695 891 322 339 356 788 646 581
 733 243 346 706 739 198 260 736 355 521 267 287 456 344 127 282 800 212 303 692 395 285 671 387 197 808 360 790 394 621
 850 270 348 635 701 289 359 558 383 697 545 286 255 279 335 437 754 376 316 502 375 224 691 428 329 253 284 871 232 653
 488 247 533 312 434 413 463 668 374 550 347 446 234 319 314 208 405 298 523 334 578 444 614 816 324 263 870 887 291 518
 751 299 310 379 288 313 250 687 365 417 412 582 474 363 438 597 340 556 540 396 357 343 606 445 391 476 516 461 423 740
 427 410 404 421 519 862 882 426 254 483 402 464 512 323 306 422 454 492 420 333 382 367 538 332 447 480 580 307 442 424
 498 419 782 411 439 430 467 559 432 497 403 462 455 415 522 511 534 408 406 507 544 418 548 459 200 409 555 293 194 338
 594 443 393 429 368 466 336 431 389 311 436 484 499 458 672 572 452 473 543 508 567 401 262 388 350 377 397 525 542 449
 301 380 539 505 494 478 392 570 378 537 435 563 681 575 386 472 450 384 460 486 453 210 517 514 727 268  11 189 632 528
  72 529 477  96 571 610 551 364 596 321 158 500 328 448 506 354 451 487 524 490 493 491 370 568 489 612 655 541 554 309
  15 619 561 296 475 576 549 349 590 297 583 399 547 592 598 513 295 557 504 530 215 586 201 562 629 593 425 230 626   3
 369 503 515 315 165 622 536 440 479 390 605 560 352 639 660 636 132 648 599  18 565 416  91 535 465 748 588 137 495 292
  94 509 601 607 238 667 645 257 718 372 496 700   7 625 531 469 184 381 623 640  53 683  29 579 673 577 574 526 371  86
  14 755 670 242 178 615 616 351 275 358 638 679 501 649 566 642 153 532 602 362 595 441  92 698 709 553 471 107 228 223
 131 647 678  23  48 756 752  12 160 366 589 617  44 714 664 164  78 757 643 631 747 682 468 708 707 591 481 330 123 204
 266 665 702 145 325 731  10 170  36 144 705 763 663 573 624 112 148 742 779 768 835 735 308  82 611 628 774 155  68 248
 179 786 676 609 138  13 711 162  64 173 221 761  66 666 760 106 229 797 659 604 680 806  98 657 520 627 784 696  95 172
  70 741 149 249   8 770 608 114 716  59  34 720 769 693 810  97 722 712 651 656 613 749 196 485 868 274 280 564  39  99
 133 753   9  73 281 781 674  51 584 169 305 721 848 300 778 105 327 884 792 661 764 361  46  93 890 765 729 345 190 103
  61 773   5 470 725 186 213  49  33  28 745 569 780 151 812 115 177 791 851 837 794 834  26 723 771 823  81 759 217 116
  50   4 124 256 237 853 811  77 283 166 129 867 787 677 799  19 220 877 856 863 776 829  76 738 795 814  40 385 101   6
 326 658   2 844 813 828 852 187 227  67 143 798 750  56 803 120 805 836 849 728 587 122 353  35 233 866  24 414 188   1

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 7.36673e+06us (= 7366.73ms, 7.36673s)
Wall-clock time (full program): 7.4312e+06us (= 7431.2ms, 7.4312s)
Satisfaction error: 0
Number of search iterations: 1800
Number of local moves: 1044 (including on plateau: 396)
Number of local minimum: 97 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 26916
Total number of local moves: 8944 (including on plateau: 3642)
Total number of local minimum: 2207 (including on plateau: 410)
Total number of resets: 7
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 864  36 143  42 177 168 201 808 825 851 806 803 759 793  10 330 738  62 861 303 173 877 152 580 346 122 632 148  87 818
 849  59  32 834 789   3  66 466 835 772 335 257  69 634  18 554 687 698 250 113 839 823 596 227 794 190  81 859  11 775
  91 758 638 708 857  27 647 636  90 635 326 371 285  46 349 771  96 810 306 879 848 516 264 323 819 101 172   8 292 846
 449 830 847 891 210 790  17 754 167  30 619 224 312   7  49 205 833  40 236 420 792 764  33 299 715 889 394 850 826  23
 718 699 685 112  57  13 600 434 244 477 437 233 263 767 235 403 669 735 120 723 740 683 150 231 737   2 146 678 695 829
 813 694 755 530 676   4  63 155 781 697 178 482 133 741  82 135  48  71 642 655 536 711 667 249  38 661 208 633 691 786
 623 710 583  24 440  61 863 712 154 350 272 253 892 682 204  16  53 356 869 538 673 317 189 471 585 684 561 572 652 156
 582 555 193  25 736 665 726  12  31 300 709  47 291 618 615 142 760 629   5 613 677 345 320 337 686 567 656 431 743 499
 739 594 675 268 570 644 429 331   1 480 348  52 492 447  26  94 363 765 163 587 679 313 571  74 689 785 707 212 727 690
 240 663 651 842 607 577 175 410 273   6 125 103 118 574 542 624 215 578  73 544 590 444 341 705 470 622 534 725 473 671
 282 612 609 692 643 597 541 218 372  41 195 591  35 641 478 556 603 552 486 430 521 181 621 604 138 514 527 668 533  34
 157 586 539 117 664 509 375 232  97 450 128 573 540 415 557 701 532 588  67 553 488  89 730 610 550 595 417 628 575 453
 506 465 598 537 878 424 294 340 732 365 247  45 608 487  80 525 645 169 548 510 592 484 338 279 640 426 115 748 581 309
 549 693 639 584 321 593  37 377 213 446 502 425 511 111 508 390 801 343 495 419 442 505 783 159 427 404  79 761 546 452
 354 660 435 494 428 384 234 462 336 461 386 456 519 500 576 408 476 626 402 464 551 149 153 563 524 485 804 369 455 401
 457 496 463 601 518 489 522 407 409 454 110 276 523 721 898 405 164 458 436 475 491 745 396 347 439 223 342 520 370 360
 339 481 507 474 411 625  86 820 422 714 579 515 468 742 316 399 512 265 315 364 438 332 611 398 547 368 322 355 528 262
 870 418 472 305 560 493 650 245 301 856 800 716 657 269 286 373 254 504 141 674 311 423 362 704 179 314 334 328 319 397
 406 414 413 378 391 274 114 565 498 329 866 733 821 400 293 605 497 374 469 310 479 361 451 722 387 324 543 367 196 535
 606 258 383 275 351 289 681 817 696 290 627  39 782 278 616 357 344 379 207 872 308 777 381 874 298 242 287 230 526 445
 824 302 432 873 366 325 805 352 297 531 797 277 788 333 728 267 255 385 283 353 393 566 380 822 144 221 749 266 158 243
 757 318 251 646 280 228  21 706 899 871 773 840 568 416 395 171 161 220 858 327 260 124 666 672 222 459 252 214  95 845
 545 256 147  58 844 248 620 503 770 160 799 893 614 261 589 881 151 648 662 246 202 388  15 787 688 483 162 176 307 412
 281 239 139  43 237 649 895 569 717  75 658 838 766 100 174 166 886 304 841 376 180 816 562 517 359 836 617 186 194 295
 229 883 170 441 860 896 105 238 513 200 744 284 713 421 814 734 780 183 702 165  20 182 501 145 559 217 778 116 127 795
 187 184 630 203 121 241 885 119 358 192 802 724  77 271 854 796 768 433 731  19 602 137 599 756 106 894 855  93 659 219
  55 136 107 897  99 784 382 876 654 809 102 763 198 132 769 815 185 888 746 812 206 791 443 104 448  92 490 209 392 131
  65 211  29 680  76 875 862 774 884 865  72 670 637  14 843 191  98  85 776 389 225 460 811 807  70 831 216 887  68  44
  28 197 631  88  60 750 751 126 747 752  64 270  22 827 832 798 753 467 529 259 129 134 700   9 828  84 882 720 852 226
  50 108 719 853 288 890 868  51 199  56 109 762  54 867 779 703 188 900 296 123 130  78 729 140  83 880 653 558 837 564

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.41637e+06us (= 5416.37ms, 5.41637s)
Wall-clock time (full program): 5.48055e+06us (= 5480.55ms, 5.48055s)
Satisfaction error: 0
Number of search iterations: 2442
Number of local moves: 1009 (including on plateau: 379)
Number of local minimum: 185 (including on plateau: 33)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18367
Total number of local moves: 7456 (including on plateau: 2380)
Total number of local minimum: 1355 (including on plateau: 290)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 744 843 882  83 842 805 825 878  74 143  70 201 133  87 286  82 580 140  93 899 103 727  22 837 184 876 600 421 595 460
 145 768 885  31 893  99  71 869  76 856 105 793 491 841 608 107  37 778  94 205  86 817  96 846 730 690 190 814 315 179
 745 186 741  36  27  54  44 879  43 285  67 775  59 886 640 167 102 772 550 151 416 779 500 900 654 810 663 898 665  21
 888 423 627 844  42 108  85 827 578 169 187 733 870 124 861  60  41 270  48 175 284 887 227 796 306 834 894 165 884 278
 178 183 646 851 112 653 121 756 155 875 166 717 130 232 158 137 141 788 233 268 308 783 118 832 628 891 811 896 634 114
 799 139 703 287  29 849 204 637 282 873 446 716 217 177 897 174  61 149 111 221 185 762 109 664 892 159 750 895 801 327
 492 216 728 223 828 300 877 809  81 800 583 629 181 211 889  34 297 254 273 129 383 660 115 467 826 202 785 150 883 210
 860 338 836 263 191 732 347 445 293 172 647 182 214 226 850 442 459 161 311 847 241 520 865 685 333 154 684 173 848 196
 867 352 754 353 787 761 337 661 868 324  75 666 144 344 339 234 330 128 230 163 240 760 351 650 624 386 251 238 408 890
 374 818 556 334 259 307 316 815 404 474 447 702 862 294 387 314 261 359 248 274 863 309 281 719 776 813 319 123 343 164
 225 852 546 260 335 753 292 313 412 332 859 457 874 302 320 373 389 198 355 771 299 269 253 576 855 360 490 336 237 622
 357 643 461 390 597 479 401 599 501 406 384 823  92 236 322 454 250 881 485 283 838 242 766 438 433 304 385 361 409 295
 866 430 615 699 312 363 393 649 462 331 497 432 455 400 272 394 471 379 362 377 246 456 804 662 290 291 523 317 417 350
 833 381 425 325 364 262 369 534 208 854 511 424 572 349 551 410 464 321 365 189 266 318 477 763 392 458 426 648 496 560
 188 659 880 449 346 371 575 552 451 342 569 203 443 296 437 391 305 616 329 489 579 239 470 453 441 399 568 444 548 483
 516 480 366 468 341 466 549 153 603 448 508 415 122 303 106 370 571 535 298 554 564 777 356 518 700 526 398 618 452 434
 345 538 193 411 372 522 340 264 429 562 602 502 527 577 475 553 698 503 555 427 435 407 405  28 440 326 484 494 482 619
 388 513 450 574 465 413 590 244 505 396  84 428  20 358 521 506 231 348 514 517 495 593 691 289 487 642 633 486 594 540
 478 176 367 519 532 542 611 395 780 563 541 200 524 439 631 481  24 380  39 570 222 436 422 403 669 288 678 708 224 673
 544 632 138 547 545 265 528 245 414 586  17  78 255 581 499 567 604 488 566 591 755 585  19 212 162 707 614 626 587 558
  50 104 271 682 473  88 418 127 736  25 709 134 713 493 509 812 612 543 605 791  52 463 701 507 215 525 537 476 725 419
 533  40 229 557 651  30 674 376  14 606 382 171 680 510 735 668 679 469 670 598 676  18 683 277 617 734  66 504  80 588
 681  53 120 739 746 213 559 249 573   1 658 672 220 635 101 671 726 565 601 328 645 621 431 132 310 589  45 718 116 797
 498 737 194 592 692 710 705 368 688  77 655 219 740 765  98 630 743 689 639 323 531  33 620   2 110   9  10 675  32 731
  46 142  95 693 638 207 820 397 596 657 375 512 652 610 156 529 722 536 790 706 758 256 539 209  68 252 686  47 180 641
  12 135  58 697 170 711  91  97 752 795 704  89 677 845 782 724 582 720 802 770  65  69 714 378 146 721 280 197 125 607
 420 623  62  16 147 712 824  90 759 530 243 742 625 687 117 747 781 613 808 402 821 195 199   6 275  63 354 301 561 792
 276 584 609 767 206 784   3  57 258 279 803 192 515 769  56 871 723  38 840 715 472 235 748   4 636 136 228  64 831 816
 160 798  55  51 751 218 757 157 667 749 786  13 864 819 764 807 773 794 872 126 830 168 839 247  49 257  11  26  35  72
   7 729  23 774 822 738 789  73 853   5 835 695 644 119 148 806 858 100 829 656 857 131 694  15 267 113 152 696   8  79

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.62285e+06us (= 3622.85ms, 3.62285s)
Wall-clock time (full program): 3.68741e+06us (= 3687.41ms, 3.68741s)
Satisfaction error: 0
Number of search iterations: 1229
Number of local moves: 731 (including on plateau: 197)
Number of local minimum: 55 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7853
Total number of local moves: 5269 (including on plateau: 1385)
Total number of local minimum: 349 (including on plateau: 169)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 883   6  38 828  23 708 844 848 612  18  49 253  95 754  46   8 850  66 727 615 774 692  25 550 735  65 889  48 588 878
 887 717 569 182  90  32 741 858  89 557 592  82  74 867  87 116  53 721 833 611 517 865  40 571 895  56 777 119  61 856
 743  73 110 715  70 312 798 859 121  99  93 390  96 722  62  97 885 107 672 617 746 810 323 577 689 132 812 870 772 143
 118 473  81 849 829 604 796 821 131 164 153 103 127 839 268 897 167 158 658 771 718 769 236 578 898 162 145 133 778  91
 144  72 660 811 803  79 405 154 126  60 432 114 528 869 156 507 800 444 753 635 900 700  76 805 488 801 862   3 191 137
 288 241 201 292 194 834 712 553  67 159 196 726 219 818 134 179 140 163 732 837 866 814 198 884 892 148 745 423 776  84
 240 135 793 183 246 529 210 166 200 264 188 647 239 755 150 874 243 170 888 693 786 846 362 893 813 203 300 607 625 267
 129 244 232 223 177 461 297 899 220 193 124 252 271 670 225 881 254 873 877 291 560 713 868 659 280 205 742 587 779 329
 173 296 256 857 160 724 736 247 334 327 311 513 218 663 302 248 326 853 872 890 274 668 234 294 896 206 340 139 880 278
 293 508 263 229 398 703 282 305 261 876 262 357 231 343 289 886 325 283 402 787 666 317 383 740 657 400 705 328 749 287
 352 744 377 197 891 335 281 290 319 320 412 540 433 257 354 403 242 365 580 861 315 622 265 871 255 295 690 697 675 277
 382 789 882 310 330 894 434 367 393 386 332 831 408 345 275 222 368 371 824 284 355 273 308 397 413 409 376 842 417 298
 695 875 384 306 359 361 520 372 436 303 313 770 286 479 416 245 429 782 476 378 394 366 464 324 456 411 379 723 360 453
 531 739 472 389 331 407 401 347 404 435 420 815 318 285 449 590 418 399 438 351 358 491 374 424 439 466 370 765 475 414
 484 447 542 500 364 465 396 428 422 442 471 785 463 415 369 445 346 441 460 387 385 522 501 564 440 395 388 421 375 452
 381 494 536 392 342 419 406 532 521 506 426 111 480 533  41 530 541 427 489 534 467 470 437 539 462 510 548 512 451 478
 505 684 516 350 502 477 565 485 443 496  20 321 499 574 490 430 551 503 333 337 258 391 586 481 363 349 380 535 568 523
 511 495 469 482 493 348 509 620 559 446 644  30   5 497 584 603 525  16 457 547 474 555 486 211 498 575 566 178 519 613
 563 237 450 682 606  43 459 655 576 572 598   1 589 591 597 527 537 554  54 524 483 228 552 180 515 458 518  51 623 492
 546 585 562 642 549 125 356 538 599 593  14 455 561 626 640 582 583 147 468 249 226 567 602  17 624 573 619 272  50 545
 544 556 652 636 431 105 579 808 526  11 656 108 570 543 630  12 581 608 269 130 425 629 691 113  68 679 633 353 304 665
 627 643 117 637 651 106 227 730   9 671 638 616 628 157 699 600 595 641  31  36 594 235 601 558  64 639 609 336 146 674
 725 454  19 165 610 339 704 152 707 661 694 680 614 208 701 667 648 634  77 100 662   4 596 136  71 719 270 646 169 683
 664  34 758  63 649 189 698 224 733 686 688 199 794 155 764 678 669 631  52 161 128 207 650 168 734 819  26 322 213 759
 122 653 756  22 763 202 204  88 799 792 783 448 802  35 827 773 645 212  78 761 102 221 795 174 109 788  15 685  86 775
 618 702 259 729 767 757 676 115 728 687 710 410 747  24 677 171 673 338  98 279 487  10 720  57  21  83 141 791 176 864
 681 737 138 149 190 709 120  85 780 860 752 790 750 181 838 714 186 711 209  69 195 250 654 299 104 514 185 504 344 817
   7 142 760 781 807 696  45 820 751 233 852 731 768  94 854  75  13 806 217 307 238 151 632 316 260 809 266 748 309  27
 621   2 784 822 843 836  59 112 845 863 841 605 847  29 766 341 706 251 215 172  39 101  33 373 184 830 175  80 826 314
  58 738 879  92  47 716  55  37 804 835 851 832 855 187 825 214 216 840 276 301 123  28 823 762 192 816  44 797 230  42

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.23461e+06us (= 3234.61ms, 3.23461s)
Wall-clock time (full program): 3.30007e+06us (= 3300.07ms, 3.30007s)
Satisfaction error: 0
Number of search iterations: 946
Number of local moves: 611 (including on plateau: 189)
Number of local minimum: 52 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6774
Total number of local moves: 5185 (including on plateau: 1336)
Total number of local minimum: 267 (including on plateau: 173)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 876 162 790  59  49 883 858  82 662 798 150 832  57 611 243  42 569  85 124 888 190 595  99 828 620 861  76 558 813  55
  87 849 674 809 869 784 566  51 119 706 101  72  46 226 622 148 544 890  63 199 146 889 212 598 725 255 134 654 891 586
 867 110 503  83  77  97 614 735 860 185 636 384 893 273 628  91 691 868 617 189 155 791  93 267 107 208 881 348 878 386
 837  39 774 427 178 121 807 115  65 811 719 701  92 886 848 191  69 169 123 515 276 736 643 141 664 287 898 740 434 209
 779 773 865  78 897 880 882 153 483 661 170 669 106  74 714  54 579 237 597 111  73 244 177 161 799 559  28 896 652 164
 282 138 760 147 130 894 793 253  98 240 874 293 132 215 866 264 626 769 673 166  45 345 304 707 895 203 120 639 794 850
 885 365 704 160 403  86 739 526 216 103 603 513 211 225 355 204 854 233 743 143 410 787 382 862 285 246 194 742 702 634
 346 221 648 154 104 292 423 802 404 418 200 726 238  80 829 290 772 529 260 167  75 826 899 900 814 271 309 640 685 193
 268 317 688 372 308 227 248 375 859 547 763 580 183 261 840 280 754 305 712 105  94 500 184 408 810 394 259 892 694 288
 294 258 748 296 313 274 321 847 625 734 342 658 338 218 825 300 785 417 727 491 182 538 266 413 245 369 527 312 633 219
 272 357 820 387 214 591 168 680 608 420 804 609 279 325 710 281 459 541 762 449 466 176 320 249 205 371 407 247 461 877
 378 316 884 310 315 349 405 236 887 879 379 732 324 593 737 435 411 284 786 353 323 359 223 295 263 421 334 452 451 401
 277 344 556 395 439 198 361 429 356 322 289 657 396 340 383 463 749 495 851 806 460 521 331 447 516 524 250 456 519 385
 455 314 629 354 343 333 399 425 192 347 318 576 329 339 350 553 490 545 389 776 504 231 844 416 555 666 508 328 675 332
 368 464 352 419 441 517 351 520 482 531 428 442 528 302 570 450 539 336 265 454 852 275 536 432 412 291 602 467 548 341
 278 522 381 430 469 499 393 374 402 572 551 358 362 594 532 474 326 511 525 319 472 501 574 426 563 188 604 422 484 409
 400 552 485 414 502 573 380 391 196 571 415 335 392 487 299 523 470 446 473 632 390 627 433 406 478 564 489 388 534 270
 535 635 242 567 445 438 163  96 488 477 448 116 301 616 262 443 367 465 637 650 458 605 607 424 565 173 561 560 587 584
 397 479 201 581 672 549 530 512   3 649 462 181 496 497 306 697 202  43 476 585 715 440 494 596 475 507 492 718  20 540
 641 537 241 599 775 575 562 659 186 550 695 360 457 481  34 398 117 700 118 129 437 228 610 546 642 137 619 510 366 606
 696 498  66 647 630 582 631 431 217 251 831 100 646 716  88 756  17 583 113 819   7 152 506 158 676 835 568 283 229 783
 613 699 303 645 644 663 667 554   4 557  89  11 589 514  52 713  50 729 175 480 686  23 660 678 679 174 800 180 197 687
 493 796  64 377 592 486 578 102 692 269 781 311 638 601  37 778  90 758 600 770 752 140  16 780  13 509 615 109  79 689
 738 656 453 711 746 623 337 230 234 681  24  27 836 693 330 721 239 590 145 801 771 682 436  19  40 720 824 156  30  22
 125 668  14 792 655 126 653 651 671  32 588 254 723 812 224 856 376 670 195 708 684 171 744 159   2 753 703 165 210 131
  70 767 122 745 872 213 142 816 797  33 533 505 621 871 179 705 677 157 297 728 823 206   1  29 220  47 795 709  53 782
 690 808  71   8 112 765 257 830 803   5 232 838 724   6 665 863 252  68 364  25 698 747 543 363 286 730  10 618 373 761
  12 722 307 853 843  36  81 839 222 733 133 127 833 873  58 818 128 741 327 846 788 577 834 750  15 864  62  44  31  18
  38  35  21 855 370 805 139  84 857 135 821 731 875   9 172  41 471 144 766 151 768  61 755 822 759 764 751  26 444 845
 518 114 149 841 108  56  67 717 827 298 136 817 870 777 757 683 842 207 612  60 815 542 789 235 187 624  95 256  48 468

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.38216e+06us (= 3382.16ms, 3.38216s)
Wall-clock time (full program): 3.44809e+06us (= 3448.09ms, 3.44809s)
Satisfaction error: 0
Number of search iterations: 1134
Number of local moves: 777 (including on plateau: 257)
Number of local minimum: 56 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6856
Total number of local moves: 4811 (including on plateau: 1343)
Total number of local minimum: 303 (including on plateau: 176)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 878 228 700 892  94 751  42 806 101 774 776  96 151 121 103 881 287 205 588 727 143 117 189 706 850 333  99 882 111 884
  38 891 810 886 142 790  61 689  63 173 691 621 862 696 174 824  43 550 646 336 167  83 112 649  90 502 105  88 875 858
  30  54 893  60 204 811  46 578 843 662 783 890 854  74 131 851 135 239 780 887 249 702  37 688 816 848 138  34 126  72
  57 899 833 222  47 870 104 863 120 794 825 784 230 797 116 714 197 661 181 840 471 119 305 387 196 275 835 573 115  85
  28 885 476  58 872 793 294 236 202 861 888 648 186 799  84 537 128 694 150 100 877  69 592 860 183 157 896 198 576 188
 148 278 144 900 108 655 873 874 137 206 640 641 650 617 175 842  77 787 760 731 193  73 562 889 435 487 149  92 216 176
 147  89 279 895 201 747 849 763 452 332 145 813 807 729 248 674 180 683 288 762 146 276 590 636 251 509  98 549 153 224
 171 136 805 190 232 610 730 864 169 322 721 243 868 817 247 681 209 536 717 720 140  67 298 800 130 524 290 653 341 284
 192 235 809 292 166 837 241 161 238 296 218 846 836 866 213 370 263 779 865 254 237 318 637 894 170 830 165 670 359 258
 260 272 375 311 208 711 113 394 382 627 415 898 328 831 309 123 295 656 264 282 880 399 669 815 791 283 372 545 508 199
 331 195 506 225 378 737 389 354 367 324 607 741 182 856 226 299 321 710 432 744 366 418 740 307 371 879 352 682 187 289
 416 410 351 857 421 692 467 448 317 364 319 643 219 358 286 340 488 822 752 271 320 482 632 531 406 312 270 594 404 323
 368 798 897 383 474 796 215 719 377 297 447 306 348 443 357 454 350 499 457 300 339 439 504 356 240 274 453 398 360 867
 380 604 422 329 458 459 217 291 326 379 365 335 355 234 564 373 429 347 385 732 446 408 654 464 534 871 304 788 440 622
 369 611 400 444 479 395 461 316 433 396 551 434 265 393 497 438 442 301 496 522 363 615 599 491 544 405 481 376 402 596
 577 314 498 277 403 273 529 593 390 245 540 469 392 489 468 413 494 657 409 515 490 374 466 472 462 510 212 570 445 569
 556 546 560 543 559 500 345 486 493 555 269 512 430 539 585 628 492  66 495 485 552 361  41 266 557 220 520 343 437 574
 642 600 420 401 532  45 473 580 538 527 384 210 342 478 584 548 424 338 595 514 667 431 261 426 639 168 407 164 676 501
 601 425 507 591 541  25 581 484 528 547 567 575 349 477 533 625 572 154  12 412 513 455 185 134 603 678 659 303 542 337
 519 381 598 583 525 267 480 419 697 465  10 244 460 586 535 565 511 191 475 647  31 516 285 635 619 114 618 451 450 638
 755 310 630 456 571 397 699 470 503  18 624 177 728  79 834 518 718 257  81 561  19 623 436 246  40 673 505 353 608 626
 612 775  80 449 582 255 668 709 521 125 602  91 660  55 687  35 597 107 587 613 579  14  65 517 677 698 589 315 558 693
 620 726 158 242 734  95 736 526 814 629 179 259  53 293 664 132 735 141 127 651 563 616 207  86 680 671 566 122 827 663
 777 675  87 652 554 139  36  70 568 686 705 178 685 523 759 483 614 221 172  11 605 684 386  13 746 214 672 252 609 739
 778 722  29 606 812 414 553  44 808 716 124 441 749  48 102   8 665 231  93  15 679 801 428  52 738 715 723 748   7 666
 743 742  27  59 768  24 772 129 725  51 633 250 757  64 852 391 631 211 645  68 820 634 427  49 184 417 707 344 701 690
 804 658 703 194 773 308 792 106 786 156  62  71 203 362 765  16 829 162 200 423 766 823 844 327 733   1  17 758 795  78
   4   2   9 708 761  20 832 281 782 411  33 262 110 160 770 644 753 713 325   3 745 876 764 388   5 695 771 530 828 330
 855  22 256 789 841  23 163  39  50 756 159 704 229 463 802  26 767 847 712 109 346 839 819 313 769  97 724 838   6 152
 859  32 253  21  75  76 754 223 785 821 233 133 227 268 845  82 869 750 826 280 803 883 781 118  56 155 818 302 853 334

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.33424e+06us (= 3334.24ms, 3.33424s)
Wall-clock time (full program): 3.39874e+06us (= 3398.74ms, 3.39874s)
Satisfaction error: 0
Number of search iterations: 1084
Number of local moves: 808 (including on plateau: 290)
Number of local minimum: 27 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6726
Total number of local moves: 4696 (including on plateau: 1337)
Total number of local minimum: 277 (including on plateau: 152)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 640 454 192 859 369 869 109 679  35  93  83 107 645  33 164 846 665 725 778 631 675 781 163  44 160  52 895  68 898 803
 103 855 115 655 485 716  92 870 236  59 565 514 868  78  60 572 635 626 872 852 451 805  88 110 143  41 880 124 889 156
 802 771 886 829 616 622 822  77 512 132 108  71 819  50 546 816 763 799 825 641 130 636  73  56   2  24  55 114 120 798
 724 571  69 333  64 706 104 638 131 732 212 603 666 306 198 848 786 888 807 900 189 839 121  84 715 127 884  76  98  96
  48 180  37 820 899 161 174 734 125 409  57 181 840 129 637 878 765 844 794 791 853 743  86  20 806 883 155 315  79  72
 208 784 278 871 671 220 246 144 145 551 167 256 733 309 601 842 893 891 227 780 815 836 184 273 857  63  85 266 222  97
 123 711 153 604 612 300 420  80 772 718 249 287 563 171 480 593 813 887 621 614 703 719 190 882 321 135 196  66 349 183
 185 162 811 730 729 320 395 194 704 634 345 834 618 157 858 558 864 199 303 894 714 311 284 252 215 203 206 204 262 370
 359 808 209 301 681 890 118 268 356 649 197 279 838 211 713 682 694 742 291 865 538 650 385 232 417 146 147 346 243 260
 275 722 384 879 630 831 314 238 874 523 297 201 365 355 809 723 221 218 342 835 892 358 310 247 265 344 223 335 141 364
 214 226 735 577 867 341 216 312 774 740 843 390 373 207 804 415 414 277 240 431 586 285 881 379 178 441 305 387 353 324
 328 428 377 837 833 270 307 363 860 762 264 758 325 466 873 219 408 455 366 573 610 329 402 166 398 299 405 282 323 229
 847 406 399 298 896 382 151 529 677 372 269 362 234 259 749 326 617 361 440 619 897 280 357 500 404 498 258 412 283 433
 488 504 313 539 241 339 383 429 779 393 517 458 670 263 709 447 350 360 449 597 469 503 427 444 378 423 376 460 381 426
 421 456 424 547 338 380 389 343 832 331 295 407 340 388 410 750 453 411 492 507 486 439 768 397 375 484 327 468 483 374
 457 438 511 368 474 496 459 461 574 231 477 348 401 434 400 482 472 570 430 481 396 501 528 418 478 509 316 471 413 521
 540 452 465 475 515 527 394 419 367 233 450 594 489 432  90 541 520 467 559 445 224 403 479 448 522 524 371 502 462 606
 464 470 425 493 555 578 589 446 553 140 549 334 582 436 581 228 463 490 548 149 242 347 354 437 513 435 562 497 491 564
 533 690 567 119  40 525 643 499 543 170 508   4 487 658  99 557 552 566 575 257 176 531 534 304 576 585 505 535 659 518
 602 516 596 248  81  89 579 550   6 561  21 569 592 537 138 544 308 556 580 133 495 536 721 611 568 615 583 494 560 526
 530 691 587 177  82  42 653 600 510  23 647  28  46 590 128 205 607 667 688 289  39 542 605 828 591 609 608 623 595 685
 633  67 625 159 239  62 664 697 152 187 598 701 255 554 286 532  43 172 680  65 225 654 652 700 731 620 584 613 663 702
 624 336 717 294 193 169 646  45 422 237 728 644 202 773 330  12 191 627 692 101  27 599 126 761 545 660 720 588 796 710
 519 296 727  18 302 739  22 676 244 443 693 745 319 769 292 195 182 113  38  47 391 261 783 662 629 707 741 673 628 661
 726 322 751 267 288  51 642 785 352 281 801 737 250 826 254  15  30 122 632 165  94 150 708 747 139 657 744 639 656 684
  11  75 766 105 137 746 776 782 651 698 754 686 186 788 317  87 134  19  16 210 173  17 738 759 111 795 736 861 669 712
 775  36   1 416 271 293 821 818 332 757 814 797 683 845 351   9  54  61  34 200 136  31 392 764 812 760   8 687 787 770
  70 154 473 245 668 276 851 800 386 850 678 696 116 753   5 318 179 112 106 290 827 253 672 856 830 230  95 877 175 674
 790 885 217 442  91 876 841  25 337 789 823 689   3 875 866 117 251 148  32 100 849  74 756 272  26 792 752 755  13  29
 476  49 705  10 648 699 695  14 274 817 506 235   7 863 767 158 188 142  58  53 213 102 748 862 810 854 793 777 824 168

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.10813e+06us (= 3108.13ms, 3.10813s)
Wall-clock time (full program): 3.17511e+06us (= 3175.11ms, 3.17511s)
Satisfaction error: 0
Number of search iterations: 781
Number of local moves: 671 (including on plateau: 205)
Number of local minimum: 19 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5800
Total number of local moves: 5160 (including on plateau: 1181)
Total number of local minimum: 108 (including on plateau: 146)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 853 187 562 713 155 704 894 285 899  94 518 390 836 660  57 791 869 655 752 679  46 649  32  80  97 766  99 120  39  34
 623 646 812 437  75 859 669 639 756 172 198 117 868 773  90  68 820 893 768 676  77 653  82 121 150 206  36  35 882 314
 158 166 849 693  76 876 315 113 900 783 866 587 867 105 182 795 860 661 888 807 108 252  59 814  60 168 226 132  10 139
 471 143 892 240  85 732  78 881 585 101 174 153 770 180 494 884 848 523 788 861  70 629  49 160 823 625 846 184  51 195
 292 196 759 809 774 872 167 847  79 137 136 728 857 477 110 685 542 801 705 246 234 277  69 316 898 406  63  73 109 851
 789 140 838 635 100 581 310 275 517  61 707  92 841 896 122 128 879 764 816 597 197 706 231 895 189 274 334 161 191 249
 889 253 811 303 219 717 224 805  71 152 312  81 348 754  88 271 883 815 873 784 273 456 371 843 291 845  93 133 302 255
 356 200 708 776 248 539 124 897 431 163 211 663 188 775 228 290 777 835 294 858 415 878 825 220 138 854 179 102 194 149
 372 325 767 797 221 880 758 214 251 192 324 698 765 262 504 297 388 852 725 395 176 887 129 336 398 379 335 205 370 313
 865 217 779 645 891 606 427 317 215 830 156 263 329 423 186 185 624 877 394 280 856 230 425 376 293 485 227 300 257 557
 828 111 697 247 365 476 213 364 243 360 833 863 666 135 451 339 446 622 265 874 396 438 347 283 522 544 469 331 467 320
 729 193 551 453 323 607 209 817 351 350 278 428 444 387 481 256 311 592 499 442 464 344 516 165 260 886 508 367 419 885
 366 270 560 549 241 579 328 819 346 345 361 714 434 326 662 420 412 608 459 353 566 694 470 449 536 540 126 389 354 239
 299 242 332 190 357 457 548 686 304 441 568 687 598 762 338 432 382 589 254 443 501 488 445 460 436 373 433 520 573 377
 506 341 472 424 500 462 404 349 330 417 383 374 493 358 648 381 554 473 503 502 295 363 555 593 450 659 410 359 429 528
 479 288 407 483 269 327 409 414 369 397 582 552 580 468 699   4 385 411 559 474 631 561 519 530 454 546 547 384 529 258
 430 342 458 386 426 321 440 603 572 571 487 496 333 461 343 527 298 422 287 531 621 595 368 613 405 281 392 416 489 601
 355 594 267 545 618 340 447 630 564 665 537 106 114 575 145 782 514  84 702 375 495  14 550 492 674 421 670 556  42 642
 448 626 284 181 600  40 475 563 484 643 399   9 512 567 435 599 466 170  21 490 465 452 690 533 656 177 741 611 574 604
 318 711  64 244 455 521 657  72 584 553  27   1 610 538 439 616 478 148 541 164 524 583 800 734 491  83 486 785 700 588
 171 578 266 103 636 279 658 235 507  25 463 558 289 675 569 753 210 276 677 509  37 614 684 480 668 212 620 505 748 510
  87 511 123 261 641 498 525 352  16 586 664 393 513 654 322 692 183 337 225 282 565 162 602 794 678 309 497 731 534 778
 218 792 178 112 709 306 482 633 577 605 576 401 591  95 640 612 223  67 701  66 769 362 238 570  30 400 543 590 747 682
 628 744  31 532 632 207  53 146 786 526 408 695 378  41 735 638 619  43 131  48 772 286 787 118 596 208 716 750 726 535
 141 721  47 142 724 233 650   7 515 743 718 380  26  89 720 739 157  38  17  23 683 667 647 806 864 199 703 757 671 688
 696 834 259 119 763  20 689 175 710 826 268 296  54 722 813   8  56 237 125 144 617 127 840 740  15 236 727 890 837 672
 418 730 232 737 637 202 691 308  29 822  22 760   5 203 871 627  45  50 204 130 651 681 742 116 803 781 862 736 305 115
 250 839 134 746 245 104   2 307 723 808 799 403  44 634 673  33 159  86  55 755 780  52 821  18  91 761 749 870 855 719
 264 751 222 169 680  96 827 615 798 272 738 796 151 201 818  19  65 413  58 715 402 391 609  28 745  98 771 790 301 712
 216 824 154 844 850  74 842 147   3 875 802 831  11 319 652 644  62 173 229  12 829  24  13 832 804 793 107 733 810   6

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.47459e+06us (= 4474.59ms, 4.47459s)
Wall-clock time (full program): 4.53995e+06us (= 4539.95ms, 4.53995s)
Satisfaction error: 0
Number of search iterations: 1668
Number of local moves: 720 (including on plateau: 286)
Number of local minimum: 104 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13416
Total number of local moves: 6298 (including on plateau: 2054)
Total number of local minimum: 890 (including on plateau: 259)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 264 817 897  70 268  69 478  56 804 588 457 706  41  77 698  47 896 826 781 702 758 150 889  72   3 553 147 887 129 385
 851 651 177 744 877 202 399 716 672 818 890 710 500  57 796 142 130 108  53 774  51 126 899  50 151 193  82 773 181 742
 825 858 860 180 691 581 718 201 869 865 155 527 571 152  38  85 157 820  80 787 658 112 218  97 671 189 514  26 134 876
  58 183 686 882 598 756 353 197 888 620 872 682 832 128  64 100 892  33 117 684 203 114 194  89 230 135 894 526 813 692
 265 824 206 119 482 225 738 666 769 634 285 675 360 140 728 118  91  90 175 557 855 743 304  68 846 880 278 681 161 552
  79 182 791 322 443 884 605 131 534 253 516 554 235 321 867 132 284 834 137 293  42 797 178 139 868 847 856 741 277 373
 288 730 751 213 622 191 900  92 171 192 638 497 313 252 311 220 445 723 121 724 269 483 270 853 188 687 295 878 866 332
 302 735 677 649 323 342 549 893 734 245 300 685  66 190 236  86 864 174 244 159 179 636 881 271 802 839 227 841 107 279
 247 145 659 266 708 187 662 166 428 411 217 650 798 120 303 430 287 617 232 833 821 424 296 240 351 789 219 486 760 763
 214 808 283 243 775 116 633 216 759 799 275 280 309 286 305 463 164 226 699 290 800 263 318 705 223 479 324 569 812 879
 281 608 717 153 384 801 337 405 508 438  46 844 578 241 267 383 771 449 291 274 656 530 423 363 368 211 367 674 822 325
  74 770 138 319 349 870 333 465 546 425 688 885 392 416 259 111  52 393 871 703 388 320 224 594 315 785 372 637 473 348
 747 873 697 374 387 292 378 306 475 437 898 434 829 418 517 297 357 248 335 429 779 433 354 334 391 389 700  27 146 234
 739 144 327 476 408 407 403 439 536 481 419 316 469 545 158 395 886 676 257 375 338 863 504 803 167 336 440 595 362 251
 382 172 506 358 352 199 415 394 573 404 444 502 459 468 386 491 390 749 458 601 551 495 515 331 492 377 400 396 381 874
 299 255 398 488 436 410 528 364 346 642  83 454 580 261 452 503 426 477 260 531 490 505 603 471 577 485 512 849 461 369
 450 431 474 365 593 541 647 371 209 484 421 558 312 556 480 625 198 496 314 340 566 154 629 409 435 228 895 356 406 572
 470  65 487 568 328 455 575 420   6 447 548 113   2 836 472 564 533 574 539 355 626 453 748 442 489  81 501 840 518 460
 359 555 422 729 520 639 669 521 229 466  78 380 544  18 498 559 413 451 298 156 565  93 715 645 693  32 630 402 772 464
 589 627 123 683 591 208 579 547 341 624  14  15  13 619 542 540 525 835 562  95 648 585 664 467 462 379 507 246 250 635
 543 563 446 184 104 586 310 660 163 587 843 258 538 612 665 567 510 628 511 124   9 136 733 499 583 560 641 233 550 169
 757 670 597 661 448 602  24 704 376 614 754  63 401 668 509 690 561 653 746 115  45 513 110 632 522 133  54 200 599  94
 768 370 456 707  17 604 361  19 732 148 883  96 643 752 613 848  35 654 740 523 611 186  62 713 576 196 237 221 207 537
 727  31  87 609 272 493 570 524 249 102 160 414 176 790 610 673 326  10 776 696 584 750 205 737 615 618 663 231 695 122
 582 345  76 731 185   5 762 784 289 655 222 600 680 689 343 725 606 103 753 125 720  73 719  60  37 838  16 519 621 652
 646  98 535  61 755 709 308 529 339  88  49 215 105 788  34 616 857 596 714 366 764 767 814 819 276  67 712  21 783  84
 875 256 195  75 778 644  25 726  22 494 891 282 711 809   4 810 238 667 127   8 294 780 786 782  40 861 210 347  12 766
 805 273 329 811 350  11  39 850 532 441 607 765 828 795 806 837 149 143 679 722  43 344  20 254 816  59 859  71 168 109
  28 432 417 852 301 792 162 330  99   7 721 307 590 657 761 631 678  23 815 397 173 845 204 745 736 427 701  30 242 412
   1  44 101 623 170 694  55 823 317 106 141  48 640 854 793 827 794 239 830 777  29 842  36 831 592 862 262 212 807 165

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 6.29644e+06us (= 6296.44ms, 6.29644s)
Wall-clock time (full program): 6.36208e+06us (= 6362.08ms, 6.36208s)
Satisfaction error: 0
Number of search iterations: 3009
Number of local moves: 1133 (including on plateau: 449)
Number of local minimum: 209 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 21640
Total number of local moves: 8708 (including on plateau: 3415)
Total number of local minimum: 1643 (including on plateau: 381)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 499  27 133  54 478  76  99  36 880 773 134 146 121  35 706 631 564 886 136 651 152 639 889 521 857 749 762 226 827 828
 139 402 106  22 890 792 123 867 159 674  45 824 117  34 772 864 740 170  55  81 101  52 844 733 883 874 893 859 278 122
 110  66 845 126 693 884 604  31 892 295 142 217 108  90 881 810 800  28 150 682 699  21 799 434 860 525 138 613 197 775
 115  88 190 888 513 127  61 863 854 633 433 785 158  97 672 473 748 163  33 647 209 291 763 572 791 196 894 125 490 643
 132 483 298 168 856 614 736 861 167 804 344 187 141  59 245 891 839 137 329 878 268  50 790 194 841 263 186 788 131 835
 216 872 230 897 811 896 900  96 294 715 203 225 269 165 686 808 343 290 143 727 184  92 850 221 375 719 149 786 155 198
 208 700 231 400 738 244 895 219 188 817 552 496 283  93 852 222 218 275 322 779 803 248 783 899 220 407 784 224 164 251
 162 778 361 156 745 260 321 898 250 840 761 837 357 223 795 201 181 243 112 656 262 313 441 227 166 709 789 389 870 212
 259 394 281 353 609 323 741 241 842 724 853 862 104 107 658 200 641 292 169 254 390 382 865 210 195 562 191 794 193 826
 266 678 309 211 354 279 567 308 232 858 318 237 393 755 818 180 272 261 235 766 838 267 563 340 753 608 282 300 401 866
 204 610 591 348 814 423 459 148 875 415 873 239 277 455 346 327 302 464 440 702 317 413 489 229 371 536 431 362 240 815
 332 580 398 337 612 350 603 299 849 482 414 650 286 397 776 228 352 305 326 430 437 527 495 303 395 781 485 271 372 443
 508 887 288 424 436 444 554 589 304 457 723 377 421 345 503 360 301 583 214 370 315 342 696 381 405 429 365 412 876 206
 374 690 312 501 333 476 472 677 319 475 707 296 356 399 328 462 449 379 546 774 406 336 492 453 417 691 339 419 404 233
 584 386 347 509 460 486 432 366 409 403 480 447 207 588 515 498 324 380 511 351 543 506 494 427 364 526 439 560 545 428
 504 522 391 358 448 425 502 487 338 293 582 484 367 376 590 373 542 601 530 573 574 396 442 553 426 469 465 632 255  17
 547 284 468 335 410 418 435 454 334 558 172 628 535 387 452 330 456 450 532 488 507 523 420 570 392 445 438 512 491 544
 463 461 520 596 557 630 514 539 349 616 493  69  67 653 446 611 644 621 368 537 416 524 341  13 606 385 467 470  42 497
 551 205 538 605 306 528 541 645 529  32 189 500 635 600 408 510 666 285 474 479 388 555 363  63 660 289 629 592 593 157
 505 173 619 594 130 458 128 477 531 252  26 575 646 578 238 599 576 595 717 175 577 411 287 710 642  51 648 466 533 598
 734 325 714 518  78 384 161 683 673 297 569 202 722 597 311 615 624 587 625  75  60 743  53  47 676 178 579 559 540 586
 708 274 548 636 177 617 253   1 618  11 665 703 571 561 120 684 568 728 659 236 581  18 359 671 669 270 151  40 661 757
  12 171 705 626  73 640 102 276 585 140 670 759 638 534  38 627 549 851 663  25 668 694  94 720 634  86 698 556 565 116
 620 265 812 655 257 830 622 623 687  65  83 607 836 758 192  58 176 602 793 566 704 680 154 135  20 481 199  70 692 273
 750 833 695 751 256  19 816 735 111  98 369 765 662 721 213  57  16 681 664  49 652 517  46 649 119  44 689 685 679 174
 729   5 802 732  77 716 145 242 307 124 787 182 846 767 264  87  74 103 712 280 713 746 378 675  95 105 550 764 737 771
 777 114 731  14 160  24  43 249 422 688 471  85 770 725 519 234 782 805 654 144 667 834  48 825  29 451  15 718 711 806
 877 657 113 829 179 820 100 744  82 516 314  84 855 871  79 796 697 869 822  56 310 730 183 756   8  64 747  37   4 316
 832 742 848 754 807 185 739 109  80 331 320 246 885 726  30 769  68 879 760 383 768 797  71 153   9 809  72  39  89 215
 798 843  91 118 258 147 847 752 355 129 823 801 882 819  62  10   3   2 821 701   6 868  23 831 637 813  41 247 780   7

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.59473e+06us (= 3594.73ms, 3.59473s)
Wall-clock time (full program): 3.66118e+06us (= 3661.18ms, 3.66118s)
Satisfaction error: 0
Number of search iterations: 1137
Number of local moves: 758 (including on plateau: 198)
Number of local minimum: 50 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8638
Total number of local moves: 5538 (including on plateau: 1471)
Total number of local minimum: 449 (including on plateau: 193)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 883  96  66  69 803 180 135  83 810 779  30 130 511 522  24 237  37 230 472 751 894 898 529 818 831 710 205 857  62 863
 727 833  41 804  71 899 132  51 647 826 103 214 247 686 806 897 893  61 514 688 545 159 631 174 862 143 112 435 137 177
 113 141 588  54  70 853  56  31 770 896 116 569 216  99 887 798 115  43 712 809 900 757 767 867 864 138 150 812  93 231
 215  79 536 888 273 709 147 638 889 772  26 160  98 734 811 109 117 126 607 704 475 861 482 274 787 713 244 885 131  25
 223 228 880 754  28 856 480 842 681 792 282 869 352 123 155  91  49 200 201 696 687 661 668 562 589 813 253 107 191 202
  59  48 771 181  44 741  84 163 877 711 198 614 229 808 891 241 193 657 221 872 829 673 295 886 750 182  50 242 188 817
 333 134 836 162 262 866 844  74 513 557 106 602 144 791 279 101 184 832 275 895 459 233 870 890 823 793 261 248 108  40
  82 283 837 343 296 361 375 705 303 740 326 556 196 805 648 151 250 165 785 415 314 717 484 881 599 850 349 254 148 297
 100 167 732  52 102 118 232 271 671 699 199 843 417 825 152 859 252 309 568 278 784 892 287 239 882 797 311 208 418 851
 110  64 807 195 409 290 492 140 301 596 400 670 860 774 265 802 485 319 776 700 801 775 360 235 553 259 238 277 306 256
 674  58 840 332 190 401 289 310 374 615 822 645 291 330 298 827 245 443 874 486 643 335 737 323 317 285 402 342 363 424
 875 838 183 339 207 362 505 350 433 453 412 541 432 477 263 304 257 325 456 483 392 331 533 593 780 799 517 383 218 474
 336 187 481 382 220 327 758 405 416 499 249 849 264 407 292 189 664 652 246 658 532 878 558 455 623 266 371 346 632 373
 329 566 224 302 448 447 465 394 531 565 476 494 601 328 260 376 444 324 721 379 452 321 695 530 819 419 341 276 650 338
 538 423 439 534 422 428 515 426 495 537 399 366 406 551 436 479 226 535 344 441 391 449 434 347 497 498 410 425 554 570
 469 408 243 420 603 502 411 397 357 471 559 369 211 457 496 381 548 516 450 334 464 389 368 431 526 487 493 528 560 667
 365 520 491 729 592 609 489 421 542 300 488  53 508 388 225 567 358 462 445 429 272 356 523 385 322 398 524 655 578 521
 440 384 313 348 519 574 611 627 427 355 438  90  94 564 612 684 654 340 665 395 222 512 197 468 305 413 639 546 573 506
 364 561 478 396 683 403 463 597 579  13 649  38 414 490 591 539 698 604 168 594  32 598 503 451  77 510 544 518 280 680
 386 540 437 618 637 651 500 446 267 234 646  95 430 461 662 466 682 619 104 442 460  34 164 679 281  16 608 692 583 675
 685 625 186 584 644 600 669 621 660 393 470 206 387  45 763 547 575 676  89 169  18 458 563  81 268  85 525 789 585 549
 552 848  88 689 586 635 507 690 606 146 504 293 587  11 708 730 509 236 595 345 105  29 255 718 124 166 473 677 527 576
 555 723  60 630 781 571 722   7 284 227 720 288 613 590 678 299 707 467  42 154 217 629  17 127 179 582 839 640 855 312
 738 610 580 719 733  23  12 620 617 209 749 308 715 172  57 185 735 672  55 156 777 158 269 377 337 659 795 703 653 122
   5 845 622 663 691  97 656 790  27 378 755 501 736 634 550  36 854 577 175 204 765  33 178 213   1 370 726   9 693 731
 752  47 286 748  20 706 746 294  68 171 742 390 759  67  10 728 846 702 762  92 633 128  75 114 192 354 796 641 830 816
 800 766 636  15 694  73 624 852   3 125 773 701 626 210 605  76 173 716 372 454  72 581 847 136 161 714 820 739   2 149
 821 884 315 760 783  80 642 873 203 153 835 778 616 270 129 367 782 743 814 119  87 157 120 111 121 318  21 170 871 572
 666 865 212  19 876   8 139 769  78  63 824 879 794 353 194 725 841 176 251 351  35 380 747 834  39  14 753  65 868 697
 320 744 307 786 828 145 815 628  86 240 219 404 761 543 768 724 142 788 756  22 258 133 359 316   6 764 745  46 858   4

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.74463e+06us (= 4744.63ms, 4.74463s)
Wall-clock time (full program): 4.81026e+06us (= 4810.26ms, 4.81026s)
Satisfaction error: 0
Number of search iterations: 1868
Number of local moves: 798 (including on plateau: 284)
Number of local minimum: 140 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14454
Total number of local moves: 5888 (including on plateau: 1748)
Total number of local minimum: 1038 (including on plateau: 236)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

  29 138 891 889  48 809  64 542 852 606  56 675 391 825  51 545  60  63 562 149  86 525 442 802 844 105 651 895 850  70
  89 888 267  40  58 147  53 635 705  59 801 492 609 727  62 799  98 565 630  92 206 860 886 865 864 132 131  77 880 798
 563 781 899 179  46  91 418 462 780 108 794 603 719 633  69 811 268  90 556  72 129 792 806 135 842  83  81 898 655 152
 170 877 238 569  54  93 832 893 759  97  71 594 103 663 127 139 183 124 288 196 673 871 894 752 849 184 897  80 550 695
 710 207 159 885  68 171 130 421 831 155 728 691 824 770 160 754 106 176 668 202 178 688 218 804 689 340 137 146 774 725
 812 819 172  94 141 151 165 461 855  61 540 867 846 869 181 868 199 180 657 600 134 561 592 230 243 167 892 222 820 116
 593 255 120 325 259 121 805 290 830 297 212 887 214 755 182 845 198 475 796 191 236 734 221 816 674 174 192 240 775 803
 283 613 102 740 157 216 280 822 349 308 187 791 829 708 322 856 203 228 519 166 538 745 786 219 744 162 317 262 756 307
 823 336 163 337 285 168 575 269 882 161 224 584 678 650 245 722 260 405 859 156 683 881 358 227 883 271 300 195 720 215
 201 226 142 776 328 301 303 411 474 847 299 896 793 743 348 233 276 231 843 415 900 697 346 213 598 258 256 279 587 295
 286 373 281 463 270 435 616 309 652 326 765 884 372 302 329 836 293 246 769 653 664 345 357 406 672 304 351 272 343 341
 784 362 323 840 447 353 580 311 287 266 365 511 350 583 393 422 543 890 648 430 296 378 352 254 385 879 319 257 363 344
 773 427 388 347 439 320 614 305 748 282 429 559 647 368 371 386 476 275 437 395 795 445 416 313 522 366 321 420 517 414
 428 400 315 454 354 338 360 332 382 407 367 581 878 539 464 374 419 639 394 873 364 396 376 469 387 521 473 455 274 502
 479 361 477 460 441 379 413 434 316 749 409 431 383 471 264 397 837 401 453 436 481 485 518 532 248 398 582 438 355 487
 339 508 448 402 531 496 446  57 456 515 494 537 384 468 443 535 375 450 334 408 472 480 433 497 504 516 503 491 527 466
 483 449 544 423 526 389 294 512 403 557 377 370 553 484 509 490 306 235 359 523 465 470 573 458 513 571 333 626 410 310
 579 432 548 478 568 417 426  75 493 574 555 380 452 501 549 577 500  26 145 578 119  21 612 602 656 451 440 546 489 726
  87 533 495 529 666 605 327 514 173 622 498   3 541 488 536 528 510 560   1 459  84 628 520 499 424 404 601 558 552 570
 621 591 658  79 425 660  11 506 610 627 244  31 586 505 686  50 618 158 133  27 564 186 534 670 576 596 632 742 585 604
 615 588 619 551 644 738 412 117 390  41 608 232 572 175 590  19 507 530 261 486  96 646 589 597 185 624 607 631 278 567
  15 200 782 554 685 721  47 566  95 669 680  35  13  22 625 611 729 444 208 482 629 467 712 640  99 623 547 659 263 693
 253 676 637 223 713 699 739 292 154 599 736 122 641 107 649 109 679 716 209 731 681 143 148 692 667 715  38 677  45  25
 169 643 636 128 763 617 735 718  30 524 595 194  66 197 694  85 703 733 188 761 291 239 229 704 189 746 709 126 356 747
 457  32 654 273 662  10 645 684  37 661 642 381 100 136 757 335 789 707 237 671 817 289 714  39  28 620 665 682 101 690
 702 700 834 730 779 767 217 193 111 760 717 153 190 113 751 110 140 813 265 698 701 312   9  16  78 787 125 876 115 753
 104 112  44   8 810 764 706 766 114 772 277 342 251 249 687 330 777 872 696 732 392  24 758  88  42 870 826 841 241  20
 399 737  14 768 863 807 634 821 144 800 828 225  74   2 778 211 797 788 331 771 724  73  23  55  43 750 783  18 205  49
 861   4 851 118 762 858 833   7 234 250   5 150 204 164 866 220 818 857 785 324 875  82  17 711  34 862 741 839   6 177
 808 247 814 853 723 874 835 790 369 815  12 314 252 298 827 318 848 638 284 838 242  52  76 210  33  36  65  67 123 854

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.16683e+06us (= 4166.83ms, 4.16683s)
Wall-clock time (full program): 4.23398e+06us (= 4233.98ms, 4.23398s)
Satisfaction error: 0
Number of search iterations: 1489
Number of local moves: 735 (including on plateau: 242)
Number of local minimum: 93 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11690
Total number of local moves: 5677 (including on plateau: 1726)
Total number of local minimum: 747 (including on plateau: 227)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############

 679  40 791 843 759  50  78 723  36 725 836 610 682 663  84 720 156 826 761 811 117 133  42 141 670  75 544  72 771  77
 624 606 827 874  43  73 119 839 673 857 618 602 588 176  58 101 130 819 163  66 159  63 642 138 633 749 538  82 768 887
 781 112 736 796  95 105 832 850 629 812 789 622 180 808  67  57  61  83 777 862 102  54 113 210 502 103 823  53 755 746
 847 184 878 780  56 137 144 702 856 543 171 829 107 428  71  79  46 104 889 876 153 219 189 778 885 213 584 168 724 875
 501 177 775 188 259  87 431 782 548 853 579 840 272 533 157 150 164 703 108  59 202 508 139 296 894 884 842  68 760 756
 604 809 522 888 289 206 448 503 224 900 873 565 239 790 169 136  74 385 291 191 198 833 166 684 831 179 681  69 545 223
 283 595 607 243 118 131 298 879 240 704 252 627 154 801 229 121 324 792 201 167 802 707 242 898 772 293 739 143 880 273
 797 729 717 292 247 216 302 825 218 281 721 260 867 834 268 116 142 209 271 211 221 824 866 643 256 226 719  98 776 363
 787 566 658 358 173 285 403 854 837 408 356 895 851 194 265 175 203 220 244 205 204 818 307 453 564 303 583 261 860 225
 740 279 587 122 327 236 255 666 339 886 181 883 172 274 677 232 364 258 580 182 899 351 269 737 688 322 695 347 784 183
 380 238 515 234 212 596 392 631 654 422 246 282 371 890 295 266 407 445 222 892 619 343 430 310 705 344 848 345 730 251
 333 275 423 336 316 374 550 744 446 589 326 728 250 402 625 350 387 294 828 359 301 404 335 758 308 276 786 334 685 393
 732 424 412 405 309 395 145 540 355 315 254 284 821 312 689 330 305 841 288 280 331 554 379 398 803 567 547 788 278 434
 346 366 511 411 409 475 375 415 372 490 438 399 389 499 377 807 462 750 498 484 457 340 410 514 488 286 473 527 297 450
 489 357 369 365 570 417 444 575 370 526 394 442 396 476 439 482 426 459 388 467 529 401 338 664 418 348 513 523 481 449
 435 468 360 478 483 420  65 598 472 381 551 516 469 427 454 500 451 461 492 241 382 524 525 458 553 416 557 425 447 506
 406 537 536 507 361 436  80 185 609 504 521 290 421 195 542 491 464 495 532 574 470 613 578 509 493 546 299 531 304 486
 539 577 576  24 300 496 561 384 534 549 433 520 573 329 311 479 441  47 611 505 528 763 494 306 337 443 277 586 437 555
 620 386 190 512 623 612 128 487 125 594 651 214 559 207 460 713 572 590 342 391 455 471 634 106 474 518 270 652 378 581
 199 149 373 563 605 560 591 328 485 626  27 680 593 440 477 429 694 368 556 603  60 648 582 614 192 383 249 646 227 568
  55 608 151 674 617 650 600 349 148  18 480 135 708 562 390 530 535 687 711 635 452 669 571 193 147 552 287 653  93 655
 120 644 569 676 742 692 621 320   6 656 114  44   7 665 599 585 640 641 647 601 510 463 657 215  14 668  30 632  76 661
 727 245 228 693 754 519 714  20 615  92 517  99 752 660 683 785 592 743  19 497 318 700   1 115 134 690 262 541  90 710
 196 264 354 671 691 852 162  32 187 321 770 140 701 675 319 686 805   2 718 639 698  11 638 432  16 630 217 706 237 745
 362 741 123 697 783 257 696  70 146 174  49 456   5 160 649 765 699 709 659 313 667 200 799 662 165 678  33 868 208 722
 248 672  96 100 263 748 716  86 863  21  88 636 747 645 816 813 779 109 861 767 751  25 762 400 341  81 161 616 178 126
 127 414  97  13 637 891 731  31 733  22 773  94 253  62 795 855 757 734  64 835 413 735 712 132 367 870 353 769 231  15
 158 814   4  28 859 820 896   9 817  34  85 376 317  23 881  52 865 726 738 753 830 597 838 872 197 170 235 397  35  89
  48 774 419  29 822 897 893  37 849  26 794 124 804 233 871 864 764   3  17   8 877 230  91  10 558 844  38 800 325 466
 352 465 111 715 793 882 845  51 129 186 628 323 267 152 798 846 806  12  39  41 810 314 766 869 110 858 332 815 155  45

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.73697e+06us (= 2736.97ms, 2.73697s)
Wall-clock time (full program): 2.84848e+06us (= 2848.48ms, 2.84848s)
Satisfaction error: 0
Number of search iterations: 670
Number of local moves: 525 (including on plateau: 110)
Number of local minimum: 22 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 3921
Total number of local moves: 3338 (including on plateau: 714)
Total number of local minimum: 97 (including on plateau: 86)
Total number of resets: 0
Total number of restarts: 0

Error: 0
