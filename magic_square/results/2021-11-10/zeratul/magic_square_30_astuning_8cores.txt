@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 145 853 827 825 236 826  85 812 153 675 170 821 813 774 844 124  56 146 262 601 241 477  10 194  36 215  38 804 653 799
  14 333 840 226 253  74 142  47 818 709 354 857 710 861 802 182  62 269 261 817  57 295 552 394  21 288 809 832 785 851
  77 852  51 305 335 816 375  25 810 822 131 781  43 321 748 680 836  96 239 497  22 364 122 330 763 657 787  70 792 768
  17 834 761 149   3 766  92  33 757 619 166 764 850 185 806 328  24 708 203 815 651 413  31 637 258 513  73 674 687 698
  46 760 663 165 111 625 233  40 801 728 268 746 732 156 604 775   8   9 286 736 769 237  48 353 819  16 644 828 520 789
 717 367 547 227 213  98 747 714 301 758 105 329 753 419 773 678 741 673 181 542   6 163   1 219  30 574 580 626 681 752
 428 201 743 195 132 155  27 600 733 705 126 783 555 599 695  15 739 278   2 650 607 382 671  58 243  99 778 820 740 756
 679 345 706 298  66  55 332  67 414 660 120 670 692 762 701  83 656  63 169 631 587 366 482 458 718 114 727 684 629 581
 162 404 796 284 250 751 551 443  29 685 214 479 638 417 661   5 618 135 109 612 683 173 168 359 525 719 584 682 586 793
 688 247 602 648 175 722 118 610 795  26 100 563 590 561 630 700 641  84  45 588 133 540 606 377 597 112 633 659 621 104
  89 157 702 125 689 635 503 649 609 530 346 457 468  44 391 591 577 299 255 608 516  95 196 494 616 545 554 611 677 487
 252  64 668  11 614 509 593 632 522 465 110 559 646   4 583 508 470 704 320 567 532  13 598 528 582 531 672 152 565 541
 218 204 529  49 454 647 592 451 429 568 423 645 589 444 485 512 486 221 352 493 455 113 575 572 365 539 569 491 403 642
 533 405 447 562 358 505 557  20 617 634 467 439 363 518 248 475 489 432 472  32 652 370 464 500 523 396 462 460 521 594
 526 498 398   7 409 511 628 490 510 339 501 303 448 546 387 433 519 445 492 446 386 434 473 527 544 426 476 504 336 573
 620 421 459 483 453 311 341 534 450 390 440 535 484 388 471 373 368 463 401 315 643 385 566 499 474 349 514 430 524 431
 415 560 393 408 422 425 412 507 449 340 558 570 362 302 310 438 323 407 441 481 274 829 564 770 282 466 277 307 875 348
 383 418 356 750 308 410 411 260 424 420 713 324 478 326 556 461 437 664 859 469 515 350 397 711 436 360 198 322 452 347
 361 624 217 803 402 190 838 312 357 249 716 823 300 848 242 285 384 480 847 374 325 759 271 265 254 742 406 222 192 427
 800 655 331 372 883 229 392 381 257 281 279 543 371 729 297 314 380 400 379 896 615 798 369 779 351 256 316 342 334 186
 754 715 337 835 306 338 697 442 225 317 553  61 230 749 161 313 205 707 596 264 900 780 623 245 293 797 296 209 172 395
 627 343 355 703 720 273 290 234 876 240 869 108 344 294 141 246 238 690 790 327 220 890 693 712 389 179  97 882 578 167
 456 613 187 807 765 208 318 595 171 207 874 267 211 791 174 841 291 263 873 127 216 696 537 694 232 837 640 280 164 180
 585 517 178 771 755 276 898 188 887 304 805  90 212 144  23 137 843 495 784 177 376 786 863 866 865 117  86 292 154  41
 854 548  54 665 435 897 833 889  60  78 571 378 235 691 416 206 200 845 777  80 134 782 855 150 884 128 287 309 151 123
 862 251 868 506 871 283 831 686 184 881 788  79  65  35 266 808 140 193 794 289 223 189 864 830 138 858 136  94 272 231
 488 842 191 899 731 676 658 199  37  91 726 228 107 103 147 767 244 725 734  34 888 502 737  53 603 666 872 148 259 160
 275  93 159 158 669 536 856 878 622 197 724 139 319 879  18 772 846 894 202 116 893 576 210  76 849 699  75 550  52 183
 605 121  68 399 721 639 106 891  42 101 662 102 895  87 885 654 870 860 667  39 119  28 745 735 744 738 814  88  71  19
 839 270  82 880 776 129  59 886 176 496 636  72  12 538  50 811 824 867 723 892 877 730 224 130  81 579 115 143  69 549

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.30703e+06us (= 3307.03ms, 3.30703s)
Wall-clock time (full program): 3.36229e+06us (= 3362.29ms, 3.36229s)
Satisfaction error: 0
Number of search iterations: 1257
Number of local moves: 712 (including on plateau: 244)
Number of local minimum: 60 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9291
Total number of local moves: 6932 (including on plateau: 2924)
Total number of local minimum: 340 (including on plateau: 221)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 898  80 210  48  82 101 125 876 738 888 194  61 879  70  40 798 112 698  87 899 664 763 394 505 896 562 120 721 119 887
  53 167 862  91 695 895 145 770 712  49 143 341 818  46 213 113 103 883 233  47 322 865 869 169 801 633 104 855 881 637
  15 866 880  30 745 105  41 622 861  90 774 175 584 204 800 645 619 814  27 116 144 744 837  45 781 177 418 527 187 642
  18  74 588 891 124 900 203 705 155  64 787 216 796 131 872  78 453 871  93  71 748 795 538 219 739 136  72 720 723 735
  17  58 860 140 867 197 317 853 276  69 291 100 741 193 625 826 662 182 207 172 707 142 532 263 788 889 773 848 259 661
 159  28  62 220 699 791 185 852 893 165 171 192 750  81 151 799 719 274 878 295 173 708 121 201 540 677 466 851 746 668
 189 153  89 325 509 114 892 629 279  76 290 212 835 168 845 244 755 445 229 278 156 542 663 884 797 248 778 870 252 769
 456 239 118 238 714 254 130 580 200 208 465 206 281  84 289 397 672 804 129 894 830 324 874 256 627 644 829 667 372 734
 311 154 150 277 117 272 209 809 282 482 174 331 483 424 307 308 843 422 162 261 854 806 850 460 632 821 640 882 199 593
 412 184 297 377 701 211 305 675 222 838 336 352 294 126 181 179 836 856 357 268 885 329 686 122 779 678 563 541 265 660
 621 253 221 310 359 646 736 759 792 356 343 161 754 362 227 316 338 152 700 285 354 351 652 301 685 733 385 635 250 478
 417 235 190 897 407 287 349 600 684 404 313 320 725 528 381 389 399 260 416 232 415 245 425 236 454 228 722 616 868 873
 314 368 552 309 474 890 414 433 592 468 225 447 344 560 486 479 561 401 246 475 366 636 257 374 655 582 292 543 427 345
 337 877 598 326 681 367 318 321 409 288 693 626 364 178 347 410 443 323 346 844 583 442 328 477 421 379 355 666 306 462
 531 589 275 423 391 312 382 574 302 831 348 566 384 461 426 488 241 378 519 496 546 459 437 471 458 507 572 438 376 334
 448 555 647 463 492 485 457 283 545 480 605 440 576 371 383 340 361 393 500 398 451 581 449 387 469 303 594 429 406 224
 499 506 436 570 430 537 650 375 439 402 400 490 523 420 491 604 446 497 419 603 549 380 515 360 335 390  12 392 631 214
 586 473 567 512 521 615 508 353 558 472  56 489 464 494 568 591 300  26 564 608 554 435 653 704 332  55  37 363 510 547
 579 511 518 689 183 493 535 432 596 732 444 264 551 575 641 476 470 544 467 413  32 396   5 687 270 611 223 166 673 339
 730 495 760 548 656 408 624 180 319 513 148 639 522 516 692 597  59 620 501 571 590 504  51 434 202 231  25 293 553 534
 573 529 654 623 157 607 503 230 764 271 602 780 694 585 670 577 107 680 578 565 195 450  75 595 226  85 237 358 526  19
 669 530 742 775 559 298 557 186 286 539 690 724  99 858 520 674  73 455 807 671 128 110 234 431 198 498 330 249 612  13
 618 808 524 525  23 638 517 269 609 743  68 514 138 665 614 688 299 606 762 657 133 726  29 679 149 487 218 188 601  20
 160 643 536 599 350 716 481 108 137 815  57 790 134 765 634 718 205 702 846 766 587 649 533   6 127 333 405 141 550  22
 610 703 502 683 111  44 784  50  42 617 841 658  65 691  39 782 196 411 859 817 676 242 556 816 386 267 651  94   7 315
 863 833 727 729 280  83 697 170  38 772 715 786   4 822 139 373 164 484 728 613  60  54 296 805 132 452 569   2 756 369
 777 696  33 255 793 630  98 262 711 840 857  77  96 803 370  63 768   8 215 820 284  36 839 388 191 810 886  95  31 783
 628 752   3 776 243 751 717 327 146  14 828 819  97 827 737 135 740  67 785 304 706  34 147 849 106 365 648  35 771 158
 761 403 812  43 757 847 802 109 115 789 825 864 247 713  16  86 824   1  88  10 731 758  11 709 163 710 749  79 441  52
 266 753 102 823 395  21 834 123 813 240 832 875 273 794 811 342 747 258 767  66  92   9 659 682 176  24 842 251 217 428

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.13365e+06us (= 5133.65ms, 5.13365s)
Wall-clock time (full program): 5.19656e+06us (= 5196.56ms, 5.19656s)
Satisfaction error: 0
Number of search iterations: 2318
Number of local moves: 782 (including on plateau: 286)
Number of local minimum: 190 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 17169
Total number of local moves: 9051 (including on plateau: 5094)
Total number of local minimum: 1030 (including on plateau: 347)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 311  85 549 605  66 856 726 806  92  41 796  73 858 867 794  46  93  61 334 142 789 182 808 741 892 900  28  86  39 849
 582 834 115 607 116 780 842 534  76  67 686 105 820 129 626 821  62 202 875 836 608 196 701 157 887  72 214  52 866  47
 824 228 880 680  48 840 152 882  82 163 648 132 889 897 853 211  32  36 888 847  65 828 118 711 671 219 180 406  81  24
 873  70 881 870 862 540 239 851 230  38 184  94 785 837 527  87 125  29  21 133 135 573 895 787 734 898 234 763 149  71
 589 250 108 774 886 716 290 736 327 282 850 221 697 201 815 776 664  43 254  91 100 843 753 300 167 507 822 130  78 245
 683 113 550 762 204 833 233 798 162 223 801 128 662 107 735 446 810 275  88 803 183 813 878 368 613 321 335 291 160 137
 684 893 207 859  84 879 885 689  98 109 784 101 705 213 759 261 545 190 209 848 189 578 551 890 287 146 351 273  31 217
 690 305 580 791 215 388 597 393 127 242 694 200 865 271 783 193 187 389 643 894 777 766 276 249 854 292 175 241 139 299
 666 342 177 884 205 745 800 676 192 260 308 277 586 354 489 698 772 562 112 511 188 380 609 872 156 295 381 352 338 328
 751 279 823 660 232 431 814 405 251 222 240 168 778 411 649 262 845 298 226 480 891 174 896 274 325 248 231 360 332 559
 606 487 723 799 323 331 554 553 235 199 303 244 432 359 755 263 294 252 301 816 379 782 581 370 757 453 267 401 382 314
 366 347 817 283 281 386 460 667 278 502 422 474 482 621 498 350 337 345 730 430 296 566 535 218 864 340 210 874 243 293
 414 374 371 319 413 524 341 765 357 501 322 522 265 203 731 675 469 361 488 594 286 521 899 412 339 604 346 399 434 266
 475 495 344 433 194 576 537 593 786 373 450 592 343 404 333 424 355 427 259 375 385 415 378 364 640 877 448 392 476 372
 421 443 307 449 310 484 423 330 253 451 387 458 493 544 517 420 525 455 542 536 599 336 436 483 657 384 417 466 510 479
 485 285 473 506 516 456 494 575 670 383 465 312 409 288 496 445 269 349 565 441 481 467 397 391 728 437 416 512 326 478
 390 583  96 439 470 247 486 377 531 440 369 491 362 457 403 619 302 367 571 598 625 442 579 363 477 402 577 395 429 628
 151 530 143 238 407 532 492 318 447 539 695 464 289 638 556 645  30 454 519 499 452 500 195 636 569 610 505 309 650 503
 317 529  99 526 398 497 165 329 468 555 639 646 313 418 320 563 124 601 220 472 570 630 435 699 504 631 428 396 463 560
 171 644 632 181 541 596 186 216 552 567  35 585 284 725 172 514 408 425 615 256 663  83 225 461 394 708 767 655 659 595
  53 677 150 119 629 528  90 170 624 459 120 587 658 612 198 509 764 618 572 620 297 518 257 520 316 515 756 508 471 600
 258 634 538 557 678  18 140 315 682 752  69 490 224 568  54 602 611 637 722 523 564  16 104 123  77 719 685 742 852 561
 169 588 627  59 633 166 206 603 652 614 110 642 654 802 306 709 769 811   8  13  58  33   6 706 419 672 547 584 775 574
  89 548 426 268 781  50   3 154 714 754 812 795  14 771 178 704 229 635 669  17 696 208 270  56 462 653 546 681 819 513
 304 673 558 376 656 400  25 141 688 665 590 863 144  45 212 724 155 876 687 255 616 191 197  55  26 533 622 871 693 674
 623 713 236  75  10 173 348 176 718 846 691 661 134  15 106  11 729 712 700 227 617 410 103 703 138 702 720 651 809 758
  37 788 185   2 832 102 770  12 827 861 122 825  40 164 148 738 737 591   4 749  97 114 647 543 356 237 733 679 740 835
 721 717 818  80 831 179 797  63 773 826  57 860  95 768 145  44 739 868 857  27 710 746 280 264 121  68 747 158 147   9
 792   1 744  42 855 136 779  64 830 743 159 715  74  22 246   5 727 841 829 365 761 760 353 131  34  23  79 869 692 844
  20  60 358 272 839 126 641 324 793 838 707 790 161 804 111 750 807 805   7 117 438 444 153 668  51  49 748  19 732 883

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.95331e+06us (= 4953.31ms, 4.95331s)
Wall-clock time (full program): 5.01614e+06us (= 5016.14ms, 5.01614s)
Satisfaction error: 0
Number of search iterations: 861
Number of local moves: 624 (including on plateau: 170)
Number of local minimum: 29 (including on plateau: 9)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15245
Total number of local moves: 7087 (including on plateau: 2912)
Total number of local minimum: 1016 (including on plateau: 231)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  11  76  35  66 380 212 739 737  79  97 754 788 789 817 825  78  56 796 807 100 874 207 792 802 135 346 867 102 823 325
 186 757  44 480 830  52 843 736   1 320 855 774 738 300 703   8 271 407 799  38 691 228 140 793  75 734 833 119 702  58
 146  70 156 221 770 755  59 828 836  89 665 768 334   9 791  27 353 578 761 103 803 735 826  99  32 331 854 783 672  61
  17 249 165 814 841 698 293 752   2 309 360 766 777 435 811 781 121 693 829 276 215 547 864   5 724  62 786 114 195  14
  13  54 167 128   4 386 772 741 118 413 696 683 847   7 745  31 244 780 834 603 713 487 712 710 343 576 758 123 652 175
 641 143 110  71 649 107 511 648 707 267 694 763 722 246 715 204 624 708 753 161 659  72 718 623  51  33 750 216 771 178
 289 284 209 151 790 779 359 859 620 133 637 392 621 188 645 730 149 671 709 105 760  95 639 144 769 544 784 182  26 252
 226  96  49 354 628   3 344 633 824 265 695 666 808 199 655 748  29 460 805  57 721 433  77 632 590 629 773 155 692 269
 611 145 274 374 631 720 677 575 258  82 572 813 597 247 532 543  90 756 593 310 662  40 584 630 714 111 549 124 686  15
 668 587 236 131 719 653 253 577 650  12 697 688 561   6 667 558 608  24 585 490  36 257 643 519 749 230 571 197 716 227
 599 245 533  19 704 604 286 479 614  46  10 402 513 237 534 699 589 555 526 179 717 317 565 670 462 523 574 251 658 405
 483 596 189 297 545 518 564 504 502  20 602 610 527  93 606 569 601 340  18 646 514 222 439 582 465 669 553 476 581 184
 416 389 404 214 510 466 232 634 563 142 625 656 539 491 443 499 609  83 505 535 397 164 506 580 429 497 453 398 664 472
 616 528 136 613 485 509 150 437 520 208 494 537 332 525 536 474 500 447 592 448 414 468 436 478 492 498 530 393 372 347
 554 440 412 550 508 559 424 489 406 516 451 546 467 470 464  64 493 417 458 449 450 438 517 326 444 541 434 358 503 367
 431 306 889 365 432 430 395 885 301 496 421 552 242 456 370 452 387 455 457 529 495 296 304 400 484 394 371 522 341 657
 594 469 403 579 442 441 751 338 327 445 381 419 322 471 426 388 299 586 290 423 250 896 482 248 383 477 454 521 375 635
 339 415 473 810 459 337 408 316 377 865 350 256 863 401 373 376 425 612 319 243 324 851 427 366 321 351 313 463 475 607
 379 740 804 627 461 200 849 177 328 775 378 515 333 356 361 352 141 349 314 261 486 733 690 418 399 396 382 570 193 548
 363 481 562 742 336 832 557 234 273 895 893 288 345 809 311 318 422 291 348 410 281 588 364 285 191 206 263 615 330 682
 357 566 647 685 279 185 798 384 329 837 292 223 233 819 732 342 229 305 210 390 892 675 201 362 270 240 385 640 303 705
 312 638 821 711 323 159 540 262 538 862 411 259  85 822 224 122 818 275 355 568  43 868 238 272 196 812 169 678 268 866
 765 391 687 806 202 117 556 512 148 644 220 183 302 661  73 409 842 295 170 654 260 642 870 129 241 726 277 591 294 848
 307 651 767 283 192 315 225 112 171 820 231 278 173 542 172 881 680 266 335 827 287 598 660 369 899 676 194 776 127 701
 815 617 674 845  68 844 636 239 725 727  28  30 217 531 308 174 626 101 198 887 254 747 154 168 816 160 264 663 115 884
 689 746 764  80 255 181 211  67 872 782 280  84 157 507 153 857 838 235  47 728 605 839 120 298 158 797 152 743 850 420
 875 560 794 501  48 679  16  92  98 622 600 187 878 673  74 852 856  86 190 723 282 684  87 759 180 213 106 795 126 879
  69 488 551 446  21 876  23 109 888 729 116 205  39 840  81 869 894 428 618 900 166 162 218 883 882 831  50 368  34 731
 858 890 860 846 132 113 147 137 873 573  42 139  94 762 130 219 583 835  37 619  88 163 108 104 877 787  41 778 880 800
 886 898 700 706 871 785 897  22 567 524  65  45  60 595  55 891 138 681  53 853 176  63 134 861 744 125  25 801  91 203

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.68036e+06us (= 3680.36ms, 3.68036s)
Wall-clock time (full program): 3.74672e+06us (= 3746.72ms, 3.74672s)
Satisfaction error: 0
Number of search iterations: 1315
Number of local moves: 642 (including on plateau: 254)
Number of local minimum: 70 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9698
Total number of local moves: 6256 (including on plateau: 2260)
Total number of local minimum: 476 (including on plateau: 163)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 131 721 724 140  77 739 565 143 409 868  28 800 643 244  41 858 188 606  47 752 744 859 892 768  97  46  33 136 783 433
 587  53 809  94  29 130 642 605 674 256 162 649 668 101  26 890 105  23  90 704  56 557 869 716 782 889  27 891 599 832
 887 736 167 580 119 421 793 189 810 631  92 760 670  85  64 823  59 852  51 734  83 860 112 896 750 226 113  38 749 165
 568 740 879 894  88  84 837 153 804 464 769 144 778  52  62 645  50 512  63 834 103 856 145 408  95  35 591  82 883 897
 770 125 872 191 898 148 799 171 696 762 618 350 678  81  98 158 173 715 128 713  89 863 745 210 102 876 206 228 820 232
 774 805 100 177 223 886 796 107 726 802 166 777 806 196 665 150 679 611 160 830 142 765 204 181 893 262 151 161 174 146
 651 584 759 639  58 412 169 200 733 570 900 851 861 108 296 276 133 840 280 772 159 663 321 881 220 211 289 218 236 225
 729 756 139 164 195 267 479 342 711 648 192 812 819 147 485 290 635 664 122 841 132 616 814 817 260 330 284 255 208 362
 707 844 185 702 311 411 247 207 572 694 272 217 839 318 667 258 237 773 240 761 224 545 885 300 899 235 245 268 179 273
 766 880 186 735 348 588 297 312 600 873 274 320 798 298 250 277 680 754 253 270 845 628 198 326 259 308 187 337 307 361
 731 870 252 261 352 264 428 357 857 717 170 594 398 384 849 344 647 803 294 445 231 620 242 397 271 380 335 322 314 386
 316 518 215 573 389 324 356 299 710 746 401 888 214 305 855 405 619 848 370 292 353 753 339 303 422 420 406 282 301 293
 586 338 410 360 636 396 878 372 842 501 467 317 358 363 419 343 709 382 281 378 486 705 440 402 340 441 345 266 351 403
 895 431 404 471 457 328 436 333 493 365 371 423 416 492 336 415 884 414 329 359 496 323 480 434 474 499 390 453 523 391
 458 376 395 454 686 182 341 417 450 418 488 413 808 425 478 334 473 407 463 394 462 503 424 443 489 442 498 555 472 367
 368 439 432 506 354 427 494 430 369 532 429 346 468 487 525 528 482 447 437 502 513 400 521 435 465 481 469 444 393 392
 537  96 388 460 703 221   7 560 319 562 516 519 491 617 456 539 546 375 524 332 567 306 385 399 477 533 527 511 495 547
 451 575 540 529 514 202 379 577 229 448 520 509   6 475 234 483 287 387 624 452 561 331 571 569 613 585 449 526 381 508
  93 559 517 549 461 698 438 541 155  31 659 106 590 553 603 602 313 124 604 576 544 374 583 446 476 536  19 632 633 500
 288 510 556 563 327 589 530 676   3 238  15 625 660 578 522 490   1  79 551 543 548 135 623 550 505 592 595 542 574 507
  67 608 730 157 629 690 596 497 269 347   9 706  86 566 627 554 168 178 609 601  87 248 249 614 675 615 582 534 564 653
 197 121 738 110 640 275 172 757 373  69 581 683  68 637 216 558 254 278 700  61 579 120 712 652 742 650 610 622 612 728
 184  70 671 383 685 654  12  48  73 641 598  13  55 630 634 658 291 115 829  45 657 233 597 666 708 748 723 626 531 737
 193  32  14 263 484 801 789 535 243 212 661 515 104 697 239 699 638 304 669  34 785 285 677 129  78 621 719 673 776 646
 265  71 689 315 779  44 751 656  75 355 687   2  65 763 607 662 459 310 727  36 693 138 655 176  17 725 722 644 672 755
 154 681 720 784 593 163  76 743  80 117 835 180 309 843 838  21 867 241 788 325 816 134 175  40 758  18 794  43 695 684
 688 283  60 732  10 825 201 807  42 127 854  54 302 691 349 815 775 701 853 295 811  74 470 118 152 780 824 781  11  30
 222 126   4 822 764 818 190 786 504 251  37 219 279 682 877 366 847 286 871 257 714  20  16 827 205 747 797 767  91 123
 230 364 114 791 831 741 792 874 538 246 862   5 141 864 771  66 850 377 692 194 209  49  99 213 455 227 795 865 149 111
  22 203 846 116 875 787  25 821 156  24 882 718 137 833 426   8 466 109 866 183 826 552  72 199 836  57 790 813  39 828

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.60367e+06us (= 4603.67ms, 4.60367s)
Wall-clock time (full program): 4.66624e+06us (= 4666.24ms, 4.66624s)
Satisfaction error: 0
Number of search iterations: 1875
Number of local moves: 787 (including on plateau: 311)
Number of local minimum: 137 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14085
Total number of local moves: 7613 (including on plateau: 3445)
Total number of local minimum: 823 (including on plateau: 260)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 470  77 773 748 235 271 445  14 595 671 825 233 815  73 760 324  36  67 137 842 738 309 764 800 158 840 286 149 846 214
 837 326 716 372  65 231 805 182  21 833 853 822 763  79 772 320 694  47 220 818 790  98 809 597 315 839 178  12  15  86
  84 126 379  82 322 238 826 812  81 810 484 702 835 359 713 154 750  59 168 782 775 827 580 799  83 559 197 110  74 745
 674  37 667  44 438   2 798 144 673 831 649 665 652  11  31  88  33 653  19 817 346 776 742 759 180 788 538  32 700 728
 664 100 771 194 433 432 802 792   6 741 414 859 813 306 794 130 378 495   8 743 735 676 714 192 104  49 177 109 725 159
 780 497  35  85 566   4 623 719 118 206 774  25 755  20 587  63 272 607 570 753 682 637 193 785 502 707 507 133 726 584
 591 270 141 739 576   3 371 754 105 581 787 646 677 660 723   9  18 391 183 803 698 752 762 553 107  80 246  97 586 606
 662  52 624 672  27   7 620 469  23 751 778  29 779 678  58 722 574 132 112 647 768 515 603 537 249 645 277 303 589 613
 704 585 669 701   1  10 636 693 405 617 658 724 734 103 594 686 150 212 140 593 732  55 522 486 244 602  87 215 548 409
 711 250 563 655 127 471 499 721 287  26 560 543 740 599 565 712  56 572 186 680  71 466 519 688 189 642 410 205 461 341
 512 601 535 625 568  17 685 668 573 619  22 143 552 513  42 318 579 198 608  57 630 447 532 717 208 611 527 257 547 604
 478 398 641 696 514 500 508 590 542 626 592  38 520 540 494 634  34 135   5 488 394 454 403 463 442 516 530 174 615 551
 657 564 510  93  16 348  28 533 536 457 816 472 422 596 575 373  69 684 468 588 541 426 675 558 416 399 487 342 554 312
 299 651 334 690 526 418 480 498 556 291 661 639 449 123 382 618 227 203 460 501 605 298 412 610 360 659 362 305 462 436
 420 389 485 423 458 456 392 529 546 627 459 475 411 631 446 364 402 511 467 482 505 453 311 539 247 518 525 222 473 349
 476 430 259 549 448 464 629 528 282 504 609 489 439 506 483 388 380 301 253 368 821 490 492 444 283 376 550 367 503 404
 336 440 230 481 338 351 545 434 407 496 401 317 419 395 424 578 325 406 347 493 258 304 509 443 358 491 806 857 889 437
 413 350 882 441 875 567 242 451 829 383 264 237 377 396 329 421 363 332 211 428 288 861 240 263 452 455 387 838 308 632
 474 852 375 429 319 544 345 621 278 479 316 400 328 327 435 370 896 477 210 268 337 876 417 384 807 219 397 644 361 330
 284 577 275 310 720 656 808 307 450 569 339 239 357 465 352 356 393 562 874 408 152 262 269 225 622 353 886 849 265 331
 871 683 213  94 860 731 252 386 295 687 204 234 243 191 385 343 600 648 765 266 801 224 302 289 640 381 663 872 175 217
 248 744 274 756 523 793 340 273 761 296 254 181 313 196 427 293 786 285 830 241 557 828 261 369 571 171 681 679 355 229
 245 139 692 281 344 666 727 900 131 162 200 374 321 188 151 333 534 709 699 155 207 276 868 390 873 297 633 864 279 877
 142 710 202 160 153 783 165 163 280 290 300 851 323 850 114 789 862 730 770 101 226 294 292 836 614 255 865 715 366 314
 169 891 796 897 232 841 173 164 867 431 251 335  89 823 148 820 766 729 650  76 209 145 228 172 524 156 697 863 117 256
 167 708 223 185 737 695  45  48 670 124 201 598  62 736 134 733 583 161 847 157  41 190 415 260 628 854 895 635 885 898
  51 199 166 749 612 824 113  96 848 147  39 195 176 843 880 746 866 555 858 120 216 521 236 116 757 703 561 365  78 879
 138 887 856 881 894 747 125 179 784  90 146 689  30 718 111 767 691 869 814 643  99  95 218  53 878 170  24 819  60  40
  70 890 108 354 705 654 267 804 797 102 531 517  75 758 795 638 616 893 855  13 187 115  91  66 834  61  64 706 899  50
 888  92 121 129 883 791 221  43 769  68 128 844  46 832 811 425 582 892 781 184 106 845 136 122 870 119  72 777  54 884

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.20518e+06us (= 4205.18ms, 4.20518s)
Wall-clock time (full program): 4.26857e+06us (= 4268.57ms, 4.26857s)
Satisfaction error: 0
Number of search iterations: 1657
Number of local moves: 927 (including on plateau: 304)
Number of local minimum: 97 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12170
Total number of local moves: 7674 (including on plateau: 3177)
Total number of local minimum: 706 (including on plateau: 265)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 506 517 761 164 122 877 563 752  86  76  39 767 665  70 896 850 886 144 692 588  28 100 898  78 775  27 836  26  41 685
 831  38 682 802 141 703 664 762  60 643  85  12 888  35 675 175 699 770  46 393 184  84 892 738 739  34  50 827  94 769
 837 618 834 370 885 652 518 813 154  98 567  62 656  16 843 218  93 765  52 700  32 110 124  64 861  92 786 747 138 810
 111 577 824 874 615 857 572 866 871  91 864  29 758  73 679 103  80 742 270 764 662 155 202 149  55 495 858  66  96 157
 133 895 236 101 554 884 620 756  37  95 115 219 882 170 849  67 865 880 174 719  48  65 128 106 796 887 632 199 535 868
 167 890 870 661 148 680 644 687  20 208 347 168 863 114 713 162 224 158 252 753  87 185 684  71 878 745 844 151 281 860
 159 241 806 492 207 781 526 183 171 139 708 160 724 152 859 248 187 720 140 862 194 189 212 889 254 707 740 816 853 196
 259 226 748 542 265 879 291 883 280 200 674 220 833 345 258 318 156 314 204 566 137 178 900 206 273 586 791 695 565 723
 260 192 275 428 321 629 271 242 854 426 721 785 768 235 302 250 304 229 263 697 309 672 179 340 344 560 749 716 899 295
 300 203 287 655 449 640 316 274 279 875 725 323 573 228 277 352 375 261 338 839 856 225 298 407 732 604 625 329 709 161
 283 808 636 881 301 521 249 251 515 569 891 267 541 306 351 231 331 255 278 490 269 405 361 324 307 754 610 325 897 308
 223 453 790 693 317 597 285 414 247 365 272 525 387 358 336 360 894 342 348 825 320 417 380 461 369 595 332 475 363 772
 343 423 297 598 319 478 385 294 398 311 384 349 524 382 422 312 459 562 441 523 419 893 454 383 353 468 505 846 635 355
 359 462 366 408 386 611 411 394 373 378 409 402 534 564 367 389 487 463 364 546 876 356 390 293 376 818 481 418 431 403
 444 433 507 368 339 474 350 445 533 337 466 397 529 379 371 470 484 472 425 501 413 458 448 420 421 795 513 457 430 436
 488 446 447 451 587 392 416 482 290 399 406 596 396 514 497  13 437 491 432 354 511 486 558 530 499 585 438 442 551 381
 502 555 553 460 136 322 215 471 538 606  47 450 500 539 602 580 401 489 424 214 429 527 571 568 493 305 357 510 631 520
 576 522 456 216 570 395 180 532 465 591 483 469 346 496 574 545 198 550 508 341 609 494 512 504 473  72 537 601 191 509
 410 589 464 195 622 276  82 594 638 561 503 639 670 590 559 452 552 391  10 296 439 477 612 498 556 230 268 479 335 528
 531 543 455 126 544  21  36 547 711 412  30 671  18 467 657 630 621 653 548 362 579 581 633 592 557 169 480 613 123 605
 476 146 642 262 485 116 142 593 583   5 694 608 404 434 607 637 599 654 623 119  11 617 649 443 582 289 243 658 678 516
 575 415  58  42 634 264 197 150 549 647 256 284  57 712 666 663  45 650 627  17 728 374 715 659 702 288 600 667 578 696
 698 182 131 244 614 233 771 211 677 616 217 714  59 673 624 584  49 718 660 112 651 626 107 729 701 245  77 603 299 690
 743 735 165 388  99 210  19 676 689 669 686 759 105 710 163 782 776 641 646  51 668 722 733   1 741 190 205 221 239  83
 766 327  89 227 731 282 726 536 811 744 292  81 121 750  23 777 691 132 688  31 645 734 760 746 117 334 377 177 628 172
 809 801 166 804   4 186 794 108 648 737 253 779 125 869  40  25 774 751 792 213 763 829  79 704   3 440 129 330 326 234
 787 134 193 400 778  24 798   7 313 817 619 799 120 847  75 805 730 113 814  33 683 783 736 784  53 237   2 540 315 176
   9 310   6 727 789 266 800 427 135 823 705 815 173 867  56 845  54  88 793 841 807 797 209 145 222 333 286 372 706 109
 826  61  14 755 681 118 822  97 717 820 238 328 143 780 130 830 832 102 812 246 303 788  22 848 240 803  74 201 821  63
 104 773 757 181 872 147 852  68 873 257 819 838 153 840  44 842 232  15 851 519 855 188  69 835  43 828  90   8 127 435

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.33304e+06us (= 3333.04ms, 3.33304s)
Wall-clock time (full program): 3.39623e+06us (= 3396.23ms, 3.39623s)
Satisfaction error: 0
Number of search iterations: 1114
Number of local moves: 841 (including on plateau: 305)
Number of local minimum: 35 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6972
Total number of local moves: 4602 (including on plateau: 1480)
Total number of local minimum: 289 (including on plateau: 106)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  52 148  31 818 830 517 349 240 869 247 104 845 744 204 868 260 438 530 850 713 338 892 749 126 291 229 452 312  73 396
  84 802 359 878 803  11 890  27 699 867  65 771 777  10 894  82  36 274 874 251 221 110 886 143 271 154   4 674 895 703
 179  26 808 829 753  13 842 848 791  56 139 835 606  68 801  24  72   2 218 730  47 826 383  94 385 793 724  37 766 820
 680  39   8  85 812  16 809 727 784 704 294 736 696  45 757 255 236  25 805 670  64 800 658  88  99  97 815 132 839 740
  41 183 694 799 555   7 172 722 796 836  79 794 279  40 774 166 213  30 853 314 135 775 823  38 488  19 776 772 691 651
 745  63 677 649  55 196 331 701 743 707 149 856 665 234 785 228  32  81 822 431 116 715 769 202 310 292 755 333 302 571
 719 160 739 689 725 636  12 510 628 735 685 611  92  71 819  69 147  17 549 300 222 732 579 399 641 215 669   6 410 729
 682 181 684 618 625 654 581   9 652 838 709 538  93 662 640  33 141  18 695 424 119 765  22 156  54 623 595 629 409 666
 587 342 621 686 608 577 337 643  48 605   1 767 306   3 660 129  34 533 741 700 307  50 637 678 109 588 655 140 659 764
 615 120 478 562 622 584 159 558 672  15 642 828 153 663 653 554 325 366 633 380 270 446 679 650 103 278 632  43 363 469
 485  20 607 692 631 590 142 482 539 543 182 656 252 433 644 531 500 567 634  78 317 559 648 646 101 254 583 508 192 499
 504 540 626 552 675 468 184 717 442 524 473  96 280 639 456 288 297 544  87 547 546 188 586 534 565 187 582 348 480 560
 537 551 556 450 464 613 466 448 476 536 532 441 461 645 617 490 328 597 518 576  14 535 445  23 453 113 497 133 471 529
 426 495 516 413 569 573 422 515 541  29 481 528 657 526 397 395 475 522   5 594 155 462 527 566 521 493 494 185 568 465
 414 520 545 460 356 398 458 408 361 505 382 362 434 502 402 489 455 506 580 403 432 415 427 479 563 525 509 319 405 501
 498 417 561 542 491 404 340 447 472 459 444 381 487 514 407 384 371 387 523 352 557 429 423 436 449 570 326 492 578 374
 393 419 412 347 486 258 451 346 364 418 572 344 710 681 420 324 507 367 440 697 702 496 373 638 421 512 313 519 303 282
 428 416 437 368 322 351 738 752 400 241 454 365 750 377 470 390 358 406 299 780 616 290 411 332 394 483 369 388 773 357
 232 327 360 386 287 751 676 585 354 295 378 296 706 231 391 435 770 463 865 866 759 457 316 339 355 336 283 443 308 265
 379 425 243 281 315 285 275 827 238 350 816 194 758 261 318 821 792 624 262 207 647 152 250 277 783 721 268 693 786 267
 372 688 370 272 376 309 635 273 244 870 209 345 893 795 201 389 604 256 439 673 598 320 138 227 748 564 193 593 620 301
 266 711 311 269 162 289 862 128 330 484 335 169 548 298 245 846 797 248 168 728 831 879 264 849 898 305 253 591 239 212
 334 630 249 230 235 375 610 900 343 467 341 131 574 198  90 889 825 875 511  86 807 259 857 276 897  49 321 353 603 200
 206 760 873 195 284 747 550 329 157 242 708 304 401 860 205 763 600 726 107 664 698 257 220 754 226 392 219 627 263 178
  70 705 237 712 125 881 612 124 293 123 871 225 810 746 146 614 714 811 214 174 756 203 233 858 171 788 246 817 136 100
 880 667 197 210 173 286 158 144 781 609 503 134 108 761 163 888 884 813 224 323 789  74 211 883 599 841  51 899 145 117
 863 734 217 191 151 837 720 177 105  76 787 186  95 782  89 779 596 683 180  28 716 762 167 778 589 847 189 170 223 798
 840 885 891 165  75 216 190  80 199 161 733 127  53 723  46 668 864 602 121 553 844 474  35 882 592 619 887 855  77  58
 854 690 164 106 118 814 430 718  83 112 575 513  67 737 115 601 208 790 122  98 833  91  57 687 671 824 834 661 876  66
 150 851  44  61 832 859 114 130 111 861 872 137  60 806  42 731 896 852 176 175  59 102 742 477 768 804  21 843  62 877

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.38543e+06us (= 4385.43ms, 4.38543s)
Wall-clock time (full program): 4.44844e+06us (= 4448.44ms, 4.44844s)
Satisfaction error: 0
Number of search iterations: 1793
Number of local moves: 877 (including on plateau: 406)
Number of local minimum: 112 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13142
Total number of local moves: 8024 (including on plateau: 3996)
Total number of local minimum: 756 (including on plateau: 271)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  28 657 850 794 727 712 892 812  72 577  16 110  88 167  96 807 656  36 151 764 847 338 204  73  99  93 834 822 303 890
 175 889 873 853 628 638 862 746 106  40  71  42  80 344  43 886 792  61  29 158 644 866 174 787  34 721  47 897 882 147
 103 845 817 788 855 133 671 192 150  95 153  78 806 820 302 842 745 109 205 840 650 797 704 256  86 496  74 670 114 119
  18 221 584 763 738 521 865  75 144 182 478  66 642 688 115 899 725 152  69 172 197 570 723 194 311  77 769 898 841 818
  81 837 680 349 407 702 549 795 139 259 456 193 176 622  68 875 162 178 218 830 468 636 894 220 148 718  97 766 123 869
  79 848 885 215 827 814 701 276 236 202 136 199 803 828 108 506 450 213 118 155 895 790 185 265 896 233 391 900 200 161
 292 641 576 774 719 164 740 298 229 196 731 141 299 676 189 515 619 389 253 870 849 692 833 269 112 190  92 762 138 267
  70 672 208 458 831 157 809 887 334 706 255 195 434 722 307 679 209 319 367 590 273 776 781 225 555 464 241 713 154 124
 132 571 863 581 800 884 379 140 483 270 810 343 860 838 264 852 297 353 280 243 246 449 356 188 322 252 228 603 173 455
 397 772 667 757 318 235 412 266 423 893 623 230 248 750 317 444 226 335 480 445 780 659 362 160 293 314 239 678 224 568
 387 376 410 469 290 408 504 760 308 390 783 361 793 789 470 432 207 263 357 381 363 857 372 543 330 284 272 606 289 461
 350 749 268 336 384 888 346 351 184 354 321 891 685 695 368 275 440 514 457 179 724 730 249 288 364 479 183 550 320 593
 438 394 360 433 532 560 778 170 492 206 732 462 430 522 341 556 541 396 405 274 465 700 279 481 234 231 699 448 574 382
 316 315 257 203 630 476 498 489 342 493 819 377 452 435 495 285 424 472 326 835 312 519 753 429 436 734 171 441 395 386
 569 443 490 567 348 375 477 416 529 536 575 484 327 278 474 431 561 281 324 399 539 442 598 345 426 439 446 451 542 403
 358 459 491 392 287 323 340 401 486 422 620 535 510 511 310 437 406 447 537 352 533 779 563 502 404 374 282 592 402 460
 425 383 295 497 513 645 471 332 242 359 454 488 210 427 499 538 415 540 428 524 482 548 661 597 378 411 614 369 530 240
 507 520 594 414 583 632 247 526 534 595 128 418 585 222 300 309 177 355 648 400 617 509 624 664 545 546 668  38 304 306
 516 517 551 505   9 662 260 572 785 612 142 159 121 169 635 674 573 487 365 413 463 120 544 485 626 554 494 294 643 565
 654 127  56 370 216 582 607 503 586 647  14 684 601  17 871 261 621 610 698  11 191  94 660 588 733 604 613 325 518 453
 726 337 500 596 693 557 329 751 566  25  23 599 296 168 618 467  90 528 631 578 373 122 580 552 633 180 705  52 739 501
 608 475 145 714 547  48 767  83  60 634 116 649  84 347 523 143 703 508 625 553 146 331 651 761 587 639 658 232 512 666
 589 251 559  30  85 219  64 398 616 527 591 825 711 339 305 640  62 686 653 735 675 250 796 756  26 579  22 271 609 646
 786 137 223 181 254  37 420 652 708 627 747 808 765 244 562  39  65 655 531 681 227 211 385  12 673 564 663 130 717 811
 844 245 135 525 104  87  50 737 854 165 380 805 754 129 881 163 777 744 826  44 694 113 100 758 277 615 877 117 683  32
 696 301 600   5   7 697  46  45 802 691 742 709 313 212 804  58  51 791 687 466 283 107   3 880 815   8 867 291 861 677
 816 125  49 665 829  63  24   6 637 773 409 741  59 201 768  53 728 784 690 669 198 102  89 878 720 813  15  13 839 759
 851 187 258 149  67 105  82 715 799 775 602 748 419 333 771 217  55 716 558  54  91 262   2 707 752 629 736 328 858 689
 832  35 238 101 156 770 214 755 823 388 729 782 166 417 843 134 864 710 856 824   4  20  19 611 821 473 682 237   1  10
 872 186  33  31 131 421 111 366 846 876 859 393 798 605 868  98 874 883 743  76 286 126 371  41 879 801 836  21  27  57

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.9933e+06us (= 4993.3ms, 4.9933s)
Wall-clock time (full program): 5.05727e+06us (= 5057.27ms, 5.05727s)
Satisfaction error: 0
Number of search iterations: 2200
Number of local moves: 1232 (including on plateau: 639)
Number of local minimum: 131 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 15323
Total number of local moves: 7721 (including on plateau: 3378)
Total number of local minimum: 1073 (including on plateau: 266)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 759 837 321 125 813 776 866  96  32 379 853 403 150 103 807 328 353 820  17  38 335 773 132 876  42 877 797  25 761  21
 854   2  22  64 737 110  14 800 726 334 741 257   4 136 792 177  80  97 342 838 857  71  49 844 753 829 735 771 700 779
 354 387  20  83 832 408 775 695 872 666 847 358 765 140 789 170 794 149  60 843 678 481  84 277 117 858 152  19 115 727
 291 262  33   8 729 713 780 682 698 204 777  98  23 108 722 269   9 825 263 842 567 119 764 716 105 667 734 701  16 790
  34  46 210 471  45 846 751 810 732 757 730 238 112  53 783 225  18 293 610 683 715 662  91 818  36 265 714 268 659 840
 264 401  88 375 407 618 845 805 772 405 673  35 756 100 750 104  51 706 229 642 755 719 121 689   3 724 113 573   6 786
 686 425  58 515 668 280 758 859 796 391 804  54 664  13 766 203 742 617 484 691 570  43  81  99  59 703 153 630 134 569
 207 636 221 276 721 192 809   5 513 690 747  41 745 215 564   1 799 499   7 580 743 538 278 633 672 762  56 644  82 639
  39 338 687 337 562 329 593 711  11 619 589 255 605 155 523  44 647 212  10 611 718 127 669 602 709 674 646 688 167 638
 603 147 576  72 544  90 550 598 744  28 533  15 625 587 696  79 372 725 191 613  12 540 382 607 736 444 649 628 584 545
 369 166 475 266 565 348 671 615 507 697 520  63 620 517 510 511 643 574 708  48 575 506 640 320 608  24 172 521 178 578
 139 146 559 216 552 557 595 622 599 459 577 253 434 447 623 486 588 393  29 445 571 355 494 657 553 665 621 476 347  57
 479 261 500 241 677 616 592 483 547 370 349 185 111 493 428 519 653 516 270 430 420 530 123 446 541 572 658 460 648 397
 362 440 635 367 606  31 525 583 365 388 331 398 546 346 426 501 489 456 594 380 406 275 549 626 498 452 535 399 556 450
 413 502 585 360 422 661 106 482 612 487 601 318 373 560 504 418 332 416 590 363 480  37 597 383 537 467 368 508 579 454
 435 448 384 488 433 554 522 376 451 495 518 634 421 490 466 414 542 464 357 468 591 336 390 412 469 463 437 604 423  30
 395 819 473 782 410 285 396 529 431 283 485 449 310 304 359 377 536 609 404 385 442 828 402 491 374 457 427 137 462 474
 327 663 496 524 311 458 305 441 497 286 330 822 861 432 254 624 233 656 409 455 438 774 281 415 352 443 345 299 477 307
 768 728 424 748 492 848 319 163 309 823 600 864 169 341 417 314 453 340 685 322 306 325 439 333 227 389 248 326 478 317
 381 717 378 543 411 791 436 260 324 878 312 551 394 429 472 287 366 267 539 862 308 296 769 301 505 226 527 247 503 235
 803 670 224 808 231 702 364 271 343 884 211 801 339 566 323 851 273 881 251 184 873 582 217 294 230 272 219 295 237 316
 739 704 895 660 202 655 371 240 897 833  50 806 194 787 236 733 234 534 811 250 107 760 239 356 288 199 157 130 220 228
 680 561 830 629 249 218 138 874 174 596 297 781 171 826 258 731 302 284 871 246 173 386 531 223 303 201 197 175 710 900
 746 627 300 645 245 563 875 208 124 165  70 631 350 831 243 870 313 298 849 154 180 181 788 886 189 162 824 131 752 315
 802 568 290 581 161 894  40 282 145  66 292 785 868 815 361 676 232 198 856 158 548 190 898  67 778 206 882 160 614 102
 705 344 679 712 274  78 256 129  61 214 188 675 888 740 122 770 784 164 289  73 244 532 392 159 867 528 812 892 749 195
 222 860 891 763 148 526  27  65 555  75 109 855 176 835  87 865 259 883 558 186 196 738 767 101 817 200 465 141 893 252
 419 242 896 183 834  94  95 720  89 135 187 650 795 707  52 632 694 209 754 723 351 850 793 114 470  93 144 899 509 182
  47 400 684 852 118 205  86  85 128 816 126 654 156 641  62 637 839 279 827 869 213  74 692 693 841 514  76 879 142 880
 193 168 681 821 116  69  55  26 461  92  68 586 890 798 120 699 885 151 651 133 143 887 863  77 836 179 652 889 814 512

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.54399e+06us (= 4543.99ms, 4.54399s)
Wall-clock time (full program): 4.60709e+06us (= 4607.09ms, 4.60709s)
Satisfaction error: 0
Number of search iterations: 1806
Number of local moves: 1129 (including on plateau: 547)
Number of local minimum: 99 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13938
Total number of local moves: 9417 (including on plateau: 5108)
Total number of local minimum: 642 (including on plateau: 386)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 307 798  42 148  38 891 836 771 183  24 321 233 250 367 398 867 820 223 875 847 418  41 214 755 729  27 752 740 132 468
 379 750  26 345 236 830  48 114 170 834 381 224  44 304 734 810 707 739 860 199 670 213 272 837  11   5 749 813 893 318
 265  40 865 133  45  19 819 879 126 815 803 356 212 215 869 678 716 700 795 746 636 110  86 852  14 782  10 794  83  52
 168 872 844   6  81 883 726 627  61 723   4 274 232 337 677 828 730 479 408 838 651  77 177 599 814 278   1 876  46 198
 270 833 642 452   8 829 647 765 722 625 816  80 839   2 742   3 724  17 130 658 339 205 145 848 124 127 743 806 180 194
 112 600 566 717  91 703  29 822 315 264  12 249 122 253 680 825 725 753 665 668  22 119 153 850 496 178 701 793 440 592
 111 702 812 117 100  88 764 638  75 880 208  33  16  74 593 618 870  94 683 630 602 206 172 695 681 736 719 741 186 671
 255 511 727  93 197 569 692 525 195 864 217 404 196  69 706 669 688 576 643 673 211 220 176 709 697 645 584  35 661 108
 484 619 705 109 515 622 574 493  79 663 497 338 142  56 694 603 601 631 589 712  55 200 329 704 614 389 715 666  96  21
 494 527 522 388 653 656 784 590 188  99 399  15 370   9 469 783 786  62 868 699 433 564 161 561 541  54 646 560 595  39
  23 690 635 164 623 442 578 634 674 457 209 352 478 158 514 544 510 454 430 247  43 549 228 756 373 528 762 624 684 152
  97 548 676 129 644 400 535 508 309 664 116 300 530 575 598 547 565  30  36 444 596 586 456 552 443 640 693 721 557  20
  53 572 710 648 498 567 473 588 570 675 181 144 766 297 503 423 420   7 551 523 275 616 290 480 360 506 507 403 260 649
 448 520 446 336 445 358 458 655 459 500  13 412 471 467 594 521 463 219 319 393 483 424 487 555 447 536 559 501 517 509
 482 495 502 526 491 486 485 504 429 343 462 436 455 470 364 187 407 317 475 583 450 505 426 465 320 620 341 422 579 488
 562 368 402 499 477 369 512 556 314 490 587 415 428 417 849 395 327 451 377 453 449 383 546 376 439 571 396 481 340 286
 538 441 434 363 268 296 316 633 392 378 731 533 281 615 577 529 427 534 405 348 748 350 785 391 243 334 397 568 387 273
 330 382 305 735 540 355 276 581 349 165 800 406 687 394 401 437 298 787 672 409 768 328 375 291 516 421 303 333 332 539
 797 374 518 745 323 235 513 432 288 435 851 489 626 414 474 492 460 413 366 438 563 691 611 201 419 182 162 344 287 372
 821  68 604 728 461 294 476 324 310 226 607 652  87 252 312 285 302 351 365 863 775 277 573 237 843 361 431 311 621 698
 610 371 230 789 359 331 218 166 751 799 259 689 385 887 322 204 289 543 641 306 896 650 380 256 280 257 174 353 267 853
 386 411 308 791 313 241 416 269 606 282 811 871 390 770 245 295 210 861 425 325 899 202 632 357 335 779 261 239 284 301
 886 244 696 747 796 271 263 279 667 251 873 759 711 841 354 227 248 410 384 553 131 657 613 293 193 190 242  47 225 464
 856 216  65 292 845 128 466 106 686 266 805 537 720 888 125 221 326 238 246 120 777 774 802 139 254 858  64 107 874 714
 628 222 115 149 708  85 299 347 773 531 832 807 840 855 147 135 362 738 234 192 258 660 605 189 591 262 346 159 761 685
 580 283 173 780 472 558 154 229 827  76 532 890 790 617  57 171  98 545  34 150  60 884 898 143 859 163 878 105 776 733
 817  32  59 524 778 140 121  92 629 804 184 662 137 818 123 156  66 342 760 157  63 637 679  82 826 609 895 737 842 744
 772  50 831 554 835 103 659 146 885 231 240 808 713 732  58 134 207 542 118 104 612 767 757  78  89 823 155  49 824 639
 882 881  18 854 894 900 175 101 801  67 585 597 809 754 151  31 138 877  90 167 113 763 718 191  72 792 169  51  28 846
 102  95  37 654 781 866 203 141 682  84 179 550 788 608 185 897  25 582  71  70 519 857 769  73 892 862 160 136 758 889

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.11793e+06us (= 5117.93ms, 5.11793s)
Wall-clock time (full program): 5.18093e+06us (= 5180.93ms, 5.18093s)
Satisfaction error: 0
Number of search iterations: 2288
Number of local moves: 1055 (including on plateau: 563)
Number of local minimum: 162 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 16909
Total number of local moves: 9003 (including on plateau: 5109)
Total number of local minimum: 1007 (including on plateau: 344)
Total number of resets: 5
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 681 773 110 136 703 762  61  89 105 864  59 652 214 711 151  91 524 666 889 737 560  67 861  76 899 806 828  77  68 295
 141  32 374 147 710 796  84 894  38 835 189 598 612 883 847 226 381 198 898  78 606  74  29 114 881 863 716 211 879 181
  71 733  36 168 886 754 104 774 132 850 892 870 191 702 744  58 170 161 891 470 566 163 853  97 814 277 197 607 119 165
 127 157 305 195 253 822 259 869 301 843 164 749 866 769 893  50 552 108 761  82 264 686 215 611 757 793 135 267  60 602
  49 660 236 777 811 545 158 764  46 718 593 849 896 695 230 221 821 249 172 122 857 475 183 118 694 832 224 175 176 169
 206 279 153 203 208 888 715  90 234 642 884 601 591 868 785 336 600 479 818 128 380 145 116 537 314 414 704 265  96 836
 102 126 133 222 363 858 882 272 532 481 140 839 238 298 875 106 180 312 865 722 830 860 248 829 243 851 359  42  88 619
 440 194 280 246 714 231 155 900 202 401 167 794 337 251 795 887 842 425 746 171 684 144 874 250 294 617 228 245 309 692
 340 345 302 260 742 895 286 159 890 320 362 820 348 291 125 137 810 129 731 343 834 789 358 328 263 335 782 292 316 583
 166 154 293 273 346 332 239 304 190 783 364 808 897 322 296 526 856 419 397 192 873 271 480 233 614 498 787 403 319 880
 262 284 372 325 310 817 283 426  83 559 877 538 308 398 261 268 644 729 187 862 823 297 599 131 318 753 672 278 256 595
 285 356 244 437 344 597 152 216 351 845 539 669 321 327 258 448 867 723 653 177 393 387 394 329 422 369 689 200 719 804
 186 352 341 315 462 663 300 355 350 454 446 578 354 441 404 179 581 720 472 242 339 366 649 420 791 701 786 411 447 410
 303 392 469 389 367 287 546 146 402 570 520 709 421 464 533 648 417 395 361 384 650 330 386 433 413 491 415 517 502 655
 457 423 503 383 489 333 368 365 683 763 377 438 399 282 323 431 460 120 509 724 360 458 371 563 759 461 375 531 407 400
 605 434 478 592 453 436 510 290 486 504 391 416 385 658 548 427 276 112 550 673 390 370 515 435 535 474 193 625 289 465
 456 665 378 629 138 667 543 432 430 544  30 495 452 522 444 554 487 466 519 623 405   8 373 439 455 494 496 450 379 542
 615 412 449 643 508 468 678 622 564 274 536 311  12 506 476 493 596  81 488 492 616 561 111 485 281 482 500 573 584  98
 585 620 568 527 471 205 626 406 589 516 429   4 661 497 577 490  86 514 639 541 484   6 247 588 505 632 424 483 590   5
 463 586 647 549  48 288 571 624 765 428 451 334 477 768 562 557  27 727 459   1 156 685 682 627  79 237 349 574 707  87
 609 530 252 638 556 528 512 675 553 107 501  44 636 565 594 670 266 199 529  62  20 738 567 579 507 241 521 513 618 185
 576 668 555 610 662  45 656 797 518 162 826 213 767 646 467 534 143 443 408  64 115  16 525 523 473  72 299 603 547 582
 679 572 558 732 227  66 741  52 575 331 705  63  94 699  99 676 270 698  31 848 700 569 604 792 587  95 442 254 671  85
 674 697 776 706 788  56  15 630 680 210 418 142 124 708 693 540 511 232 150 551 173 734 739  17 306 338 225 755 745 182
 640 688 633 799 269  13 758 637 635 188 677 229 760  10 687 712  39 396  19 841  65 255 409 621  18 657  37 813 735 275
 780 784 748 691   9 223 725 654 651 109 781  75 101  80  55 747 209 713  51 696 324 750 608  57 580 184 347 717 690 376
 721 805 798 130 631 123 752 816 634  53 317  11 807  92 160 664 121 659  70 307 445 819 728 825 313 357  14  93 751 499
 790 766 885  69 218 257 878  40 840  73  23 326 382  34 217 149 613 800 117 740 220 859 756 812 178  24 801 838  35 775
 770   3 837 872 726 353 824  43 855  41  54 240 219   7 212 846 388 771  22 833 148 854   2 831 196  28 342 827 641 730
 736  25 802 852 103 207 134 174 201  47 803 100 645  21 204 844 778 871 113 809 235 779  33 815  26 139 628 876 772 743

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.1688e+06us (= 3168.8ms, 3.1688s)
Wall-clock time (full program): 3.23249e+06us (= 3232.49ms, 3.23249s)
Satisfaction error: 0
Number of search iterations: 993
Number of local moves: 901 (including on plateau: 391)
Number of local minimum: 15 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6098
Total number of local moves: 5064 (including on plateau: 1986)
Total number of local minimum: 126 (including on plateau: 146)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  16 882 866 585 102  41 740 823  70 635  36 872  29 819  53 855 628 233  82 612  54 596  68 673  22 850 721 880 658  14
  45 800 814 764 127   7 839 618   8 854  55 675  71  35 539 900 281  99  93  75 669 833  90 132 897 896 697 187 881 534
 116 843 732 610  50 626 167 661  38 615  37 875 146 822 623  89 751 118 117  61  78 899 885 712 175 126 862 884 655 142
 104 377  47 871  56 131  81 804 848 877  95 812  98 890 752  39 714  92 177 155  40 787 681 805  42 105 717 894 827 597
 259 867 759 629 861 107 128 548 106 799 188 824 119 818 603 141 709 157 272 143 164 835 115 593 263 883 656 220 613 136
  96 700 134 665 135 889 178 773 206 695 223 647 121 159 869 232 863 307 301 207 802 761 170 794  27 195 865 293 621 587
 197 864 202 633 154 250 886 663 302 694 204 829 198 192 789 255 842 604 152 161 231 898 217 265 172 201 868 208 707 677
 336 851 221 693 211 210 236 844 782 830 209 479 269 182 245 228 699 559 248 212 347 713 892 611 234 196 244 334 755 645
 756 772 218 719 859 252 270 627 841 296 356 417 313 173 251 353 319 531 702 227 275 435 305 832 189 165 268 282 738 774
 151 641 216 654 287 203 325 879 346 340 312 396 311 425 817 292 873 614 299 162 309 777 413 878 285 238 290 284 736 762
 289 720 219 837 891 300 235 344 349 687 495 385 373 391 390 367 870 446 258 343 274 529 278 363 317 326 874 341 318 706
 361 556 857 608 840 545 240 323 364 294 314 678 327 266 332 378 380 662 383 421 339 533 430 337 398 494 431 320 350 754
 298 550 887 359 895 328 355 405 345 288 371 434 374 388 291 451 375 893 389 308 427 486 329 401 428 322 888 365 429 456
 432 609 450 617 183 400 689 404 449 836 394 452 412 310 462 526 352 354 441 330 342 416 372 335 387 460 403 488 853 357
 442 466 471 498 454 406 358 436 338 410 499 457 616 468 409 279 419 477 392 459 386 522 445 478 472 480 376 543 484 575
 303 625 422 381 395 399 368 505 420 527 397 470 467 411 433 491 483 437 351 423 469 448 607 492 408 453 439 382 536 573
 443 366 519 513 537 547 493 490 393 518 384 502 554 572 500 455  24 113 553 598 551 277 530 515 475 418 482 581 568  44
 487 215 565 528 476 402 485 544 557 438 461 253 463 508 510 555 474 114 506 516 473 213 570 562 560 440 517 535 315 273
 444 362 465 103 503  87 657 501 509 481 624 243 594 561 605 507 496  11 667 602 643 168 360 541 558 564 524 652 458  25
 546   1 650 331 549 637 552 316 504 577 685 606 578 591  30 542 576 138 571  18 586 224 569 584 540 653 514 600 181  66
 703 283 672   6 692 636 538  48 579 222 668 426 640 511 639 649 589 193 590 705  13 139 521 123 595 622 230 659 101 523
 648 280 630  91 644 682 748  69 379 646 563 144 520 566  77 726 567 414 489 619 731 304 525 122 686 601  60 670  72 242
 671  21 660 239 715 730 676  15 582  58 634 631 583 749 158 684   4 574 666 722 739 163  10  31 765 704  62 708 264 297
 750  34 632 254 763 701  19 180 723  49 638 174 532 758  94 760 124 734 246 688 599 200 620 651 664 725  51 679 226 247
 781 241 733 267 369 711 147 185 680 150 811 214 798  59 792 790 205 745 696 801 125 156 820  67  33 743 137 348 145 766
 780   3 333  20 415 770 690 256 229 176 784  88 735 133  74 810  83 744 642 771 728  23 768 747 710 580  84 783 149 407
 716   5  63 592 370 793 757 120 727 186 691 110 815 718 324  46  65 753 828 729 796 130 858 129 769 190 306  52 179 698
 786 148  12 184 424 109  79 276 795 271 742  85 813 108 856 821  76 724 834 825 845 741 194 257 852  26 464 166 171 831
 683 321  64 191 447 809 788  80 797   9 785 100 808 153 261  32 588 826 767 847 674 140 776 286 846  43 225 160 497 512
 876 112   2  73 111 807 791 778 249  57 860 237 838 779 737 262  86 849 803 775 806 169  97 199 746 816 260  17  28 295

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.82238e+06us (= 3822.38ms, 3.82238s)
Wall-clock time (full program): 3.88532e+06us (= 3885.32ms, 3.88532s)
Satisfaction error: 0
Number of search iterations: 1330
Number of local moves: 1011 (including on plateau: 393)
Number of local minimum: 48 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9988
Total number of local moves: 7440 (including on plateau: 3100)
Total number of local minimum: 356 (including on plateau: 229)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  32  63 850   6 817 153 315 788 239 395 154 132 252 734 149 785 841  65 797 253 843 526 241 872 864 836 713 778  19   3
 116 551 845 853 815  18 284 847 349 108  64 110 156  78 165 379   2   9 793 731 854 825 794 839 282 813  89 842  56 848
 233  50  34 806 746  22 317 831 460 855 337 211 224 814  51 761  75 101 798 472  69 700 684 830 747 795 389 139 131 833
 332  82  28   1 214 816 680 663 231 437 221 208 184 766 133 102 787  62 725 111 803 820 811 629 782 804 729 291 369 694
 356 183 844 652 714 181  14 314  53 238  41 346 309 769  77 775 818  44 609 319 802 717 807 726 681   8 498 199 657 764
  67  12 698 687 120  10 763  83 163 390   7 113  29 789 773 619 728 598 343 716 576 772 819 709   4 677  25 633 760 832
 192 277 573 672 216 660 109 701 147 364 106  38  15 710 805 501 400 774 553 359 786 557 581  55 615 685 114 808 563 579
 188 191 670 727 622 801 707  20  23 641 245  60 228  87 724 732 485 754  17 678 608 167  13 723 738 749 654 527  70 666
 134 251 644 720 585 631 618 126 127 689 278  37 686 588 705 648 342 624 762 406 439  26 636 596 135 702 262 265 142 711
 611 290 682 597 621 703  54 276  27  47 300 655 744 589 658 569  40 603  21 104 441 583 543 547 688 590 572 162 571 627
 632 295 606 692 112 567 605  92 354 643  57 537 613 574 383 560 272 288 696 676 616 612 630 508 591 637  16  94 117 440
 455 582 592 599 559 674 143 536 417 456 271 298 351 361 600 662 128 399 392 614  35 550 522 555 459 659 620 496 497  33
 562  24 401 505 642 451 442 565 410 524 335 523 465 575   5 484 198 647 610 645 490 311 506 519 510 511 544  58 604 449
 486 502 380 434 578 530 445 476 373 491 218 535 482 558 479 529 303 531 489 328 515 330 435 528 464 517  95 398 525 561
 580 457 415 374 518 488 234 422 418 516 363 365 336 504 540 549 367 404 381 534 304 653 542 650 467 391 215 477 499 552
 447 521 545 429 461 564 500 470 420 481 570 397 194 446 480 594 388 471 474 541 362 475 495 387 396 463 483 355 331 375
 308 444 407 394 586 425 453 402 469 759 507 634 403 533 433 424 414 509 316 885 213 494 250 458 503 432 320 393 321 426
 350 347 287 430 419 409 421 431 492 745 466 487 462 344 513 382 601 661 548 750 617 473 514 312 286 305 226 520 339 378
 450 656 352 370 237 285 322 538 673 748 675 699 823 436 452 244 566 261 587 263 341 366 296 297 428 325 625 593 249 358
 310 334 377 468 812 326 821 372 827 897 875 416 324 257 185 222 756 376 254 733 327 357 225 240 371 386 851 273 230 313
 280 353 293 173 205 275 384 329 423 695 623 846 385 247 200 318 810 255 307 809 858 739 294 268 187 264 765 840 757 333
 826 595 270 124 799 279 784 340 626 235 413 227 219 859 348 292 640 338 873 243 368 849 138 323 256 161 708 768 412 202
 852 638 195 274 160 345 220 448 715 783 874 863 791 209 169 283 512 405 269 266 546 166 879 121 259 140 871 454 651 157
 722 742 223 289 408 197 860 539 837 151 896 887 892 204 242 164 306 146 207 771 178 236  90 493 577 302 690 427 671 168
 770 706 867 877 136 886 607 667 894 196 712 246 193 118 189 792 411 776  76 781 267 248 176 232 884  31 159 258 170 190
 777 876 144 155 201 203 679 639 800 171 665 881 891 260 829 212 299 838 730 123 115  84 704  66 172 301 129 898 532 141
 862 893 175 883 145 870 186  46 751  99 869 735 635 174 888  71 889 865  88  79  98  49 602  74 899  59 443  97 895  96
 693 834 890 217 478 125 721 755 438 122 835 556 752 179 796  11 857 206 697 152 210 150 182 753 137 105 281 584 719  80
 856 900  48  39 229 878 158 718 691  85 758 736 649 646 880 779 177 683  30 130 741  52  45  86  91 100 568 148 790 824
  36 866 180  68 360 743 669  81 668 554 780 737 828 107 664  72 103 822  73  43  93 628  61 119  42 767 861 740 868 882

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.97203e+06us (= 3972.03ms, 3.97203s)
Wall-clock time (full program): 4.03505e+06us (= 4035.05ms, 4.03505s)
Satisfaction error: 0
Number of search iterations: 1436
Number of local moves: 820 (including on plateau: 301)
Number of local minimum: 81 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10912
Total number of local moves: 7754 (including on plateau: 3590)
Total number of local minimum: 503 (including on plateau: 255)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 702 182 474 830  32 484 163 569 171 777  97 537 634  42 483  70 846 460 139  45 740  18 859 891 761 268  17 856 723 645
 877 894 725 633  24 844  30 772  12 888 750 895  63 305 707 304 873 274  86 120 741  31 235 241 482 150  39 618 876  26
 183 156 640 477  29 849  48 831 766 643 731 606 276  14 649 261 860  34 533 229 893 828 884  77 321 134 121 478 716 248
  68 186 746 715 114 677 129 842 281 883  65 587  99 132 656 118 200 177  80 396 748  74 625 816 882 879 676 298 499 867
  52  47 764 840 122 871 112 818 518 845 221 742 208  44 874 595 885 143 215  43 852  73 881 291 355 551  20 622 127 784
 249 126 673 843 335 638  51 722 706 798 786 680 154  98 896 220 364 218 164 153 789 148 821 175 807 170  96 826 556 253
 192 333 691 753 359 561 419 734 498 349 598 713 516 280 815 246 201 179 138 190 771 392 889 133 776 330 188 853 196 222
 106 123 696 232 180 140 320 897 674 383 858 727 279 271 875 787 861 278 204 282 781 136 729 152 808 227 300 256 836 117
 212 277 866 647 259 670 295 603 890 207  64 621 238 203 785 739 689 213 144 390 749 193 352 211 692 124 245 804 801 332
 254 288 240 328 377 712 299 663 733 899 385 705 266 425 878 306 202 244 813 301 131 210 338 318 457 275 833 800 751  84
 350 292 414 841 358 501 370 616 234 161 837 599 158 424 585 174 379 411 500 892 236 688 415 880 586 296 286 387 263 382
 422 366 209 339 376 851 397 829 242 303 404 898 260 189 679 205 780 258 554 552 344 452 525 384 510 346 308 790 272 471
 418 401 441 290 302 512 462 473 311 324 247 496 806 391 434 900 348 353 314 374 342 671 367 486 570 475 469 340 743 455
 283 491 440 470 433 732 423 297 380 329 313 559 400 534 393 530 503 584 560 566 128 270 451 435 402 381 865 450 519 394
 428 449 420 322 407 555 388 571 347 431 453 408 485 547 409 600 375 430 336 543 410 507 514 463 476 447 442 529 508 315
 421 443 331 617 406 341 545 464 337 504 135 334 597 472 426 354 562 446 650 454 513 531 524 294 468 528 459 662 239 458
 403 361 544  88 685 395 536 343 103 589 582 312 521 549 497 568 169 465 488 659 461 448 546 506 405 217 417 466 665 527
 520 541 608 630 572 439 225 289 438 578 399 357  37 389 369 573 456  35 637 505 611 755 432 648 265 362 479 176 658 532
 557 522 601 230 574 373 704 323 173 398 699 429 495 564  82  76 481 538  72 523 540 558 639 610 119 626 588 747 187 487
 490 515 365 145 672 351 493 237 327 494  23 363 701 615 467 728 427 605 264  25 223 652 660 669 107 623 762 436 550 526
 641 548  85 102 579 252 489 149 782  93 613 553 581 580  54 576 624 502 356 760 619 444 181 511 100 653 636 632 216 604
 360 726 593 646 627 371 594 250  19 517 678 199 666 737  36 717 693 492 631  87  95 115 412 590 287 847 703 197  21 609
 657 681 162 228 535 185 607 437 682 697  56 509 756 416 206  91 754 698 563 765 166 718   8 686 233 684 583 184 565   3
 810 796 130  89 838 172 629 111 325 108  62 307 243 709 316 596 105 612 567 745 770 683 591 285  75 690 655  83 694 719
 668 793  50 224 664 445 862 125 345 744 721  10 675 651 319  60  66 644 695 542 251 791 142 708 191 642 792   9 109 577
 811 575  57 219 769 194 869  71 539 113 788  46 832 758  79 803 386 857 635 661 255 809   4 368  61  28 795 257 262 614
 887 814 620 710 592 155 654 110 779  53 269 151 799 886 226 774 160 775 763 317 178  33 157 700 824 767   7 273  27  55
 714 864 825 284 738  11 848   6 783  41  90  58 834 628 104 372 116 868 805 759 147 711  81  59 309 854 735   5 146 720
 778   1  38 602 687 165 802 195 827  40 736  22 835 823 167 378 137 850 812 817  16 757 159 198 413  78 768 267 480 667
   2 724  67 141 870  69 752 168 293 326 855  92 101 839  49 794  13 872 797 820  15 819  94 730 773 863 231 214 310 822

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.74913e+06us (= 3749.13ms, 3.74913s)
Wall-clock time (full program): 3.81185e+06us (= 3811.85ms, 3.81185s)
Satisfaction error: 0
Number of search iterations: 1305
Number of local moves: 686 (including on plateau: 250)
Number of local minimum: 79 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9527
Total number of local moves: 6429 (including on plateau: 2522)
Total number of local minimum: 427 (including on plateau: 198)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 227 393 475 859 867  26 714   7 223 172 721 244 870 719 116 863 855 246 777  60  90 822 786 404 135   1  77 831 864  71
  21  16 380 780 746 206 298 840  44  54 861 821 804 623 751 868 848 278 471 779 250 754 847 119 248 209  28 304  10 257
 114 256 684 834 816  98 748 108  63 157 398 809 862 220  32 796 872 858 620 775 176 781 539 578  42  39  38 266 710 226
 818  88  65  30 802 128 702 801 120 232 506 123 812  70 669 823 292 747 565 767   2 733 843 384  85  66  99 736 803 604
   5 264  43 838  12 756 765 799  61  89 717  20 815 488 329 750 280 133 810  56 275 534 835 252 249 819 865 100 833 723
 728 350 197 734 610 737 764 776 124   9 636  47 649   8  72 758 712  45 670 658 569 269 602 201 695  37 774 117 784 183
 365 167 313 693 741 685   4 699 149 204 673 762 453  27  81 664 194 581 634 671 572 635 689   3  96 657 668 104 633 698
 525  57 163 768 718 726 518  31 235  78 679 680 564 159 624 631 617 735 102 683 144 594  59 583  18 663 697 705 138 621
 648  82 324 661 608 615 826 753 434 140 773 755 691 225  51 641 203 170 137 600 687 158 824 103 253 577 238 672 580  86
 720 150 267  55 715 507 557 675 247 441 740   6 749 185 481 682 760 744 188 458 107 553 854 190 180 732 540 463 516  53
 592  24 126 593 477 618 666 556 296 311  14 601 571 622 638 551  58 514 402  46 674 591 716 129 224 501 555 613 630 606
 378 479 219 496 473 595 532 469 301 333 650 122 491 519 629 772 530 370  79 566 483 647  33 486  52 667 632 597 372 543
 614 505 548 400 520 598 423 484 418 357 576 521 111 425 504 554 599 221 307 422 261 574 234 563 168 536 354 547 586 585
 559 793 466 364 410 558 627 611 361 353  95 341 561 321 265 459 588 113 560 494 517 396 445 596 535 412 174 468 643 430
 495 492 371 355 472 421 513 544 500 413 405 395 327 460 390 403 335 546 346 470 482 392 394 499 509 490 512 408 652 524
 570 415 446 377 537 480 420 542 407 271 609 456 541 582 303 363 316 526 568 549 401  13 397 433 510 493 498 376 587 529
 450 383 886 331 339 448 268 503 523 642 179 431 326 814 783 308 348 306 788 452 457 382 338 320 562 409 369 356 347 467
 368 770 575 437 366 454 427 315 462 579 487 352 709 461 317 291 160 820 696 367 330 447 416 628 417 286 373 332 511 362
 414 846 358 381 386 210 435 385 528 545 432 429 312 845 337 297 795 273 769 387 388 424 236 285 817 439 478 443 318 323
 181 474 340 538 213 612 162 349 531 659 794 660 288 379 465 300 844 444 639 727 336 322 255 752 442 399 290 328 343 449
 189 584 899 139 214 375 277 148 651 681 127 464 309 700 411 274 550 885 426 233 897 360 455 731 656 217 299 177 374 813
 216 806 344 310 438 276 279 334 890 837 212 827 359 662 428 229 281 151 655 314 342 808 110 745 653 125 287 589 178 830
 165 763 884 184 293 156 325 389 485 711 200 294 515 191 590 164 644 182 351 866 145 161 880 778 782 616 391 889 263 258
 205 640 626 218  87 262 892 284 678 761 302 419 295 573 771 272 891 251 607  92 146 260 282 881 676 173 832 155 199 785
 811 798 665  73 131 856 283 154 694 857  62 222 305 237 791 243 270 877 708 101 852 245 240 842 637 839 106 192 105 319
 228 527 552 198 497 207  36 202 825 828 345 876 121 841 195  50  68 143 171 738 874 242 688 533 677 451 882 704  19 797
 502 605 254 118  35 805 211  76 853 645  49 790  25 646 900 142 406 860  67 196 887 175  91 707 800 883 522 141 894 230
 725 186 896 742 241 187 109 724 851 850 440 134  29  84 169  93 147 508 153 567 625 152 215 692 789 792 829 873  94 619
 895 836 436 879  22  64  80 888 690 703 759 208  34 686 722  15  11 231  83 289 807 898 115  23 730 112 869 893 489  48
 787 766 713 130 729 849 654  69 871 603  74 706  17 743 701 259  41 757 166 132 739 193  97  75 878 875 239 136  40 476

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.03697e+06us (= 4036.97ms, 4.03697s)
Wall-clock time (full program): 4.09976e+06us (= 4099.76ms, 4.09976s)
Satisfaction error: 0
Number of search iterations: 1503
Number of local moves: 869 (including on plateau: 364)
Number of local minimum: 88 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11273
Total number of local moves: 7386 (including on plateau: 3491)
Total number of local minimum: 529 (including on plateau: 223)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 890 121  89 134 878 812  61 763  84 795  57 751 132   2 827 126 777 716 839 708 814 576  53 841 171  79  22  59 798 540
  18 897  88 815 561 694  11 180 879 828  35 829 690 899 169  71 104 871  98  10 754 114 895 770  77 767  73 462 161 695
  87 166  67 557 873 785  42 498 715 682 111 602 883  69 547 565  97 880  91  63 614 118 891 894  76 773 232  29 801 707
  47 529 106 189 291  85 727 210 553 581  43 172 147 748 803 822 233 723  92 219 859 855 130 729 164 745 750 495 672 796
 108 373 832 666 779 884  82 183 794 846 176 805 831 898 146 278 143 747 329 471 678 216 254 636 178  83 260 469  96 274
  52 287 127 626 782 316 195 213 699 845  90 788 869 551 301 252 253 787 221 312 823 261 188 856 290 852 886 105  65 623
 202 539 119 768 692 250 889 486 612 844 218 688 215 676 151 264 163 877 249 318 857 892 139 110  15 837 289 448 196 512
 546 854 352 804 257 275 367 893 820 900 295 154 234 266 204 337 240 292 273 238 847 272 574 685 332 840 194 809 155 206
 168 766 300 853 331 201 268 680 875 746 281 286 858 732 185 849 303 661 145 226 282 896 325 658 190 109 239 689 255 158
 306 757 643 349 251 339 817 457 650 515 355 500 351 646 379  99 227 228 193 415 744 243 296 780 322 861 359 409 288 736
 371 644 237 198 297 364 868 722 675 741 426 223 338 638 420 199 231 311 483 888 315 323 141 438 270 302 872 876 241 463
 386 674 375 484 305 324 235 542 775 531 320 347 383 698 276 342 279 304 597 783 310 550 361 358 433 345 885 693 277 343
 360 404 473 510 326 487 259 321 671 528 348 314 334 211 445 370 413 631 543 396 534 390 344 340 459 444 319 630 830 881
 613 416 269 220 388 434 455 317 639 536 549 570 298 432 309 834 299 552 335 354 392 851 385 412 655 513 421 374 271 422
 443 573 408 399 454 579 586 341 405 397 514 440 604 307 377 509 491 458 365 389 391 419 446 435 406 429 541 368 599 442
 403 209 431 532 461 328 478 464 353 496 592 384 548 439 376 450 490 485 508 308 578 362 467 620 357 465 593 569 555 214
 511 596 380 447 451 526 474 425 381 423 554 627 610 372 395 417 410 424  40 430 594 499 402 427 346 466 453 516 267 652
 577  27 568 728 460 589 572  16 336 480 563 632 562 382 503 571 497 208 800 418 590 601 356 456 518 566 452 142 294  51
 313 123 535 725 653 616 559 207 283 285 714 280 560 191 479  36 521 662 502 537 398 733 702 203 407 530 609 363 651 138
 567 263 749 617 501 608 162 522 507 481 400 584 527 411 600 622 488   9 149 192 585 505 472 441 628 468 686  78 645  48
 605 186  68 524 691 606 598 160 449 133 665 619 477 179 544 654 533 493 482 393 173 437 808 245 588 731 153 634 506 181
 621 205 587 629 683 684 710 558   7 378 721 772 659 212 679  20 603 177 789 618  23   4 802 135 580 545 641 156 165 152
 664 128 713  80  56 719 633   1 293   3 703 761  86 394 556 575 648 706 824 492  12 100  37 607 709 734 657 538 475 611
 669 248 150 197 756 525 833 864 200 107 863 704 369 140 755 660 615 159  81 625 131   6 700 520 759  33 717 401 687  41
 842 705 838  39 764  50 583 711 222  75 753 184 564 387 701 125 519 743 738 635 103 667  24  72 470  31 187 489 712 582
 668 647 591 115 175  38 242 640 244  54 663  64 327 265 737 765 681  95 637 720 436 677 819 476 874  28 350 225 848 414
 790 595 825 742  94 148 333  62  44  30 826  55 217 735 696 236 862 124 760 517 144 136 771  26 762 229 523 730 806 697
 799  66 887 122 182   8 807 656  46 112 835 101  17 739 758 867 724 117 882 262 157 778 836 102 797 170 120 774  25 769
  19 726 843 116  74 813  45 781 246 129 811  21  32 649 137 860 850   5 718 786 284 224 113 230 866 366 776 818 504 673
 870 791 865 330  49 428 624 642  58  14  34 258 793 247  60 740 821  70 752 792  93 810 784  13 816 174 256 167 670 494

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.85678e+06us (= 2856.78ms, 2.85678s)
Wall-clock time (full program): 2.91973e+06us (= 2919.73ms, 2.91973s)
Satisfaction error: 0
Number of search iterations: 681
Number of local moves: 591 (including on plateau: 115)
Number of local minimum: 20 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4976
Total number of local moves: 4692 (including on plateau: 1423)
Total number of local minimum: 82 (including on plateau: 102)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  11  12  38 735 103 101  59 871 385 877 761   7 817  93 808 795 770 710 764 283 860 829 236 297 799 163 843 310 172   6
  40 558 116 810 772   3 112 873 778 239 857 222 844   5 729 842 809 162 876  75 767 298 245 608 737 140 208 149   1 640
 807 243   2 131 135 257  49 765 751 814  72  64 796  19 846 717 818 119 847  17 790 697  29 719 604 696 192 420 248 851
 709 209 185 279 805 318 138 800 745 657 822 481 585  87 111 853 198  14 832  73 813  70  89 782 732 641 432 146  74 835
 705 470  92 839 159 774 118 244 678 650 630  33 801 646 240 811 296  57 700  13 771 167 596 793 714  15 652  36 124 691
 203 673  55 757 804  68 375 748 780 728 730 153 645 623 253 610 598  18 592 263 427 699  83 755  42 563 326 237 187 520
  66 184 543 683 701 702 407 752 760 707 535 180 723  20 127 664 256 706 609  21 304 104 685  10 526 738 152 670 150 830
 690 497 328 711 115 742  62 672 763 665 749 491 440 649 230 692  23 519 726 227 238 121   4 548 639 624 549  47  88 666
 659 551 258 684 656 292 123 662 426 720 606 688 581 759  24 593  78 270 561 220 147 583  56 773 597 544  77 488 105 734
 777 173   9 638 677 486 182 695 532 421 294 618 477 536  32 601  25 667 572 560 483 515 521 418 620 625  61 512 241 547
 631 505 537 655 571 484 401 533 599 676  35 516 479 509  91 171 194 527 514 259 511 398 713 550 499 517  80 276 331 753
 567 235 219 490 694 627 397 564 566 647 489 518 524 313 106 559 179 669 260 580  34 502 591 465 453 653 290 575 195 554
 467 562 197 552  16 679 358 579 408 357 468 615  30 635 555 538 110 506 542 553 469 459 540 534 556 513 433 487 305 492
 504 629 523 474 186 301 217 577 478 462 573 658 361 531 495 507 435 390 439 448 444 424 578 545 336 546 443 530   8 473
 476 411 405 576 438 458 334 425 406 464 347 482 414 595 586 602 419 644 349 431 455 295 368 415 614 510 362 394 430 410
 539 460 589 389 378 319 400 382 450 343 587 273 886 570 457 442 600 441 452 341 485 381 391 565 379 348 496 367 428 377
 503 493 364 522 588 451 472 582 744 289 393 661 471 386 423 429 529 387 445 300 373 500 351 282 338 399 498 350 590 402
 384 883 501 409 232 396 617 332 278 718 272 508 574 315 359 456 285 312 754 480 286 383 447 404 333 885 412 213 633 454
 354 403 605 335 342 323 628 261 434 314 680 365 337 888 594 603 210 275 346 541 417 449 247 254 892 288 376 716 622 416
 178 317 643 306 353 557 668  94 849 369 859 413 233 372 374 320 725 284 176 174 870 437 363 311 325 287 826 687 750 395
 269 869 613 265 371 356 674 309 225 788 642 370 392 250 682 128 568 214 218 525 689 422 228 255 380 850 277 820 632 234
 183 388 704 293 446 216 825 302 352 177 189  84 267 321 861 291 854 164 205 736 803 900 303 494 274 252 758 866 708 299
 891 703 663 199 475 324 828 875 226 345  71 366 129 144 802 165 731 271 196 756 721 262 874  22 339 223 739 155 740 280
 268 327 833 329 161 798 344 166 170 207 169 806 133 120 528 229 648 712 791 867 148 671 792 786 201 266 569 698 636 142
 168  69 787 307 436 852 634 109 224 355 607 686 125 251 461 340 190 136 139 611 211 143 769 797 819 880 584 741 884 200
 100 872 619 231 827 675 897  99 113 322 102 126 156 626 693 191 621 868  95 766 175 137 856 863 242 160 249 768 864 202
 360 181 879 681 316 141 858  44 114  27 206 715 889 789 616  65 775 898 221 893 117 746 154  39  79 151 887 823 743 108
 281 862 612  48 215 881 660  81 204  58 651 776 132 855 812  98 637 882  41 785 145 836 837  50  90 107 747 188 890  54
 894 654 815  53 816 848 838  43  31  82  52 762  28 784 463  45 212 794  60 821 466 779 724  51 330  97 264 783 841  85
 831 122 781 134 727  86 840  76  46  37  67 878 246 824 157 158 722 899 193 896  96 308 845 130  26 834 733  63 895 865

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.86631e+06us (= 4866.31ms, 4.86631s)
Wall-clock time (full program): 4.92931e+06us (= 4929.31ms, 4.92931s)
Satisfaction error: 0
Number of search iterations: 2070
Number of local moves: 988 (including on plateau: 436)
Number of local minimum: 120 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15587
Total number of local moves: 7669 (including on plateau: 3322)
Total number of local minimum: 1032 (including on plateau: 279)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 328 431 877 829 784 860 793 880 867 272  75  77 159 863 215  33 864 206 777 770 330 116 303 759  80 781  83   5  97   1
 702  34   8 815 315 693 167 828 772 201 859 267 497 858  16  71  20 207 821 253 823 819 375  79  24 796 179 475 804 737
 801 835 813 776  45   4 128 232 747 202 135 783 148  48 140 788  15  29 763 853 808 790 163  19 247  37 663 837 825 841
 361 803 842 245  68 742 824 794 246  81 761 294 348 830  18 779 840  95 664 102 809 387  63   6 113 730   9 340 666 655
 279 805 658 833  11 850  38 744 736  14 535 198 327 852 211  13  59 199 769 599 789 138 724  22 831 100 795 398 643 345
 765 635 743 755 677   2 786 888 676 306 575 336  36 723 667 799  54 264 425  40 697 320  72  70  39 691 103  50 760 561
 301 625 861 176 151 657 485 750 622 171 313 748 139 792 157 670 686 221  76  32 687  44 130 820 648 738  99 169 745 802
 343 696 596 652 775 584 552  43 611   3 230 725 342 719  67 661 127  35 188  41 690 141 694 624 766 746 519  57 714 574
 297 598 557  74 616 656 780 586 223  27 528 595  90 785  21 679 428  49 735 601  42  51 703 654 762 689 706  30 692 261
 161 521 523 104 673 701 665 600 680  78 183 662 126 646 678 621 618 144 578 462  69 170 583 617 515 553 275  25 585 699
 524 499 726  64 633 504 671 527 473 550 143 632 477 478  12 733 571 318 639  23 560 210   7 728 628 525 441 165 705 349
 257 548 440 192 482 620 538 636 682 623 372  28 449 559 614 505 613 268 112 568 472 541 377 480 460 629 456 142 536 316
 453 530 558  82 493 592 605 551 424 555 593 495 250 631 581 509 540 432 270 362 603 479 414 572 292  10 580 443 388 228
 569 386 455 115 498 513 442 546 668 532 464 379 458 403 511 554  17 280 556 539 582 534 384 413 537 500 612 490 393 185
 587 606 489 418 506 380 470 602 321 412 518 419 496 483 421 465 502 501 437 409 402 360 423 357 401 367 395 408 427 533
 487 463 659 436 434 508 358 516 451 459 353 531 420 445 385 486 514 467 400 323 433 476 471 304 381 416 435 466 334 704
 797 314 469 373 446 311 392 406 352 368 709 430 884 312 396 522 708 567 273 474 374 426 371 405 218 284 305 547 492 590
 729 457 526 383 346 266 452 205 389 732 683 749 674 378 317 326 369 481 255 422 468 854 397 252 359 356 407 347 448 488
 651 439 309 339 365 308 203 184 415 767 517 278 806 429 438 322 520 573 791 310 325 872 276 260 333 503 351 751 291 589
 370 331 243 604 269 241 450 627 404 563 895 233 684 204 394 494 290 638 307 847 208 857 355 286 231 376 399 773 242 700
 626 354 363 382 484 364 258 225 391 698 685 900 219 608 576 447 299 741 244 566 845 335 849 251 154 239 565 193 366 288
 609 277 168 329 274 254 319 295 891 344 262 752 213 234 410 298 716 816 160 856 235 577 897 283 248 237 810 870 337 544
 774 134 194 417 259 282  62 893 120 350 594 875 798 224 851 229 444 710 152 887 238 212 739 411 187 216 758 695 265 545
 711 173 226 542 220 338 800 249 122 848 390 296 214 287 886 209 839 834 570 256 222 579 461 778 281 175 768 615 324 302
 285 133  65 647 236 787 894 189 588 882 669 137 818 117 807 217 177 892 543 562 164 653 240 641 898 124 200 637 118 195
 293 707 107 597 844 300 289  60  93 630 263 817 564  46 899 178 712 771 166 158 757 150 132 866 868 108 607 507 153 873
 181  58  31 454 871 722 822  66 180 811 111  53 721  84 754 146 182 529 156 717 610 645 885  92 826 878 889 869  87  85
  26 162 896 491 756 190  56 186 114 642 174 105 740  89 672  86 271 753 227 619 145 720 718 782 862 865 836 890 101 341
 119 106  61 510 874 131  91 109 121 734  47 549 591 191 713 843 876 731 649 715  73 727 634 846 512 196 147 640 883  96
 129 855  52 881 110 155 125  98 136 660 879 172 827 197 688 832 644 764 812 149  55 332 675 838 814 650 123 681  94  88

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.15035e+06us (= 3150.35ms, 3.15035s)
Wall-clock time (full program): 3.21368e+06us (= 3213.68ms, 3.21368s)
Satisfaction error: 0
Number of search iterations: 946
Number of local moves: 790 (including on plateau: 294)
Number of local minimum: 23 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5933
Total number of local moves: 4819 (including on plateau: 1620)
Total number of local minimum: 167 (including on plateau: 116)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  54 855 107 363 872  36  73 860 415  85 834 134 654 712 875  83 661  64 894 859  82 163  76 899 794  46 889 880  31 165
 861 858 118 779 672 606  27  94  44 522 109 715 743 554 868 167  43  47 262 135 664 125 697 632  20 774 780 635 869  95
 771  30 821 586 749 718  62 191  89 592 876 486 720 675 879 685 838  59  39 123 136 181 164 198 126 844 800 824 138 115
 643 122 132 835 886 837 204 301 399 633 101 631 670 851 674  58  56  53 900 839  68 146 120 281 258 891 584 833 113 396
 887  71 382 636 361 695  52  91  96 892 890 582 852 725 230 888 108 195 411 730 129 278 124 878 331 424 666 671 216  24
 422 105 845 663 630 655 205 212 213 250 141 560 750 884 829 787 139 184  79 389 206 214 182 898 897 612 748 438 207 171
 808 103 305 704 651 187 867 203 144 300 277 239 871 827 841 102 193 110 863 297 131 236 160 828 330 815 893 677 114 439
 809  74 222 770 625 386 256 812 267 614  75 322 786 705 219 292 111 353 229 149 150 273 895 797 846 604 304 746 228 596
 321 345 259 642 745 445 226 408 882 264 418 327 587 853 312 166 265 234 395 323 112 896  88 325 857 802 568 247 402 801
 243 215 384 758 741 282 137 299 177 854 276 409 883 565 320 819 240 201 515 253 870 152 210 221 357 552 804 822 459 497
 261 289 283 755 474 369 348 317 365 885 375 303 590 610 255 350 140 246 790 881 460 637 533 333 242 634 310 437 211 832
 563 528 338 413 481 392 285 235 335 480 351 506 416 558 346 249 260 457 405 501 319 719 521 178 491 798 817 407 419 747
 223 306 387 566 825 448 538 523 430 378 483 379 272 347 343 463 232 517 455 431 512 544 336 410 339 660 362 414 572 820
 465 130 313 429 472 337 527 326 616 370 513 307 583 793 404 294 296 403 776 406 653 490 298 314 373 564 792 208 352 711
 390 291 354 594 487 356 519 476 324 359 398 442 428 426 452 458 427 605 454 435 471 484 341 440 559 551 520 444 468 562
 508 510 394 576 597 367 425 401 611 376  16 581  35 453 466 332 450 561 446 492 618 412 573 432 358 494 493 451 443 644
 349 449 575 645 385 540 464 615 507 569 269 473 516 555 478 355 482 420 288  93 641 498 542  42 423 316 530 532 489 475
  19 567 477  51 368 479 580 595 600 156 599 121 295 511 659 505 579 456 380 434 591 778 668 589 537 377  80 509 381 574
 623 518   3 556 266 531 499 546 461  34 539  63 447 340 667 647 657 706 189 529 485 417 500 541 640 391 502 433 495 290
 364 620 665 548 400 553 692 274 371 119 549 648 328  67 646  23 545 525 496 488 732 470 534 734 270 315 257 308 806 168
 701 608 622  17 196 547 742 613 676 436 557  29 158  84 578 698 662 524 690 550 344 372 393 543 514 116 245 585 617  98
 669 699 624  50 153 571 735 588  70 157 570  32 293 161 173 691 752 607 650 503 535 626 693 142 628 251 268 469 789 366
 183 673 602  90 279 639 717 106 726 689 759  28 143 100 601 773 696 733 179 629 777 721  57  97 760 209 145 619 127 658
  41 703 621 186 241 753 383 603 765 694 788 598 162 133 681 374 864 577 593 526  60 649 679  14   2 227 233 197 826 342
 751 627 782 309 199   4 738 709 764 836 275 656 200 202 688  37 772 722 462 727  66 421 763 192 224  69 231 185 716 188
  78 714 731 286 271  40 713 172 744  72 785 736  86  55   9 761 684 708 170 104 767 781 803 762 683 441  65  18 740 536
 280 818 652  81  48  12  49 678 729 830 783 813 388 244   6 252 757 700 866  26 862 702 799 302 248 176 147 154 609 504
 680 842  25 237 155 754 795 805 728 775  33 737  38 218   8 724  22 823 318 769 360 263 638 687 175 225 174  13 784 710
 151   5 810 329  92 756 843 723 117 217 831 847 334 159   7 686 816 848  10  87 865 856 254 791 766 238 180 169  21 707
 397 840 682  61 194 220 814 739 850  77  45 811 287 148   1 796 768 877 311 807 849  11 874  15 467  99 128 190 873 284

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.77742e+06us (= 4777.42ms, 4.77742s)
Wall-clock time (full program): 4.84084e+06us (= 4840.84ms, 4.84084s)
Satisfaction error: 0
Number of search iterations: 2006
Number of local moves: 1108 (including on plateau: 581)
Number of local minimum: 128 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15142
Total number of local moves: 9193 (including on plateau: 4803)
Total number of local minimum: 858 (including on plateau: 324)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  53 885 770  84 839 805 103 232 137 682 880 868 531 743 778 798  95 889  74 625  17  64  31  32 549 118 717 196  49 871
  73 471 714 109  86 711 561 151  99 100 146 800 748 678 883 574 887 876  58 823 217 890 239  87 199  38 672 112 635 878
 132 430 501 235 482 879 111  51 233 837 247 509 720 677 900 795 173 840  50 597 188 124 119 122 135 673 804 899 201 851
 102 692 202 359  93 772 148 114 641 700 510 877 725 861 620 545 866 775  62 872 134 628 565 127 153 101 715  94  89 373
 652 745 191 870 897 506 293  96 139 891  79 719 619 862 703 550 154 832 113 869 152 194 253 106 138 544 244 278  59 767
 589 468  80 165 691 679 195 128 264 825 162 616 689 687 757 784 882 771 181 813 142 126 236 115 895 120 206 312 104 833
 830 337 166 158 707 867 324  57 183 288 197 192 632 875 221 796 203 769 615 806 175 821 416 893 268 306 213 156 198 846
 603 864 186 141 356 824 169 865 204 731 566 812 789 863 287 527 242 332 320 280 174 189 894 136 282 255 274 330 536 484
 424 310 251 892 513 249  63 631 886 248 276 344 811 662 259 776 896 245 340 258 581 538 396 267 117  91 884 237 317 753
 586 303 397 150 647 399 323 712 296 727 292 352 855 325 160 779 234 708 327 686 819 791 262 214 294 438 465 286 301 387
 441 826 389 350 346 675 381 384 497 354 873 311 854 388 209 764 241 243 365 881 353 370 405 291 425  98 464 125 435 777
 400 732 116 269 759 402 345 494 250 367 321 774 541 898 295 368 328 461 685 326 780 349 621 284 419 829  21 363 455 263
 859 224 271 360 860 308 432 736 355 568 409 220 454 674 309 500 448 576 888 302 190 272 385 525 512 433 378 335 304 428
 522 383 666 547 470 369 488 809 450 338 315 331 694 540 437 434 573 336 290 427 507 499 212 599 277 592 180 347 319 564
 265 553 238 431 411 575 469 478 485 408 322 580 429 358 836 511 529 357 318 439 532 503 314 654 394 413 530 379 362 442
 493 375 395 393 467 551 498 520 329 334 587 486 361 606   4 502 343 569 418 622 410 422 705 584 386 144 298 639 460 614
 489 458 444 374 515 392 548 492 390 401 297 449 266 440 490 534 537 313 406 398 279 407 617 758 562 583 445 382 446 403
  35  75 623 518 143 640 650  68 533 626 475 618 585 172 495 404 380 240 681 646 591 463  30 683 605 602 476 483 496 479
 171 177 480 517 225 516 624 451 412 481 414 161 342 261 556 474 571 519 270  71 521 651 457 660 570 600 728 598 491 546
  88 670 377 535 558 588 572 184 637 577  33 147  81 252 524 168 596 613 671 211 649 665 642  28 653 456 648 560 593 539
 257 595 696 557 372 222 514 658 607  97 227 504  39 205 740 167 523 453 472 763 105 627 799 157 790 610 447 417 750 145
 333  77  54 710 231  44 594 807  92  65 816 638  70 423 734 149 644 655 246 716 526  56 756 664 690 749 669 659 563  85
 634 554 808 421 299  13 578 543 838 459 730  37 256  46 656 283 351 216 590 604 609 163  76 709 831 735  82 701 645  48
 746 210 680 843 300 215  36 487 693 582 608  66  72 281 508 341 555  12 661  61 815 579 697 426 733 726   2 741 797  42
 528 348 785 766 601  26 754 364 847 170 643 436 230  18  40  47 567  90 612 130 415 751 657 842  60 668 706 542 765 107
 473 254 793 773  25 176 755 391 848 179 462 722 155 131 110 443 802 185 737   9 803 718 273 636 857   3   1 849 724 228
 856 505 688 108 781 164 629 794 783 698 371  11 121 339 667  19 874  34 738 219 633 559  83 420 699  69 713 792   8 140
 704 723  15 761 630 289 702 366 611 721 850 178 223  43  27  16   6 218 787  23 762 552 752 858 818 827  52  55 817 129
 801  45 729 275 133 466 834 768 747  41 663 305 316   7 123 260   5 159 695  14 760  67 835 786 182 841 739 820 814 285
 376 226 810 844  78 193 822 684  29  20 744 452 307 200 187 207  10 229 845  24 676 477 788 852  22 853 742 828 782 208

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.52778e+06us (= 3527.78ms, 3.52778s)
Wall-clock time (full program): 3.5909e+06us (= 3590.9ms, 3.5909s)
Satisfaction error: 0
Number of search iterations: 1256
Number of local moves: 782 (including on plateau: 316)
Number of local minimum: 72 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8533
Total number of local moves: 5883 (including on plateau: 2078)
Total number of local minimum: 453 (including on plateau: 183)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 602  59 863  45 832 829 475  87 811  42 236  82 159 235  32 735 860 852 694 826 655 153 161 745  56 278 662 474  97 878
  48  52  31  49 836 816 125  98 184  23 121 189 767 722  80 622 896 733 877 380 880 566  34 755 620 296 162 879 874 800
  64 821 213 145 374 504 523 199 785  36 870 116 100 657 163 813 556 691 698 565 842 312 587 803 165  28 398 898  99 490
 651 142 134 224 790 845 115 210 729  78  61  54 177 665 462 883 871 900 766 646 851 160 623 804  74 229 109 483  86 693
 638  68 171 386 805 853 140 180 864  91 157 209 139 894  83 734 773 748 220 636 857 266 315 247 690 873 783  50  39 606
  88 176 314 626 787 830 253 270 202 242 891 305 129 599 244 231 882 686 696 668 856 320 130 670 796 102 884 250 198 190
 560  62 252 302 854 726 897 304 893 251 778 166 283 306 245 179 654 181 850 526 678 215 827 346 186 225 828 226  94 621
 327 260 607 345 717 156 230 889 195 106 849 399  71 895 196 776 886 754 553 692 262 194 633 268  35 214 595 480 219 712
 666 332  85 680 769 344 295 258 899 335 687 182 232 197 204 577 807 263 861 347 418 201 601 822 781 238 274 297 239 624
 563 336 377 843 892 637 341 281 410 847  69 416 324 221 389 323 334 392 797 329 103 254 319 779 426 261 809 522 273 648
 815 203 390 243 592 632 227 206 402 373 872 313 357 466 449 786 271 264 218  89 411 394 825 379 420 552 358 760 360 888
 703 298 352 609 649 339 437 384 509 454 510 350 228 183 272 309 708 279 875 376 597 381 216 351 412 286 868 788 436 356
 652 784 331 514 433 233 507 317 383 427 308 337 310 512 388 455 354 269 405 291 330 548 494 424 458 450 846 743 520 492
 876 404 259 447 709 353 307 362 322 276 382 395 280 588 432 365 372 387 321 586 545 212 498 415 491 303 890 720 505 513
 300 531 409 841 338 435 645 589 488 421 288 241 400 456 408 446 422 363 535 496 443 359 471 493 600 355 472 460 311 499
 594 370 391 277 590 584 378 439 367 403 469 465 478 673  17 544 423 419 546 200 440 361 562 441 397 527 761 564 348 487
 366 438 611 290  67 568 515 265 540 616 572 539 369 547 417 407 551 675 414  22 464 598 479 461 650 536 532  25 528 453
 208 554 501 393 495 605 413 481 368  84 497 463 431 508 576 452 169 631 434 476   8 502 448 582 555 634 534 529 451 533
 292 333 541 113 104 155 610 672 530 596 511 445 629 516 615 630 485 518 205 699 647 580 135 569 500 700 146 192 710 137
  16 674 724 489 126 506 442 573 473 604 425 593 519 627 721 299 470 524 517 124 608 430  18 644 457 628  72 150 618 444
  66 782 429 255 120 543 574 486 122 676 583 579 578 715 549  73 275 557 570 701 164 482 656 639 642 663  33 127 575 301
 151 759 725 844 178 613 559 525 207 704 591 683 468  63 542  58 187 671 612  96 658   2 731 173 768 619 131 406 603 188
 558 669 550 211 284 349 503 537 752 689  60 757 659 148 806  38 521 581  12  47 682 711   1 141 695 764 237 714 681 158
 256 777 741 744 143   7  95 660  81 823 571 799 716 679 840 635 107 112 128 833  15 810 117  76 713 798  53 325 738 123
 820 477 661 742 316 567 640 396 111 772 119 684 747 167 664 385 152 154  13 625  26 736 756 294   3 697 328 685 585 193
 343 706 869 428  65 293 848 824   6 835 318 641 753  14 702  24  92 222  93  57 727 831 643 326 688 459 667  79 771 191
 340 838 770 885 287 118 801 707 859 614 794 740 802 138 730 147  20 217 108 240  70 617 484  90 170 168 267 375 834 285
 862 775   4 234 172  21   9 795 705 837 814 818 866 653 719 765 132 185 342 174  40 739 728   5  41 751 401  27 855  46
 282  44 839 750 114  11 746 732 289 467  37 792 867 248 758 723 175 257  19 881 105 819 774  55 780 144  51 749 858 149
 808 791 371 561  77  43 865 789  29 793  75 763 677 223 812 101 110  30 136 887 133 762 249 718 246 737 364 538  10 817

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.6642e+06us (= 2664.2ms, 2.6642s)
Wall-clock time (full program): 2.72757e+06us (= 2727.57ms, 2.72757s)
Satisfaction error: 0
Number of search iterations: 603
Number of local moves: 489 (including on plateau: 162)
Number of local minimum: 15 (including on plateau: 10)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 4076
Total number of local moves: 3856 (including on plateau: 1028)
Total number of local minimum: 50 (including on plateau: 71)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  39 284 883 873 727 157 831 693 115 737 606 178 135 896 887 146 702  66  52 742 601 879 119 111  93 445 109 721  89 599
 886 894 100 682 897 124 810 158  49 684 462 136 439 225   1  59 722  43 224 837 791 855  91  78  69 671 106 885 899 638
 730 103 890 807 815 149  94 137  82 527 877 131  64 900 835  77 778 166 203 824 669 881 102  41 133 129  55 892 812 612
 723 222 227 802 856 221 763 147 875 813 708 207 165 171  65  79 863  56 286 871 789 125  15 884  97 554 404 781 101 645
 686 128 269 415 294 895 826 180 104 840 295 318 660 898 733 204 701 870 145 674 610 176 143 739  71  57 160 860 426 138
 731 232 349 533 235 849 804 181 152 805 489 199 844 168 197 327 725 893 216 704 620 878  26  34 823 253  14 746 249 239
 750 215 202 703 220 144 519 110 155 535 838  81 891 736 343 303 794 228  37 561 836 425 139 874 148 706 167 817 289 749
 184 267 237 710 828 332 867 779 252 797 829 179 219 270  72 259 735 175 263 744 633 238 271 256 868 545 312 278 785 331
 716 208 190 705 196 236 841 173 575 631 847 244 257 360 262 245 851 372 302 714 857 359 195 285 268 864 356 740 386 280
 314 345 274 644 423 394 876 311 282 882 466 398 187 243 363 465 618 597 323 729 292 834 396  45 214 364 304 290 872 770
 381 361 250 570 200 344 814 201 251 888 632 185 341 351 141 265 656 230 467 369 550 761 279 306 865 661 889 753 281 273
 391 383 358 560 254 296 672 113 315 247 850 412 484 121 490 266 663 728 543 615 320 454 288 485 309 549 478 481 571 819
 374 573 255 542 258 229 806 449 261 241 681 324 774 308 395 335 494 300 452 347 869 316 384 388 240 767 488 348 469 848
 538 520 459 510 317 499 517 287 504 409 283 336 293 334 429 400 506 458 546 596 617 771 667 272 321 380 442 378 424 502
 355 505 387 559 399 414 515 584 407 389 521 457 411 446 512 516 370 410 464 530 572 474 473 539 352 340 593  33 451 537
 437 553 476 623 422 313 382 421 428 291 511 541 552 557 448 417 373 440 367 463 532 434 491 329 487 468 470 482 330 477
 433 310 456 205 444 562  67 518 524 105 598 531 471 496 525 647 436 393 583 565 479 461 544 523 432 522 556  83 420 626
 483 526 717 371 497 376 354 453 211 585 353  10 392 687 651 492 210 418 563 595 447 264 711 590 430 403  42 555 507 622
 629 397 455 390 569 578 319 276 528 277 212 567 416 493 566 658 460 738 365 234 529 514 582 402 685 226 719 551  84  96
 547 486 649 322 508 275 333 408 498 248 120 665 668 609 500 707 350 602   8  13  28 607 640 472 564 150 713 611 587 627
 534 695 450  44 650 579  68 762 419 405 142 642  95 154 608 748 342 604 782 107 375 536 788 624 635  50 619 213 673 172
 130 540 603 132 605 657 162 576 786 501  74 666 683 732 637 655 193 509 337  90 580 297 614 628 613  85 646 480 186 118
  88 811 694  87 670 630 223  21 659 192 438 712 641 709 600 475 326 766 568  22 127 621 406 680 581 513 591  47 503 114
  18 757 616 339 558 747 366 772 689 362 189 793  99 741 639 827  48  24 755 164 191 662 548  31 589 832 745 338   3  73
 653 652 688 346 194 699 206 852 592 586 246 692 305  12 625 696 116 588 577 161  70  30 726 845 377 357 675  62 678 209
 183  80  51 307 177 574   6 690 677  25 379 822 861 780  60 858 231 776 866 301  36  17 792 830 734 431   4 634 654 679
 122 760 724 441 151 743 140 818 783 169  29 773 156  76 775 698  98 718 787 117 298 443 700 808 720 126 427 233  46 636
 170 854  40 112 328 664  75 859 784  16 435 800 880 325 385 759  38   2 820 153 159   5 790 643 182 853 842 108 758 676
 495  58 765 174 769  32  61 777 843  86 217 691 833 123  20 798  63 697 862 260  27 163 839 754 799 846 821  23 218 401
 795 796 801   7  54 803 198 809 715 242 188 825 299 594 751 134  53 648 752 413  11  35 756  19 816 368 768  92 764   9

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.83838e+06us (= 3838.38ms, 3.83838s)
Wall-clock time (full program): 3.90518e+06us (= 3905.18ms, 3.90518s)
Satisfaction error: 0
Number of search iterations: 1499
Number of local moves: 847 (including on plateau: 277)
Number of local minimum: 74 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9624
Total number of local moves: 6607 (including on plateau: 2704)
Total number of local minimum: 462 (including on plateau: 182)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 891 900 875 172 839  54  62 820 479 121 656  75 158 130 150 116 720  68 477 588 189 184 784 886  20 633 756 893 611 208
  32 813 183  64 869  26 775 783 865 637 132  83  82 154 219 138 677 133 644 864 419 161 738 165 859 874  56 279 896 895
 739 842 815  94 724 263  74 802  86  72 857  49 872 317  44  65 733 789 894 719 265  84 790 848 331 180 231 175 239 522
 227 804  58 899 715 768  90 441 152 115 795  43 822  79  95 140 880 147 845  76  78 156 835 769  85 464 519 890 818 710
  92 635 192  70 480  35 198 861 821 223 179 824 580 229 103 264 793 141 722 805 215 649 877 862  25 826 191 879 573 171
 199 643 145 847 278 888 881 663 782 313 693  66 754 101 137 166 418  77 627 325 194 205 873 800 483 728 135 341 257 496
 801 792 243 143 791  88 892 843 176 202 870 808 113 182 209 268 735  63 807 356 399 246 796 749 332 666 112 260 281 292
 778 810 385  69 898 299 338 531 885 321 803 396 340 484 337 244 178 168 884 127 692  93 798 217 247 675 327 352 721 118
 193 641 230 167 610 294 763 771 809 757 609 286 386 160 233 196 129 373 785 303 300 854 430 204 291 838 211 856 539 297
 310 594 365 262 378 827 395 718 326 871 330 216 255 207 250 488 700 240 349 314 889 236 454 318 275 647 328 360 753 860
 829 618 288 474 736 367 523 371 384 270 897 188 277 256 404 363 157 353 344 883 746 397 530 163 393 673 306 324 742 259
 316 734 177 409 301 412 852 576 342 731 391 461 374 343 482 372 450 887 547 406 640 305 568 456 298 433 319 354 283 296
 492 524 485 308 312 346 764 596 329 415 364 309 816 616 355 510 437 423 322 307 280 311 863 369 362 717 427 606 266 284
 535 653 505 375 351 475 421 410 334 542 358 302 436 414 500 258 506 460 499 526 507 513 508 583 379 422 518 339 357 529
 222 534 380 390 407 498 549 443 389 556 387 574 729 503 323 282 455 394 589 554 648 335 660 413 232 432 451 438 401 347
 575 376 439 629 345 472 383 269 551 457 553 448 405 546 429 368 603 434 444 151 495 521 612 336 466 431 446 590 273 468
 449 295 416 509 225 417 315 512 452 569 289 747 469 238 128 636 639 540 224 622 668 615 173 541 620 287 467 514 497 442
 548   7 650 634 550 533 400 213 478 131 493 465 502 494 458 515 560   9 470 646 149 563 473 613 557 481 381 491 604 447
 536 107 655 595 586 664 425 221 681  28 424 517 593 570 703 544 459 543 525 471 350  22 274 398 585 200  41 659 511 628
 625 271 561 632 252 538 608 218 658 702 111 220 597 377 566 453 571 528 304  21 828 626 241 665   4 388 558 490 170 732
 552 106 598 564 584 428 226 667  60  67  40 579 621 486 697 501 435 537 565 602 245 619  37 691 581 333 504 730 153 707
  53  15 687 562 600 545  57 520 696 688 678 516 559 572 577 567 638  36  61 760 440  27 285 420 669  51 672 761 712  91
 642 361 599 555 181 578 162 134 592 726  59 445 652 714 779 617 713 684 119  19 402 631 100 699 657 104 765 527  96 203
 679 139 787 725 582 682  55  12  80 708 651 142 704 645 662 690  31 850 126 532 601 614 195  42 752 249 878  45 607  50
 117 174 489 750  24  13 780  87  99 814 727 840  18 819 698 849 110 797 237 676 654 772  39 366 228 392 841 124 276 705
 370 186 770 748 251 773 348  14 248 487 591 683 670 706 711 774 102 605 146  10 462 741 148 408 694   1 846 234 164 624
 253 210 744 267  23 716 685 169 759 701  48 788 411 674 825 776  98 866 320 751 853 630  47 187 758 214  38 144 359 201
 671 114  34 762 587   2 837  30  81 812 206 823  11 855 831 743 293 832 261 108  71 661 109  89 709 689 686  17 851 740
   8 382 755  46   3 737 254 695 122 463 272 786 212 811 844 745 105 680 242 159 830 868 155 185 817 197 623 723  29 767
 781 235   5 794  33 777 403 125 799  16  52 836  97 833 766 867 190 858 136 834   6 876 123  73 806 290 882 120 476 426

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.59284e+06us (= 5592.84ms, 5.59284s)
Wall-clock time (full program): 5.6553e+06us (= 5655.3ms, 5.6553s)
Satisfaction error: 0
Number of search iterations: 2541
Number of local moves: 953 (including on plateau: 433)
Number of local minimum: 188 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 19154
Total number of local moves: 9491 (including on plateau: 5148)
Total number of local minimum: 1268 (including on plateau: 409)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 117 879 766 780 848 373 101 807  72 143 236 338  96 850 828  93 646 187 825 258  70 322  68 678  94 810 764 637 820   9
  84 114 846 400 855 133 827 193   7 300  15 289 159 873 862  18 817 842 869 337 799 762 189 131 200 261 115 874 493 851
 718 847   1 387 888  49 666 157  55  91  30 185 689 413 834  13 826 822 670 329  74 821  33 351 769 800 385  41 712 859
 275 730 813 719 876  52  98 824  83 195  54 214 126 265 702  76 781 687 775  88 698 790 218 773  27 760  39 845 154 778
 155 741 715  82 611 306 723 783  65 182  26 369 302 125 691 756 838 749 758  59  16 570   2 430 726  97 287 744 784 823
 521 710 632   8 657 102  57 162 271 754 421  43 704 467 843  61 619 782 816 228 120 753 149 339   3 683 399 703 803 705
 674 658 653 403 720 313  36 728  73  48 622 153  90 128 572 633 733 755 693  58 836 597  35  25 779 727 103 788 112 770
  77 697 550  34 383 278 662  22 225 759 721   5  11 269 696 650 724  12 649 167 580 624 379 671 615 776 122 737 739 681
 111 707 644 573 620 290 809 107 515 134 630  92 626 460 604 617 676 499 623 183 532  44 175 533 748 540 164 599  29 631
 163 675 757 568 346 158 610 557 147 217 596  56 647  87 628 654 667 559 636 109 160 531 190 627 605 589 166 561 586 663
 582 701 512 106 583 124 601 576 148 480 105 656 682  40 478 607 569 527 686 530 529 638 198 613   4 165 140 751 692 492
 522 680  10 609 476 211 536 534 381 560 581 625 518 562 517 598 270 488 564 591 121 479 336 612 444 524  75 548  53 490
 634 348 588 567 577 308 365 510 227 506 535 291 546   6 489 608 600 144 372 466 575 552 343 354 563 441 469 497 578 456
 437  80 566 485 332 299 507 376 648 447 472 292 537 519 349 525 475 503 374 592 565 462 328 716 370 505 350 371 585 448
 446 498 411 495 244 450 482 470 539 547 542 380 356 253 520 454 501 461 579 422 553 353 352 494 364 516 471 417 407 538
 509 390 438 496 409 574 410 396 551 344 587 432 445 378 789 453 384 314 500 514 555 392 473 465 401 327 293 386 451 459
 309 423 484 298 543 523 318 418 455 395 511 474 431 679 301 375 513 362 491 402 593 452 695 841 326 405 248 440 406 404
 393 435 477 442 717 556 433 319 558 366 419 333 443 883 361 282 504 367 415 341 468 684 787 307 340 414 358 397 357 359
 785 428 249 895 429 672 304 254 603 311 425 541 347 792 283 201 439 363 463 795 178 424 526 257 251 303 866 247 486 398
 335 412 426 725 321 449 276 237 645 481 777 886 241 814 296 391 132 865 216 837 360 263 554 797 235 220 713 239 268 104
 221 312 286 765 315 815 273 194 483 408 305 857 316 664 325 274 377 191 427 819 528 436 621 840 245 861 602 243 320 192
 288 204 355 215 123 804 334 892 900 208 232 870 711 668 394 317 240 233 212 878 206 898 652 184 416 150 763 174 714 280
 170 234 277 894 331 839 297 899 571 209 146 659 709 867 242 139 196 502 207 618 890 205 791 281 389 156 891 188 330 388
 863 260 246 285 138 508 885 255 690 738 345 833 872 706  99 294 368 223 230 213 284 264 655 818  78 458 736 179 742 250
 868 229 226 735 267 750 219 743 747 793 176 772 829 323 181 137 197 860 252 746 811  71 673 172 382 266 545 135 259 151
 595 113 171 180 549 685 145 161 740 798 887 324 169 708 222 884 142 231 116 584 642 238 877 812 854 457 677 141 295 118
 342 110  85 464  38 699 729 768 640 594 893 722 152  79  81 889 108 202  37 734 832 732 880  62 882 177 614 660 279  31
 808 210 487 661 168 694  63 771 844 856 731 629 262 420  66 875  32  86  23 186  51  69 745  67 864 256 831 881  21 858
 616 590 794 199 127 801 896 272 761 802 852 651 669  14 173 835  95  60  17 635 665  42 805 136 767 119 641  28 434  19
 897 100  50  45  24 700 853 130 871 849 643 544 830 203  89 806  46 639  20 796 224  47 786 129 774 752 688  64 606 310

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.43369e+06us (= 4433.69ms, 4.43369s)
Wall-clock time (full program): 4.49637e+06us (= 4496.37ms, 4.49637s)
Satisfaction error: 0
Number of search iterations: 1473
Number of local moves: 1106 (including on plateau: 561)
Number of local minimum: 59 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12397
Total number of local moves: 8159 (including on plateau: 3908)
Total number of local minimum: 599 (including on plateau: 312)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 344 865  82  29 158 381  12 740 100 762 244 799  71  44 873 892 879 820 859  49   4 202  41  91 867 831 722 150 877 727
 743 219 283 819 837  35 843 755  15 673 579 764 781 875 803 601 835 144 845  22   3  21 200  79 765 176  95 218 440  47
  73 267  23 806 897 119  45 353 302 262 250 802 861 692 832 817 789 794 447  17 854  38  56 769   2 674 715  18 714 227
 145 366 117  66 816 185 852 851 115  93 174 284  64 627 846 801 736 822 810 689 778  16 178 624 818 730  32 133 675  72
 753 236 226 869  28 223 687 652 289 628  25 751 790 716 666 710 742 741 793 274 823  40  39 141 702 462  86  75 246 102
  57 212 130 825 598   6 671 362 127 210  10 811 724 773 708 761 731 587 606  11 737  36 684  24 487 347 338 631 604 707
 162 180 232 725 711 330 324 668 175  58 623 712 563 539 634 723 744 709 655  37 616 140 635  30 570  27 193 763 374 663
   5 610 310 787 620 207 156 222 126 413 682 626 576 677 597 653 705 414 605 639 664 192 431 838 550  96  42  77 295 700
  76  31 280 510 791 370 735 701  13  97 614 584 547 691 637 703 575 642 512 468 660 445 534 596 632  69 103 571 314  14
 215 106 255 603 549 134 481   7 220   8 752 659 432 455 669 766 392 611 519 654 247 355 640 636 726 495 517 591  54 767
  20 556 259 630 670 129 567 578 488 305  19 581 572 638 651 618 542 647 564   9 565 296 619 629 621 235   1 599 137 770
 577 588 263 409 483 334 522 475 204 184 533 422 695 504 573 667 543 511 393 199 454 239 528 472 560 554 498 617  99 415
 224 662 128 650 478 411 403 644 428 608 418 503 559 467 485 612 590 437 513 201 496 298 500 438 459 213 514 524 194 458
 405 613 373 473 443 323 566 365 466 489 474 541 484 694 230 404 241 377 461 479 343 402 234 516 530 412 553 592 562 470
 424 322 294 471 523 379 505 645 254 430 586 548 531 499 490 476 397 378 552 480 506 357 439 423 337 456 463 508 306 536
 537 450 706 676 356 515 399 400 492 555 491 509 568 408 444 358 525 416 396 502 452 507 451 449 342 382 248 249 303 429
 407 435 535 899 482 242 426 526 532 359 349 273 363 887 240 243 477 529 350 748 293 391 390 419 494 376 453 367 658 372
 544 375 558 315 348 589 457 808 661 434 607 497 152 332 364 417 427 807 545 425 420 728 383 465 217 216 312 252 594 266
 421 256 696 387 229 622 170 758 583 609 279 849 360 326 272 388 269 464 850 643 316 448 233 340 389 352 733 276 719 278
 805 290 683 317 261 593 648 384 657 759 282 297 197 433 369 179 678 320 394 327 436 688 783 251 757 441 291 446 341 208
 245 287 406 164 527 540 285 833 686 844 271 225 780 371 299 301 401 368 109 718 187 633 847 286 385 721 292 858 328 318
 739 786 680 308 209 704 486 177 580 841 148 155 264 333 309 257 122 460 336 410 206 856 114 361 351 595 750 270 840 868
 641 774 870 169 228 776 166 275 602 546 880 335 331 258 321 386 307  55 277 191 195 679 889 237  94 698 732 815 585 203
 813 796 775 118 221 895 288 311 747 785 268 143 111 190 281 113 189 131 304 779 346 792  88 893 105 812 876 173 777 395
 836 690 771 151 153 493 163 260 625 878 354 123 253 121 398 186 214  59 183 574 142 738 898 826 891 882 319 339 615 380
 756 171 734 125 881 746 665  98 862 329 864 231 104 693  89 168  70  61 124 656 167 830 160 112 345 839 713 827 538 557
 600 238 672 442  43 795  80 300 720 582 888 211 745  85  48 108  68  87 325 853  52 809 804 797 165 685 900 798 469 146
 551 561 521 135  67 800 154 107 754 313 890  26 159  60 205  92 161 866  51 772 872 649 760 884 181 188 646 782 520 788
 569 874 768 136 834 784 896 182 821 265 814 138 149  46  62  65 132 101  53 829 857 842  63 172  90 518 681 886 139 749
 828 699 885 501  74 855 863  78 871 196 147 116 729  81 120  50  34 157  84 860 824 848 894 717  83  33 697 110 198 883

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.54102e+06us (= 3541.02ms, 3.54102s)
Wall-clock time (full program): 3.60455e+06us (= 3604.55ms, 3.60455s)
Satisfaction error: 0
Number of search iterations: 1210
Number of local moves: 916 (including on plateau: 297)
Number of local minimum: 46 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7579
Total number of local moves: 5837 (including on plateau: 2145)
Total number of local minimum: 290 (including on plateau: 157)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 124 109 893 822  74 804 871 502  89 344 766 735 105  84 107 787  58 634 679 649 149 227 702 889 811  57 506  62 726 150
  52 797 189  63 867 873 211 133  98 882 120 850 130  59 710 831 111 480 262  18 840 556 789 799 214 145 598 866 856 116
 118 161 876  32  67 721  79 115 300 762 100 490 222  81 733 207 184 864 640 793 499 637 739 858 234 816 601 884  71 631
  90 157 883 900 881 137 156 690 104 423 112 562 125 268 824 491 208 885 708 628 676 685 390 833 152 147 332  44 795 229
 890 241  94  45 819 172  69 665 140 391 821 872 345 138 776 880 278 319 627 177 896 814 168 808 197 892 661 225  55  40
 800 755 101 276 206 750 236 192  50 785 630 595 195 167 832 861 217 277 575 343 699 591 155 784 857 173 790 203 113 307
 328 185 164 178 166 144 487 181 219 765 707 801 205 146 875 220 436 209 625 747 874 862 897 772 153 266 891 175 749  88
 327 102 711 288 239 233 103 424 292 853 183 842 646 514 843 163 287 754 744 272 306 589 870 629 256 190 554 273 791 237
  99 263  93 392 213 139 230 597 844 868 216 633 458 731 603 325 517 760 712 201 303 895 329 683 283 248 602 259 737 282
 334 536 154 194 252 261 251 308 384 894 302 232 336 669 196 200 249 317 869 796 898 859 274 650 617 411 830 314 820 108
 280 430 539  48 453 294 265 845 305 492 877 296 349 729 250 193 309 695 887 692 210 837 284 420 360 290 817 330 370 369
 404 270 379 397 434 456 286 400 187 571 879 226 377 865 338 515 815 429 829 331 311 563 378 583 321 508 511 244 367 341
 326 535 372 352 247 171 335 479 427 528 383 409 551 886 501 461 899 301 401 359 231 888 380 439 373 446 451 543 312 529
 457 417 415 406 471 422 477 573 385 448 552 337 376 610 478 433 503 540 291 403 342 475 285 621 269 405 616 382 662 464
 486 447 412 483 364 323 438 520 402 469 485 523 396 362 394 497 545 531 271 365 389 371 673 435 504 350 513 496 522 549
 465 386 450 521 358 498 452 421 416 322 395 488 585 489 346 354 559 418 500 348 299 445 550 388 472 516 645 437 672 320
 600 565 467 592 505 460 202 656 668 243 431 580 428 310 474 444 443 441 560 541 324 316 410 374 293 353 414 577 425 419
 476 495 518 507 582 526 572  60 510 165 561   9 555 449 607 454  76 567 569 538 576 355 660 387 375 468 218 652 558 470
 530 611 619 494 534 586 557 255 463 245 525 351 366 527 659 654 126 473 304 638 512 186 537 333 546 671   4  15 713 481
 606 548 462 484 532 675 709  21 570  26 235 148 714  91 593 689 624 620  87 608 609   3  64 339 455 694 315 584 691 719
 363 466 553 590 716 587 581 632 644 264 564 142 542 407 614 697 442  19  37 127 106 298 519 260 682 579  75 809 604 596
 643  42 748 734 544 701 605  68 642  61 568   7 724  85 635 764 509  49 381 114 828 347 788 215 566 693 128 578 224 524
 778 547 588 753 705 182 722  53 599  70 777 132 756 622  95 574 688 663  41 340  82 741  33 267 783 667   5 459  35 758
 684 666 612 670 678 318   6 775 745  54  66 664 408 686 223 655 860 626 110  51  96  73  29 180 641 715 134 742 730 618
 680 647 851 802 852   1 717 674 774 623 706 703  56 356  17  80 594 246 204 687 781 135 698  83  12 493 159  97  30 757
 648 763 681 743  31 718 615 826 732  86 123 368 482 426 253  72 825 413 158 258 823  36 658  47 725  11 313 696 257 728
 129 768  16  27 188 818 855 720 813 704 212 807 849 440 170  34 432 639 651 636 131 176 122  46 841   8 533 738 242 770
 746 769  24 839 838 751 812 136 736 143  23  92 700 834 162 119  39 279 151 771 141 221 848 238 740 792 199 240 254 878
 653  43 613 863  22 780 810 767 198 275 798 393 752 761  28  25 847   2 361 727 295 174 117  77  10 657 803 805  13 846
 399 794  38  20 677  14 806 827 779 759 398 228 782 723 179 836 835  65 281 357 289 160 169  78 773 854 297 786 121 191

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.37045e+06us (= 3370.45ms, 3.37045s)
Wall-clock time (full program): 3.43322e+06us (= 3433.22ms, 3.43322s)
Satisfaction error: 0
Number of search iterations: 1019
Number of local moves: 720 (including on plateau: 247)
Number of local minimum: 38 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7569
Total number of local moves: 5749 (including on plateau: 2424)
Total number of local minimum: 275 (including on plateau: 177)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 896  65 767 818  93 837 225 734 705 556 879 668 848  92 459  70  66 126 142 736 846 857  91 105 173  15 650  31 806 159
 188 708 782 131 294  63 890 802 551 584 529 123 882  97 187 740 155 878 101 633 863 864 346 156 803   4  56  75 154 876
 553  67 429 185 464  89 832 611 888 606 519 134 795  43 180 590 196  51 885 895 830 495 488  37 262 127 141 753 657 713
 390  73 814  47 669   6 170 820 775 691 869 178 856  94 235 482 241 887 112 759 501 859 576 121 578  49 307  29 598 729
 655  26 787 286 865 128 152 855 889 491 372 114 768 184 678 601  79 202 362 883 720 317 138 107 234 588 762 245 808 219
 658 502 352 149 892 845 169 778 654 210 165  69 770 144 259 197  98 267 270 494 884 868 599  10 898 162 714  72 809 557
 278 109 760 139 603  52 276 289 812 849 682 279 891 242 874 193  57 147 260 894 694 453 801 816 217 266 179 284 844 275
 303 348  42 125 610 194 545 880 215 870 618 361 321 313 862 850 327 263 209 763 306 776 886 237 191  61 754 301 676 308
 438 366 827 236 665 171 246 693 572 847 248 103 337 365 829 831 456 323 467 825 228 615 206 216 419  13 181 207 866 719
 608 283 350 268 496 295 213 616 480 214 299 363 305 322 875 881 111 389 376 443 871 805 796 324 298 247 900 255 497 335
 656 409 877 386 860 334 300 463 741 250 380 204 370 291 272 638 261 258 368 695 302 416 785 224 493 281 345 309 505 842
 721 461 687 344 786 227 290 411 288 160 840 897 240 172 208 310 403 354 872 466 375 282 387 377 254 381 353 285 811 873
 332 277 391 326 373 439 347 473 471 804 718 349 402 108 253 440 388 481 336 316 432 359 513 647 400 858 815 681 404 382
 623 339 333 410 374 195 315 320 525 899 697 329 395 861 230 543 523 547 412 408 518 392 356 444 163 630 397 431 568 338
 420 520 436 427 536 476 312 413 552 521 384 696 509 485 414 487 426 211 367 218 415 341 447 342 450 663 594 559 437 457
 522 836 358 469 503 421 330 478 399 558 407 534 357 546 371 343 472 452 451 430 458 617 273 460 292 304 486 492 511 385
  12 484 398 517 607 632 593 462 454 369  83 586 539 393 507  64 405 575 514 465 434 566 470 508 510 530 499 319 428 592
 417 435 296 475 200 394 433 340 423 515  82 489 498 448 500 477 424 506 243 406 540 541 538 474 679 574 537 662 527 442
 122 483 577 652 120 549 609 582 355 737 468  36 297 646 554 143 524 726  28 490 455 625 118 716 542 631 614 597 314 205
 136 565 512 711 325 548 560 167 563 531  71 562 627 589 723  46 788 449 745 257 706 137  90 677 591 555 602 528 135  19
 186 441 628 645 133 699 698 533   5 624 252 550 479 544  81 648 573 661 604 176 116 685 742 595  86 728 516 639  84 164
  76 561 579 660 220 587 773  24  95  55 642 751 532 612 526 585 535 649 583 189 569 274 422 643 504 792   1 640 244 192
 183 571  44 684 619 666 749  53  23 271 161 758 620 653  88  80 644 790 731 605  45 715  68 641 709 710 688 730 106 110
 703 596 636 629  39 735  32 203 747  35 784  38 182 757 212 233 580 671 446  85 761 119 287 755 779 670 351 722  77 651
 600 797 100 626 265 799 581 132 145  40 238 425 150 564 743 686 704 689 789 221  27  99 700 813  17 635 140 664 401 725
 794  60 104 667   9 724 752 226  11  62 810 680  87 843 793 311 838 774 772  18 364  48 570 732 673  22 702 746 269  54
 222 851 190  78  30  50 674 613 744 418 379 765 130 817 318 712 798 807 115 231 229  33 659 769 777 675 102 748 198 383
 622 835  34 791 733 701 756  59 158 153  25 822 256 750 249 396 819 175 738 201   2   7 232 707 672 834 148 637 223 780
 567 683 174 781 280 826 690 328 129 331 893 828  58 823 168 117 783 166 378 293   8 199 692 766 727 771 360  74 445 177
 634 764 251 853 852 833   3 157 146 264  21 824  14 717 867 821 841  41 839  20  16 151 239  96 124 739 621 800 113 854

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.12592e+06us (= 5125.92ms, 5.12592s)
Wall-clock time (full program): 5.18929e+06us (= 5189.29ms, 5.18929s)
Satisfaction error: 0
Number of search iterations: 2339
Number of local moves: 1073 (including on plateau: 589)
Number of local minimum: 172 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 16087
Total number of local moves: 7962 (including on plateau: 3993)
Total number of local minimum: 994 (including on plateau: 242)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 852 898   7 108  50  93 650 377 103 855 623 893 117 888 415  32  69 196 763 507 135 138 211 241 838 866 715 900  96 879
 109  38  83 126  65 637 591 627 723 816 278 899 647 587 845  94  79 100 721 856  55 101 164 678 822   9 871 170 865 859
 113 892 884 862  34  57 676  54 832 897  18 887 617 874 861  11 110 114 586 700  30 120  31 681 800  51 479 890 179 175
 752 653 895 129 696 896 562 601  82 872 111 183  95 158 774 328 517  80 659 122 128 595 542 877 634  72 515  99 578 310
 169 274   1 165 889  61 875 573 829 883 177 146 818 238 815 558 762  29 801 201 267 284 197 682 839 209 783 131 130 729
 735 718 115 151 255 864 870 661 140 537 171  98 727  60 844  92 776 390 868 217 230 366 258 825 575 105 803  89 243 732
  70 826 294 302 156  67 502 582 817 891  85 894 757 307 232 125 277 290 280 878  43 213 771 134 841 224 851 843 286 677
 178 706 205 187  68 176 699 858 124 332 269 181 651 881 145 572 731  88 638 850 389 141 714 725 835 163 814 334 580 281
 445 658 275 425 239 376 811 758 799 316 645 760 730 237 136 329 557 174 242 245 180 283 671 782 340 400 789 186 410 317
 247 354 287 259 272 350 863 639 313 689 215 364 766 413 216 683 589 262 392 189 873 220 842 823 296 373 560 137 233 796
 191 388 790 279 386 303 609 779 231 330 306 299 809 227 261 418 703 235 369 728 584 301 885 738 348 119 821 381 362 335
 305 520 346 345 405 396 538 860 295 343 854 399 333 379 365 804 419 319 358 494 672 337 869 370 347 320 492 357 336 338
 339 251 391 444 250 385 805 886 256 367 142 509 438 474 736 773 460 240 726 353 561 437 249 246 417 434 648 407 539 352
 321 372 221 456 550 293 493 506 491 355 403 482 484 318 398 781 406 383 359 263 569 554 593 468 368 446 532 552 218 880
 402 498 380 514 442 501 433 454 626 384 478 360 424 602 476 527 342 605 411 461 512 473 451 549 371 324 486 298 487 244
 435 394 408 323 847 426 412 393 553 616 285 472 465 504 567 420 361 480 308 288 297 401 450 497 503 470 614 530 409 387
  59 466 453 309 477 423 421 457 488 535 208 440 555 463 395 374 541 579 559 147 431 585 430 510 547 521 327 523 649 643
 382 529 633 443 495 548 253  21 322 447 583 257 526 518 777 282 375 784 448 588  20 499 102 551 571 540 432 500 556 533
 439 563 436 489 603 640 266 576 397   6 511 544 291 455 428 341 599 458 525 545 326 469 462 505 192 631 155 669 513 481
 568 449 704 646 607 592 304 271 597 664   4 624  86 524 516 268 188 519 485 707 264 471 629  27 594 667  84 674 534 248
 619 236 490 613 641 496 150 162 590 565 459 722 149 574 692 152  90 600 743 660 344 733 598 184 636 475 107 665 254 116
 604 622 694 608 644 581 160  53  78 144 753 690  91  28 635 668 662 785  42 441 810 452 200 195  12 705 289 414 675 780
 719 166 546 483 686 620 159 229 693 536 564 708 234 625 219 761 193 618  10 716 742 765 121 153  76 570 198 709 652  44
 794 194 632  58 161 610 118 214 543  47 712 630 228 701 577 325 167 695 691  64 621 828   5 628 378 755 172 685 670 612
 717 148 830 806 429 853 143 312  25 657 772 154 596 655  56 713 223 827  17 744 740  16 697   3  26 642 173 749 680 112
 754 106 808 792  14 615 331 464 747 127 793 711 363 611 739 404 679 807  87 522 836 606  49  37 203   8  97  41 737 427
 797 654  33 756 720 724 210 315 157 182 837  36 702 698  35 467 300 531 132 133 812 795 750 656 185 834  19 768 204  73
  74 688  22 824 846 104 199 222 787  63 767  71 566 225 276 684 831 748 769 311 356 820 270 206 666 849 349  81 775  66
 798  52 819 867 802 813 139 351 190  46 741  40 226 123  39 759 764 791 212  77 840 778 422 252  48 876 265 710   2 673
 528 202 833 746 786  15 273 260 687  13 751  62  24 168  45 770 745 788 314 508 848 734 882 292 207 857  75  23 663 416

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.37704e+06us (= 5377.04ms, 5.37704s)
Wall-clock time (full program): 5.44009e+06us (= 5440.09ms, 5.44009s)
Satisfaction error: 0
Number of search iterations: 2411
Number of local moves: 1178 (including on plateau: 651)
Number of local minimum: 146 (including on plateau: 50)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18114
Total number of local moves: 10456 (including on plateau: 6169)
Total number of local minimum: 950 (including on plateau: 442)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 463 289  60 141   8 809 798  46 880 813 399 764 103 276 825  39 137  18 170 748 871 338  98 855 818 832   6 297 753 861
 593 187 585 840 793 136  24  72 884 544 828 781 322 741  21 216 279 805  97 869 755 727  82 847 207  25   7 797 416  35
 790 118 474 737   3 227  29  94 719 740 776 490 287 205 835 752 145 842 315 277 794 834  22 697 783  37 836  17 614  26
 802 325 545 507 777 691 646 181 812  79 242 708  93 742 710  48 222 800  70 282 837  11  32 680 767  31 889  53 853  80
 787  61 756 672 500 206 700 221 863 112 729 831  56  77 688 211 703 743  51 388 613 846  50 458 717  15   9 750  16 686
 645 179 801 826 644  14 707  95 633 403 340 358  33 824 596  69  30 856 698 114 778 664 193 736   2 121 705  65 733 653
 713 768 665 784   5  89  62 214 692 627 115 524 153 176 726 684 328 747 735 401 291 656 350 119 591 309 635 640 712   4
 652 200 711 564  19  40 427 239 651 779 730 575  87 606 724 557 102 731 607  91 120 746  12 678 619 150 615 612 723 148
 589 240 365 675 600 330 670 515  13 570 487 172 197 709 811 479  63 574 626  75 293   1  44 757 630 603 620 582 594 631
 634 146  96 528 667 542 541 232 580 101 201 659 655 470 639 501 126 567 405  64 714 561 303 517 693 245 406 485 608 629
 505 194  55 647 454 111  43 460 583 514 122 605 266 571 491 638  38 628 499 472 362 732 533 581 546 314 770 549 611 621
 592 495  20 437 609 400 601 375 519 469 171  76 624 558 555 648 486 610 144 110 535 562 442 525 584 160 616 480 599 513
 586 268  45 563 547 432 576 414 618 440 520 407 306 318 548 455 439 447 529 124 445 334 299 494 552 393 509 560 679 668
 488 493 269 436 579 481 424  81 489 569 357 744 475  92 502 543 622 376 415 512 498 473 262 354 540 530 464 511 409 527
 428 577 252 554 341 632 539 305 568 503 466 556 378 359 425 295 431 551 452 397 459 443 385 348 587 370 339 476 449 650
 578 374 369 364 453 467 510 451 426 677 446 344 518 496 456 335 313 522 382 324 537 384 435 531 434 478 649 360 508 394
 373 521 482 402 361 372 497 526 366 391 598 483 379 422 728 311 637 822 332 323 292 380 553 410 462 308 347 516 383 538
 395 191 392 849 694 389 363 696 377 386 673 433 381 368 317 265 468 441 420 285 411 457 602 304 429 444 404 465 808 408
 320 851 704 346 275 327 806 484 438 866 244 844 343 178 345 281 312 217 725 720 643 302 565 180 352 236 387 430 371 423
 819 660 226 417 355 241 771 461 260 419 754 738 307 413 264 418 859 333 351 795 336 316 566 298 342 573 353 225 396 249
 337 722 769 326 471 838 301 641 129 267 796 192 623 190 140 349 761 288 255 868 820 506 654 259 300 751 256 186 270 250
 331 883 683 188 390 253 257 536 294 450 810 189 865 862 278 310 873 210 198 833 687 168 718 356 246 636 271 182 274 284
 296 898 666 143 367 891 215 874 133 852 248 219 860 867 230 263 882 251 166 234 319 885 857 229 130 674 142 329 164 231
 218 706 782 107 163 848 398 421 154 233 220 829 827 212 273 477 788 286 858 681 702 105 595 896 280 821 237 177 113 108
 139 213 243 258 151 900 550 875 283 886 492 504 721 238 157 899 224 125 572 682 116 152 814 272 878 854 235 888  59 135
  71 765 534  99 807 159 876 671 204 223 321 185 839 162 131 823 780  28 174 662  84 195 758 739 716 763 843 169 109 625
  47 893 617 892 661 642 149 870 199 127 448  73 559 604  78 895 590 202 734 685  34 132 804 147 100 412 845 261  66 749
  54 523 887 128 156 715 772 799 658 183 155  57 803 850 173 123 532  90 877 699  27 701 791  86 117 760 184 695 161 759
  42  85 208  36 890 745 175 785  67 134 138 165 792 762  83 816 676 196 786 597  74 657 879  58  41 773 830 894 290 841
 228 690 254  49 775 588  88 881  23 158 689  10 663 167 766 815 669 209 872 203  68 247 817 104  52 897 106 864 774 789

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.77221e+06us (= 3772.21ms, 3.77221s)
Wall-clock time (full program): 3.83625e+06us (= 3836.25ms, 3.83625s)
Satisfaction error: 0
Number of search iterations: 1395
Number of local moves: 758 (including on plateau: 302)
Number of local minimum: 72 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9025
Total number of local moves: 6115 (including on plateau: 2083)
Total number of local minimum: 438 (including on plateau: 158)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 173  51 743 896 803 857 535 142 650 709 135 690  61 674  47 569 795  64 885  54 171 613  21 761  67  85 732 140 880 512
 270 888  34 848 475 846 754  49  55 758 608 172  60 875  89  70 870  22 871 158 117 632 164 558 850 806 635  43 890  48
 694 132 734 730 839 802 598 149 113 862  77  90  53 669 199  71 788  94 856  35 221 648  11 580 872 129 760 883 787  39
 874 170 153 342 762 742 855 168 127 749 780 271 138 887 141 666 797 100 808  74 137 791 195 314 759 782 176  80 544 133
 708  73 167 796 898 747 616 640 188 863 667 625 169 631 201 193 784 327 882 218 155 878  72 804 103 118 541 108 182 161
 705 239 130 877 815 576 752 214 356 753 179 196 842 192 174 716 318  62 114 452 198 751 116 231 886 737 879 124 809 122
 773 765 868 500 692 864 415 441 150 829 828 222 157 204 212 585 275 272 273 183 251 776 391 899 267 181 662  96 260 224
 490  86 156 799 651 655 277 893 257 619 288 145 139 290 247 444 849 186 159 240 310 891 897 884 143 819 798 287 332 284
 492 177 225 786 673 717 549 253 892 676 255 295 248 889 299 696 321 254 217 136 609 685 264 645 250 294 351 350 205 812
 735 343 280 615 532 859 736 300 292 712 323 326 309 276 303 268 283 408 165 519 827 677 661 682 315 337 360 296 447 329
 522 189 345 542 895 455 653 359 465 450 900 208 412 298 346 654 190 634 461 495 320 515 375 289 259 482 624 471 473 234
 833 331 265 894 641 451 409 330 322 302 285 672 374 382 233 837 373 344 293 191 396 386 463 820 785 336 433 235 368 531
 721 462 367 573 711 511 340 404 432 312 428 328 413 297 384 845 325 652 537 644 434 401 361 324 333 338 589 383 355 311
 252 307 258 571 501 560 881 467 369 335 347 261 540 725 552 349 517 456 436 306 470 387 371 313 518 448 376 867 394 381
 400 422 476 514 385 429 319 308 301 498 424 457 305 527 485 479 442 417 538 410 509 478 398 466 439 474 486 458 876 395
 516 416 446 554 316 469 245 449 460 354 364 503 420 431 505 405 481 362 539 493 525 414 489 426 508 487 390 438 597 513
 403 502 380 370 406 353 543 567 497 491 352 468 363 494 185 658 561 304 372 453 480 379 496 407 488 418 592 477 668 388
 520 526 564 358 282 411 582 521 499 575 566 365 472 419 443 459  38 242 530 551 614 274 483 637 559 430 555 377 594  69
 202 565 402 348 226  99 229 586 581 529  29 547 533 546 523  78 660 510 425 389 601 587 550  58 557 680 578 629 698 570
 378 596 646 399 215 357  40  31 556 600 160 534 545 647 621 237 562 572 504 206 675 602 577  66 266 626 579 445 656 617
 120 713  18 279 423 286 236 664 620 203 568 528 723 506 618 484 603 588 548 606 269 249 553 610 623 591   7 695  10 574
  93 770 638 152 197 228  45 590 256 246 605 437 783 106 720 101 728 454 794 670 607 244 584 121 604 599  42 595 756 750
 128 691 710 281 291 184 642  41 612 366 764 563 775 166 622 241 689 778 507 678 583 200 102 633 701 125 154  24 628 636
 107 746 722  17 341  95  81 630 744 111  28 679 748 755 731 216 263 627 823 741 649  98 238  13 524 657 726 665  57 683
 339 639 151   4 211 464 727 847 659 180 688 818 703 119 593 334 686 715 148 697 194 317 757 230 421  63 243 745 104 719
 163 769 774  20 175  56 213 873 733  76 643 763 693 393 814  68 144 729 702 699 706 134 766  92   9   5  26 822 687 768
 838 825 671  52  37  82 262 663  32 123 110  14 830  79 841 858 105 865  65 718 851 209 817 427 611 824   3 811  87 805
 278 781 536 178   1 210  46 861 738  19 810 789 831 684 740 440  16 792  25 854  12  27 836 162 739  97 771 397  44 801
 700 232 816  33   6  59  75 852 724  84 435 772 793 207 826 681   2 832   8 779 834 146 800 219  36 704 227 807 112 714
  88 109 840 187 115  91 860 223 835 131 869 777  83 147 821 813  50 853  30 866 790 126 707 844  23 843 220 767  15 392

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.38441e+06us (= 3384.41ms, 3.38441s)
Wall-clock time (full program): 3.44808e+06us (= 3448.08ms, 3.44808s)
Satisfaction error: 0
Number of search iterations: 1006
Number of local moves: 829 (including on plateau: 290)
Number of local minimum: 33 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7472
Total number of local moves: 5989 (including on plateau: 2136)
Total number of local minimum: 220 (including on plateau: 140)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 706 205 271 623 157  54  53  30 372 827 751 787 762 812  95 191  47 149  59 639  94 825 856 105 819 708 154 846 620 898
 885  12  60 798  90 859  55  41 666 127 768 813 823 673 259  74 106 170  56 217 785 746 636 114 697 513 618 872 891  91
 838 212 789 256 142 131  26 183 815 644 579 692 880 683 540 155 130  35  57 560 822 756 508  85 637 847 189 890 390  44
 888 220 520 842 135 893  52  29 125 460 225 494 807 727 782  66 190 350 113 834 153 854 268 138 695 796 900 498 411  50
 894 197 427 147 226 771 120 779 871 542 172 281 792 656 575  28 285 115 336 136 308 619 741 305 895 824 877 229 233 134
 862 162 236 121 171 873 696  70 835 468 860 774 760 759 735 158  69 234 119 565 767 836 300  48 332 392 230 358 342 383
 161  32 621 185 174 169 776 132 462 726 530 710 763 764 876 128 160  84 244 687  68 883 742 719 715 223 845 192 265 479
 884  87 432 235 304 333 693 861 851 711 832 198 441 783 788 249 216 126 181 143 218 848 435  93 747 875 232 201 255 263
 207 734 855 403 188 262 732 139 180 892 841 457 382 684 865 344 151 341 177 801 195 278 805 273 247 264 270 186 493 869
 260 380 356 243 275 241 231 458 761 722 818 211 533 624 738 145 357 274 395 652 811 437 276 421 594 242 795 323 658 284
 222 335 897 896 208 272 657 251 886 486 209 318 757 750 240 527 325 200 291 362 414 374 830 295 517 340 224 248 326 858
 419 239 754 550 299 363 699 310 410 503 703 606 353 213 515 315 313 448 797 674 391 334 430 420 301 298 321 280 443 814
 399 385 881 330 429 400 833 444 638 402 605 348 434 331 293 394 237 431 329 438 482 373 412 366 296 423 422 338 899 523
 261 878 487 480 294 409 868 343 748 451 775 439 314 685 364 351 381 424 484 388 472 386 445 252 179 111 442 613 387 404
 379 393 398 312 772 428 870 488  99 347 267 290 512 320 679 279 349 317 475 561 694 307 504 536 647 466 496 553 455 322
 526 408 436 499 574 277 506 354 572 175 453 367 389 551 238 505 564 469 440 592 359 667 532 376 509 546 626 544 122 339
 516 510   5 483 375 559 463 502  39 283 327 464 413 554 552 576 446 288 534 501 556 630 661 522 604 528 675 407  72 470
 397 581  61 309 677 627 485 676 558 319 447 599 184 531  51 718 371 539 595 165 416 580 490 645 302 476 555 492 219 450
 635 628  62 625 328 287 500 406 461 110 491 182 583 292 591 449 729 405 730  21 631 481 525 608 246 571 602 549  43 744
 456 471  79 541 629 537 569 660 474 148 203 401 101 495  17 607 646 688 597  82 524 454  65 616 585 705 700 600 137 728
 593 518 204 640 568 507 368 573 614 282 415 601 489 193  38 589 578 570  11  25 584 651 664 649 324 582 452 590 176 467
 548 511  49 426 671 632 303 609  36 107  77 199 529  46  16 721 563 784 611 369 603 266 562 543 465 707 668 749 610 535
 144 820 662 655 720  33 384 598 250  40 473 104 521 586 228 654 545 641 794 215 678  78 196 206 612 164 316 829 665 704
  37 866 346 642 418 538 514 670 663 577 109 617 210  20 133 659 634 567 739 378   9  71  83 588 680 753 714 691 587   2
 141 770 365  58 653  15 477 828 297 701 360 740  97  67 425 713 863 777 361 497 686  89 725 633  81 766 146 566 478 140
 194 615 547 643 853 810 370 698 156 116  45  64 117 377 672 709 850 843 733 254 245 187 118 650 102   4 669 826 791 257
 622 773 731  19 745 689 311 214 227 221 557 306  86  34 355 831 882 887 816 417 737 112  23 840 345  80 129  31 793 702
 286 682 519 743 780  98  75 690 253 802 108 758 258   8 809 803 790 716 837 786   6  76  42 808  13  18 123   1 821 806
  92  27 817 723 781 712 396 755 100 867 178 681 152 124 202 799 849 769 752 839 800 167 289 857 166 269  22   3 168 159
  63 864 648  88 879 736 433 724  96 459 337  14  73 173 844 778 889 874 852 717   7 150 352 804 163  24 103  10 765 596

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.93907e+06us (= 3939.07ms, 3.93907s)
Wall-clock time (full program): 4.00193e+06us (= 4001.93ms, 4.00193s)
Satisfaction error: 0
Number of search iterations: 1358
Number of local moves: 830 (including on plateau: 349)
Number of local minimum: 83 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10425
Total number of local moves: 6572 (including on plateau: 2444)
Total number of local minimum: 577 (including on plateau: 192)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 380 893 891 882 618 880  77  53 132 771 258 666 752  28   7 871 117 884  61 629 114 748 141 110 872 807  24   2 158 689
 128 706 528  39 727 723 246  71 136 875 147 140 690 853 655 822  78 118 495 620 100 707 683 663 835 673  30  85 818 124
 237 183  79 119 756  69 718 878  38 895 192  59 739 851  88 862 883 721  54 670 226 865 750 104 384 836  62 877  68 252
  73  58 787 376 664 106 271 215 164 784  83 339 145 845 131 241 847 695  31 697 163 678 889 824 651 885 899 186 728  60
 174 265 314 676 886 649  48 881 832 516 173 204 830  82 491 231 238 214 152 778 493 823 844 240 575 648 233  91 795 139
 385 601 569  99 779 552 116 229 206 189 151 797 837 761 451 724 232 843 111 840 279 769 744 202 757 656  43  94 305 194
 198 248 870 122 717 368 864 205  75 157 138 179 802 218 806 720 567 167 184 860 108 715 796 900 834 811 166 313 259 148
 190 856 270 243 813 852 208 553 266 200 325 866 448 149 353 416 170 780 287 733 336 619 722 256 781 599 490 178 292 264
 188 626 867 317 633 512 311 611 890 320 321 362 160 220 765 609  74 892 236 803 222 573 329 185 828 603 207 277 300 274
 340 354 785 424 440 586 331 833  90 747 377 312 334 223 596 660 195 396 244 790 894 737 267 367 773 613 159 272 165 211
 410 282 808 346 593 863 442 281 652 421 681 701 242 521 386 668 420 203 316 534 402 301 221 296 684 557 280 374 308 322
 278 428 411 326 854 640 429 324 337 439 590 539 484 415 841 394 294 540 530 387 355 537 419 251 497 565 209 318 483 401
 486 201 263 550 610 630 268 341 347 456 345 310 896 464 426 422 332 604 393 399 269 304 395 388 897 612 624 391 485 407
 352 427 297 382 527 383 371 446 328 379 348 361 554 511 425 375 675 363 475 637 299 898 474 373 509 636 587 351 315 457
 467 381 344 433 408 513 400 378 531 480 360 447 389 496 523 412 519 449 434 398 370 453 508 533 409 520 561 472 504 423
 430 350 365 564 502 130 693 454 406 501 458 488 364 455 319 417 529   5 650 461 584 559 526 460 580 342 390 435 562 536
 288 438 197 444 600 445 253 476 489 583 437 443 468 359 541 463 570 525 499 591 466 558 441 503 566 286 473 551  20 542
 465 418 688 606 366 450 469 482 602 700 343 589 257 478 414 518 470 462 479 303 510 356 481 477 144 255 608 535 492  98
 595 517 641 155 289 330 522 235 546 574 494 524 572 644 459 392 403 597  34 283 471 452 563 577 133 260 617 543 545 548
 547 614 692 594 199 230 121 592 571 498  10 487 436 710 262 212 532 621 358 196 598 250 645 549  57 273 704 579 698 680
 576 694 137 643  65 323 568 225 607  15 397 369 632 333 123 646 615 738 687 556  89 172 671 642 227 291 801 759 605 309
 555 657  29 634 234 247 776 667   3 702 538 786 730 182  84 181 514 661 821 293  70 146 500 622 129 306 349 585 716 798
 665 153 696 775 101 307 544  37 625 515 616 191 647 799 150 109 506 582 708 187 623  13  12 719 175 239 658 686 745 732
 588 228 295 699 261 372 102 783 669  96 691  21 635 677 335 120 791 631 766 105 770 143 726 134  67 142 431 709 792 736
 662  93  41 825  45   4 758 740 685 679 869 742  49 714 249  97 628 653 763 135 659  16 115 746  23 168 639 762 156 800
 782 357 217 703 405 290 507 578 581 560 842  47  81 404 760  66  33 127 674  56 729 731 125 810  72 505 814 768  76 815
 627 793 302  46 169 725 887 275 327 107 816 743  50 113 812 839 638  14 753 176 741  44  25  40 254  35 754 820 879 711
 826 848   6 682 126  55 734 873 804 298 859 171 177  42 831 162 777  18 764  95 874 103 284 705 245 285 180 654 161 876
 735   8 276  17  92 849 672 713 827  26 788 774  64 755 413 712 805   1 789 216 846 193   9 817 219  27 772  19 224 857
 888 838 850 794  36 432 809  86 749  32 868 858  51 213 819 154  63  11 767  87 855  52 210  22 338  80 751 829 861 112

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.3375e+06us (= 4337.5ms, 4.3375s)
Wall-clock time (full program): 4.40123e+06us (= 4401.23ms, 4.40123s)
Satisfaction error: 0
Number of search iterations: 1752
Number of local moves: 1145 (including on plateau: 552)
Number of local minimum: 65 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11753
Total number of local moves: 7969 (including on plateau: 3888)
Total number of local minimum: 535 (including on plateau: 306)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 891  30  62 176 815 664  78  88  67 646  89 813  68 157 343  19  73 897  91 547 698 732 873 841 821 876 132 889 145 894
  25 890  57 111 734 818 725 690  59 825 130 862   9 103  29 124  51 598 866 600 102 610 743 835 860  34 668 886 357 114
 174  15 899 522 163 730  95  61 820 505 140 806  13 113 570 767 896 790 152 660 852 715 106 812 856  71 772  46 256 138
 227 168 115 535 857 829  33 148  23 827  75 142  40  77 745 819 542 603 559 639 626 795  81 443 777 737 867 125 868 193
 117 186 844 696 887 845 129 299  37  79 838 762 196  44 883 830 595 895 173 399 699 278  80 255 418 863 110 226 395 457
 232 224 101 712 750 568 162 166 118 892 754 692  94  41 580 236 593 801 202 874 216 677 219 234 880 751 354 817 344 231
 178 177  83 879 596 729 900 220 241 761 223 159 156 158 854  87 805 589 203 248 888 786  72 785 803 766 669 146 109 245
 131 267 265 707 128 551 238 814 309 242 249 348 884 259 742 340 792 811 456 837 252 524 483 700 636 320 613 206 100 311
 605 120 322 870 331 655 197 304 834 307 239 189 144 151 878 261 674 882 136 823 244 240 438 303 885 851 648 291 355 338
 221 305 270 680 358 670 312 268 282 738 155 388 337 317 763 181 617 676 205 705 495 877 247 421 656 864 701 288 222 296
 184 210 295 853 225 665 408 342 286 275 573 449 356 367 791 361 678 318 319 871 411 727 364 283 653 604 642 520 228 257
 663 376 233 499 351 695 235 397 328 323 400 532 368 424 629 432 728 560 633 519 353 260 346 306 621 434 788 208 439 435
 409 272 433 345 326 898 828 277 410 417 694 545 462 352 294 893 640 472 394 292 450 192 339 333 470 321 437 585 369 366
 336 335 461 405 385 516 334 563 332 587 460 404 372 783 488 190 510 540 382 784 363 431 250 571 569 504 538 583 413 126
 804 667 426 360 327 590 330 383 392 419 471 380 485 416 467 539 415 422 407 302 430 579 362 478 479 402 386 489 401 507
 444 412 512 575 565 486 308 501 514 414 448 476 359 274 175 398 632 511 455 473 500 552 427 420 262 480 534 403 502 503
 463 561 533 468 544 396 474 137 370 381 436 389 465 521 390 466 425 428 290 440 577 597 537 487 375 347 578 391 572 477
 454 619 618 517 576 237 525 329 527 374 564 264 582 490 625 384 314 553 647 452 207 213 482 496 377 611 172 498 550 258
 650 541 546 214 607  70 509 557 693 251 200 508 494 558 529 453 513 371 445 143 645 484 562 442 373 164 447 506 548 492
 543 554 446 608 634 310 588 592 627 497 451 515 298 686 273 387 458 229 602  96 584 179 315 614 116 531 183 518 526 555
 393 567 697  14 591 287 675 628 594  56 481 719 581 556 169 683 271  60 757 185 209 469 731 651 276  11 341 630 530 703
 666 624 643 195  97 279 601 765   7 637 574 631 799 749  49 661  69 365 652  54 616 134 659 691 284 199  98 429 673 615
 623 702 612 246  16 204 528  48 755 718 687 620 638 464 217 689 170 161 744 127 770  65  53 721 154 654 107 606 657 759
 349 641 726 182 671 266  27 740 635 679 549 119 756 586  52 789 218  36 688 649 379 350 724 201 149   5 301 774 566 708
 406 723 717 300  10  58 771 644 475 716 658 709 599 875 167 685 269 198 780 122   6 622  17 776  45 378 285 733 672  99
  42 822 758  76 108 187 826 722 684 191 609 753 773 752 313 768  39 141 775  18 720   8 710  28 153  63  55 764 796 861
 741 682 735  84 104  90 802 739 787  31 263   2 847 782  47 793 289 297 662 325 112 293 809 147 211 536   3 748 747 807
 869 736 831  92 849 105 212 810 704 165 798  93 779 778 316  12 230  85 794 324 254 135 839  22 180 139 769  66 681 848
 832 281 243 713  64  35 865 760 781 121 491  86 706 840 714 194 150 188  26 836 833 711 797   4  43 746 459 123   1 872
 843 808  32 881 846  82 800 523 824 441 816 160 855 842 423  74 859  38  20 171  24 280 850 215 133 253 858  21 493  50

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.81826e+06us (= 3818.26ms, 3.81826s)
Wall-clock time (full program): 3.88504e+06us (= 3885.04ms, 3.88504s)
Satisfaction error: 0
Number of search iterations: 1369
Number of local moves: 909 (including on plateau: 403)
Number of local minimum: 42 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10003
Total number of local moves: 7824 (including on plateau: 3928)
Total number of local minimum: 467 (including on plateau: 283)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 109 871 824 672 677   9 855  91 556 797 169 773  98  59  95 689 261 626 718  51 746 602 805  43  20 831 888  54 500  26
 800 900  78 532 883   7 132 107 874 784  81 745 177  60  75 788 639 573 711  31 756 826 762  87  15 838  86 721 310 137
 829 794 700 823 828  41 504  63 771 792  45 796 234 249 129 811 801 484 697 116 601  96 779  40  25 106 156 494 589 122
 112 105 167 136 671 876 815 164 702 814  64 667 159 199 149 887 557 527 822  67 567  58 798 268  38 878 864  56 785 543
 217 661 126 868 577 102 174 643 513 210 555 719  99 183 269 830 263 716 880 293 598 741 808 110 181 224 139 184 747 885
 201 140 844 670 769  80 162 153 820 770 138 659 121 223 163 186 731 640 895 185 782 205 889 148 812 321 190 228 629 761
 270 765 242 685 609 179 873 170 833 807 206 744 141 244 142 691 277 799 886 154 897 233 763 207 171 113 204 203 832 175
 236 155 424 861 810 319 173 882 583 366 302 665 599 108 229 360 297 863 730 239 898 320 580  46 216 787 259 192 724 292
 367 243 554 748 774 178 875 274 755 248 168 699 381 198 510 104 749 318 338 151 870 877 753 225 208 194 379 264 751 362
 342 391 575 674 334 550 853 395 303 394 301 834 306 330 285 230 280 738 669 357 735 417 654 331 323 222 311 305 894 182
 220 397 754 750 284 650 328 191 891 348 219 881 291 166 327 346 783 752 276 426 492 476 574 339 315 449 372 267 586 365
 245 262 333 843 336 509 369 329 414 490 398 231 238 349 632 341 825 818 506 241 896 498 402 403 355 401 343 431 694 383
 375 340 705 517 478 653 298 347 441 296 312 679 428 373 404 304 572 468 407 378 529 857 433 539 257 386 388 523 345 483
 439 309 423 356 385 772 325 281 326 452 443 649 497 353 251 387 695 668 368 453 514 819 427 352 422 467 440 464 359 419
 389 416 413 435 536 524 316 465 438 380 544 436 548 480 458 884 518 442 286 273 322 459 420 499 537 410 444 522 350 371
 415 463 473 384 430 474 502 482 363 445 448 421  30 434 405 559 488 454 630 623 283 461 535 511 400 526 457 534 495 390
 475 489 479 503 519 212 485 409 376 545 501 446 429 512 456 627 491 406 135 520   3 633 487 396 563 673 335 471 462 477
 496 486 145 460 569 507 558 698 354 662 616 252  14 521 664 552 213  71 549 288 651 411 516 533 614 450 621   8 628 408
 392 734 275 165 578 144 130 625 508 660 604 377 469 470 505 579 324  89 530 641 374 538 180 591 680 642 666 600  13 432
 515 587 364  50 253 358 553 611 300 493  37 250 617 605 594 568 603 127 759 622 256  77 541 525 576 551 683 547 235 658
 546 688 196  88 681 676 606 561 226 531 675 115 608 656 299 585 125 278 258 657 399 540  27 564 176 715 706 631 131 571
 634 592 370  68 118 714 620 613 294 472 615  23 597 648 726 528 114 119 425 565  29  35 221 618 809 635 588 821 308 596
 684 678 581 290 157 313 696  61  11 781 728 133 786 638 382 637  57  66 202 739   2 687 607 593 590 701 727 704 215  69
 708  39 566 287 188 412 101 710  16 732 827 227 703 663 847  44 128 282  28 780 100 723  62 740 647 778 655 562 314 646
 612  70 729 172  55 760 254 837 189   4 595 237 806 776 619 645 725 690 146 692  48 624  24 686 712 209  10 582 158 849
 560 764 803 610 437 768 197 793 103  42 737  94 720 707 845  97 542 152 124 693  82 337 111 713 757  21 717 866   6 117
 636 418  47 211 255 766 736  74 240  73 777 195 890 804 722  53 260 271 214 841 193 447  65 879 791  84 840 584 307 842
 709  34 123 295 200 361 789 846 839  12 743  19 865 775 893  17 451 272  18 852 466  49  22 835 848 817 247   5 246 867
  90 652 344 279  92 859  93 850 289  79 816 232 862 860 682  52 265 351 147 733 160  76 150 795 644   1 767 856 570 869
 892  72 858  83  32 742 143 790 187  36 851 317 802 872 758 134 481 455 161 854 266 393 120 899 813  85  33 836 332 218

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.70964e+06us (= 3709.64ms, 3.70964s)
Wall-clock time (full program): 3.77261e+06us (= 3772.61ms, 3.77261s)
Satisfaction error: 0
Number of search iterations: 1286
Number of local moves: 675 (including on plateau: 265)
Number of local minimum: 61 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9452
Total number of local moves: 6972 (including on plateau: 3131)
Total number of local minimum: 350 (including on plateau: 236)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 873  96 883 650 151 533 694 758 835 688 116  45 735  38  61 553 888  90 760 573  30 731 799 123 840  48 152 135 609  28
 726 578 879 715  37 733 882 190 785  69  56 129 197 892  29 644  85 752 700 143 848 570  15 675 716  89 552 619  93 117
 884 757 877 649 153 856 170 826 844 131 176 100 881  74 196 120 893 191 805  35 115 897 831 166 795  84  76 108  55 770
 673  67 617 253  25 744 101 822 839 158 147  83 847  70 340 592 885 880 133 205 526 796 862  17 813 867 301 104  27 721
 709 230 778 833 559 714  49 824 818  75  19 145 863 141 183 852 891 743 337 173 146 707 530 207 667 159  86 165  97 815
 773 866 285 858 157 766 136 210 722 181 545 347 830 119 134 889 203 308 670 171 132 878 868 124  68  94 581 585 750 265
 596 121 601 774 239 857 887 148 268 213 344 226 254 188 233 894 355 890 215 155 150 886 330 685 819 227 745 362 629 224
 790 109 784 853 212 865 339 871 277 163 244 256 255 236 388 297 298 586 260 126 276 680 870 229 767 269 279 593 864 479
 118 200 737 252 352 642 246  43 869 676 238 247 271 237 374 895 899 199 843 180 128 245 620 390 656 278 272 751 854 803
 787 175 286 313 288 672 262  79 348 900 463 375 633 222 292 316 368 634 832 394 872 430 328 261 579 240 249 765 315 837
 318 746 411 396 372 305 223 154 235 400 613 304 275 219 326 351 624 551 691 798 353 875 314 325 363 332 616 474 692 859
 214 768 657 263 323 365 306 836 718 841 251 834 371 217 317 334 294 635 575 234 300 437 169 282 376 193 820 804 320 461
 561 861 367 438 354 383 419 424 391 333 458 324 258 382 341 346 395 896 850 377 544 429 397 455 648 426 321 342 512 283
 482 464 284 366 449 443 410 408 467 291 468 471 385 541 358 459 343 488 641 302 357 386 392 460 536 452 771 618 418 605
 412 336 486 671 433 403 311 477 384 434 405 498 759 427 445 431 470 425 417 489 564 496 266 389 312 475 518 522 440 420
 399 493 369 387 407 554 422 446 299 450 441 432 413 502 500 187 550 439 508 562 379 484 447 546 569 436 499 380 491 524
 414 462 456 529 556 505 532 540 469 557 381 350 472 289 515 531 406 309 539 421 448 525 514 485 356 504 168 327 444 511
 520 669 591 478 543 480 587 442 576 494 465 466 483 267 528 497 517 139 208 523 487 495 583 602 398 409 416 156   6 490
 378 589 310 415 112 597 242 594 548 435 345 627 476 614 598 639 503  95 107 607 574 608 560 590 521 636 189  47 630 329
  53 527   1 555 513 637 401 610 621 600 179 719 547 506 509 451 538 201 423  82 623 572 611 507 186 453 404 567 264 655
 683 668  21 615 664  60 738 728 652  13 568 290 786 632 659  92 687 577 393 646  98  54 370 628 231 640 428 218 604  72
  80  73 331 595 612 270 571 563 216 661 647 516 626 689 638  62 373 580   5 686 537 257 535 663 195 723 519 319 481 492
 209 287 622  31 684 402 679 643 307 274 681 703 164 651 708  23 697 584 185 677 542 127 114 654 149 693 501 706 113 705
 678 712 293  88 665 140 780 732 211 599 645 720 699 756 725 742  33 701 241 674 753 177   8   9 221 764 232 280 172  65
 167   7 565  91 730 122 695 747  26 454 696 662  16 809 776 729 717 144 192 762 606 248 534 220 174 860 739 736 259  32
 194 740  34  81 653  77 748  71 510 754 791 698 182 682 660 775  50 713  14 335 690 204 303 588 625  12 845 473 225 788
  39 349 558 800 851   4 711  59  10 806 710 777   3 828 666 198  78  66 566 808 103  42 184 781   2 763 811 658 827 457
 130 704 338 160 838 178 801 137 202 802 823 549  22 829 296 110 206 295 360 794 793  63 782 816  40 855 582  20 631 359
  52 797  36 125 741 102 162  46  24 361 779 812 761 734 874 142  41 161 772 769 749 105  57 789 755 727  18 898 876 250
 603  64  58 281 842 106  11  87  44 702 821 810  51 724 846 364 228 243 273 814 792 111 322 849 138 807 825 783 817  99

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.89537e+06us (= 3895.37ms, 3.89537s)
Wall-clock time (full program): 3.96e+06us (= 3960ms, 3.96s)
Satisfaction error: 0
Number of search iterations: 1393
Number of local moves: 760 (including on plateau: 302)
Number of local minimum: 69 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10475
Total number of local moves: 6887 (including on plateau: 2947)
Total number of local minimum: 578 (including on plateau: 222)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 900 781 123  30 154 113 161 666  98 886 535  86 864 665  90 808 146 642  62 174 144 883 831  84  81 897 100 888 747 876
  50  26  32 894 550 893 591  37  77 820 620 101 807 163 891 805 274 868  69 153 140 625 829 105  97 639 687 712 877  83
  94 791 595 291  72 884 380 542 119 694 501 365 846 164 214 734 115 587 127 671 171 549 688 108 525 284 579 873 836 116
 166 215 825 700 221 147 381 818 269 658 661 202 800 812 111 114  92 857 106 567  85 872 751  75 107 727 606 722 686 162
 143 229 138 177 248 898 610 188 802 699 752 176 815 789 128 771  74 844 204 887 167 544 150 234  68 607 796 584 739  54
 184 240  63 137 262 871 195 654 731 230 748 267 245 358 728 822 139 889 149 228 155 827 577 181 337 133 882 782 821 680
  80 193 203 256 210 828 342 103 813 383 634 225 252 255 227 278 282 741 402 823 178 896 554 866 670 419 795 664 778 165
 277 355  36 169 185 302 683 860 307 890 711 359 247 190 254 189 454 855 132 765 244 736 885 180 124 804 749 572 645 356
 222 374 136 156 172 266 483 618 875 183 797 187 226 309 841 336 343 858 261 175 243 863 213 280 878 847 745 755 635 238
 328  95 495 306 158 444 480 377 842 148 861 197 186 219 340 246 467 705 304 285 892 879 593 327 257 703 899 719 558 205
 563 276 451 320 403 335 258 865 569 235 870 145 417 191 838 326 313 362 236 344 287 743 350 324 279 850 760 599 586 420
 272 376 391 353 531 427 706 656 500 264 478 676 394 179 354 288 293 895 754 589 375 330 347 263 413 753 493 323 390 452
 415 422 318 349 508 476 794 281 253 494 357 414 652 332 423 241 316 484 489 541 418 497 761 334 426 289 386 881 514 450
 251 231 433 305 385 194 526 854 329 292 348 398 211 539 325 461 834 660 487 537 568 298 477 564 538 490 360 439 524 657
 367 482 401 428 465 459 502 571 492 331 407 456 250 424 392 346 315 406 521 481 372 677 674 574 530 485 491 395 389 432
 388 578 472 458 473 551 321 201 404 440 384 364 596 648 411 170 581  70 371 438 624 504 540 503 592 453 562 430 520 468
 466 416 488 471 588 393 437 505 590 619 399 441 370 511 512 518 301 369 462 560 447 378 601 519 486 463  31 522 242 410
 536 646 341 630 299 684 400  35 457 647 565 436 339 474 499 585 405  61 628 517 470 345 475 570 429 366 534 173 319 650
 273 425 612 679 575 460 352  82 294 659 557  25 629 616 442 546 615 296 566 724 507 435 583 516 464  73 121 448 412 529
 510 443 582 109 668 698  87 613 532 543  12 528 449 663  29 580 696 275 609 851 633 455 249 697 643 363 142  15 224 617
 622 766 853 644 513 498  96 200 506 611 232 637 409 710  91 545 602 218 641 649 397 198 445 717 737 469  56 265 131  57
 678 651 672 636 576 742 626 259 260 421  24 496 682 627 556  60 523 297 311  78 598  76 396 553 715 196 159 527 351 769
 604 744 720 600 382  49 290   2 208 669  19 837 207 756 689 746 561 118 690 573 692  64 271 559 673 434 322  55 157 824
 621 788 552 655 867 770  65   5 653 152  42 594 775 721 555 758 603 130 373 691 608 182 479 702   9  99 283  41 110 632
 704   7 738 725 701 141 675 312 835 777 310 848 713 667 640   8 631 112 681 102 790  52 217 735  10   6 300  44 223 811
 869 547 714 623  16 776 509 333 126   3 237 862  18 787 709 723 707 209 806  53 695 151 125 764 856  22 160 387  43 685
 762 729 597  11 772 117 239 716 192  21 308 768 135  13 515 730 793  46 786 767 212 286  89 614 785 317 605 314 431 845
 792 809   1 757 832  14 750 548 270 134  71 826 774 662 708  59 408 233 779  66 763  27  17 801 773 268 206 295  88 784
 740  28 840 843 849  38 759 816 379 533 216 819  39  51 129 718 799 361 783 122 810 120  45 732 814 220 368  58 446  40
 638 852 693 803 880  47 817 798 733  79 859 780 168  20 874   4 833  67 726 104 830  23 303  34 199 839 338  33  93  48

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.34776e+06us (= 5347.76ms, 5.34776s)
Wall-clock time (full program): 5.41265e+06us (= 5412.65ms, 5.41265s)
Satisfaction error: 0
Number of search iterations: 2392
Number of local moves: 1330 (including on plateau: 757)
Number of local minimum: 160 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 18128
Total number of local moves: 9238 (including on plateau: 5012)
Total number of local minimum: 1328 (including on plateau: 372)
Total number of resets: 6
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 642 873 620 884  67  23  35 812 603  19  37  48 764 656 115 757  54 759  17  55 582 198 843 832 663 816  16 848  13 864
 793 879 298 893 772  33 680 829  63 231 720 106 810 697 194 691 121 863 120  62 104 670 868 831  44  72  75 119 830  47
 660 736 894 824 131 666 686 599  74  79 768 584 876  87 536 855  36 886  89 107 101 887 813 846  96 237 146  32 126  58
 161 870 890 631 102 741 754 779 124 118 687 616 725 129 790 706 134 796 166 125  98 236 880 827 109 256 871  34  99  61
 155 723 655 210 897  93 605 881 123 159 895 557 821 760  64 652 163 733  88 114 140 828 766 227 180 885 184 170 608 179
 181 842 143 721 138 857 900 775 255 169 729 688 838 151 499 882 177 817 136 142 213 276 777 190 892 431 175 162 222 137
 157 776 235 762 165 692 807 629 182 299 716 712 822 208 664 845 220 251 524 516 211 269 851 400 226 576 221 245 204 130
 150 387 771 899 191 156 784 589 271 224 773 650 216 858 470 823 189 219 262 167 200 898 852 254 274 528 174 266 234 786
 229 225 207 746 193 192 676 625 613 258 737 738 287 840 866 658 164 300 296 606 316 869 679 209 260 635 261 279 318 233
 239 351 270 317 259 795 343 653 264 479 883 727 273 847 782 311 336 249 309 598 891 303 774 248 320 675 241 301 202 275
 346 419 694 307 554 277 814 640 308 520 519 834 466 291 839 272 288 344 265 896 283 330 368 352 253 752 425 267 295 297
 281 353 356 345 397 484 310 573 338 284 837 306 335 370 791 357 340 286 865 646 342 373 590 442 365 769 329 325 324 802
 361 240 358 337 731 314 376 491 398 328 551 366 549 391 648 381 437 408 327 626 418 414 614 377 467 617 860 448 333 349
 364 543 602 369 339 778 496 633 434 421 384 404 385 416 380 451 526 354 440 472 390 621 641 432 399 294 406 423 363 355
 456 379 412 441 426 867 504 375 360 572 402 409 420 439 455 433 396 521 468 395 394 430 410 471 495 427 453 411 445 449
 509 474 462 465 464 500 450 488 492 424 435 401 454 473 382 389 505 502 540 511 438 498 371   4 458 422 477 490 522 515
 475 485 110 415 393 552 525 460 480 212 461 447 469 476 463 507 486 545 497 482 494 436 285 244 512 452 591 510 548 503
 546 508 489 559 523 428 407 359 443 604 347  84 332 564 217 514 481 506 493 304 577 538 323 544 585  91 535 501 530 583
 517 487 566 446 547 570 637 302 556 569 383  81 668 558  65 534 413 541  18 312 529 567  80 574 588 187 609 513 565 533
 531 392 571 595 537 562 178 386 575 634  24  38 578 539 148 581 624 638 579 367 550 597 321 527 518  51 601 561  94 618
 586 457 105 645 600 619 144 238 560  42 331 199 247 580 350 553 611 610 682 378  52 700 257 654 478 278 643 607 587 722
 659 459 215 709 612  82 108 168   8 701  43  90 594 596 171 636 623 632 683 665 563  30  11 693 684 313 726 703 661 677
 690  10 639  53 711 183  25 483 702 674  40 292 615  85 293  50 671 644 647 141 728 593 197 678 628 417 657 555 699 715
 662 145 348 203 627  70  20  83 673 750 305 681 116  26 230  49 696 205 739 667 672 719 252 669 689 388 745 695 740 651
 705   1 717 172 735 405 201 196 568 756 149 319 154 755  78  29 765 263 758 698 714 152  57 803  31 372 734 713 704 811
 797 649 223 176  28 289 742  22 799 753 195 322 186 103 374  76 708 242 747 542 836   3  97 809 808   5 630 804 767 783
 724 622 718  12 749 403 444 147 794 748  39 362  45 326 290  92 862 113 341 710 730 111 158 117 732 751   6 743 820 806
  46 160 685 153 835 787 280   9 761 826 218 815 228 268 853  86 878  60 800 818 844 780 214 132 122 849 833  27  15 133
 872   2 127 185 785 243 250 232 805 788 315 789 173 282 707 206 792 100 763 532 246  77  95  73 798 781 825 888 770  14
  21  68 135  41   7 854 334  59 889 874 592 850  69 744 801 139 819 128 856 861 859 112  71  56 841 188  66 875 877 429

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.31206e+06us (= 3312.06ms, 3.31206s)
Wall-clock time (full program): 3.37531e+06us (= 3375.31ms, 3.37531s)
Satisfaction error: 0
Number of search iterations: 1084
Number of local moves: 858 (including on plateau: 352)
Number of local minimum: 40 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6666
Total number of local moves: 5073 (including on plateau: 1566)
Total number of local minimum: 289 (including on plateau: 110)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 463 559  60 692 587 430 775 128 876 744 186  53  31 121 724  91 878 254 206 889 108 693 664  83  64 868 704  52 662 870
 687 733 175 718 879 871 218  36  59  23 483 155 151  34 722 259  93 897 150 900 703 795 160 106  39 862 746  90 899 872
 894 553 895 141 785 749 849  19  63  82 374  57   7 679 848 819 887 112 505 142  79 893  70 542  69  96 784 537 888  97
 809 709 844 456 808 721 770 131 185 174 768 126 110 227 549 764 697 212 408 896 158 286  38 562  49 716 778 238 139 187
 741 612 114 881 758 690 815  74  84  45 130 200 229 572 767 485 884 140 107 863  85 284 380 739 869 832 886  15 172  62
 801 811 647 348 608 898 790 137 133 161 787 156 120 816 882 717 202 117 670 138 181 323 153 419 169 214 838 874 188 217
 805 738 199 846 640 143 883 331 176 195 527 204 242 851 831 547  58 296 420 736 837 892 122 279 124 234 885 170 179 125
 891 840 116 265 660 235 601 847 256 231 793 490 582 149 386 865 267 280 534 370 821 367 311 810 221 102 569 178 189 289
 347 422 368 271 464 192 228 309 845 266 867 239 817 371 615 798 791 356 656 292 351 327 233 839 335 321 745 288 201 361
 427 720 281  86 470 198 287 162 196 858 842 339 607 222 404 682 611 396 766 725 336 655 245 830 353 328 598 302 364 225
 369 387 405 257 852 822 299 358 300 491 850 145 277 340 461 866 715 148 626 320 306 298 253 688 554 425 728 268 365 342
 635 401 406 363 496 513 315 341 290 345 702 337 605 276 262 875 726 240 750 391 134 308 357 857 484 243 604 530 301 428
 667 432 465 668 447 400 392 313 250 467 497 453 557 263 476 520 477 776 443 373 316 436 355 487 455 563 556 282 258 471
 486 707 318 514 473 803 417 506 291 319 510 384 752 524 389 474 413 460 492 434 388 278 260 431 399 446 649 343 273 382
 564 426 329 418 360 398 312 246 410 359 395 383 666 603 489 479 890 734 528 475 354 397 381 366 379 437 462 440 442 393
 619 597 333 390 575 482 394 424 592 458 441 488 154 515 561 295 352 606 414 429 423 517 531 372 567 317 378 526 314 451
 504 566 577 676 585 409 472 570 550 459 332 247 565   5 349 560 216 541 452 416 521 500 344 324 644 307 249 568 407 600
 193 502 591 248 226 438 658 501 498  77 164 445 602 536 495 454   1 590 468 583 765 499 546 433 535 686 304 411 421 645
 516 614 522 653 444 362 651 402 525 638 109 518 211 588 338 203 157 631 105 494 548 589 629  98 538 552 194 512 665 509
 293 523   6 610 480 581 551 543 232 584 435 532 294 630 519 529 346 747 303 230 539 275  28 624 511 623 180 545 628 594
 224  50 540 574 236 146 596 622 782 609 215 599 714 135 700 330 685 681 322 625  46  87 701 104 616 643 223 507 466 737
 469  20 713 580 129  33 627 674 544 705  41 814 439 760  47 168 115 576  73 657 742 699 634 264 639 642  71 448 508 684
 325 241 671 586 310  56 123 683 695 573   9 632 503 167 593  42 255 636 173 618 788 481 620 213 617 579 375 558 637 756
 159  48 689 621 191 802 669 807 646 672 412 694 119  76  88 478  35 769 190  94 571  75 675  65 781 654 297 877 648 613
  26  81 735 763 450  55 184 678 493 578 533 753 641 829 251 237 661 759 283 111  92 740 706 457  16 762 182 708  21 730
 144 183 796  14   2 127  24 828 633 680  27 854 794 789 205 305 673 786 823 731 197 208 754 163 834 165  22 880 761 113
  89 285 100 136  99 101 118 659 719 748 691 833 771 696  40  68 350 712 244 166 772  17 860 376 825 650  13 710 841 826
  12 274  25  78 415 252 272 677 755 595 449 711 403 743 269 177 751  30 792 270 698 723 779 799 783  44  66  11 806 856
  95 334 777  10  32 835 207 729 663 555 727 861 820 171 152 377 326  29 855  67 797 812 873 385 836 132 209 804   8  37
 261 147 818 652  54 773  18 780 774 824 219 813 732 827 103  51   3   4 757  80 859  61 853 800 210  72 220 843 864  43

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.15062e+06us (= 4150.62ms, 4.15062s)
Wall-clock time (full program): 4.21338e+06us (= 4213.38ms, 4.21338s)
Satisfaction error: 0
Number of search iterations: 1593
Number of local moves: 881 (including on plateau: 391)
Number of local minimum: 91 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11771
Total number of local moves: 7910 (including on plateau: 4345)
Total number of local minimum: 510 (including on plateau: 364)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  11  40  25 101 486  89 807 870 758 472 891 873 443 881 879  26 147 195 602 883  33  41 877 882 869  39 874 163 241  17
 816 311  83 117 865  35 198 864 871 858 327 850 404 862 851  60  12  36  84 855  55  10   2 834 832 141 835 856 386 205
 828  44 312 108 848  65 838 842 124 818 827 825 817 831 808  78  29 140 123 823 120 309  34 847 826 149 846  20 100 136
 824  22 157  15 784 206 797 804   6 802 794 820 441 801 805 102 132 121 391 799 227 286 798 696 795 131   5 736  74 144
 796 255 183 789  68 225 767 782 778  19 748 764 245 783 772 126 752 188 287 768 199  24   4 756 728   1 744 755  18 191
 709 135 190 775 760 341 193 715 740 734 749 753 262 177 751 761 745 315 296 730  51 594   7 739   9 172 711 105 129 167
 747 107 196 104 712 240  27 703 668  67 750 716 422 680 692 718 113 698 705 693 691   8 690 582 674  92 682  82  72 184
 666 237 218 724 681 238 662  28 706  53 505 688 267 214 732 675 127  99 673 669 685 449 180 787 653 148 660 697 179 215
 644 279 226 636 650 319 338 656 169  56 658 686 427 631 640   3 629 155  30 670 621 360 622 613 652 641 623 138 106 637
 599 289 274 612 609  45  62 634 661 722 632 628 210  13 614 610 645 174 424 627 165 611 585 432 601 616 593 139  71 618
 633 294 217  23  59 379 600 591 606 559 576 596 604 598 496 555 575  69 563 557 588 565 589  48 625 617 597 519  57 160
 524 326  70 571 546 261 577 231 318 581 521 586 553 554 569 578 605 529 587 561 583 584 548 558  79 549  93  81 230 562
 478 570 608 185 543 152 498 552 580 551 534 263 479 112 265 499 525 522 518 539 556 567 538 526 533 272 541 273 208 528
 459 511 357 500 158 573 252 517 492 477 506 405 515 491 501 530 209 544 527 460 475 502 280 510 507 463 331 489 504 470
 495 452 512 474 457 320 283 438 429 490 493 455 439 488 462 456 447 480 448 467 516 483 471 367 425 520 487 476 317 468
 513 442 394 423 450 446 433 385 497 445 461 430 603 465 547 414 400 484 322 395 407 451 786 419 409 366 481 410 435 402
 302 403 376 396 426 542 304 436 444 458 378 353 866 464 473 411 374 431 590 380 388 297 337 398 418 347 809 683 667 364
 321 421 365 363 417 412 657 369 572 397 349 428 607 247 406 387 437 384 776 469 440 779 389 702 371 352 343 392 635 328
 390 420 619 564 383 659 694 332 325 348 372 466 700 536 282 356 368 382 896 381 335 687 375 346 340 399 345 350 532 333
 362 540 701 359 314 651 300 291 313 401 833 334 708 303 276 413 258 482 643 354 742 777 393 285 301 361 293 370 806 351
 416 704 566 323 339 647 434 248 307 893 288 306 725 292 344 298 264 342 840 259 898 232 672 281 310 503 268 316 574 626
 223 654 710 305 246 695 269 270 830 271 234 355 763 336 330 299 676 592 717 235 308 813 242 295 266 699 203 377 887 415
 256 664 646 253 254 759 757 523 220 278 197 257 888 244 358 648 243 639 170 251 743 187 373 275 329 453 212 875 727 836
 200 723 790 277 290 620 454 236 249 182 229 211 535 735 284 168 886 894 853 216 595 189 233 550 221 829 202 201 689 774
 224 713 812 857 153 509 890 166 213 239 115 164 204 665  90 815 494 738 175 159 324 228 841 154 531 791 194 642 649 766
 130 810 741 859 900 780 408 125 671 151 128  80  63 186 161 173 679 811 733  98 143 884 207 181 178 872 156 638 885 684
 134 785 863 485 162 860 721  58  87 192 171  46 137 109  50 773 803 655 250  61 880 720 765  77 150 861 514 677 762 707
 176 624 560 729 116 839 145  52 568 630 146  66  76  88  32 837 814 793  96  21 770 781 714 142  73 663 788 508 800 868
  94 843 895 769  85 889 103 678  91 792  49  95  37 114  31 892 867 771 110  97 133 878 118 111 746 737  43 726 899 822
 545 897 849 819 754 719  47 119 222 579  54  16  75 615  14 854 260 852  86  38 844 219 845 122  64 731  42 821 876 537

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.10703e+06us (= 4107.03ms, 4.10703s)
Wall-clock time (full program): 4.17011e+06us (= 4170.11ms, 4.17011s)
Satisfaction error: 0
Number of search iterations: 1509
Number of local moves: 1316 (including on plateau: 596)
Number of local minimum: 54 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11580
Total number of local moves: 7759 (including on plateau: 3251)
Total number of local minimum: 600 (including on plateau: 217)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 837  50 132 804 833 876  66  49 788  56  43 679  88  91  60 760  55 578  70 732  67 117 894 775 871 769  80 553 859 883
 778 579  48 169 863  82 120 102 899 297  73 529  81 826  18 834 124 569 879 880  61  64 113 873 715 758  79 633 763 706
 669 884 855 103 891 397 877 465  93  57  20 888 209 881  19 817 158  29  69 674  41 388  47 752  62 801 420 870 829 250
 746 753  89 900 747 154 116  77 403 181 211 326  28 858  86 898  27 807 707 105 258  92  85 740 882 839 895 147 857 501
 157 703 242  84 610 638  42 203 688 135 152 860 141 836 234 851  44  72 667 813  94 322 108 867 765 510 374 874 749 680
 587 628 254 137 660 824 151 236 890 185 861 201 164 184 310 240 193 802  10 200 372 889 231 770 644 738 646 620 784 104
 748 629 178 146 634 183 844 155 791 313 145 118 343 206  96 150 143 228 244 613 271 810 347 693 893 850 594 785 615 750
 196 697 170 198 830 171 208 875 828 277 217 195 221 245 213 220  90 252 315 309 197 803 782 741 700 730 623 734 825 653
 357 678 166 192 639 160 142 262 776 609 133 253 125 368 329 260 222 755 316 896 218 799 348 292 838 589 702 887 335 869
 852 642 247 246 701 275 168 314 215 401 230 885 251 187 289 304 359 789 812 202 872 324 264 777 733 542 205 303 334 792
 167 798 878 267 415 290 897 270 445 204 321 296 756 255 332 306 229 597 663 471 278 337 892 534 345 677 233 286 713 363
 266 686 339 365 645 832 295 356 299 350 556 287 446 308 547 305 886 546 535 257 311 238 719 342 189 555 449 398 651 557
 352 648 261 302 603 470 387 406 432 285 514 495 481 380 386 691 402 282 249 522 269 650 392 370 199 768 843 349 827 300
 381 312 340 353 710 484 391 369 354 367 476 531 422 805 442 378 530 307 528 441 467 379 399 864 360 364 373 438 538 412
 490 331 383 541 519 382 404 376 355 436 448 675 450 413 491 454 405 540 283 472 504 428 437 511 480 508 396 447 469 487
 443 458 358 492 351 429 503 509 435 559 390 430 455 549 395 493 459 473 512 561 444 327 439 400 478 505 411 431 328 498
 409 341 584 418 416 489 371 572 457 460 456 576 630  83 560 393 194 482 407 552 461 452 550 502 635 362 385 616 182 520
 453 180 384 533 284 532 516 654 544 506 593 568 191 605 421 513 425 389 426 394 499 464 474 468 580 361  13 563 497 485
 216 525 567 607 294 479 537 614 606 424 462  99 483 627 521 621 562 417 318 721 536 565 622 494 583 301 144 122 433  15
 665 121 581 694 223 570 632 524 496 590 486 661 408 619 466 526 599 574 640 115 595 618 586 149  97 274 281 111 500 114
 523 248 488 611 237 662 477 658 647  36 571 377 729 545 643 631 602 573  75 577 175 592 673  95 637 427 410 136  37 423
  71 232 683 821 320 681 731 517   8 518 685 699 543 596 668 656 676  68 601 564 608   6 612  12 671  45 440 276 163 344
 591 451 551 598 239 527 690  21 127 705 712 617 625 724 636 554 774  22 507  76 739 716 366 235 227 224 212 664 298  87
 139 165 718 655 279 698  26 819 177 780 600 566 582 670 652 727 626 575 226  59 787 682 624 106 130 330 687  40 214 176
 241 280 419 806 138 434 714 708 346 865 641  31 779 689 786 649 722 767  33 754 684 735 695  63   9  16 333  25 119  34
  38 375 728 704   3  74 811 841  24 808 781 604 672  51 585   4 709 766 790 101 845 325 764  11 259 225 853 207 219 338
 186 153 720  30 126 797 793 815 659 794 657  78 751   5 831  58 847 140 268 743 742 174 725 273 291  53 548 809  35 414
 816 319 515 849 173 100 188 818 109 744 822 134 846 107 848  14 757 717 737 190 696 835 148 588  54 161 323 129  17 761
 475 539 823 762   1 773 726 159 336 711 463  98 795   2 783  46 842 156 772 265 558 272 172  39 123 210 840 745 293 736
 666 110 814 128 131  52 692 771 288 862 796 759 820 800 868 162 854 243 856 256 866 112   7 179  65  23 723 317  32 263

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.88668e+06us (= 3886.68ms, 3.88668s)
Wall-clock time (full program): 3.95362e+06us (= 3953.62ms, 3.95362s)
Satisfaction error: 0
Number of search iterations: 1478
Number of local moves: 947 (including on plateau: 346)
Number of local minimum: 101 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9652
Total number of local moves: 6563 (including on plateau: 2529)
Total number of local minimum: 533 (including on plateau: 209)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 837  34  56 807 871 858  63  69 728 855  42 893  28 840  93  51 579 607  87  37 127 646 880 861 100  76 841 147 525 877
 896  18 105 650 849 714  41 796 647 805  49 606 375 780 170  67 623 814  40 160 704 587 139 790  99  64 870 879  58 120
 107 108 886 786 812 831 712  90 777 778 114 634 141 891  77 695 670 782 142  66 231  89 180 866 531 157 191 394 676 101
 681 110 173 727 856 801 102 125 794 569 119 740 622 842  55 773 154 792 247 211  78 900 118 143 723 227 844 226 665  98
 824  94 128 753 257 897 608 295 784 816 215 624 562 888 219 847 137 769  84 189 202 679 149 164 212 838 159 281 621 220
 549 187 146 611 729 674 115 201 895 713 167 661 597 263  82 706 817 892 150 166 152 865 109 210 881  95 302 731 651 198
 138 268 228 686 294 321 835 544 806 828 153 652 594 291 216 864 224 883  79 155 663 845 171 772 229 103 182 632 552 307
 196 113 286 863 293 741 284 833 266 540  92 830 683 524 200 862 258 890 274 269 289 696 413 310 169 386 300 617 776 262
 207 296 292 532 334 379 121 662 593 705 298 688 768 744 260 234 821 644 414 241 595 672 372 184 315 192 221 822 687 222
 213 249 265 761 691 177 243 250 280 478 402 722 781 346 305 325 869 631 884 308 779 693 239 485 183 270  81 503 750 352
 272 197 301 851 411 259 351 751 324 690 446 756 829 369 304 395 366 452 204 819 355 716 469 331 344 282 306 440 577 348
 407 339 468 374 400 255 396 471 762 537 423 602 708 356 397 203 408 330 854 365 599 677 261 299 350 342 435 322 774 401
 409 347 194 497 323 789 529 521 787 640 341 448 418 487 380 527 288 190 248 362 389 873 357 534 481 303 297 335 868 353
 498 875 237 333 425 404 312 311 412 536 373 514 457 368 424 528 387 415 377 483 376 240 436 246 545 874 500 810 434 385
 399 530 393 441 384 555 475 543 338 427 378 439 364 410 383 443 382 392 391 419 463 488 473 491 518 654 533 447 557 405
 390 516 421 509 512 398 484 217 451 494 480 422 317 349 420 472 605 426 556 474 438 460 559 538 445 433 406 554 437 332
 576 584 551 479 466 493 567 449 486 314 592 515 496 276 535 583 604 340 416 470 236 430 458 590   9 467 482  75 278 698
 548 637 598 431 432 476 580  68 489 267 659 504 186 638 539 517  72 566 417 450 309 172 505 553 513 507 616 492 188 586
 477 522 388 643 510 459 499 244 454 456 546 287 589 682 630 565 502 285 316 508 214 279 571 613 506 501 614 464  30 161
 511 667 694 185 619 444 465 639 320 264  31 136  86 572 603 588 547 455 582 575 615 126 461 653 453 585 610 245  85 699
 738 668 591   8 671 645 371 329 578 343 719 238  53 675 626 736  54 564 523 573   6 133 560 558 581 568 541 256  59 550
 490 629 673 168 625 520 709 326 495 123 656  19 318  25 680 620  91 145 542 462 359  14 836 563 717 526 660 618 345 561
 759 570 739 336 710 205   3  27 134 283 648 148 135 596 519  13 737  88 755 601 642 612   1 609 702 775 747 635  97 689
 641 732 733 235  96 633 809 574 193 242 783 116   2 233 711 628 734 117 701 328 381  32 797  20 742 600 763 156  57 726
  70 664 815 174 703 112 658 724 178 230 745  62 271 163 627  35 657  33 692 721 718 273 707 898   7 813 649 251 140 725
 697 771   4 181 130  73 720  44  26 132 748 275 360  65 767 760  83  22 669 885 752 225 766 684 636 403 826 832 313 666
 743 746 700   5  38 106 655 857  71  12 867 253 337  48 770 209 678 223 363 811 872 354 834 151 758 795  47  52 361 799
  45 876 764 290  23  61 749 853 144  10 800 208 860 754 889  74 685 319 818 820 894  43  80 218 162 757  46 428 785  60
 158 370 808 175  36 111 232 843 104 176 825 165 848  29 846 179 206 327 887 852 195 254 823  50 839 793  17 850 802 715
  39 798 878  24  15 124 827 859 199 252 804 358 730  11 788  16 277 122 803 735 882 442 791 131 765 129 429  21 367 899

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.13873e+06us (= 3138.73ms, 3.13873s)
Wall-clock time (full program): 3.20286e+06us (= 3202.86ms, 3.20286s)
Satisfaction error: 0
Number of search iterations: 907
Number of local moves: 703 (including on plateau: 275)
Number of local minimum: 23 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6466
Total number of local moves: 5383 (including on plateau: 1655)
Total number of local minimum: 209 (including on plateau: 144)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 435  62  43 578 630  55 893  84 621 246 117 888 879  61 896 120 880 853  58 766 176 168  52 200 777 773 160 801 835 408
 143 558 745 677 887  44 150  46 254  97 151 858 857  71 664  48 856 714  50 818 847 129 623 843 871 729 111  87 395 192
 588  83  34 697 886  89 174  49 579  57 641 760 806 154 546  47 885 811  41 869 852 514 140 159 822 713 175 863 133 348
  51 115 113 752 883  77 867  76 756 102 179 598 564 165 877 166 861 716 187 884 458 759 177  73 728 250 399 206 603 873
 826  68  95 726 421 173 110 735 670 194 109 181 211 258 178 132 719 688 156 890 778 750 114  88 900 881 139 894 809 622
 146 287 233 865 866 290 134 148 859 279  81 195 209 112 188  91 649 754 345 723 854 840 171 299 741 895 591 792 224 654
 147 142 281 505 844 190 813 226 244 478 185 765 170 103 897 319 263 808 239 850 774 470 331 819 730 561 218  98 242 803
 158 253 876 691 712 300 216 862 702  40 264 230 785 241 155 396 212 243 293 717 663 763 878 271 484 236 790 282 228 574
 425 238 326 725 596 245 755 247 889 227 266 860 744 210 199 223 364 639 308 605 389 891 302 184 582 296 678 163 306 633
 202 213 164 804 868 294 283 310 874 821 313 182 527 167 297 231 343 705 318 577 800 636 240 276 625 262 256 289 783 855
 340 237 269 797 567 284 220 845 793 446 339 329 586 252 898 433 311 368 251 442 451 562 229 221 739 370 259 383 839 455
 402 255 285 444 753 443 406 336 426 472 315 508 738 405 369 322 371 333 257 566 324 817 441 404 602 418 413 500 392 798
 355 419 410 292 706 849 461 193 509 393 362 298 449 465 899 388 363 533 660 552 409 357 332 358 466 377 674 275 359 352
 454 490 361 892 407 367 387 497 321 416 390 341 379 779 380 428 417 480 427 530 268 400 438 528 644 391 481 366 453 403
 423 535 485 398 491 360  39 401 430 496 464 432 531 522 515 280 585 447 422 471 597 448 460 512 536 373 576 601 376 309
 469 662 384 492 499 286 320 474 506 303 378 439 291 436 467 511 520 429 479 452 375 581 385 526 450 412 456 570 518 445
 424 583 394 386 381 548 494 434 550 488 529 525 487 489 473 616  67 482   3 628 420 457 513 504 495 468 440 501 411 325
 652 587 563 347 119 632 545 543 261 337 592 541 648 317 510 532 334 493 503 335 519 517 356 700 314 553  59 537  31 538
 539 584 554 475  42 640 172 486 547  66 523 560 186 609 477 615 593 516 617 126 642 462 542 502 274 507 534 459 613  53
 349 757 571   1  56 600 559 549 153 684   9 137 203 715 695 573 629 698 575 277 551 141 555 657 463 743 307 676 618  14
 590 666 638 136 273 568 557 620 135 524 665 624 312 680 556 104 689 565 606 267 162 249 732 635 272  60 661 762 106 101
 612 671 572 127 138 699 589 626  28 737 701 215 201 692  85 724 610 122 608 305 672  32 767 768 260 121 183 627 669 354
 604  27 619 214 365 595 683  15 643 580 634 594 544 721 569 720 747  45 540 108 611 346   8 607 198 145 344 614 693 382
 327 709 655 161  69 646  19 707 157 742 659 740 437 656  72 653 795   7 746 107 372 118 599 686  99 694 647 316 650 270
 651 791 703 415  21 829 232 667 197 734 733 770  26 521  64 690 100 205 722  22  70 288 189 787  33 776 631 637 353 658
 825 882 784  25 338 711 645 718  80 796 668 116 681 736 751 820 125 152 769  20   5  92 771 789  63  36 196 696  18 207
 682 782 673 397 235 222 786 748 323 834 832 342 124 761  38 836  90 265 870 350   4 328 807 234  65 431 794  16 351 295
 830 841   6 204 225 815 772 846 731 374 781  75  96 708 278 875  30  17 775 130 304 301 727  79  54 710 749 483  12 687
 864 180 851 169  93 827 476 217 128 788 833  82  13 805  24 799  29 208 848 105  74 685 824 675 191 248 780  11 816 872
   2 838 828 123 144 837 758 810 149 764 802 330 831 704 498 823  78 219 842  23  94 414 812 131  37  86 814  10 679  35

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.77741e+06us (= 3777.41ms, 3.77741s)
Wall-clock time (full program): 3.84131e+06us (= 3841.31ms, 3.84131s)
Satisfaction error: 0
Number of search iterations: 1363
Number of local moves: 1156 (including on plateau: 631)
Number of local minimum: 28 (including on plateau: 46)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9112
Total number of local moves: 6531 (including on plateau: 2945)
Total number of local minimum: 364 (including on plateau: 215)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   3 335 168 873 809 723 115 263 845 883 870 454 274 791 116 239  73 773 144  64 801 229 219 871 763  71 118 804  75 749
 790 179 248 222 777 803  19 250 719 814 772 701 468 786 194 678 136 812 325 502 819 249  51 600 171 137 207 839   7 240
 122  89 346 784 734 776 125 707 890 753 394 232 862 865 124 271  82 842 204  12  91 485  15 887 771  32 111 326 818 765
 727 382  56 196 131 754 625 279 774 182 628 703  28 650  45 214 242 761  35 807 692  87  58 799 806 729 622 679 782  42
  98 153 756 257  22  83  60 758 824  78 623 690 828 700 639  52 556 750   9 110 811  92  76 860 816 635  23 695 751 710
  11 165 686  65 607   4 601 725 709 826 636 276 187 731 161 762 166 767 117 129 602 715  14 289 514 757 405 618 815 455
 163 357 585   8 643 674 408 699 541 519 730  93 145 739  26 615 752 745  43 140 641 574  66  33 717 708 688  99 644 720
 611 192  39 373 834 657 127 372 798 662 722 391 254 532 711  46 616 740   2 748 654   5 342 507 597 304 154 587 735 203
 590   1 614 260 107 682 438 579 421 199 583 195  84 736 713  81 684 743 570 481 769 135 253 490 768 101 428 461 569 780
 132 312 651 177 779 603 698 737 477  13 566  55 134 655 545 593 646 447 661 702  21 314 347 527 694 190  59 683 478 619
 560 230 629  70 424 718 598 670 604 634 406 188   6 546 474 142 436 599 741 273 522  72 252 506 445 264 663 605 721 517
 572 416 510 409 594 606 540 543 513 119 358 360 267 531 469 552 523 554 530 354 463  88  80 612 529 449 626 389 371 588
 435 508 631 452 627 450 444 534 632 460 608 412 392 430  37 480 520 440 637 609 379 381 353 586 433  20 521 395 396 313
 415 384 458 476 705 539 441 356 668 557 363 414 524 385 329 386 475 504 427 298 483 380 411 528 402 423 106 511 486 681
 580 451 642  96  62 493 551 377 547 581 464 561  10 582 426 473 596 571 431 393 413 243 378 573 578 576 589 432 417 429
 501 509 319 291 472 470 459 491 482 348 880 621 471 318 397 169 664 399 308 462 403 359 484 410 367 562 365 420 537 577
 344 558 418 479 434 638 404 652 303 294 500 503 443 425 457 309 366 512 439 369 419 361 680 330 437 362 442 525 712 400
 422 805 825 162 675 648 489 302 526 549 669 307 287 317 345 295 338 331 241 453 306 350 706 555 487 536 339 465 398 387
 488 792 448 821 324 559 376 301 336 676 499 467 732 251 270 823 364 340 299 297 553 649 592 288 159 515 466 259 238 333
 726 691 212 666 505 518 292 293 108 728 852 262 835 388 349 261 269 538 640 813 296 885 660 256 104 374 193 141 277 383
 231 704 201 495 280 315 323 846 310 328 197 746 689 209 352 286 375 233 184 285 857 716 802 697 696 630 665 322 236 305
 282 817 284 584 234 198 390 888 565 316 191 714 327 334 755 516 246 173 738 836 542 900 535  50 210 224 320 497 355 494
 202 733 180 882 217 225 258 854 139 130  41 895 853 311 567 851 281 176 760 175 211 875 533 156 185 770 677 266 265 847
 796 693 685 833 223 112 151 290  18 321 351 245 877 172 235 332 341 227 673 844 220 747 645 889 255 656 247 183 886 368
 167  24 785 563 138 591 208 181 200 206 228 595 671 100 866 783 787 186 795 170 456 568 868 189 897 876 861 158 123 275
 874 884 370 617 496 133 872 215  97 160 146 879 633  48 881 244 401 174 788 766  53 624 838 105 205 764 859 113 148 128
 830 687  68 613 498 126 855  54  63 268  31 658 744 300 548 789 869  57 840 778 114 147 856 653 218 446 878 149 157 221
 893 647 831 672 864  49 863 150 272 337  34 213  77 550 837 610 867  69 237 659 103 564 724  38  61 492 827 841  44  90
 667 800  95 575 226  25 894  29  94 832  30 278 620  86 797 820  85  16 849 808  27 822 896 152 109 810 892 898 216  67
 283  17 775 544  74 343 891 120  40 742 143 407 793  47 850 843 759  36 848 178 794 899 781  79 121 102 164 155 858 829

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.17632e+06us (= 3176.32ms, 3.17632s)
Wall-clock time (full program): 3.23988e+06us (= 3239.88ms, 3.23988s)
Satisfaction error: 0
Number of search iterations: 968
Number of local moves: 686 (including on plateau: 139)
Number of local minimum: 52 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6037
Total number of local moves: 4743 (including on plateau: 1642)
Total number of local minimum: 232 (including on plateau: 111)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  73 873 883 748 196 100  40 829  60  85 831 130  90 179 687 876 706 797 749 193 423  79 153 729 610 118  41 558 779 900
 849  63 884 783  57 593 159 777  67  76  95 108 624  33 871 115 784 714 616 842 183  69  72 811 731  31 832 701  81 894
  70 870 879 763  87 129 105 822 126 110 699  75 531  37 824 896 764 898 630 887 429 132 112 888 682  48  29 258 184 551
 895 177 113 222  50  83 855 856 186 141 776 269 529 275 689 885 605 599 614 123  52 172 545 188 661 206 881 807 302 759
 518  51 276 650 834 286 131 801 173 121 407 218 205 260 815 846 578 820 817 176 557 166 102 227 573 886 101 287 786 847
 839 175 103 766 780 264  45 517 244  58 850 223 109 449 197 169 239 793 771 867 863 208 494 715 267 120 160 897 459 874
 515 322 760 711 234 149 209 713 370 139 274 221 237 165 134 889 799 702 802 106 880 204 581 688 535 335  77 292 836 636
 280  97 128 673 872 187 298 510  93 317 723 329 851 620 125 127 233 316 707 875 554 202 899 868 878 164 133 315 853 288
 215 211 199 818 162  88 261 736 893 163 717  94 226  64 303 277 864 385 809 767 704 844 174 310 813 265 236 848 337 732
 485 213 523 644 198 336 137 623 309 866 383 240 432 281 405 136 830 368 877 230 692 155 154 756 755 386 242 478 769 612
 653 282 247 696  92 248 353 671 290 305 821 361 151 613 283 271 272 324 560 332 891 471 214 835 806 409 366 617 356 725
 419 279 191 625 536 892 350 626 334 516 300 857 243 491 426 384 319 369 390 360 342 576 499 672 391 772 249 442 235 430
 460 375 474 543 487 477 462 646 295 308 628 352 860 482 296 263 439 167 547 656 216 341 854 553 458 367 524 284 325 376
 372 436 344 601 387 890 231 527 398 496 563 313 455 380 539 331 461 314 345 238 417 505 406 641 828 486 400 457 346 408
 537 377 435 351 509 492 421 201 493 464 479 502 414 358 561 484 507 519 327 318 504 722 472 445 312 416 254 585 609 447
 389 520 556 467 469 550 388 338 481 476 452  68 562 475 424 540 549 294 446 473 135 570 574 363 489 640 571 256 559 441
 466 374 403 525 448 362 542 438 500 413 401 514 745 404 468 522 339 590 422 552 144 412 498 488 456 428 526 463 453 219
 250 359 615 420 647 618 651 425 450  15 544 580 676  78 667 541 592 534 495 379  99 586  44 382 328 677 521 378 583 381
 138 365 602 354 397 501 665 451 434 754 538 603 631 753 444 394  17 528 503 411  49 393 415 566 357 633 402 564 555  98
 437 565 635 157 683 587 584 418 843 392 195 655   7 511 512 431 654 720 297 483 124  11 638 600 364 649 627 200 497  39
  89 533 596 246 513 607 629 311 643 608 150 546  14 321 465 632 490 606  56 652 642 674 611 268 190 669 569 270 595 320
 568 787 575 220 506 663 686 257 604 726 253 727  18 347 664 577  80 724 142 670 343 373 621 340 203 591 530 582  54  84
 348 598  12 156 662  53 691   2 548 861 694 648 532 680 666 684 117 645 293 285 241 657  32  74 273 728 710 709 734 182
 622 678 619  43 700 659   1  24 816 794 119 774 681 639 122 746  47 145  21 685 410 718 693  22 207 739 742  26 716 307
 306 840 588  30 690 579 761 148 869 751  96 752 660 737  65  46  36  28  62 679 825 789 792 147  19 744 826 252  27 371
 508 675 158 266 775 719 735 170  13 796 326 790 703 865  34 185 758  35 168  82 454 812 781 291 232 480 695 733 217  59
 740 808  66 116 251 637 658 278 572 323 470 819 788 634 594  61 259 107 181 111 743 762 810 224 210 803 396 178 349 567
 668 841 289 395 194 882 770  42 859 858  16 814 697 765 698 229 192 152 427 245 823 778  91  20 189 712 597  25 161  86
 800   3 589 355 304 143 845 146 805 862 705 708 114 782 104 180 757  23 301 833 738 804 399  71 443   9 838 791   8  55
   6 768 773 171 795 741 852 212 747 721  10 225 730 837 433 798 228 299 140   5  38 330 785 333 255   4 440 262 750 827

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.42927e+06us (= 3429.27ms, 3.42927s)
Wall-clock time (full program): 3.49228e+06us (= 3492.28ms, 3.49228s)
Satisfaction error: 0
Number of search iterations: 1151
Number of local moves: 889 (including on plateau: 344)
Number of local minimum: 41 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7471
Total number of local moves: 5934 (including on plateau: 2431)
Total number of local minimum: 262 (including on plateau: 174)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 340 855  68  17 769  64 180 161 732 839 702 639 854 867  23 847 282 712 840 130 880 806   2 420 153 183 870   3   7 270
 166 101 131 882 165  85 656 325 803 164  19 635 815 706  58 876 731 179 875 133 798 775 307  94 252 858 334 809 747  36
  87 776 102 884   5  51 558  43 767 837 791 729 792 790 801 765 188  67 814 143 140 866 697 190 376 206 788 112 113  37
 311 857 761  27 868 105 352 274 670 735 597 698  95 633  73 878 284  31 391 157 437 850 237 302 696 221  14 800 704 457
  44 781  18 782   4  15 178 285 838 864 827 192 824 841 690 626  48   8 580 174 385 848 768 141 751 403 865  11 574 150
  80 713 168  30 849 560 151 295 625 785 757 299  16 821 736 682 659  81 627 422 269 819 655 119  60 199 652 695 603  88
  49 570 739 808 110 191  20 683 780 606 595 350  83 753 755 700 640 154 749 163 402 787 678  42 754  13 793 247  86 215
  22  97 692 620 662 128 107 673 661 750 705  82 667 674 723 665 145 733 569 477 452 564  21 708  12 314 609 745 142  96
 326 691 605 632 118 486 726 182 666 671 728 229 585 669 689 672   6 611 637 211  69 636 489 170 586  34 641  47 556 147
 271 675 638 505 512 676 305 149 684  35 630 645 680 622 509 523  54  10 553 214 493 557 650 177 730 290 654 519 500  55
 313 549 353 643 205 485 104 561 366 532 567  39 526 470 504 621 312 618 701 599 377 411 664  45 631  32 517 589 686 495
 198 590 577 551 571 516   1 679 648 616 241 357 488 607 446 610 436 649 471 219  33 550 592 573 479 248 449 465  59 596
 341 802 714 530 524 581  28 615 562 425 540 503  90 394 445 484 443 496 511 321 448 612 122 529 491 196 613 245 459 451
 510 360 204  72 709 481  63 490 525 494 454 217 455 542 474 568 547 658 548 447 535 439 513 575 335 109 555 582 653 401
 396 472 521 506 602 583 565 417 533 539 469 370 186 478 444 303 441 594 460 344 476 473 463 293 316 593 520 386 273 499
 634 537 578 429 453 410 339 413 475 404 423 338 450 327 359 572 600 487 351 365 588 483 378 424 482 538 430 492 242 514
 412 371 361 544 566 236 406 388 536 347 280 852 368 531 468 301 685 541 518 408 813 390 319 382 336 579 268 383 507 419
 534 315 434 694 414 716 467 433 438 244 356 897 458 323 400 246 265 387 393 576 608 515 456 354 546 554 328 498 362 304
 508 228 464 421 440 431 373 288 522 428 278 863 397 275 416 258 894 330 859 710 688 121 779 462 398 587 300 223 297 277
 442 309 363 501 249 886 856 395 296 337 527 828 379 317 287 375 310 381 329 418 900 348 392 646 281 623 294 185 235 826
 480 415 123 222 349 399 663 232 253 899 254 619 346 193 461 224 883 355 162 598 842 233 343 885 283 642 279 727 322 829
 563 331 306 320 604 810 722 743 298 374 308 725 358 243 231 207 752 409 209 426 584 369 225 734 238 822 158 255 407 784
 877 364 807 239 156 367 617 832 115 227 135 173 764 291 230 184 545 212 234 435 591  98 372 681 851 770 741 502 772 333
 818 389 263 833 292 267 887 748 155 127 257 528 220  70 129  99 644 861 226 820 256 332 125 896 881 817 251 262 218 844
 804  84 891 175 240 405 789 816 176  29  71 756 889 210 318  89 160 759 152 879 777  65 871 216 783 795  93 181 208 834
 836 213 796 825 289 432 843 195  41 740 126 342 172  53 286 893 657 266 197 711 260 200  56 324 660 717 194 699 771 721
 601 114 647 264 136 738 629 552  61  57 812 203 703 100 778  52 276 758 144 831  79 111 744 869 259 427 250 797 799 724
 874  75  74 345 890 737 624 677 171 159 138 167 187 628 853  38 774 719 189 773 261  46 116 746  62 693 762 380 860 497
 805 742 272 137 892 786 763 895  92 148  66 132 466   9 106 117 134 614 201 760  50 120 766 811 687 668 169 830 559 718
 873 139 845  77 872 888 543  76  26 103 862 108 202  78 823  40 720 835  25 651  24  91 715 707 146 384 124 846 794 898

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.11862e+06us (= 3118.62ms, 3.11862s)
Wall-clock time (full program): 3.18255e+06us (= 3182.55ms, 3.18255s)
Satisfaction error: 0
Number of search iterations: 973
Number of local moves: 621 (including on plateau: 167)
Number of local minimum: 42 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5764
Total number of local moves: 4861 (including on plateau: 1651)
Total number of local minimum: 227 (including on plateau: 109)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 894 616  75  86 691  51 358 852 774  62 697 632 722  15 677 213 797 444 116 900 184 103 161  79  78 830 111 864 859 574
  50 511 460 109 806 890 698  52 895  14 615  81 679 110 666 809 819 692  99  94 126 113  49  71 240 585 708 800 891 783
  77 772 208 106 759  29 114  21 896 702 196 875 740  90 687 857 882 880 119  98  85 197  24  54 599 807 209 855 757 820
  45 863 829 851 839 131  84  13 721 124 696 223 867 133 884 192 885 610 134 750 136 888  47 247 173 712 484 791  36 127
 165 699 122 810 506 187 137 100 749 188 887 463 776 238 733 845 842 801 171 745 170 141 142 210 573 513 771 346 211 274
 327 808 129 847 786 406  46 156 735 328 179 636 897 295 787 893 250 670 185 271 727 269 117 115 497 805 244 835 168 107
  74 664  96 181 886 251 217  92 700 339 214 762 898 280 760 284 191 754 232 436 234 672 354 861 752 899 243 761 212 216
 236 862 118 305 686 646 132 263 302 792 856 746 796 286 827 270 189 826 176 194 229 282 656 233 338 683 167 336 868 215
 481 572 157 153 642 509 246 292 312 172 315 879 433 221 469 583 307 873 367 320 260 713 125 264 878 843 838 261 763 267
 287 714 283 383 785 418 323 202 542 854 347 635 639 268 355 265 348 747 297 441 767 204 222 237 550 865 128 440 258 711
 369 549 248 294 889 174 357 386 321 629 784 881 329 393 332 365 316 396 254 627 404 256 529 501 671 584 439 334 376 528
 178 751 299 370 525 580 310 341 676 707 199 840 245 318 289 567 468 730 566 431 380 241 394 303 324 892 322 309 582 378
 412 649 523 361 645 420 255 345 510 618 293 257 587 350 388 788 445 537 375 319 317 410 253 464 871 485 371 411 384 472
 351 519 520 427 526 230 399 285 548 769 400 296 577 454 372 344 544 590 391 300 390 435 429 343 822 487 581 421 402 363
 326 547 524 594 456 389 414 459 359 790 362 514 450 415 311 515 512 419 377 494 486 381 405 398 387 570 451 491 480 239
 430 475 565   8 466 470 437 448 492 417 637 589  60 352 538 413 653 449 443 473 424 545 308 428 556 432 349 422 640 596
 203 353 457 488 416 539 483 541 685 591 403 500 560 395 426 551  55 626 438 621  12 425 534 540 518 619 553 527   1 455
 531 301 555 407 130 397 465 625 558 458 342 266 337 490 681 177 366 325 138 644 643 495 675 446 423 379 614 467 605 575
 533 198 479  42 121 622 571 557 530 554 499  33 409 669 522 598 503 226 489 641 364 564 507 543 401  41 588 576 657 478
 493 278 535 662 504 517 654 603 471  48 392 611 356 559 474 496 600 149 569 476 462 633 155 340 158  69 586 634 220 811
 631 160 601 620  63  31 647 606 145 291 609 452 563 532 552 568 521 190 718 668 147 146 680 578 536 235  82 729 617 597
 765 304 764 744 120 447 706 701 242 453 579 219  19 844 306 731 502 143 607 651 623 105 673 667 313  10  89 546  40 602
 781   7 726 604 182 655 695  58  83 224  56 593 148 628   3 743 723 186 828 382 648 508 630 716 360  53 658 368 674 595
 694 225 741 682 151 613  44 818  18 562 690 259  61 561 624 374 660 104 778 195 720 709 661 812 272   4 704 477 152 150
 717 298 434 659 108   6 777 766 461 335 193 183  87 756  25 748  59 205 608 650 872 715 779 703 505 102 738 228 728  70
 678 163 638 799 498 684 705 853 231 279 140 154 442 663  37  23 824 162 804 693 516  95 770 739  22  91 802   9 276 725
 870  93 833 277  35 665 831 832 331 314 164 144 101 758 652  57  20 166 814 688 734 782 768 724 290 200 592   5 736  39
 789  80  66 836  38 883 825 612  72 876 816 373 281 755  65  64 135  67 846 169 732 742 795 773 482 252 218  28  11 834
 798 408 689  16  97 858 866 821  88 288 780  34 249 850  43   2  73 275 753  32 849 869 860 793 123 262  27 227 710 775
 330  76 841 794 159 817 719 815  68 737 175 385 207 837  30 180  26 273 823 112 874 877 813 333 803 206 848  17 201 139

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.19015e+06us (= 4190.15ms, 4.19015s)
Wall-clock time (full program): 4.25308e+06us (= 4253.08ms, 4.25308s)
Satisfaction error: 0
Number of search iterations: 1674
Number of local moves: 628 (including on plateau: 127)
Number of local minimum: 112 (including on plateau: 5)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 12115
Total number of local moves: 6968 (including on plateau: 2775)
Total number of local minimum: 667 (including on plateau: 191)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 782  14  97 210 765 122 643 186 390  83 763 858 772 105 147  82 861 806 816 253 833  53 828 749   3 779 780  18 702  15
 815 766 233 412 281 207 275  33 800 711 774 854 138 190 120 352 823  12 670 129 826 175 753 767   4 689 655   8 334 709
 744 710 506 108 191 201 215 160 656  10 811 797 852  59 192  91 812 799 770 172 794 312 847 814 259 864 609  29   7 124
 841 809 223  28 166 261 632  22 325 243  44 456 579  39 697   5 869 831 836 269 788  54 277 750 755 862 409  43 803 599
 638 720  11 326 575 204 713 171 299 660  80 692 363 139 716  96 783 778 606 185 881 581 768 810   1 453 126 150 348 642
 700 838 165 167 227 228  27 242 807 725  46 707 365 587 705 544 558 736 714 111 743 499 515 633  56 329 239  32 694 576
 723 696 130 208  52  20 625 295 691 489 367 675  95 327 170 591 853 690 786 109 855  23 698 376 664 785 624 144  70 684
 508 758  84  98 163 257  58 389 183 728 719 681 636 533 754 795 561 737 661   2 674  74 458 485 666 629 125 387  36 676
 648 637 354 494 127  61 712 212 446 565 601 623  93 179 595 600 578 662 468   6 560 394 687 385 541 588 613  66 280 740
 721 751 203 590 679 256 639  31  65  38 673  13  40 585 545 739 537 620 635 279 680  55 647 319 747 535 464 323 616 490
 612 414 457 543 592 483 527 193  86 370 650 481   9 217 435 652 467 519 567 554 610 547 540 289 431 421 484 238 509 618
 603 626 480 475  81 522 748 182  34 511 641 298  42 589 564 556 659 594 542 346 531 205 248 234 658 571 498 427 393 657
 557 366 528 328 604 314 452 355 482 368 619 524 356 476 715 440 538 375 566 501 665 472 491 151 492 555 141 306 232 546
 572 495 466  21 398 360 512 293 517 568 584 551 428 448 559 701 473 384 539 526 520 403 377  75 550 500 297 309 573 516
 315 514 420 504 529 486 530 303 593 436 510 443 447 570 438 455 549 415 386 350 397 596 460 410 338 505 463 278 426 449
 379 497 382 462 313 525 493 425 552 873 518 290 381 292 583 364 430 470 445 598 502 487 357 383 416 391 439 532 400 336
 668 478 310 406 342 602 444 773 268 411 340 615 423 282 562 429 266 395 372 450 341 362 399 437 432 330 886 631 419 442
 339 523 396 353 274 695 250 553 717 727 405 361 358 332 291 252 413 839 307 351 392 244 407 671 255 402 408 608 896 496
 322 622 726 359 424 630 155 821 471 284 198 417 349 345 245 321 371 465 296 263 469 843 316 454 422 738 894 685 324 286
 373 434 477 308 848 614 582 569 889 230 287 200 817 265 586 311 273 159 693 563 337 318 331 651 305 267 347 760 333 388
 320 169 718 218 876 634 240 722 874 577  88 378 875 317 302 188 474 231 380 835 236 401 344 646 343 222 441 820 272 374
 260 162 418 781 216 735 177 672 741 304 145 229 837 301  90 131 300 156 241 787 133 597 825 669 369 206 805 708 866 654
 226 860 580 764 249 732 202 704 110 176 137  48 776 617 288 271 189  19 247 677 168 859 893 752 258 161 731 784 857 180
 213  24 863 891 733 640 885 883 507 113 262 871 808 870 294 134 246 197 146 856 187 745  92 157 164 140 219 796 461 118
  87  77 479 804 789 534 900 822 335 851 879  41 649 759 174 209  72 251 254 775  37 734 285 283 235 142 899 769 114 276
  69 148 706 882 880 607 102 628 762 742 237 195 154 777  57 867 221 214  99 703 121 757 119 459 830 178 115 868 845 173
 101 112 682 627 798 574 128 548 220  89 270 116 653 897 211 850 106  60 107 890 103 451 224 488 832 865 199 844 621 849
  64  25 761 730 513 611 898 686  16  94 884 872 196 801 827 724 136 887 181 663  30 892 158  73 878 132 184 433 104  62
 264 225 818 813 678 756  63 840 536 793 149  35 521 846 829 888  50  79  68 667  26 699  71  78 819 153  17 790 895  49
  51  45 842 605 152 644 688 802 143 746 834 194 503 771 824 877  47 135 117 645  76 683 100  67 792 123 404 729  85 791

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.53908e+06us (= 3539.08ms, 3.53908s)
Wall-clock time (full program): 3.60297e+06us (= 3602.97ms, 3.60297s)
Satisfaction error: 0
Number of search iterations: 1164
Number of local moves: 616 (including on plateau: 110)
Number of local minimum: 59 (including on plateau: 7)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8571
Total number of local moves: 6321 (including on plateau: 2526)
Total number of local minimum: 355 (including on plateau: 183)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 510 893  16 718  64 495 523 892 858  93 117  58  10 863  70 404 672  76 488 878  22 709 660  28 885 823 188 561  41 900
 791 534 832 800 101 794  57 775 686  17 887  23  55  90  38 847 171 141 895 897 618  65  73  14 883 221 868 890  87 365
 757 118 886 726  21  99 121 722 872 557 825 119 143 125  96 777  81  63 889 855  40 592  89 662 733 747 712 875  79 134
 774  45 127 671 191 106 742 679 573 745 790 166  98 193  61 843  20 641 891 888 222 124 259 787 799 650 449 779 105  97
 866  69 183 763 879 803  75 696 811 723 880 123  91 882 138 896  24  62 227 104 207 842 262 756 778 767 110 293  59 146
 674  94 190 772 133 600 153 876 682 849 160 232  78 700 173  88 874 816 782 312 249 237 215 760 899 583 268 724 181 161
 599 176 204 812 174 633 884 796 840 821 189 126 297 862 272 261 266 630 202 269 223 170 210 278 697 714 150 768 242 750
 752 164 236 308 113 704 149 894 788 593 459 199 185 667 147 296 395 685 819 277 219 200 533 224 729 805 271 785 263 656
 730 169 235 861 322 784 300 871 881 829 287 241 473 670 205 256 228 494 305 689 208 325 144 613 551 539 294 320 284 407
 257 411 274 203 309 759 273 644 209 681 349 501 323 738 251 254 319 765 298 315 851 243 260 877 632 837 303 336 281 762
 734 244 415 344 341 854 220 556 304 195 636 211 290 691 360 384 270 753 318 735 463 353 246 364 707 798 339 406 442 542
 354 250 427 356 376 695 327 481 450 467 615 848 375 582 321 372 610 651 513 369 179 340 425 307 602 324 292 423 392 792
 334 453 386 516 347 802 279 506 385 403 409 374 635 443 265 342 428 317 350 806 433 368 390 898 606 346 306 446 379 563
 422 371 357 486 434 469 363 332 482 558 289 835 457 397 492 507 366 860 362 331 458 367 370 381 468 479 538 517 451 316
 394 410 503 389 509 418 436 462 393 387 545 420 416 373 441 426 408 396 514 400 402 405 519 377 808 348 508 484 548 476
 439 430 419 388 412 521 541 452 429 532 361 421 447 455 497 414 398 478 544 401 637 437 358 474 424 399 440 522 391 454
 540  46 338 326 520 477 550 580 435 275 525 491 471 504 529 431 333 456 483 461 512 498 487 552 218 559 526 571 493 328
 546 460 465 555 505   3 502 383 472 604  25 255 178 470 608 611 489 288 382 568 515 562 589 417 264 577 621 567 549 485
 560 295 569  18 575 355 554 194 466 601 527 464 337 335 480 665 496 499 574 572 359 564 609 607 267 543 172 234 524 500
 301 329 597 518 653 438 576 201 475 581 380 565 680 240 578 584 586  32 603 136 649   2  19 628 216 645 511 614 587 591
 196 646 666 640 594 148 570 233 535 351 378 595 585 142 626 751 634 310 553 214   1 659 673  15 180 167 687 648 530 588
 253 652 676 624 675 280 669 157  39  86 736 708 612 639 622 596 598 156 528 531 330  52 663 186 163 155 537 664 683 245
 720 677 647  83 623 226 627 247 688 137 657 702 706 283 699 579 631 345 590 490 732 625   4  92 115  74  72  34 661 749
 212 643 678 162 642 282  37 276  80 175 746 620 743 238 731 715 638 617 566 187 692 815 668 448  12  82 605 159 694 352
  66 813 716  85 748  51 690 135  31 213 654 717 793 343 711  68 120 111 713 739 744 766 721  49  47 248 629 252 781 761
 313 827 801 108 658 152 814 129 198 728 145 758 754 655 773 112 776 116   6 727 725  54 830 192 258  30 719  33 810 314
 107 804 740 705 786 286 701 128  60 291  84 783 710 130 852 797 850 413  29 154 445 698 807 771  36 158  50 206 703 231
  27 818  53  42 182 302 764  67 184 616 114 820 873 693 769 103 824 684  71  26 741 828 838 132 239 168 619 217 870 831
 122 865  43 311 795 547 789  95 100 230   9 841 856  35 857 131 859 826  13 140 822 845 755 780 102 285 867  48 536  11
 165 809 836 225 833 432 229  56 109 177 737 299 844  77 853   5 151 834   7  44 817 770 839 846 197 444 864 139 869   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.14369e+06us (= 4143.69ms, 4.14369s)
Wall-clock time (full program): 4.20734e+06us (= 4207.34ms, 4.20734s)
Satisfaction error: 0
Number of search iterations: 1556
Number of local moves: 1107 (including on plateau: 504)
Number of local minimum: 66 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11723
Total number of local moves: 8657 (including on plateau: 4328)
Total number of local minimum: 468 (including on plateau: 292)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 512 120 569 289 699 109 793 209 480  14  16 375  23  32 346 870  70 754 675 844 423 863  31 102 818 848 825  80 841 885
 804 812 795 321  50  15 576  41 669  76  47 222  59  66 794 801 191 182  93 893 868 746 895 582 529 880 797 129 560  22
 589  78 261 678 186 900 857 899 494  57 165 583 133  27 190 873 128 561 657 856  36 660 890  62 260 125 821 850 602  37
 831  39 189 470 157  94 520 640 839 115 119 852  68  54 771 499 242 817 884 898 130 732 262 247 866 671 684  75 722  28
 777 131 663 748 780 112 768 647 492 118 167 235 185  82 203 837 126 786 882 851 236 816 173 121 265 814 878 270 252 100
 344 117 639 590 867 883 871 440 737 138 168 220 288 292 428 137 156 897 887 846 339 170 253 244 139 830 741  43 631 180
 604 796 842 674 158  77 735 481 826  51  21 311 163 348 862 511 103 760 836 723  18 241 263 879 233 238 654 202 689 216
 316 294 800 886 823 889 658 192 725 271 221 627 214 176 709 243 275 588  73 526 303 388 269 279 411 307 694 199 845 314
 633 155 187 747 107 101 651 626 256 874 629 228 284 330 853 194 145 278 385 667 217 824 761 248 896 280 670 251 710 328
 787 249 790 652 680 143 634 295 390 891 283 193 372 246 305 317 166 277 399 635 872 690 412 309 835 141 549 169 687 147
 708 105 355 716 204 343 645 483 783 382 849 386 894 175 551 177 306 266 259 455 356 432 325 454 389 281 619 255 860 502
 409 661 437 858 489 400 702 391 482 518 324 184 368 467 331 285 332 789 543 656 254 319 132 530 397 536 701 338 267 415
 612 377 313 608 335 322 888 739 490 232 528 240 387 445 476 298 363 333 357 488 430 451 567 362 315 229 516 892 581 341
 272 855 364 556 462 534 532 396 301 373 365 616 474 714 376 495 384 320 218 381 425 366 507 473 418 413 457 336 859 273
 609 424 745 436 354 296 509 506 514 407 342 282 393 360 380 594 468 453 299 404 350 562 500 519 452 414 620 329 649 345
 302 406 422 459 472 570 352 323 361 559 398 210 351 593 394 371 711 644 584 535 448 527 449 557 461 460 142 416 326 712
 505 475 555 417 540 420  87 439 427 450 485 497 429 188 491 369 340 435 548 359 312 574 493 464 740 664 458 539 515 300
 358 586 442 327 410 403 293 136 579 621 521 231 408 603 587 503 379 353 575 215 554 212 565 650 545 501 421 522 517 498
 496 550 638  64 618 444 419  95 179 504 533 122 347 623 349 677 577 611 446 713  11 383 693 367 546 508 378 553 337 734
 230 750 443 374 630 524 441  61  67 471 531 659 622 486 676 544 537 643  45   8 595 456 792 542  69 628 257 592 274 568
 225 585 151 111 433 632 113 668  85 426 724  65 613 591 465  56 605 685 401 541 607 547 692 572 564 641 258 637 174 648
  40 290  79 219  12 752 250 224   6 599 666 617 478 463 624 672 833 183 762 291 558 523 720 525 707 703 135 636 370 578
 665 697 601  48 563 566 431 466 772 487 538  46 715 513 479 682 598 695   1  33 606 152  72 815 395  53 264 717 154 691
 178 773 769 114 727 742  29 276 227 782 573 755 597 806 140 600 610  60 198  55 681 201 405  38 706 700 207 614  71 881
 679 615  83  63 655   2  17 106  91 719 758 749 778 726 438 580 869 134 686 171 819 469 642 810   7  26 334 688 205 596
 213 662 683 297 392 834 208 775 704 144 304 802 653 811 234  98 696 172 779  35 148 237 738 753 770 510  19  30 116 698
 160 730  99 729  49 861  52 781 484 822 785 827 838 832 127 162 864   9 239  88 718 149 875 181  44  86  92 705 318 809
  10  89   4 477 552 813 268 763  84 843 791 798 776 854 161  90 805 625 721  34 767 108  24 756 287 728 104 876 211  96
 200 286 402 434 308 731  20 673 197 820 799 847 840 784 733 223 759 124  58 150 788 571 110 310 245 226 123 829 159 766
 447 808 195 153 803   3 196 744 774 751 865 736 765 828  42 757 877  81  25 164 646 146   5 764 206  74  97 743  13 807

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.16397e+06us (= 3163.97ms, 3.16397s)
Wall-clock time (full program): 3.22756e+06us (= 3227.56ms, 3.22756s)
Satisfaction error: 0
Number of search iterations: 954
Number of local moves: 612 (including on plateau: 142)
Number of local minimum: 44 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6534
Total number of local moves: 5582 (including on plateau: 1903)
Total number of local minimum: 169 (including on plateau: 150)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 855 168 110  98 839 871 618 566 119  77 528 866 123 666 717 215 115  48 773 758 196  40  93 810 657 652 620 585 131 601
 263 853 101  92 103 899 872 876 464 588 118 199 153 606 668  45  95 104 799 863 873 838 284 107 469 526 155 458 892 152
 888 775  99 720  71 360 877 896 111 102 297 236 136 889 433 206  70  29 713 197 881 130 150 250 869 832 885 693 109 611
 689 878 128 193 184 819 551 848 817 259  86 139  13 807 725 100 237 272 765 861 632  97 159 663  76 709 883 457 178 290
 591 108 741 512 366 843 854 655 488 164  74 240  94 671 727 162 332 161 574 818 249  58  66 670 106 771 900 494 177 849
 738  73 144 125 264 648 827 757 895 169 449 188 138 760 673 200 170  89 840 784 182 145 280 814 154 470 868 609 231 831
 730 373 204 837 224 292 431 723 300 235 547 173 219 719 851  90 202 255 656 241 821 355 247 797 283 683 865 793 149 220
 806  87 229 265 256 429 751 745 203 121 519 208 172 766 830 194 261 201 780 695 209 192 120 731 897 858 275 586 351 778
 859 289 822 156  81 522 788 705 898 303 246 319 190 700 804 308 338 270 341 147 221 879 391 734 894 365 212 372 117 244
 320 218 749 309 195 459 828 619 286 356 359 251 126 288 764 353 248 277 417 335 875 836 186 239 721 394 440 708 468 891
 650 375 396 604 254 358 686 680 393 127 268 354 410 638 413 397 217 214 600 890 862 324 302 298 326 787 260 674 452 306
 527 460 361 406 369 334 605 568 314 500 386 325 409 615 350 276 267 466 594 621 399 228 242 447 444 834 422 884 421 441
 294 305 301 313 310 598 556 640 352 342 402 412 856 318 340 474 420 554 316 430 378 483 357 243 880 425 428 841 465 482
 581 549 520 846 371 408 513 345 481 427 407 850 553 416 339 347 487 315 377 363 207 411 295 539 660 382 419 415 388 304
 385 390 258 535 498 322 612 569 467 491 867 374 331 503 645 364 333 389 343 403 414 462 368 252 439 321 540 690 435 515
 579 323 392 381 538 563 367 508 613 534 510 475 530 514 337 211 454 479 380 376 348 550 542 489 400 401 370 273 511 567
 463 346 477 426 521 281 216 312 379 509 647 675 442 225 445 599 436 501 490 476 496 580 697 282 565 266 532 134 572 525
  82 387 492 533 590 443  96 517 434 472 133 404 405 552 516 495 676 523 484 485 473 669 614 505 418 349 536 222 560 450
 471 633 329 529 448 129 424 166 602 635 687 113 446 274  33 559 575 571 437 578 544 616 597 692 557  19 678 143 506 524
 543 610 499 704 583 158 384 175  31 651  43 589 630 142 205 706 767 278 661 634 587 486 573 626 432   5 637  39 659 478
 451 555 665 546 642 497 307 285 629  61 636 688 504 453 227 733 456 653 593  52  12 564 507 643   4 157 595 291 561 548
  62 759 480 736 722 679 174 253 105 624 135 743 646 124  65 684 874 625 712 570 753 545 518  85  64 210 271 187 438 672
  78 762 774 694 562 701 148   2 677 603 537 864 779  60 167 558 681 707 269 293  44 576 582  91   3  22 607 226 737 711
 577 541 714  21 756 644 493 112  18 682  35 829 699 191 213 584 789 795 181 531 639 455 691 146 623 317  68  67 768 336
  80  16 740 287  72 311  30 234 728 732 792 592 798 232 171 715 824 628 114  63 696 685 744 608 502 132 667 328 815 179
 233 761 816 747 729  56  79 461 710 664 596   8 785 223 791 835 739 769  14 299  15 754 641 279 176 617  51  25 631  11
 262 763 330 782 702  24 257  34  23 735 726 844 627 230   7 658 826 796  26 163 654 742 842  84 783 151 116 344 801 183
 398 777  27 820 703 122  36 140 847 833 857   9 811 198 825 716 803 812 189 423  32 724 750 622 180 296  28 362 137  38
  59 327 809 245 786 662  47  49 238 649 823 802 718  37  69 845 813 882  20   6  42  50 887 752 748 794  46 860  55 395
   1  54 808  53 776  83  88  75 893 870 805 746 772 698 165 886  10 852  57 160 781  41 790  17 185 770 141 755 800 383

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.00574e+06us (= 3005.74ms, 3.00574s)
Wall-clock time (full program): 3.06851e+06us (= 3068.51ms, 3.06851s)
Satisfaction error: 0
Number of search iterations: 826
Number of local moves: 558 (including on plateau: 78)
Number of local minimum: 44 (including on plateau: 3)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5782
Total number of local moves: 4982 (including on plateau: 1476)
Total number of local minimum: 158 (including on plateau: 118)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 447 199 741 114 853 347 229 834 264  97   9 246 763 778 268 848 115 168 128  44 787 886 857 597  43 833 310 891 808  11
 880 451 102 824  25 297  72 863 811  49  15 699 788 121  45  27 159 191 744  87 728 867 784 386  64 732 693 822 375 814
 829 715  18 713 815 125  22  17 827  31 299 240 821 785 849  48  16  96 835  92 671 479 690 227 235 614 766   7 792 841
 688 395 222  69 883 359  63 365 780 296 340 739 816 400  51 818 253 100 107 112 851 748 683 142  37 776  36 798 852 736
 172 166 648 830 635  47   4 812 772  35  10 249 762 591 531 756  90 290 825 707 734 781   8  76 263   3 799 372 746 801
 805 285 760  71 769 244 156 660 605 329 624 135  21  34  65 770 304 174 777 376 868 803 872   1   6 140 675 723 733 730
 601 603 747 749 740 288 409 644 691  12  19  50 456 802 681 786 278  38 131 145 694 507 590 333 254 345 198 640 607 477
 665 807  99 216 726 610 176  39 647 609 367  33 545  89 580 810 636  62 195 118 663 676 110 540 308 703 684 701 642 459
 664  13 412 646 569 155 270 678 239 666 219 718 499 677 576 649 208  91 698 314 771  52 710 604  54 532 212 501 526 592
 630 144 158 478 654 490 230 753 625 765 467 606 388 652 510 567 247 475 672 119  23 622 619 236 287 171 165 651 596 515
 761  46 806 562 537 452   5 600 626 502 668 556 593  86 656 685 237 551 577 136 557 210 536 696  70  68  79 667 321 669
 573 311 611 724 623 533 251 616 553 639 509 289 563 410 534 561 519 618 265 471 559  14 450 108 259 185 583  95 568 521
 338 487 523 167 542 506 300 645 482 403 538 679 673 527 505 550 497 566  61 628 579 302 470 513 495  40 460   2 449 588
 555 530 441 416 558 594 493 436 468 378 399 293 525  58 574 431 445 529 257 349 511 517 549 512 528 674  24 476 503 492
 374 423 508 446 377 489 587 560 657 383 387 543 496 461 362 407 231 474 394 401 424 358 453 500 381 544 462 539 353 541
 548 279 546 554 572 463 582 415 360 390 643 498 524 504 334 442 356 464 284 547 472 620 565 488 419 315 233 328 252 518
 465 595 455 350 379 613 617 418 306 522 514 440 339 686 425 483 354 444 370 432 330 494 429 632 552 301 480 343 430 317
 312 319 621 332 428 309 631 427 281 363 653 326 336 750 473 408 342 438 348 435 344 277 392 382 641 898 655 469 491 434
 322 439 368 384 283 800 719 402 485 292 177 742 874 743 385 398 346 413 406 248 261 661 245 893 411 844 295 190 173 316
 405 782 331 396 228 759 575 426 421 269 389 433 355 313 325 481 689 393 454 571 276 221 275 705 466 352 878 271 820 256
 272 890 859 183 371 819 520 181 422 795 182 280 189 351 160 242 650 457 484 796 318 258 397 267 899 670 298 855 130 320
 420 687 188 404 200 137 860 337 894 341 207 303 361 294 414 417 638 708 196 783 486 854 178 366 682 262 843 589 180 286
  77 727  20 856 194 186 570 842 150 324 391 870 147  94 357 273 757 877 250 721 193 380 369 716 773 615 197 881 448 260
 124 608 116 234 149 774 725 327 307 266 873 826 291 722 255 205 885 871 163 895  53 373 201 889 846 754 224 123 101 335
 129 274 823 217 223 884 659 117  74 817 706 758 203 813 220  78 692 126 836 838 164 243 148 839 892 702 695 215  26 104
  93 581 241 238 897 282 755 680  57 700 887 122  29 106 633 134 900 775 627 516 729 226 151 305 697 437 584  83 837 213
 202 218 225 864 109 731 879 139 184 794 866 154 152 858 882 876 169 658 791 629 153 232 204 662 779  56 793  41 187  28
  84 612 602 599  59 767 735  73 209 832 585 175 214 105 869 162 840 789 831 717  80 138 637 714 578 113 206 364  81 745
 192 862 738 127  75 132 709 111 161 720 711 704 737 535 850 143 865 804 211 845 133 634 764 120 828  85 141  88 458  32
 888  67 586 752  42 323 712  98 157 896 861 809  55 170 146  60 797 875 598 443 103  82 179  66 768 751 847 790  30 564

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.9603e+06us (= 4960.3ms, 4.9603s)
Wall-clock time (full program): 5.02298e+06us (= 5022.98ms, 5.02298s)
Satisfaction error: 0
Number of search iterations: 2135
Number of local moves: 1082 (including on plateau: 533)
Number of local minimum: 129 (including on plateau: 51)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 16095
Total number of local moves: 8117 (including on plateau: 3864)
Total number of local minimum: 1064 (including on plateau: 308)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 303 863 374 858 853 813 211 222  70 328 363 344 156  14 808 149 747 173 811  46 758 115 291 232 167 844 868  23 834 877
 676 245 371 769 794  69 177 814 878 766  16 193 797 154 865 263 832 343 731  39 828  34  32  67 633 786 189  35 310 809
  65 269   1 509 755 563  84 781 226 839 847 163 765 723 788 176 823 770 798  15 836 124 789 817  18 819  92  11  41   8
 332 805 348 795 871 315 234 787 854 784  26 136  19 358 815 750 744 140 675  17 870 215 838 105  93  88 418 180 751 152
 255 762 300 763 679 134  22 693 830 831 704 151  86  25 734 133 653   9 739   3 757  28 804 664 174 419  90 689 773 611
 660 695  58 120 736 266  94  21 687 743 728  89 661 760 776  61 625 121 459 738 696  47 703  38 710 612  95 681 833   2
 158  49  29 106 677 729  59  36 774 589 741  99 825 818 707  10 646   7 639 752 730 682 742 401  30 594 240 172 749 725
 327  79  27  64 778 567 305  12 678 733 708 132 125 632 702 197 515 629 720 277 669 610 391  77 571 777 162 671 732 648
 166 236 196 138 626 430 220 663  31 561 606 144 570 716 583 205 587 636 692 501 631  13 620 577 464 662 229 621 485 706
 325 111  74  43 607 595 272 534 667 194  87 590 556 627 497 549 698 598 630 496 268 705 684 691 566 600 209 585  76 381
 206  52 666 139 276 584 249  20 518 649 591 257 668 586 510 468 550  37 559 204 609 481 654 592 697 605 241 554 658 635
 157 581 538  50 529 619 252 542 512 477 683   6 514 551 513 519 564 498  72 670 724 492 460 580 544 562 258 420  75 553
 503 473 502 361 535 417 309 442 545 532 523   4 141 526 546 376 593 390 366 539 555 530 506 242 463 413 446 686 493 558
 472 422 486 543 500 640 230 521 569 457 533 579 504  40 488 456 355 435 511 482 438 411 537 367 608 461 356 360 103 651
 531 507 454 336 520 466 334 552 484 536 596 400 421 516 416 399 471 474 380 392 436 301 431 575 541 412 491 449 219 475
 499 424 450 527 338 409 525 761 505 452 437 377 322 470 403 405 423 458 480 462 425 517 386 455 393 406 453 433 479 441
 415 397 443 495 528 465 574 396 572 522 494 373 445 410 349 432 883 451 323 379 483 439 362 407 307 339 370 394 628 440
 357 427 429 478 434 294 565 333 296 345 387 384 402 444 314 490 388 246 821 378 350 359 711 428 540 313 892 448 880 382
 604 576 476 341 383 806 644 408 340 395 426 764 385 337 352 261 599 489 375 372 414 275 299 318 304 719 613 311 665 264
 894 861 672 841 447 320 745 487 342 250 879 331 316 279 469 259 312 235 353 713 324 699 467 271 365 256 347 243 284 254
 898 721 652 354 231 298 638 837 326 857 351 835 295 404 198 267 302 829 247 642 280 283 287 237 281 317 622 306 508 212
 810 260 657 624 181 826 722 191 893 282 273 717 321 208 330 820 187 775 346 228 274 876 238 288 308 597 645 319 135 184
 655 262 771 768 190 200 855 822 329 265 182 860 248 293 289 891 278 270 201 292 179 369 890 840 210 148 859 286 618 195
 656 582 715 643 131 740 807 165 207   5 169 887 568 171 221 872 244 164 824 225 285 846 368 869 227 185 694 748 114 183
 233 616 615 641 297 842 867 155 216  62  48 767 848 614 203 547 224 827 253 843 108 192 218 637 335 251 816 223 161 856
 145 647 674 617 137 175 685 129 128  85 110 783 862 217 199 718  24 735  53 885 117 623 186  97 896 888 792 875 147 886
 700 727 785 780 214 524 398 107 101 213  96 799  55 746  57 573  51 772 290 659 118 796 119 884 849 239 557 882 364  60
 548 650 150 588 104 122 782 756 123 159 900 801 688 202 126 601  33 690  80 712 100 852 168  82 753  71 812 895 389 578
 897  63 800 143  98 109 866 726 113 560 899 791 102 881 127 889  91 680  45 709 170 737 188 874 714  78  56 142 851 116
  68 153 802  81  66 178 790 602 701  44 112 759 850 793 130 779  73 634  42 845  83 864 146 803 754  54 603 873 160 673

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.23079e+06us (= 3230.79ms, 3.23079s)
Wall-clock time (full program): 3.29987e+06us (= 3299.87ms, 3.29987s)
Satisfaction error: 0
Number of search iterations: 940
Number of local moves: 592 (including on plateau: 144)
Number of local minimum: 42 (including on plateau: 9)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6877
Total number of local moves: 5641 (including on plateau: 1947)
Total number of local minimum: 230 (including on plateau: 138)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 849 691 132  25 230 324 775 833 607  53 309 143 873 329 503 829  28 154 791 831 749  23 218 834 122 872 756 182 209 241
 107   4 816 175 538 817 820 724 799 213  20 733  35 737 814 830 804  40 779 326 451 729  37  44 111 192 856  82  24 858
   9 285  94 760 715 625  41 845 864  83 245 443 866 345 127 365  30 738 853 838 690 279   5 841  22 707 754  15 152 879
 736 153 311 171 828 328 684 836  64   7 761  90 432 350 788 446 806   8  77 768 618 480 755 803  34 880   6 425  62 808
 676 405  45  92 714 146 793 843 680  36 678 244  12 191 281 186 657  21 769 629 472 632 645 865  26 807 846 141 124 859
 333 334 730 706 511  11 699 748 757  17  85 130 796 342  68 659 692 201 710 728 751 786   3 633 223 249 732 162  10 709
 772 487 815 687  39 228   1 701  99  32  42  27 731 298  84 720 773 581 624 619 649 778  48 870 274 316 694 726 227 573
 660 233 812 615  13 110 708  16 675 184 712 103 550 131  43 561 611 718 488 516 123 672   2 722 156 677 713 609 595 787
 669 108  33 606 821  59 682 662 789 104  97 291 617  52  67 721 661 727 556 745 138  91 668 681 163 273 711 610 528 585
 679 142 579 589 400  54 643 742 627 541  38 269 578  80  47 476 638 614 450 642  14 534 689 688 216 344 596 574 455 577
 562 160 673 582 428 526 686 597  56 628  50 391 477  66 648 158 551 485 456  18 563 586 685 504 299 401 650 605 583 441
 481 267 655 543 492 567 517 698  78 506 457 389 635 174 531  73 663 664 640 349 620 519 521 570 380 172 470 437 157 290
 623  29 417 584 580 462 598 658 572 743 539 295 118  65 601 502 533 232 430 575 697 482 341 431 327 121 600 616 250 494
 540 386 461 468 495 593 498 515 473 474 544 518  46 514 320 670 440 367 359 547 415 558 555 438 375 395 426 234 489 402
 398 453 486 530 464 379 535 542 557 545 412 639 424 429 469  71 647 559 522  19 554 527 336 513 393 272 418 548 435 439
 496 288 509 414 590 881 355 525 630 483 407 330 507 603 383 460 399 277 537 353 331 315 377 448 546 452 263 490 445 421
 465 566 479 536 508 497 303 363 369 408 416 696 422 608 406 413 382 370 372 565 410 321 423 278 501 576 602 282 641 337
 348 805 212 447 776 287 454 357 588 475 458 631 884 898 338 351 484 238 552 339 323 255 493 409 442 256 251 231 529 404
 302 844 301 300 314 325 180 225 340 259 861 850 505 652 211 766 387 286 653 444 777 368 264 378 510 725 243 403 499 343
 317 549 280 371 284 220 318 294 292 434 885 767 236 800 869 310 366 335 594 892 275 411 427 271 783 553 385 471 258 268
 361 705 293 332 823 818 313 319 436 703 207 747 308 781 305 765 449 374 226 126 782 392 381 297 523 621 198 235 512 183
 307 863 257 205 188 802 459 388 893 179 253 651 373 848 419 187  75 592 364 199 835 819 734 224 889 189 113 247 674 289
 204 654 312 397 265 851 193 306 362 704 248 763 246 746 560 376 394 322 276 262 346 266 852 637 683 478 396 801 500 115
 229 155 170 520 202 735 894 261 532 752 822 792 134 524 896 354 173 347 771 237 178 151 693 196 716 491 222 774 210 384
 352 463 167 214 837 897 159 140 219 824 719 723 208 304 862 888 296 356  63 587 128 125 877 147 568 390 150 871 741 240
 145 604 895 203 591 166 164  79 215 868 854 161 612 634 656 626 260 840 165 221 129 283 790 133 810 900 194 200 847 270
 890 764 770 242 666 148  55  88 466 813 420 809 144 644 197 467 168 795 112 762 119 136 109  49 883  69 254 758 827 891
 832 622 882 695  57 599 825  51 120 750 784 114 135 717 636 137 149 876  76 181 239 571  96 358 874 185 190 798 860 106
  72 702 753 667  60 700  70  61 217 842 759 105 744  89 646  31 100 613  81 102 887 569 826  58 886 878 739 177 875 206
 101 794 176 839  86 360  93  98 139 855 433 671 867 564 740 117 899 785 169  95 252 857 665 195 780  74  87 811 797 116

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.66334e+06us (= 4663.34ms, 4.66334s)
Wall-clock time (full program): 4.72743e+06us (= 4727.43ms, 4.72743s)
Satisfaction error: 0
Number of search iterations: 1980
Number of local moves: 888 (including on plateau: 346)
Number of local minimum: 140 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 13620
Total number of local moves: 7026 (including on plateau: 2780)
Total number of local minimum: 856 (including on plateau: 219)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  11 251   7 283 140 813 848 883 244 356 743 173 809 827  79  90 793 850  39 219 701 175 134 879 355 403 687 758 884  81
  67 368  78 385 782  13 869 766  16 425 877 136  26 878 804 396 246 867  73 351 870  95 389 847  85  12 866 752 423 753
 188 257  10  43 686 819  27 863 851 269 826 194 831 810  66 127 860 671  80 398 889 146 336 712 138   2 868  34 816 698
 610  58 147 684  17 714  65 854 731 722 350  54 735 253 853 638 828 754 238  23 825 201  24 703  31  93 855 824 609  22
 115 280 161 198  30 761 693 199 740   5 720 281 717 662 767  32 165 654 267 697 716  59 688 744 131   4 807 751 729 742
 155 101 182  20 627  48 817 781 625 736 732  88 156 592 778  36 748 648  63  62 749  77 704 598 164 706 711 665 412 734
 628 331 118 224 835 678  42 775 713 615 670 105 723 560 111 102 771 541 116 268 768 135 343  19 100 621 759 649 510 685
 760 324 660 227  14 764 808 718 107 650 476 195 590 695 109 635 633 347 259  97 568 631  21 481  49 820 675  53 517 632
 683  38 618 213 619 613 715 611 264 663 557 226   6 620 694 420 462 659 664 145 737  68 547 149 314 585 498  40 605 482
 514  25 603  15 103 511 745 677 505 666 555 329   9   8 746 184   3 604 668 640 248 551 636 529  98 629 602 691 700 721
 679 374 689 215 495 647 595 537 532 522 159 234   1 564 534 241 312 225 308 274 572 574 578 655 200 497 486 519 690 607
 587  71 536 561 674 594 644 411 524 673 652 413 661 424 584 579  18 390 294 143 230 500 520 421 377 171 502 507 178 676
 589  28 494 588 552 499 209 617 626 563 415  84 606 545 550 307 483 290 597 484 503 566 496  60  99 614 645 333 531 542
 562  47 637 539 490 203 466  35 599 646  44 386 705 480 418 472 546 504 319 569 354 474 416 438 622 586 624 530 463 341
 378 538 316 513 428 515 427 441 407 528 549 527 380 410 433 417 471 556 491 473 402 326 487 360 489 459 455 518 493 328
 286 580 575 544 485 553 448 436 453 477 465 479 516 512 381 361 508 349 397 452 492 242 509 422 309 468 464 554 344 454
 376 733 337 369 393 363 451 387 469 357 437 446 432 656 311 405 394 696 570 400 430 449 710 445 426 342 375 304 725 327
 278 669 388 295 321 521 409 559 359 144 404 708 741 353 440 382 235 460 776 373 724 392 442 467 571 456 325 523 535 265
 335 798 789 548 383 406 457 458 601 401 894 540 414 322 243 196 330 657 186 461 142 391 885 236 525 501 340 339 293 444
 429 419 434 773 289 435 152 317 310 893 892 859 346 370 358 443 276 297 371 895 273 634 204 506 581 372 364 475 365 183
 395 886 284 707 288 150 379 399 130 774 567 772 345 218 153 842 873 338 299 846 488 709 254 367 821 133 174 262 533 129
 815 845 726 796 249 348 313 252 318 323 287 558 334 214 431 792 612 408 616 747 233 890 193 261 784 231 137 247 300 255
 728 852 212 861 277 271 208 833 653 266 285 739 839 888 190 800 301 139 305 291 169 296 898 162 880 302 167 279 237 187
 180 596 856 658 680 166 439 223 871 160 366 765 158  41 239 799 256 582 806 600 258 830 141 843 786 320 332 192 132 240
 228 639 197 298 750 899 163  82 151 292  94 787 125 315 608 790 185 352 719 762 177 447 887 811 470 874 232 862  74 245
 881 838 692 756 897 124 179  83 306 148  45 791 220 221 119 667 591 108 801 780 738 812 217 172 643 823 207 270 210 176
 260 623 858 303 157 865 727  51 250 112 104 577 593  92 699 565 681 211 872 543  52 682 757 168 882 755  91 121  76 788
 573 526 876 672 840  69 123  89 126 191 189 797 583 272 202 900 822  33 702 834  64 803 154  61 837 117  87 896 282 795
 841 844 206 777 229  96 875 122 864 818  55 478 651  72 779 769  75  50 805 642  29 630 113 216 891 849 110 362  86 181
 384 576 829 450 785  57 222  56 170 120 106 794 263 641 836 128  37 275 814  46 114 730 832 783 857 770  70 205 763 802

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.22829e+06us (= 4228.29ms, 4.22829s)
Wall-clock time (full program): 4.29272e+06us (= 4292.72ms, 4.29272s)
Satisfaction error: 0
Number of search iterations: 1668
Number of local moves: 879 (including on plateau: 341)
Number of local minimum: 100 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12136
Total number of local moves: 7395 (including on plateau: 3296)
Total number of local minimum: 637 (including on plateau: 245)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 473 747  42 808 857  67 598 764 130 861 856 593  22 762 499 614  69 252 829  81 135  15  59  30   2 773 776 875  83 843
  84 862  27  96 863 677 729 779 539 851 645 825 161 655 121 142 879  43 709  65  76  94  35 692 710 873 279  92 838  74
 559 668 853  90 817 107 148 889 860 900 642 106 233 846 616 724 194 184 893 108  98  34  41 104 163 761 807 823 144 103
 799 800 126 894 715 154  60 780  79 883 350 632 122 837 584 818 189  93 885 129 192 220 711 265  85 136 399 117 869 592
 644 876 180 153 531 621  46 651 864 854 892 719 205 805 665 858 841 105 228 261  86 168 140  63 179 771 723  62 167 157
 635 527 895 216 774 828 589 831 458 763 695 872 132 866 472 751 190  33 131  77 214 115 123 111 413 703 534 198 162 207
 585 720 348 235 741 175 847 722 713 730 890 268 139 874 758 634 164 242 206 110 238  87 196 899  99 740 672 210  71 202
 687 737 337 239 706 636 814 404 855 492 236 793 211 398 794 871 330 241 185 188  89 256 887 325 289 313 524 280 100 298
 595 714 561 217 646 732 302 785 429 743 231 288 291 654 811 259 306 284 281 470 234 882 237 391 263 335 542 218 195 619
 796 704 246 295 625 270 891 693 878 412 314 266 278 277 880 888 315 317 308 113 508 287 316 250 276 253 884 358 387 230
 886 897 258 215 627 366 343 500 629 599 754 260 267 269 562 405 212 334 896 765 274 297 351 282 380 209 690 304 329 355
 669 717 225 309 514 698 361 607 285 530 245 833 377 400 638 213 292 580 427 174 767 681 331 536 339 392 415 349 300 311
 403 870 305 251 553 373 324 573 659 375 898 416 682 360 489 336 299 356 321 374 395 497 344 410 487 433 667 402 323 340
 333 705 271 484 493 362 521 617 620 341 369 532 388 332 301 451 421 477 417 549 364 384 414 509 367 396 424 408 474 791
 496 406 390 423 368 436 469 422 449 476 550 409 463 563 537 482 432 397 460 520 425 312 526 346 420 522 464 407 505 440
 506 443 471 434 418 456 525 435 419 502 431 319 430 512 444 459 488 479 438 382 401 454 491 475 490 462 411 495 342 503
 457 102 453 501 426 606 467 441 322 528 455 554 507 303 519 504 547 383 442 546 535 448 437 557  25 481 389 517 565 498
 133 182 571 486 378 552 468 359 290 283 376 428 540 513 371 345 583 244 574 485 579 566 543 590 515 529 327 541 608 556
 326 461 582 576 293  44  28 370 353 597 544 594 575 510 352 439 610 591 609 596 275 465 568 558 623 631 151 630 538  26
  75  68 569 626 445 633  95 127 354 452 615   5 523 603  72 572 601 696 612 379 600 551 663 727 545 570 114 564 548 511
 255 171 611 707 365 226 602 347 257 248 624 639 628 224  56 674  91 637 577 678 393 173 533 567 622 516 155 699 685 555
 101 247 605 578 201 480 381 183 581 199 178 662 587 227 125 166 670 661 560 588 656 447 518 657 697 671 219 735 649 286
 394  57 647 769  12 679 660  37  39 204 675  17 787 120 181   1 783 694 650 702 790 653   6 701 742 643 307 755  50 760
 160 240 809 641 116 372  36 318 673  53  20 680 721  61 232 193 688 683 483 768 648 786 826  29 666 187 296 640 689 801
 664 147 797 746 191  13 586 145  51  38   8 686 385 803 143  88 839 752  54 725 813 836 744 658  23 700 223 759 749 149
 229 118 775 795 262 310 772 222 446  66 294  58 832  64 124 726  55 466 691 613 676 770 804 782 868   3  70 177 716 731
 328 200 778  82 128 186 757  97 810 141 478  24 708 203 243 138 820 835 386 684 784 852 844   4 734   7   9 766 736 753
 357  78  14 745 170 798 781 159 156 169  80 712 819 221 363 338 748 848  73 802 604 718 197 249 877 320 494  47 822 756
 865  11 750  45 264 824 150 146 208  49 152  52 652 134 830 172 849 792 158 777 821 728 788 881 789 137 738 272  31 450
  21  40  19 859  16 834 165 112 109 176  18 273 850 119 733 254  10 816  32 806 845 739 842 867 827  48 812 815 840 618

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.53414e+06us (= 4534.14ms, 4.53414s)
Wall-clock time (full program): 4.59749e+06us (= 4597.49ms, 4.59749s)
Satisfaction error: 0
Number of search iterations: 1434
Number of local moves: 797 (including on plateau: 299)
Number of local minimum: 79 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12864
Total number of local moves: 7603 (including on plateau: 3541)
Total number of local minimum: 710 (including on plateau: 274)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  70 350  19 655 786 150 839 830 885 256 843 301 833 257 788 147 395 819 795 343 122 730 876  78 406 106  30 769  34   3
 162  14   4  20 860 804 877 171 756  90 852 224 766 270 829  22   5 879 729  29 744 223 851  86 634 168 687 811 771 177
  36 348 346 831 798  25 863 492 638 344 693 104 398 194 825  18 705 841 292  98 772 330 813 165 791  42  26 167 747 773
 107 180  65 690 733 828 743 783 719  81 493  23 714   1 844  13 796   7 218 325 762 205 871 154 742 116 864 698  41 699
 187 239 170 684 728  53 776 337 763 731 826 370 824 605 209 140 754 738 782 156 295  82 737 721 516 850 126  12  35  69
 131 603 322 859 649 235 677 294 799 697 665 166 556 200 832 145 865 794 607 576 212  95 635  59  49 152 208 657  21 755
 210  54 188 582 734 102 578 284 639  17 645 280 560 300 706  10 746 775 704 127 286 186 643 723 405 682 163 739 752 695
 567  45  43 802 590  96 688 515 616 637 720   9 632 175 674 662 658 886 774 159 243  52 618 712 115 130 261 727 707   2
 691 189 174 647 586 319 780 132 526  50 595 204 653 183 816 694 749 666 606  72   8 557 470 620 193 234 221 554 678 648
 569  56 287 842 748 573 543 503 724 303 472 197 541 561 646 571 584 463 600 201  40  87 630 460 114 422 274 519 544 441
 476 321 237 563 570 546 479 133 532 670 329 525 797 219 624 612 583 456  76  16 207 458 758 553 547 381 158 504 513 672
 671  71 273 667 550 685 528 129 484 575 469 447 426 581 660 468 636 509 112 253 511 298 555 478  28 508 203 633 510 597
 659 531 644 521 474 384 523 358 390 564 745 438 580 249 524 486 593 488 491 342 520  74 431 663 233 248  94  44 535 689
 579 428 397 522 464 713 404 562 490  46 421 386 506  62 454 604  15 379 537 534 338 494 631 366 619 517 432 656 507 452
 306 410 498 443 542 260 757 408 425 473 313 402 552 467 533 558 500 401 387 709 377 457 416 424 302 304 415 596 362 518
 588 393 585 436 412 548 399 236 501 380 471 497 419 572 538 461 271 574 489 374 514 427 527 320 568 392 382 418 459 364
 430 396 433 385 495 625 450 336 351 279 347 371 446 417 566 565 812 540 549 394 265 448 545 444 587 602 323 340 481 293
 363 451 439 487 505 373 477 855 499 480 591 365 836 559 409 440 354 289 332 198 324 483 307 475 735 326 429 411 368 355
 299 815 883 485 309 314 272 761 232 317 244 609 622 388 389 335 465 407 383 875 817 369 318 275 623 356 613 267 339 134
 423 466 449 420 453 357 315 889 372 551 874 403 263 285 414 258 341 434 805 789 251 353 328 230 820 673 352 376 196 375
 400 838 654 179 281 312 252 803 288 840 184 868 282 676 190 222 413 245 869 765 229 751 176 195 462 715 617 240 305 264
 290 790 726 316 119 308 228 641 241 845 269 686 333 827 160 227 278 360 202 652 849 664 310 277 391 512 711 151 291 861
 642 718 577 182 214 536 117 872 262 231 445 740 246 732 378 800 311 242 297 890 276 792 155  89 873 801 710 216  83  88
 345 822 611 361 178 858 141 254 192 848 172 627  47 854 144 215 217 283 161 681 651 700 259  68 781 455 599 225 900 866
 683 614 696 123 334 442 296 621 185 206 367 837 213 226  79 785 211 238 138 668 881 870 101 628 327 897 880 173 146 650
 793 482 701 266 157 496  75 142 137 692 255 809 220 725 118 770 103 359 136 615 592 601 120 898 750 135 680 703  97 888
 834 759 760  58  61 149 164 143 778 777  67 708  48 661  37 821  84 268 191 818 608 806  93 853  60 896 899 148 857 109
 894 808 891 121  55 717 110 722  31 139  80 594  66 878  99 856 124  38 125 867 435 768 111 835 502 247 679 846 764 113
 779 437 741 199  39 893  64 181  27 629  57 589  85 675   6 787 884 105 530 349 847 529 153 784  92 895 669 807 610  73
 331 887 702 169  91 814 100 128  33 767  11 736  51 716  24 823  63  32 598 640 539 626  77 882 250 753 810 108 862 892

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.93334e+06us (= 3933.34ms, 3.93334s)
Wall-clock time (full program): 3.99653e+06us (= 3996.53ms, 3.99653s)
Satisfaction error: 0
Number of search iterations: 1439
Number of local moves: 836 (including on plateau: 454)
Number of local minimum: 67 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10382
Total number of local moves: 7489 (including on plateau: 3159)
Total number of local minimum: 469 (including on plateau: 245)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 597 873 835 843 122 103 818  70 838 211 848 826   4  52   7 849 857 879 862 869 795  93  25 187 101 120  11  34 736  50
 431 273 242  44 102 807 834 199 781  84 899 812  26 147  81 842 832 859 792 155  42 440 799 339 540 830  69 828  22 364
  83  71 533 213 789 823 785 114 794  23 851 730 210 144 337 753 698 322 541 286 798  21  96 797 145 804  87  49 846 772
 276 181 131 796  58  28 169  12 702 134 679 824 819 172  29 793 809 836 759 146   1  10 820 722  40 775 552 784 696 762
 238 284 159 822 111 154 716 253 672  19 777 711 719  39  17 695 749 827 731 751  15  37 841 743  13   5 191 788 760 678
 468 130  85 770  88 790 727 287 800 178 697 675 105  30 160 720 700 732 802 136 735  86 252 766  78 690 153 752 733 190
 332 285 132 534 650 632  33 321 660 186 767 341 484  24 235 748 783 746 676 664 686 198 688 108 116 747 229 677 714 119
 207  20 294 708 527 726 642  53 593 346 742 241 592 680 278 721 643 639 765 535 595 243   8  51 302 644 204 637 705 174
 343  56 156 673 608 663 569  82   6 233 683 523 629 622   3 667 706 662 682 259 738 184 625  72 177 687 375 612 633 587
 387 226 128 638 613 689 628 152 133 408 607 263 618 636 570 669 605 718 674 652 157 218 656  36 333 506 245 611 665  74
 261 584 649 551 603 600 537 231 614 220 107 289 214 655 578 550 572 606 562  16 511 355 601 685 163 525 266 516 648 246
  41 590 631 543 615 481 327  77 514 257  60   2 594 560 630 574 542 565 485 602 504 267 585 573 454 531 250 529 556 576
 530 553 127 563 395 580 430 545 519 309 329 265 521 568 477 528 356 448 616 526 507 351 456 500 307 524  64 581 539 501
 376 388 489 512 483 494 487 344 520 508 419 515 389 385 442 566 502 345 392 496 382 303 479 579 546 471 300 457 458 488
 438 491 400 416 538 497 536 475 424 478 459 439 619 433 427 474 503 449 313 510 409 425 347 398 498 368 415 402 490 444
 492 518 432 270 446 391 420 464 421 495 450 340 564 517 367 407 410 467 493 417 445 428 393 461 379 436 513 365 844 470
 384 476 423 342 429 414 486 499 460 399 359 311 482 505 884 403 422 435 465 466 374 554 381 401 452 863 426 306 328 386
 704 463 447 404 418 397 336 558 317 532 362 480 657 326 290 571 455 782 396 373 472 710 361 405 411 406 544 380 262 296
 816 338 318 372 383 325 462 754 357 617 557 469 390 509 371 164 413 443 821 358 354 589 434 240 624 363 598 293 330 453
 577 723 378 369 370 352 394 653 291 654 701 591 279 305 366 312 319 236 349 681 331 549 377 298 604 350 626 412 221 847
 645 310 850 335 232 353 271 814 315 451 323 575 314 320 671 234 308 275 215 756 839 659 254 791 586 304 599 297 324 295
 810 774 713 192 224 209 316 548 878 610 249 867 301 272 658 237 288 282 189 208 228 522 176 244 856 216 699 864 182 703
 813 255 348 256 201 258 227 875 212 623 299 712 860 281 801 206 269 247 292 877 858 647 728 280 635 222 768 124 138 203
 764 640 646 129 150 200 882 837 274 811 547 360 173 717 283 219 185 162 140 803 175 634 248 889 741 113 833 109 268 583
 588 692 739 900 778 876 239 724 148 855 217 197 183 871 769  91 121 135 165 260 112 870 852 137 251 141 666  90 104 744
 661 771 651 223 886 100 202 620 167 750 139 171 691 787 684 106 193  68  97 158 854 786  95 567 872 865 885  92 149 225
 641 758 596 866 817  98  14 740  89 840 277 561 555 737 887 151  61 168  45 763  63 808  57 230 861 115 473 166 180 898
 334 709 890 142 874 143 126 668 196 693  62 161 194 707 806 110 170  79 117  38 609 883  94 670 729 773 845 118 881 694
  99 895 829  43 125 891 123 831  65 776  31  59 892 780 825  80   9  76  32 195 853 757 893 621 896  67 761 897  48  66
 179 188 264  46 880 441 779 715 755 815  18 205 437 734 582  75  35  27  47 559  73 888 894 725 805  54 868 745  55 627

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.70264e+06us (= 3702.64ms, 3.70264s)
Wall-clock time (full program): 3.76608e+06us (= 3766.08ms, 3.76608s)
Satisfaction error: 0
Number of search iterations: 955
Number of local moves: 765 (including on plateau: 232)
Number of local minimum: 25 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8769
Total number of local moves: 7190 (including on plateau: 2844)
Total number of local minimum: 353 (including on plateau: 207)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 112 771 376 871 191 100 885 840  91 777 861 849 115 681  96  51 137 212 778 741 797  81 703  45 734 539 648  61 309  63
  73 832 767 723 883 719  20 886  74 553 262 856  19 247  87 193  85  24 899  99 880  50 573  78  52 779 711 610 879 602
 786 603 653 106 144 801 188 897 132 744 820 240 155 232 185 207 107  56 827 811 855  69 884 123  76 616 560 851 604 183
  47 859 894 745 433 438  39 714 223 761 164 896 189 733  72 136  82   6 670 729 210 307 839 149 109 862 900 173 876 260
 159 799 554  49 895  86 125 716 633 750 478 177 108 687 226 222 181 166 753 184 810 878 673 168 818 195 742 317 739 227
 114 890 538 205 178 831 119 864  97 620 267 163 176 126 257 143 139 206 224 765 248 167 769 674 845 808 794 637 793 858
  90 275 598  71  57 666 122 652 263 762 725 355 455 162 230 131  32 120 867 789 709 330 713 888 220 704 819 772 694 244
 111 838 235 238 833 312 160 825 282 513 773 303 148 816 135 311 101 256 889 881 379 321 547 211 161 465 848 634 787 202
 215 540 841 192 179 660 806 872 239 288 873 488 157 156 158 150  95 308 625 290 218 874 542 306 213 680 829 740 571 410
 285 804 580 294 372 592 254 466 221 319 259 350 421 834 255 388 261 525 274 796 749 165 776 258  54 679 683 763 552 286
 272 836 411 196 386 326 887 617 105 269 866 361 334 124 367 328 541 299 700 722 302 264 822 283 198 688 280 568 870 293
 500 672 322 331 253 357 396 496 146 651 499 366 344 891 460 375 363 383 332 449 613 665 445 371 339 450 684 325 527 510
 432 400 457 882 250 775 395 494 289 392 382 835 342 479 507 348 336 436 548 349 391 295 594 333 352 658 281 318 585 380
 451 320 390 444 401 384 406 587 526 369 493 492 569 373 425 459 511 354 453 515 407 446 397 419 519 669 483 420 528 305
 314 347 477 443 534 555 313 567 582 368 199 365 341 394 636 529 385 464 506 564 271 480 398 434 485 619 546 621 581 197
 626 435 522  17 340 524 458 423 441 563 559 437 463 512 337 360 576 523 593 550 429 481 138 393 578 489 440 399 378 531
 431 601 498 374 574 590 414 426 461 439 472 454 577 316 562 514 346 608 402 614 387 353 490 422 413 424 377 474 462  40
 533 151 447 692 418  28 646  21 627 518 549 605 473 530 404 364 640 229 607 537 583 508 327 428 502 595 556 234 242 521
 686 504  70 628 596 324 335 356 579 486 470 147 509 575 566 629 543 572 362 659 557 484 323 591 343 291 182 279 201 668
 584 551 118 647 690 588 442 190 456 738 116 662 448 516 746 807 770 695 565  23 532 296 141 760 467 208   2 186  89 482
 643 171 416 702 520   7 802 219 792  10  46 766 570 265 654 813 452 622 469 612 408 505 287 710 747  22 174  16 471 624
 724 103 545 487 635 252 381 403  38 606 589 675 609  64 623 663 544 661 301 682 677 736 409 812 642  35 245 297  66  11
 664  18 128 561 699 251 517  37 705 707 536 791 638 586 495 693 611 615  43   9 630 535 389 846 497 121 214 225   3 751
 691 180 130 597 631 345 720 310 774  14 706 618 650 726 491 696 757 501  13  15 644 645 228 298 237 277  83 641 170 727
 718 417 730 698 140 415 721 134 737 558 689  75 632 110 599 667 852 815 133  84  80 649 268 655  79 405 270 338 169 678
 748  33 304 712 104 236 685  53 715 200 102 127 758  98 842 790 732 784 273 209 427 278 476 639 731 358 204 788 300 809
   4  67  27  31 657 717 752 142 893 153 231 783 759 823 701 850 754 785 145 276  58 853 243 329 800 292 412  26  92 860
 828 249 503 735  65 768   5 187 656  77  93 154 844 826 795 869 868 798  44  29  30 857  60 266 830 175 129 843  34 898
 782  55 241  88 781 755 708  59 863  94 284 117 865 430 780  12 877 764 172 315   1 697  25 821 803 370  68 359 475 854
 892 194 743 756 676 113 814  62 875 216 152   8 847 203 824 817 837 728  48 217 233 246  36 805 671  42 351 600 468  41

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.56276e+06us (= 3562.76ms, 3.56276s)
Wall-clock time (full program): 3.62633e+06us (= 3626.33ms, 3.62633s)
Satisfaction error: 0
Number of search iterations: 1208
Number of local moves: 526 (including on plateau: 114)
Number of local minimum: 71 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8448
Total number of local moves: 6462 (including on plateau: 2670)
Total number of local minimum: 318 (including on plateau: 196)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 891 801 110 142 895 523 796  47 774 171 815 770 699 481 896 715  76  50 556  39  55 784  25  22 842 118  33 657  85 647
 559 343 823 855 688 761 677 874 126  88 894 805 848 233 875 714  72  94 328  86  61 722  42 134 116  48  92 779 104 674
  79 759 873  74 514 652 888  65 108 232 534 708 777  41 862 861  77 863 860  63  73 635 738  95 122  23 150 869  38 882
  19 280  28 182 521 681 845 128 286 741  54 655 821 281 879 787  98  84 606 213  69 818 144 639 684  45 893 306 884 844
 705 695 301 194 854 744 145 121 531 101 833 730 498  80 198 634 218 102 850 155 117 886 161  93 846 889 158 703  90 883
 679 887  78 234 310 853 809 135 229 769 811 865 877 308 230 897 140  75 536 263 278 598 127 147 771 197 191 807 162 252
 819 673 196 181 682 661 851 115 199 749 256 600 712 645  97 723 207 112 756 244 185 859 105 822 217 226 318 718 330 257
 707 746 215 189 830 698 220 240 727 557 249 806 663 356 173 692 270 202 748 867 266 839 246 186 267 103 294 517 231 411
 285 702 227 187 814 829 333 146 899 617 174 678 704 565 236 268 212 377 898 826 311 332 315 335 228 336 291 554 243 593
 519 751 250 222 766 442 309 214 368 224 734 857 295 837 298 393 153 241 871 866 317 630 389 370 346 324 242 701 321 265
 852 797 338 355 813 201 261 287 726 638 255 876 272 441 274 327 251 188 753 792 476 304 260 371 275 288 225 643 396 580
 687 300 374 372 527 165 329 451 412 755 439 365 358 590 438 345 387 364 724 253 381 366 380 856 432 413 238 767 465 582
 885 415 360 219 461 872 342 362 812 297 363 351 405 880 223 373 384 359 542 259 419 375 436 350 399 397 409 627 319 620
 500 429 464 417 340 383 378 445 404 492 453 501 303 448 414 407 900 457 503 808 344 385 449 510 491 402 130 353 430 575
 390 468 561 535 483 505 427 398 367 480 434 653 479 484 302 422 277 508 205 316 458 485 403 433 450 496 650 504 522 420
 549 520 497 526 369 512 444 440 564 493 487 506 357 269 406 394 467 400 553 361 477 460 401 424 587 388 471 392 354 447
  11 421 551 516 518 525 221 426 478 443 509 382 545 416 408 495 425 543 539 538 489 431 537 524 570 435 548 331 418 322
 455 513 175 619 482 624 475 588 143 571 541 180 546   5 347 610 579 502 454 193 459 626 547 651 391 662 592 428 486  71
 258 507 629 659 314 473 584 469 463 262 667  35 178 283 462 586 533 613 410 560 499 474 558 273 550 641 562  60 640 313
 120 164 595 577 292 296 596 581 573 472   3 494 466 159 591 488 544 694 141 720 614 490 530 625 566 532 552  58 670 312
  53 341 555 612 271  68 706 568 184  46 528 109 597  66 654 563 672 616 349 648 515 631 446 599 642 511 601 139 604 621
 148 129 696 669  37  64 589 665 658  67 721  62 160 237 789 156 594 717 132 760 572 137 775 608 618 719 728  59 644 605
 607 209 671 710 279 660 540 609 680 166 729 163 192 685 697 119 615 686 107 290 567  89   4 576 611 636   6 323 578 711
 320 176 768 622 339   8 125 691 709 379 289  29 585 637 623  36 750  43 169 646 693 195 739   7 700 831 725 247 656 778
 170 245 816 574  70   2 794 736 603  44 157  32  82 743 200 602 689 664 100 386 820 177 713 754 745 841 683 293 628 152
 168  81 675 668  18  30 569 633  34 348  13 254 113 716 795 179 733 632  49 731 832 106 735 791 747 752 802 376 836  99
 131  40 827  15 208 264  17 737 276 783 649 138  21 352 804  83 840 782 210 305 740 151 773 799  31 803 838 790 824 284
 423 154   1 890 395 114 133 788 676 781 776 325 732 870  51 282 772 864 211 326 843 167 835 456 123 111 470  52 690 204
 764 786  14 742 235 239  16 793 172 868  24 149 203 878 206 307 780 849 299 785 757 337 810 817  12 765 798  10   9  91
 762 183 847 758 190 666  96 763 334 881 124 437  27 529  87  57 800 834  56 216 828  26 892 248 136 583 825 452 858  20

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.17655e+06us (= 3176.55ms, 3.17655s)
Wall-clock time (full program): 3.24094e+06us (= 3240.94ms, 3.24094s)
Satisfaction error: 0
Number of search iterations: 988
Number of local moves: 485 (including on plateau: 83)
Number of local minimum: 61 (including on plateau: 9)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5921
Total number of local moves: 4901 (including on plateau: 1724)
Total number of local minimum: 185 (including on plateau: 117)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  18 842 641  16  33 185 119 321  46 192 859 840 163 818 827 860 846 885 709 173  42 800 841 180 854  12 209 778 250 156
 782  61 129 234 211 102 125 104 165  52 819 832 748 862 856 755 829  26 235 766 153 150 762  89 323 158 824 870 843 650
 751 187 188 289 136  60 772 592 718 316 774 839  23 713 740 770 787 828 181 148 145 408 776   4 574  30 731  13 285 737
 750   2 746 777 215 312   9 761  54 124 271 837 152 281 738 707 701 876 298 697  81 759 610 669 719 147  20 799 397   6
  80 487 114  29 333  94 558 700  97  79 753 790 771 231 869 784 855 736 178  40 686 654 820   3 111 371 679 861  10 742
  15 821  43 651  72  75 303  41 194 506 715 422 356 741 616 767 560 793 734 730  19  62 851 805 277 198 672 664  27 785
 786 108 681 729  56 602  14 668 144 175 702 278 536  67 693 538 665 670 122 614 133 652 763 182 658 161 690 711   7 710
 609 743  83  71 216 836 765 176  88  32 725 131 239 706 728 732 569 703 183 643 553 691  31 769 236 184 628 685  93 667
 673 647 696 213  59 174 599 677 687 222 286 424 788 543 722 675 636 739 269 623 160  39 627   5   8 287 694 585  96 662
 632 708 578 366 254 374 455 533 593 223 612  28 306 648 704 646 457 716  17 645   1 530 717 663  22 105 607 568 115 692
 604 621 620  70 244 330 500 556 589 603 320  38 606  92 576 572 699 528 106  11 674 474 392 513 135 534 522 720 588 678
 597  24 512 633 220 548 625 520 395 117 137 130 186 527 659 635 600 676 207 615 443 639 540 586 249 342 551 467 596 539
 684 611 517 387 229 583 393 348 276 341 529 660 426 483 537 622  91 581 367 274 595 262 391 420 498 290 324 661 580 555
 577 311 508 317 270 491 582 415 695 251 268 200 493 712 494 547 515 384 504 624 468 523 435 376 432 347 587 453 332 404
 503 482 329 501 531 431 255 369 470 475 456 336 519 480 353 458 562 490 444 436 552 629 497 410 419 383 464 463 377 441
 496 509 362 301 495 514 775 481 409 608 425 554 411 449 478 208 532 448 546 469 524 375 405 451 364 454 358 429 248 437
 638 390 492 355 559 447 414 300 319 238 267 476 510 293 542 584 417 423 544 344 486 545 439 307 485 549 394 421 872 465
 460 875 399 445 649 427 372 550 462 563 489 406 452 280 318 472 433 484 461 314 535 418 442 357 446 757 360 253 380 256
 471 350 386 499 613 378 428 401 440 744 526 756 565 365 388 171 398 379 894 541 385 292 305 402 579 507 416 407 241 288
 258 309 313 864 890 450 412 682 308 473 874 698 346 370 282 284 259 291 798 389 373 352 296 345 792 566 261 302 335 343
 225 331 479 304 657 477 266 337 502 747 434 557 228 733 190 382 295 202 825 204 896 816 656 193 835 591 438 230 212 273
 279 221 264 134 683 868 149 466 516 796 297 570 791 368 140 179 166 354 863 349 644 888 413 205 642 575 325 265 783 322
 218 359 396 891 801 151 315 882 237 780 488 257 826 195 126 123 768 334 745 310 752 113 361 338 403 758 199 283 831 275
 206 233 272 631 605 844 795 203 680 852 640 760 430 260 159 107 299 168 245 867 328 339 263 886 779 571 118 157 773  45
 132 764 197 100 811 850 833 247 723 634 214 688 853 845 227 201 172  58 594 189 794 340 109 849 242 630 219 167 789  44
  64 110 121 898 564 224 838 164 881 598 210  84  37 637 103 327  66 294 726 813 808 858 252 810 671 848 797  53 573  86
 116 900 809 505 892 120  98 139 804 781 246 363 817 567  87  51 217  34 689 459 878  55 243 802 525 666 884  78 655  35
 191 877 895 619 822 873 735 871 590 518  36 326  77  85  99 127  47 177 240 749 521 626 146 226 511 893  73 141 617 807
 897 400 879 806 834 830 154 899 618 721  69  65  48 101  68 155  25  95 138 128 724  57  82 847  21 887 381 889 883 814
 803 232 866 880 561 865 857 112 815 754  74 170 812  63 196  76  49 143 653 351 162 169  50 823 705 714  90 142 727 601

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.37395e+06us (= 4373.95ms, 4.37395s)
Wall-clock time (full program): 4.43669e+06us (= 4436.69ms, 4.43669s)
Satisfaction error: 0
Number of search iterations: 1665
Number of local moves: 1295 (including on plateau: 721)
Number of local minimum: 260 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12776
Total number of local moves: 9075 (including on plateau: 4692)
Total number of local minimum: 795 (including on plateau: 366)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  63  68  25 333 635  17 359 263  11  80 777 853 857 532 790 889 820 825 744 871 850 179 189 228 165 824 508 156 200 404
 762   1  47 256 804  91 346 106 169 199 180 887 852  44 806 873 862  85 823 856 883 190 227 794 289 773 753 132 397  28
 798 827 172 324 779 213   9 103 111  76 810 297 188 858 304 730 845  74 127 859 837  84 687 764  42 104 865  46 751 831
 828 822 704  71 206 140 108  38 600  43  95 133 335 851 258 406 782 803 737 761 818 151  13 742 697 797  22   6 770 778
 776 759 741  26   8  12  92 682  32 261 119 381 117 735 260 775 765 705 747 563 438 214 720 683 138 416 780 178 691 701
 719 611 739  14 769 405 170 677 153  45 733 338 243 795 209 122 692 602 746 745 648 192  98  78  48 685 731  53 734 721
 627 722 639 709 717 217 115 716  10 695  62 167 241 688  35 268 707 659 712 807  83  88  56 157 784 672 732 126 647 657
 612 694 160 622 658 154  72  33 652 693  99 137 351 680 107 299 783 507 595 584 713 210 511 223 718 626 598 643 597 184
 699 729 738 633 653 337  16 724  54 542 660 144  89 640  67 537 599   2 715 663 617 285 723  81  27 632 481 298 525 605
 668 670 671 636 547 246 116 743 638 445 551  40  31 518  79  20 686 665 566 517 139 264 661 129 588 649 646 555 613 218
 609 628 651 572 538 382 201 642 559 487 128 166  73 568 219 232 485 479 596 367 155 221 457 637 608 560 545 590 591 569
 582 533 623 567 480 358 251 398 516 645 529  57 207 450 541  64 530 575 449 527  49 238 607 182 512 616 553 624 571 681
 500 565 587 593 603 269 354 543 150 392 581 326 535 513 296 583 521 515 534 502  55 350 282 271 592 550 349 546 574 484
 435 554 578 460 470 311 198 528 556 489 255 431 411 448 453 452 436 430 364 496 426 329 494 519 399 549 478 492 510 564
 509 356 561 472 393 425 570 499 486 390 451 495 421 387 386 415 477 433 376 345 573 456 428 454 514 503 375 400 439 526
 576 423 437 474 432 539 864 446 343 372 458 488 498 306 412 414 482 429 401 394 471 557 352 403 434 262 523 506 417 402
 424 483 391 274 440 418 427 520 501 467 395 466 522 443 377 334 396 383 861 373 462 463 388 384 866 378 442 355 497 385
 413 475 330 319 365 288 654 314 881 870 344 419 361 318 407 579 491 380 604 348 410 562 327 710 322 342 312 362 464 544
 220 369 340 814 885 580 614 321 679 353 459 408 420 294 357 455 265 625 473 363 339 586 320 328 366 789 370 249 601 273
 309 347 302 313 254 826 728 409 422 307 447 792 812 278 725 726 374 230 315 817 267 610 276 676 293 332 149 181 331 667
 239 291 292 248 216 594 860 168 360 899 504 696 689 303 615 880 368 336 287 174 878 796 371 272 849 283 301 252 235 259
 280 325 270 787 229 772 863 250 655 266 231 781 675 290 673 300 193 234 286 253 606 846 159 558 793 105 204 317 766 548
 242 142 215 308 236 585 629 754 842 279 815 536 631 245 808 505 295 171 164 275 177 767 756 461 131 310 226 898 244 868
 163 257 208 768 158 540 524 847 316 194 148 816 619  65 813 894 162 233 799 305 621 493 202 890 802 281 205 664 187 341
 389 113 175 203 141 666 662 222 811 867 819 740 700 224 774 684 134 212 277 191 237 821 755 833 444 240 196 848  37 100
   5 284 247 836 840 757 698  93 476 211 630 669 678 876 690 101 225 185  23 186 552 834 800 469 102 897 145 839 109  58
   3  41 147 749 110 801 706 832 788 379 702 656 620  86 714 183  15 855  66  96 323 841 829 531 468 146 888 763 143  34
  82  61 760 173  70 892 727 844 791 877 711 634 674  69 703 748   7 879  39 161 195 490 758 771  97 123 120 895  87  77
 893 900 896 176 843 805 752 750 118 854 708 121  21 886  60  18  24 130  30   4  75 809 197 152 641  19 882 891 736 124
  90 465 869 785  36 875 830  50 835 838 114 441 644 125 577  29  94 874  59 112 618 589 872 135 786  52 136 650  51 884

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.05377e+06us (= 4053.77ms, 4.05377s)
Wall-clock time (full program): 4.11717e+06us (= 4117.17ms, 4.11717s)
Satisfaction error: 0
Number of search iterations: 1467
Number of local moves: 911 (including on plateau: 375)
Number of local minimum: 74 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11283
Total number of local moves: 7236 (including on plateau: 3545)
Total number of local minimum: 576 (including on plateau: 252)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  81 881 804  25 150  26 197 773 124 323 787 258 894 237 789 200   9 300 845 862 325 808 853 884  37  73  86 214 809 861
 851 812 855 103   6  15 275 840 121 317 190 156 279  91 797  14 210  28 818 246 824 259 859 870 798 437 727  56 836 825
 159 792 857 145  49  11 107 841 222 160 504 182 102  22 793 228  24  32 833 828 426 541 767 810 438 782 734 450 788 888
 780  77 763  83 310 178 326 785 158  53 144 135 249 116 849  61 733 286 777 802 344 617 755 753 749 758 168 179 722 805
 813 319 748  44   1 690 332 796  51  70 105 288 184  69 838 162 752  41 819 829 688 281 711 689  36 760 765 253 658 723
 745 267 761 201 616 153 248 744 181 263 361 148 778 730 830  94 774 166 768 732 327 663 659 772  18 225  19 220 324 728
 726 191 665   4 292 779 125 649 357 320 111 235 336  76 655 604 738 231 712 656 167 783 654  17 695 634  58 683 657 705
 707 289 693 183 299 764  79 627 645 666 115   5 735  33 660 642 699  52 673 750 207 308  12 622 625 597 713   2 419 694
 697 342 704 216 282 680   8 703  64  10 651 265 614 681 640 351 635   7 700 621 171 163 388 593 686 601 662 602  62 716
 684 238 564 217 532 664  20 561 679 117 636 251 618 551 581  27 647 252 574 670  78 109 592 506 609 628 652 631  16 611
 610   3 575 435 619 555 615 547 546 567 155 298 143 518 648 360 608 507 600  21 132 149 553 675 572 187 650 494 536 637
 559  74 563 262 644  13 540 582 497 473 580 208 530 620 486 180 605 539 578 570  90 366 454 549 548 696 543 511 584  71
 533  48 502 503 513 569 487 626 449 515 528 510 230 554 594 306 492 464 517 483 100 173 596 472 565 514 448 562  96 566
 568 461 475 303  23 526 480 490 501 458 468 556 471 462 457 318 519 496 489 466 467  57 560 557 453 424 571 499 531 409
 174 485 577 439 534 535 367 469 418 312 495 362 386 431 544 478 390 428 579 436 451 552 520 293 465 484 476 474 521 440
 430 491 434 481 413 587 493 500 402 525 446 452 277 354 415 710 348 456 414 443 509 432 505 425 459 383 405 421 488 417
 398 392 442 387 444 328 729 427 477 545 441 470 393 769 455 389 374 287 400 370 378 538 381 411 433 365 880 376 407 429
 395 463 338 701 410 382 698 340 512 385 301 363 397 353 345 422 396 891 372 408 896 739 359 379 423 416 313 315 447 356
 334 754 349 550 756 266 377 296 333 671 380 331 346 285 232 590 445 341 329 394 715 811 391 369 284 807 314 358 757 350
 420 771 291 603 330 273 373 371 294 746 702 669 368 322 401 585 276 339 295 885 823 523 343 309 335 399 226 676 311 256
 412 709 384 766 720 278 355 375 283 890 307 588 482 215 257 629 227 876 234 304 848 900 177 247 297 198 255 244 737 321
 242 668 364 623 866 254 347 213 706 630 260 576 835 274 170 814 264 542 302 243 731 897 882 205 236 352 337 261 233 188
 272 674 142 641 643 229 806 204 624 794 211 893 776 883 305 479 290 837 269 106 498 134 245 270 271 529 122 887 241 240
 133 589 151 852 189 791 740 203 250 268 842 834 795 719 196 847 140 714  92 280 677 678 221 586 161 199 169 817 164 218
 219 613 176 874 868 895 832 136 224 820 123 821 800 202 212 128 192 844 112 638 527 403 152 185 822  95 147 725 537 193
 877 843  99 858 889 138 781 131 892 209 831 718 157 867 165 751 886 691  65 172 672 743 104  72 113 139 206 120 239  87
 119 558  29 899 316 460 762  97 869 646 839 784 595 741  54 685 801 770  75 146 194 522 130 108  50 114 653 826 591  82
 406 508  88 790 186 856 827  45 875 786 682 759 223 687  67 846  84 632 110  47 516  98  60  31 871  40 860 865 607  63
 141 137  42 524 879 747 583  55 863 850 599 708 404 878  34 816  85 854 129  39 633 175  59 195 724 864 639 667 154  38
  30  66  80 803 736 873 606  89 898 126 721 692 118 775  46 799 872 612  35  68 101  93 573 661 742 815 717 127  43 598

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.69452e+06us (= 3694.52ms, 3.69452s)
Wall-clock time (full program): 3.76896e+06us (= 3768.96ms, 3.76896s)
Satisfaction error: 0
Number of search iterations: 1282
Number of local moves: 855 (including on plateau: 412)
Number of local minimum: 46 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9485
Total number of local moves: 6717 (including on plateau: 2982)
Total number of local minimum: 422 (including on plateau: 222)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 849  64  39  84  69  89 827 876 347 661 355 754 829 741 594 847 719 840  30 211 190 120 873 513 833 880  47  77  87  70
 864 121 134  38  94 662 132 578 886 186 265 613 486 861 590 811 845  11 103  46 128  44 689 195 773 889 808  28 814 821
 897  40 841  83  29  56  63 139 591 588 623 657 872 646 668 784 148  61 892  62 259  36 855  95 743 867  57 862 114 887
 759  53  90 739 115 535 746 135 140 638 151 717 150 654 786 885 838 107 809 198 124 514 694 118 804 718 126 899 127 146
 866 231 144  88 896 171  59 206 239 700 696 795 698 851 583 681 874 163  71  79 112 526 796 253 450 635  98 123 772 659
 781 201 157 878 214 857 210 261 188 106 608 898 225 782 775 771 192 247 828 155 141 715 601 209 870 792 131 317 183 222
 742  76 859 108  34 142 667 181 200 701 843 184 219 884 803 736 167 138 593 202 254 371 728 328 769 725 237 224 778 622
 597 250 251 777 226 129 241 292 230 731 353 871 264 740 555 712 165 629  86 453 145 800 779 244 744 854 324 162  93 818
 575 279 368 245 286 154 302 223 309 844 632 255 227 820 670 602 846 277 540 228 320 869 666 252 671 652 238 234 220 711
 756 359 260 256 284 257 199 341 281 834 895 350 334 655 770 695 550 501 836 249 274 691 658  16 553 301 439 205 270 446
 755 288 338 758 447 194 378 361 343 881 656 572 825 325 397 379 400 187 336 178 395 544 267 810 560 645 365 233 408 290
 451 216 136 900 300 389 293 236 339 386 532 822 312 455 561 458 303 326 832 448 403 894 380 330 581 410 354 460 321 687
 527 295 515 816 362 360 372 299 283 364 865 217 430 164 452 381 367 442 449 893 438 315 523 306 879 313 393 352 812 331
 512 382 348 404 291 488 278 411 311 305 296 456 419 549 440 517 462 428 676 340 409 716 477 877 471 732 384 298 366 472
 570 835 405 346 370 475 413 422 406 497 375 506 423 552 508 444 441 412 435 358 499 304 554 464 376 327 539 263 429 567
 465 516 480 333 505 388 479 394 463 401 357 335 504 576 345 490 557 289 474 437 566 424 391 509 636 545 307 468 427 454
 482 481 416 534 614 415 574 502  23 492 461 421 491 436 520 489 525 639 445 487 558 344 484 390  22 166 420 565 609 510
 418 528 459 586 595 650 518 363 615 587 396 483  67 571 152 417 649 280 196 573 592  92 585 713 285 433 579 469 562 102
 197 559 547 467 495 511 521 414 551 607 392 374 537 582 258 485 673 531 310 546 351 179 369 678 332 242 470 621 548 168
 204 599 500 620 680 543 457 617 493 580  26 541 522 322 101   2 653 616 619 137 640 268  81 589 248 536 612 664 507 538
 203 443 542 568 577 735 519 503 631 660 308 110 679 159 170 524 611 733 690 496  24 185 161 693 297 240 633 747 398 276
 180 766 688 605 641 648 426 564  60   7  58 685 563  99  49 232 432 624 600 709 665 425 269 604 218 387 584 683 702 342
  14 651 642 630 596 625 860  41 533   1 158 598 745  15  27 349 710 686 628 748 431 243 147 707  25 208 699 753 708 337
  73 848 529 314 603 476  55 626 675  97 618  32 644 133 377 119 714 783 790 730 674 109 385  10 319  96 704 647 729 606
 117 663 610 402 858   4 813 721 724 637 100  42 143 282 174 273 272 569 213 692 868 356 191 627 399  78 682 749 726 530
 105 807 672 373 765 762  12 823 734 323 207 738  21 235 246  50  45 750 473 677 722 634  19 643 262 498 752 723 229 215
  65 478 882 727 856 852 737 757 791  82 329  35 669  20  74   3  68 703  17 768 890 287 275 705 122 169  13 697 760 684
  33 837 789 318 764 883 763 556 494 176 806 116 383  72 787 111 160 761  85 798 850 839 294 788  66 125 842   8   6   5
  51 774 794  52 130 853 802 785 830 172 720 156  37 113 767  91  54  31 266 793 817 780 175  48 189   9 863 831 706 826
 407 875  80 466 819 212 799 888 805 271 434 182 797 221 316 177  75 751 193 824 776 891 149 801  18  43 815 153 104 173

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.73267e+06us (= 3732.67ms, 3.73267s)
Wall-clock time (full program): 3.7987e+06us (= 3798.7ms, 3.7987s)
Satisfaction error: 0
Number of search iterations: 1041
Number of local moves: 760 (including on plateau: 261)
Number of local minimum: 31 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8859
Total number of local moves: 6626 (including on plateau: 2664)
Total number of local minimum: 396 (including on plateau: 183)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 757 876 702 847 827 869  34  62 101 875  88 109  38  40 725 851  60  55  72 174 794  76 230 111 622 782 748 839 650 501
 684 893 779  37 763 653  57 854 788 825  45 150 256  71  47 742  59 170 613  64 830 143 133 104 176 733 645 808 619 774
 857 110 821 146 766 874  61 141 115 895 213 156  35  56 717 872  42 330 855  74 761 686 126 118 574 829 755 511 122 897
 744 117 649  27 796 807  92 165 220 805 136  66  52 611 179 764  90 161 738 160 878  96 322 762 632 864 894 131 723 834
 681 231 873 102 759 698  80 116 799 784 121 114 106  54  69 750  81 440 735 163 227  94 751 746 885 578 673 251 752 802
 900 856 798 217 866 661 241 157 786 870 108 222  39 837 489 297 164 252 697 175 254  93 144 214 615 741 565 263 663 331
 877 192 277 151 226 795 811 860 637 749 100  98 238 232 199 181 247 172 863  99 858 328 250 332 529 713 695 148 771 887
 320 135 491 550 865 660 237 841 546 346 352 186 168 293 255 259 235 485 700 149 284 113 473 804 768 783 849 236 868 264
 325 646 245 319 211 882 209 208 886 202 358 323 228 836 262 295 278 308 823 167 381 543 385 843 785 631 712 317 688 219
 449 128 452 315 229 677 326 896 848 396 307 243 197 716 412 290 375 459 272 638 571 200 324 415 701 691 674 258 756 300
 191 386 337 261 239 662 374 393 850 767 739 294 312 643 310 248 268 614 844 398 341 299 223 304 840 411 551 194 775 447
 361 203 460 410 409 351 303 899 699 349 336 582 535 313 271 365 373 316 576 357 289 356 443 892 636 625 508 306 732 260
 253 400 438 510 359 654 338 426 279 270 470 408 729 370 368 430 364 563 589 482 455 339 437 667 898 432 731 281 273 302
 445 342 428 350 321 466 389 363 388 607 441 343 218 824 395 480 422 678 522 436 424 524 517 513 380 566 499 379 420 435
 242 329 519 397 442 530 507 311 414 390 531 481 549 518 592 475 402 540 401 433 552 347 527 505 369 404 348 599 474 387
 497 340 561 377 429 413 457 383 483 384 314 476 538 391 492 471 568 439 407 467 431 486 570 600 309 487 305 423 559 458
 500 514 451 520 419 417 456 173 498 555 558 372 406 421 601 626 378 257 495 490 547 560  97 453 465 463 597 269 539 418
 448 521 472 354 503 515 416 536 542 468 545 509 446 371 454 532 595 477  51 333 512 283 291 541 623 153 573 664 405 382
 580 450 504 528 584 139 588 526 132 344  11 478 572 714 461 134 590 120 362 616 469 594 648 593 587 280  26 585 606 694
 562 826  32 525 180 506 634 608 221 399 603 676 682 493 598 647 534 152 665 225 655 583 544  36 105 394 234 553 240 403
 641 537 620 696 658 206 318 125 575 610 706 494 671 376 635 685 639 367 190 479 651 569 488 567  68 298   1 204 282 159
  21 246 734 609 642  78 793 579 554 604 484 710 591 137 596 687 523 692 215 628  48  16 672 586  70 274 275 556 187 708
  65 657 533 633 327 292 640 666 196 276 736 765 462 287 815 715 548 656 444 618  77 624  17 557 184 162  73 722  25 743
 127 577  43 753 705  24 730 516  85 155 690 683 668 392 644 630 718 812  79 670 719 773 720  49 189 288 201  18 112 745
 166 652  53 564   3 286 727 353 605 212 617 707 809 183 627 704 801 792 224 852 147 747 845 335   5 145 185 791 334  44
 158 797 207 721  33 129 581 726 154 178 776 770 810 760  23 169 859  15 182 781  86 814 728 142 301 496 502 800 188 629
 789 621 709   6  14  67 772 612 355  84 602 819 675 425   9 119 689 758 130 777 740 769 780 659 296 138   7 679 171 244
  12 818  22 867 711  19 817  50 249  75 816 669 806 693 703  29 862 787 233 883 123 835 890 366 427  41 360   4 285  63
 861  95 198 891  89  82 790  91  46  28 881 724 846 680 754  10 880 820 193 838 195 822 853 434 210  30 124 842  31 177
   2  20 107 832 140 103 737 879 464  13 831 888 833 778 813  58 871 828 345 889 216 803  87 267 266  83 205 884 265   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 2.91771e+06us (= 2917.71ms, 2.91771s)
Wall-clock time (full program): 2.98075e+06us (= 2980.75ms, 2.98075s)
Satisfaction error: 0
Number of search iterations: 756
Number of local moves: 669 (including on plateau: 152)
Number of local minimum: 17 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5211
Total number of local moves: 4899 (including on plateau: 1593)
Total number of local minimum: 71 (including on plateau: 115)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 382 800 176 770 875 776 771 774 794 254 842  10 223 426 180 128 845  36 385 847 815 703  39  84 470  53   8 864 182   3
 374   6 173 118 810 106 860 834 853 167 846 227 721  29 861  78 697 822 851  46  77 806  27 329 189 105 825 849 674 155
  18 805 355 754 787 783 801 835 253 247 811 231  25 743 830  22 753  45 692 859 218 796 133   9 723 104 187 264 171 261
 634  41   7 688 840 809 857 758 653  79  85 184 712  71 838  55 816 729 553 675 841 782  20   1 157  14  16 826 715  59
 112 873 175 772 387 148 781 728 684 372 280 670 115 101 755  35 323 821 237 869 752 764 207 142  50 814  97 657 650 144
 732 804 236 709 812  31 612 751 296  12 829 431 114 785 611 745 678 547 208 232 621 716  21  90 132  15 211 682 725 127
 335 620  75 606 669 799 379 757 109 276 741 768 100 137 138 718 610 759  30 696  57 742 224 586 117 690 734 769 185  89
 603 604 123 685 832 147 661 305 124  64 694 561 717  69 640 354 636 609 418 639 292 683 300 290 107 642 722 784 140  70
 705 667 216 594 713 377 597 632  11  63 762  23 658 313 686 681 633 660 126 593 162   5   4 164 737 568 780 545 663 177
 672 595 556 552  17  49 691 707 353 278 525 570 190 659 572 527 265 596  68 488 500 584 578 212  80 631 720 724 136 420
 453 628 747 711 502  93 654 193 698 338  32 563 402 602  26 623 535 616  40  13 510 605 733 345 492 615 540 507 498 201
 471 504 454 576 495 272 565 662  61 356 585  38 571 419 332 481 315 629 139 592 399 442 566 562 485 400 590 484 533 537
 575 534 526 607 528 496 469 583 543 360 529 349 465 554 644 588 648 424 412 398 239 582 466 178 159 446 472  54 328 359
 482 559 564 487 624 483 511 260   2 322 439 647 514 421 569 310  24 425 410 475 613 587 333 244 614 505 413 680 542 456
 429 517 358 506 523 445 464 368 364 376 444 850 395 427 719 443 598 365 433 361 480 324 416 428 435 458 146 422 461 560
 491 432 380 286 381 497 541 539 448 557 337 512 268 389 405 827 538 370 519 457 441 437 531 311 397 449 401 518 452 404
 388 334 440 392 898 509 434 314 508 591 417 289 474 312 384 279 293 455 463 468 241 494 430 664 894 532 366 363 403 486
 214 408 297 390 546 477 205 493 476 706 373 391 738 450 230 266 589 839 767 288 574 451 331 779 242 386 516 536 262 295
 342 378 406 249 275 808 340 307 744 573 447 820 277 369 198 194 824 179 608 348 555 411 362 581 895 367 347 336 357 618
 393 306 423 394 160 643 299 601 341 521 899 188 318 793 352 291 344 415 462 874 409 270 489 579 256 317 326 308 746 798
 298 436 701 501 294 714 248 551 700 880 327 273 351 252 181 871 467 130 548 110 858 302 645 831 330 274 243 222 251 726
 778 316 889 320 121 281 735 414 890 600 271 863 269 817 524 460  96 206 544  95 156 225 689 599 459 220 283 343 250 802
 287 473 258 246 371 228 263 577 240 789 339 878 166 169 267 213 304 183 727 197 520 396 852 786 891 765 116 346 792 876
 229 350 856 321 149 203  58  42 693 617 325 837 438 407 285 191 549 522 750 221 309 255 655 865 210 828 844 200 687 619
  81 165 807 154 215 893 209 152 513 731 233 479 788 813 866 158 120 161 749 226 641 204 756 803 375 319 259 301 777 567
 499 141 872 170 131 580  99  19 550 848  47 172 882 748 168 695  73 234 881 303 638 113 773 673 883 217 879 125 284 818
 791  66 833 704 186 637  72 196 625 646 103  51 896 143 245 887 490  56 739  88 665  60 797 679 630 174 897 150 626 383
 761 235  87  48 199 257 153  43 135 530 195 867 558 819  98 730 238 710  62 503 202 652 790 163 699 854 736 478 836 877
  86 884 702  94 108 855 134  83 219 740  82 708 282 627 151 795 122 843  28 886 656  33 671 775 892 885 192  76  44 862
 900  34 823 111  67 119  52  37 635 622 676  65 888 651 760 870  92 129 666 668  74  91 677 763 515 868 649 102 145 766

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.89523e+06us (= 3895.23ms, 3.89523s)
Wall-clock time (full program): 3.95838e+06us (= 3958.38ms, 3.95838s)
Satisfaction error: 0
Number of search iterations: 1439
Number of local moves: 662 (including on plateau: 229)
Number of local minimum: 89 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10418
Total number of local moves: 6851 (including on plateau: 3055)
Total number of local minimum: 527 (including on plateau: 247)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 868 789 352 223  25 207  30 254 766  20 824 125 137  33  19 864  23 232 274 308 758 429 806 839 857  58 834 832 883 846
 705 263 158 790 153 313 799 163 853 122 609 138 795  78  18 825  39  29 522  40 786 615 717 690 842 735 822 841  41  14
 808 725 863 791  22 115 787 752 731 113 850  80 829  94 327 838  73  69 305 229 463 260 833  37  31 774 767 103 830  16
  65 782 831  21 156 243 599   4 197 206  12 264 683 337 222 828   2 143 600 237 779 677 739 771 860 754 716 726 645 416
 744 751 280 248   3 210 757  74 672 170 803  57 843  35 646 696 460 331  97 369 514 144 794 680 756   9 837 721 801  13
 740  50  95 301 178  47   5 769 823 736  17 719 796  91 292 727 753 151 240  68 487 679 681 811 126 807 818 572 710 226
 746 723 212  36 693 579 335  32 650 682   1 573 673 688  26 617 733   7  61 253 695  86 654  15 571 821 819 593 699 242
 761 685 161  51 675 162 729  84 626 515 768  77 805 536 181 800 689 173  76 200 701 247  10 747  62 607 521 556 678 632
 676 714 100 202 656 703 455  75  54 605 314 631 623 715 147 660 174 165 148  28 728  27 575 611 732 748 711 750 764  24
 476 448 320 576 652 590 629 406 713 373 464 324 815 540 110 102 596 127  46 277   8  98 584 649 686 533 570 566 692 545
 604 634 152 477 639   6 669 548 493 322 376 473 559 558  67 483 601 517 298  81 630  52 661 501 637 622 233 530 537 555
 569 488 625 509 578 130 610 636 633 123 529 228  11 666 709 557 520 583  90  38 394 188 612 564 597 504 489 469 653 213
 420 667 119 594 525 638 665 554  34 340 565 620 261 112 616 587 452 239 417 317 431 101 485 574 658 562 466 619 395 482
 499 486 368  43 434 496 598 449 399  45 618 549 542 251 507 497 218 541 490 348 397 635 503 500 465 539 512 595 445 546
 428 518  89 343 561 527 439 447 364 432 380 423 543 591 510 659 459 495 418 381 341 470 494 366 577 531 462 424 450 393
 382 519 453 390 407 663 528 451 387 668 516 409 430 291 511 268 560 474 720 602 505 479 456 294 410 467 356 427 203 289
 446 234 357 438 442 392 647 371 398 872 526 318 342 534 310 391 770 315 778 468 472 492 384 388 375 581 377 306 355 436
 166 567 383 480 286 378 426 270 454 671 437 350 762 374 309 441 379 781 867 648 523 475 325 414 361 402 471 440 262 413
 300 877 433 238 246 712 524 457 370 225 358 698 278 419 608 311 316 425 804 741 401 852 372 177 404 386 256 508 408 411
 328 367 657 273 272 861 269 344 330 329 702 293 443 290 772 351 550 694 722 400 809 338 360 336 403 345 362 435 146 734
 552 279 840 687 844 415 150 257 349 642 359 353 296 323 784 421 312 405 777 793 889 297 284 204 302 216 718 114 299 354
 191 231 651 303 211 304 208 849 893 444 167 230 271 182 603 266 865 827 422 684 139 826 245 859 749 288 265 282 287 773
 185 334 738 389 205 848 321 880 154 644 332 117 551 532 743 339 249 855 776 862 135 700 179 458 333 124 365 171 176 820
 183 108 886 845 878 281 885 858 193 326 132 513 195 854 586 136 283 568 871 643 346 614 235 874  83 107 121 307 319 285
 118 192 624 241 267 888 142 627 396 816 189 745 217 897 856  71 506 697 783 706 215 547 613 224 884 160 168 250 221 255
 227 134 788 765 155 812 209 169 412 186 881 899 187 742 491 159 724 544  79 873 198 585 219  99 131 892 157 894 145 759
 164 258 244 890 785 582 109 737 276 814 641 792  85  96 347 214 175 851 484 707  53 798 295 674 190 708  49 104 891 502
 196  87 606 704 882 640 691 670 201 589 836 817 199 900 588 259 813 535 621 664  42 478 194  44 133 105 128 120 111 662
  72 385 538 870 875 498 236 847 141 755 129 898  92 869 835  93 760 876 580 895  48 563  66  56 184  60  63  88 363 780
 896 220 592 797 810 275  64 481 553 730 180 802 252 887 775  55 461 866 149 655 628 763 140  59 116  70  82 172 106 879

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.79959e+06us (= 3799.59ms, 3.79959s)
Wall-clock time (full program): 3.86243e+06us (= 3862.43ms, 3.86243s)
Satisfaction error: 0
Number of search iterations: 1318
Number of local moves: 886 (including on plateau: 354)
Number of local minimum: 68 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9747
Total number of local moves: 7489 (including on plateau: 3099)
Total number of local minimum: 374 (including on plateau: 235)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 884   2 377 762  45 852  52 423 645 152 868 767 851  28 853 213 211 807  74 689 866  41 202 887 189  70  56 848 790  11
 838   3   8 861 197 279  30 872 371 205 813 787 806 118 842 732 827 845 112 419 360 169 191 786 795  76  61   4 276 832
 305 804 391 796 263 246  88 151 808  19 758 750  12   7 793 717 150 825 201 811 196 280 108 781 768 110 393 418 764 802
 779 800 306   5 260 495 121 828 352 181 865 841 721 168 833 792  71 803  65 814 137  26  97 143 831  78 297 727 735 344
 757 616 165 784 326 113 809 821 742 278 726 775 701 192 198  43  17 440  60 826 334  63  64 782 774 364 127 777  22 819
 773 733  32 754 126   1 666 691 738 212 675 696 740  58 745  85 743 328  83 780  34 155  16 761 346 281  66 776 719 702
 714 730 138 653 157 105   6 744 771 239 760 752 746 256 504 685  31 667 343 720 107 676 109  50 282 144 176 709 794 747
 629 562  69 683 187  96 680  13 644 402 772 671 692 147 257 723 133 690 610 682 244 655 199 635 160 132 271 550 693 634
  84 636 186 725 106 129 637 711 426 589 594 625 646 672 242 602 156 660 593 584 216 587 243 606  77 204 206 571 617 585
 101 699  57 643  79 117 540 632 548  80 674 630 687 657 140 590 564 569 621 651 267 658 295 598 102 162 354 626 622 552
 215 624 183 618 148 631 592 579 468 608  55 551 615 640 396 619 528  18 581 613 321  90 501 600 458 332 288 586 454 603
 537 506 542 447 218 599 565 529  15 508 573 428 684 535 208 509 578 507 248 604  49 650 519 611 123 333 384 518 512 476
 462 525 568 570 582 339 532 591 494 561 554 414 171  14   9 498 457 427 492 395 366 444 596 559 465 460 415 516 503 536
 445 436 437 521 466  10 431 475 563 513 500 511 505 459 543 448 369 387 580 485 293 609 315 549 442 381 287 539 421 595
 473 544 405 530 439 435 385 479 480 463 471 461 397 474 464 412 450 452 499 472 422 420 390 502 401 392 335 510 481 477
 526 538 490 487 515 408 353 478 355 404 411 517 470 547 425 453 467 469 566 489 484 430 319 443 409 356 553 416 361 376
 342 407 763 363 403 410 520 432 541 424 623 488 269 379 534 818 482 446 434 524 286 383 301 317 314 491 583 382 456 400
 302 417 493 388 358 433 307 323 891 736 365 545 338 567 633 398 399 429 351 300 639 527 347 349 362 555 597 375 350 441
 262 316 311 394 722 308 240 309 857 749 325 372 533 380 389 277 370 413 729 284 718 320 378 341 898 557 558 373 496 336
 856 330 824 161 523 210 310 669 253 698 180 368 359 340 715 304 337 294 264 839 652 289 695 367 665 575 641 268 303 226
 266 312 869 299 822 864 386 166 255 894 296 285 357 374 662 214 327 874 292 265 531 322 741 241 654 607 614 291 261 174
 182 274 222 345 885 850 348 406 823 739 207 249 172 331 854 283 247 688 601 232 871 164 522 272 707 612 713 235 250 231
 716 273 576 275 815 840 229 890 318 843 238 163 259 712 627 178 290 298 149  67 836 837 766 254 324 670 588 153 146 185
 228 230 817 142 748 846 879 252 175 221 251 270 329 706 483 801 844 179  81 237 704 194 605 847 572 647 668 128 236 195
 663 227 560 193 642 514 100 245 125 686  95 224 217 751 234 200 628 546 858 258 810 681 883 220 867 877 649 225 170 167
 223 134 765  54 892 620 219 203 135 233 154 114 188 697 131 769 788 158 859 103 816 770 862  98 638 789 876 119 209 899
 190  82 798 173 648 677 897  75 139 849  73  25  93 805 656 145 820 141 880 177 700 829 896 708 497 694 486  92 184  86
  91 834 886 120 661 673 855  42 124 881  89 159  40 878  36 791 664 104 753 136 455 785 797  53  59 778 728 860 111  72
 556 870 574  38 577 659 863  37 438 115  99  29 873 889  47  94 737  24 724  20 755 783 759  68 313 895 835  35 679 130
 116  51 703 731 705 756 875 449  21  33 451  48  44 734  62 122 830  27 812  39  46 678 799  87  23 893 710 888 900 882

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.34205e+06us (= 3342.05ms, 3.34205s)
Wall-clock time (full program): 3.40631e+06us (= 3406.31ms, 3.40631s)
Satisfaction error: 0
Number of search iterations: 1091
Number of local moves: 926 (including on plateau: 380)
Number of local minimum: 33 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7626
Total number of local moves: 6336 (including on plateau: 2319)
Total number of local minimum: 210 (including on plateau: 166)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   5  36 844  13 806 780 261 842 468 817  54   4 723 726 138  40 135  55 795 116 156 580 783 756 847  77 728 215 855 860
 727 213 751 824 830 841 161 870  94 794 240  18 859 747  50 776 155 201 312 231 807 528 406 193  19 120  30 813 837  68
 854 400 145 822 793 768 174 237 186 820 218  27 798 777 628  22 268 434 735 226 123 623  16 118 151 766 597 832 119 838
 799  21 843 581 805 803  97 546 154 673  52 651 792 861  79 200  35  43 797  11 642 458 753 763 207 167   8 764 165 745
   2 717 770 752 771 788  41 639 153 873  38 593 784 874 249 782   3  20 680 356 290 175 858 159  32   6 688 719  92 611
 750 725 865 347 769  12  81 695 182 829  34  49 646 661 211  23  67 216 734 308 643  84 857  85  44 703 754 701 678 762
 732 614 850 749 616 738  14  15 117 729 172  45 166 540 716 724  10  66 568  46 668 204 675  61 632 791 617 748  73 819
 598 660   9 430 718 420 552  28  39 814  57 706 612 760 676 720 197 100 671 663 618 133 149 146 202 691  98 730 563 755
 522 603  88 662 682 558 630 183 114 514 150 742 517 590 778 669 291  31 698 109 644 409 519 253  82 610 715 608  29 515
 557 621  75 532 709 485 230 699 258  17 277 708 363 524 575 601 296 631 559 368 757 229 509 191   7 481 499 536 565 656
 622 582 759 584 657 173 595 534 214 506 127 696 427 571 620 513 139 243 573  70 560 124  91 602 537 609 633 539  62 553
 398 645 462 627 136 613 569 687 273 397 589 323 665 355 459 392 555 605  58   1 525 126 606 653 176 495 685 482 432 526
 641 625 473 664 564 318 212 561  26 352  25 262  51 478 578 535 489 808 449 443 538  96 471 554 583 463 683 702 496 375
 533 416 475 480 325 491 321 451 444 501 401 599 562 672 588 484 579 372 373 382  37 209 541 479 512 415 410 391 567 505
 543 452 408 464 549 297 387 456 303 530 510 439 531 477 638 316 404 455 436 469 333 492 407 445 447 379 490 440 629 389
 412 446 319 544 498 431 511 518 418 441 465 875 359 219 425 309 349 624 385 494 634 493 466 381 419 294 470 424 497 395
 862 370 548 374 334 305 435 236 833 224 556 474 765 453 411 377 527 454 483 275 330 816 504 362 421 250 380 358 433 365
 306 885 327 472 383 371 467 394 585 413 266 399 423 503 289 390 508 438 739 428 521 448 388 403 280 704 891 346 353 195
 301 343 322 405 283 851 487 457 674 340 658 450 295 279 254 369 684 337 836 422 429 707 507 545 329 366 317 292 460 516
 232 336 386 594 307 442 823 313 811 315 894 378 542 417 228 192 287 790 260 635 338 886 225 354 712 872 285 170 257 234
 300 244 198 221 233 731 402 396 502 461 740 350 281 282 140 341 787 773 414 686 802 604 311 205 818 267 351 426 888 361
 364 393 265 342 332 640 344 576 881 276 871 384 199 235 169 304 867 758 184 835 239 815 272 693 714 328 357 326 238 314
 476 255 339 168 310 271 335 437 570 217 600 376 302 278 796 834 626 868 252 831 284 705 899 264 529 256 179 203 866 189
 208 298 367 206 270 190 896 892 700 222 809 293 655 142 360 801 666 659 286 711 348 710 248 488 761 299 223 345 274 188
 245 288 196 259  48 181 789 269 895 586 781 853 108 324 804 210 878 772 574 880 147 246 227 812 689 263 220  87 713 171
 247 158 180 130 500 178 667 107 741  89 607 839 694 164 876 883 767 102 134 827  72 648 187 566 890 848 320 144 840 110
 185 550 670 160  74 619 828  90 737 115 800 884 113 242 898 148 736 774  63 744 241 105 137 591 743 887 551  76 690  64
 152 897  42 845  24 104 869 163 654  93 852 157  59  65 106 810 785 637 331 679 112 251 775 652 721 131 592 900 194 863
  60 636 889 143  78  83 722 577 893 486 846 779  99 177  95 649 692 677  80 746 856 825 587 864 132 128  47  69 547  53
 882  86 650 121 111  33 615 647 596  71 826 162 125 122 681 101 733 572  56 523 821 786 141 877 879 849 697 129 103 520

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.44774e+06us (= 3447.74ms, 3.44774s)
Wall-clock time (full program): 3.51913e+06us (= 3519.13ms, 3.51913s)
Satisfaction error: 0
Number of search iterations: 1066
Number of local moves: 702 (including on plateau: 248)
Number of local minimum: 56 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8077
Total number of local moves: 5822 (including on plateau: 2019)
Total number of local minimum: 356 (including on plateau: 157)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 460 674  77 729 120 848 820 622 723 126 102  12  39  30 128 682   8  28 105 857 124 740 830 845 891 856  44 210 898 887
 346 893 100 708  15 875 398 864 103 143 165  14 718  89 879 769 135 138 125 166  35 880 883 847  71  91 812 889 493 871
 127 672 453 768  63 764 610 254 888 896 167 142 115  43 861 697  84  72  33 829  19 773 757 710 895 193  81 548 897 104
 173 274  42 577  75 886 799 539 828 132 160  57 713 238 172 815 161 152  69 894  74 806 754 852 200 298 560 677 805 733
 155 597 863 727 501 851 850 614 694 117 174  93 171  40 196 791  32 659 131 789 237 375 738 543  87 623 273 263 660 671
 216 259  96 753 387 732 749 760 885 178 244  99 262  29 859 872 881 265 185 748 121 101 807 255 870 157  78 230 780 657
 594 707  61 892 109 816 607 532 796 544 313 168 668 252 803 826 294  49 164 793 145 239 652 832 112 242 151 251 711 192
 842 648 183 900 231 737 890 468 389 158 335 130 653 326 146 869 422 241 219 810  68 180 625 840 190 214 175 705 714 207
 676 877 268 621 371 709 747 778 509 260 189 235 276 266 349 691 434 213 206 222 855 524 571 844 209 302 179 267 177 690
 620 478 218 665 374 396 687 899 538 467 194 134 878 290 284 593 217 137 341 162 837 220 650 470 293 344 474 211 742 702
 495 654 314 632 170 308 580 822 300 184 552 318 804 324 432 595 391 833 496 414 212 437 507 572 404 487 312 331 283 352
 798 243 296 554 498 281 445 808 258 306 246 776 763 395 323 469 321 510 618 370 862 133 489 661 345 476 279 505 261 226
 836 457 517 728 464 417 638 310 336 561 295 199 786 479 240 342 459 399 275 282 299 378 658 612 340 334 466 386 603 419
 304 448 534 574 288 439 504 410 348 272 412 394 271 527 592 380 483 647 513 311 868 360 506 522 363 286 407 320 685 547
 541 381 416 415 441 354 518 423 356 472 514 499 578 609 463 449 438 365 333 461 390 537 405 451 564 515 382 525 435 285
 628 357 511 379 447 519 327 486  38 473 456 530 337 442 455 655 366 508 350 529 500 425 393 332 523 488 536 402 699 424
 584 492 546 475 413  11 589 427 649 465 450 481 362  25 409 148 446 567 576 588 601 325 307 458 494 443 627 401 716 440
 471 626 637 139 420 490  67 516 533 526 497 512 521 428 388 147 611 482 602 411 502 249 277 369 430 555 566 452 528 563
 520 247 287 269 403 683 384 188 156 343 633 644 253 669 619 583 418 641 454 606 376 598 301 113 551 724 436 640 355 421
 624 599 586 176 550 553 368 292 540 433 587 636  88 777 559 305 377 634 351 684 556 570 353 392 383 569 107 204 429 233
  27  56 485 208 557 187 385 108 667  48 646 725 123 771 781 631 651 596 726 256 568 535 278 319 689 129 695 766 329 573
  95 106 462  83 558 227 359 118 484 585 223 746  70 373 645 264 802 721 608 291 700 480 338 358 751 545 712 867 339 605
 364  16 853 328 843 140 224  13  60 565 734 581  46 591 642  90 693 408 795 741 662 575   4 330 678 590 656 706 406 181
 280  66 704 163 477 257 232 186  62 666 790 629 579 717 767  76 630 673 866  94 814 701 144 426 604 600 823  73 119 297
   2 191 841  23 696 270 195 203 680 562 688 692 582 617 686  55 613 201 664 643 317 736 491 169   5 639 720 703  82 549
 783 431 800 197 752  98  85 347   1 722 774 719 367 785 221 154 787 761 821  52 542  51 202  80 819  22 739 715   9 679
 400 744 616 136 755  45  92 827 205 849 663 831 876 873 303 234 615 670 765 215 322 735  17  41 698 770  18  31 159  10
 788 315  26 182 874  37 141 316 756 882 743 813 250 884  53 228 229 835 824 198 681 811 236 149 248 817 675 372 116  36
 759 153 858 289 825  54 111 361   3 818 794 846 635 834 150  47 772 801 503  34 444  20  97  59 758 809 750  86   6 839
   7 854 865 225 838 531 114  24 730 762 775 860 731 792 110  58 745 309 797  65 784  21 245  64  50 397 782 779  79 122

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.16171e+06us (= 4161.71ms, 4.16171s)
Wall-clock time (full program): 4.22714e+06us (= 4227.14ms, 4.22714s)
Satisfaction error: 0
Number of search iterations: 1555
Number of local moves: 897 (including on plateau: 333)
Number of local minimum: 90 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11652
Total number of local moves: 7370 (including on plateau: 2984)
Total number of local minimum: 689 (including on plateau: 219)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 199 249 118  36 782 154 756 822  38 788  21 709 846 596 886 859 820 738 224 842 871 238 292  76  10 412 856 147  31  99
  89 874 251 728 281 875 649 813  79 343 288 767 889  65 834 693 285 839 170  68 773  85 858 136  87  73 854  78   7 684
 183 825   2 778 624 870  66 840  33 708 182 132 873 166 792 826  80 785 260  25 748  72 882  17  56 771 865  43 798 213
 101 678 770   4 691 880 761 713 346 663  58 219 676 215 815 817 160 878  61  60 751  59 818 167  64 114   1 420 808 747
 635 768  26 721  24 743 589 646 400 134 176 793 794 195 699 829 727 723  23  18 111 700 670 143 319 289  13 200 690 717
 207  42 714 665 752  35 653 677  27 750  20 431 867 283 746 832 644 760 323  29 776 138 610 253   6 230  11 619 704 711
 198 566  84 636 791 607  34 681 120 330 131 673 762 153 643 697 113 126 109 814 601 754 797 310 140  86 671 623 536 729
 520 654 745 712 742 702 689  69  54 179  47 781 744 163 642 666 146 739 645 740 149 276  16 212 322 122   8 625 620 786
 124 626 382 647 606 656 720 716 534  22 542 194 787  51 695 587  19 614  39 651 469 503 696 204 148 733 226  40 662 622
 734 810  95 631 306 540 544 680 168   5 511 492 679  63 639 735 668 582 225 424  44 634 555 284 565 279  14 411 612 586
 583 514 627 512 652 561 528  96 328  62 573 551 726  67 543 579 227 571 567 446 206 637 588 123 436 248 591 380 592 401
 505 580 576 553 563 504  15 657 418 267 621 173 593 485 447 530 369 339 578 516 641 129 718 261 494 317   3 415 507 741
 537 282 357 628 423 590 687 475 240 600 550 539   9 552 527 513 569 440 408 486 445 538 435 301 502 216  12 500 584 570
 490 585 429 150 501 489 575 407 359 389 205 482 350 461 370 477 398 531 517 493 467 526 597 107 581 683 498 557 451 390
 564 617 479 692 388 506 296 481 373 337 497 457 495 372 458 417 349 410 473 413 611 409 287 402 392 488 560 362 464 466
 491 476 391 376 463 214 325 483 460 515 879 468 295 353 499 572 524 598 269 616 385 434 342 438 426 529 441 472 448 333
 366 228 237 462 428 241 360 341 549 705 331 546 453 518 437 320 484 363 384 471 885 396 422 866 338 605 427 545 365 442
 432 352 414 256 439 421 845 547 478 450 313 137 393 465 419 378 444 533 425 548 236 452 355 608 899 630 379 455 454 358
 327 525 780 239 308 361 326 459 574 356 268 805 232 703 332 387 796 509 381 368 377 321 397 615 312 777 367 715 298 300
 318 345 405 403 348 231 274 247 659 757 876 305 449 799 264 336 386 347 433 470 701 299 474 640 375 395 650 807 250 272
 265 443 394 130 383 480 374 302 559 830 307 719 255 821 293 263 811 280 558 185 618 309 286 809 406 632 399 819 314 271
 510 233 157 354 294 244 324 329 893 806 344 852 164 833 487 161 243 304 795 669 599 759 234 737 404 315 371 804 192 104
 872 208 835 222 211 273 158 335 682 660 801 156 174 675 119 218 685 196 894 416 266 202 900 340 710 523 556 730 278 220
 764 892 554 127 254 210 843 364 541 252 837 155  98 674 102 209 763 297 779 201 275 177 223 888 664 430 594 291 864 193
 178 117 838 316 258 890  91 648 869 245 522 191 229 686 135 108 766 270 290 851 139 824 189 883 895 311 661 841 159 115
 863 152 790 508 896 221  70  82 847 197 496 145 186 604 144  93 334 217 855 171 303 655  41 812 803 789 672 724 694 151
 532 633 180 850 262 758 184  92 831 175 722 562 242 110 121 188 769  57 816 828 190 844 603 772 731 112 456  75  71 749
 857  83 351 257 535 106 853 277 667 725 736 133 181 609  30  49 246 259 629 862  37 732  88 827 775 898 897 595 105 116
 187  55 836  74 141 100  77  94 868 688 784 823  46 891 235  48 658  45 783 753 203 613  52 519 881 706 755 172 860 568
 884 103 698 848 169  53 849 142 521 577 877 125  28 887 162 128  32 165 602  81 638 800  90 765 774 802 707  50  97 861

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.09953e+06us (= 3099.53ms, 3.09953s)
Wall-clock time (full program): 3.16342e+06us (= 3163.42ms, 3.16342s)
Satisfaction error: 0
Number of search iterations: 852
Number of local moves: 713 (including on plateau: 214)
Number of local minimum: 33 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6332
Total number of local moves: 5549 (including on plateau: 1814)
Total number of local minimum: 229 (including on plateau: 153)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 893 779  90  36 122 863  95  84 176 191 697 741 629 721 852  91 592 103 757 530  77  47 842 728  68 875 769 749  96 222
 804 895 144  43 777  74 597 374 701 121 153 844 579  39 733 123 273 638 833 133 148  40 780 180 831 899 740 258  56 705
 797 751 886  82 168  54 694 722 118 154  71 890  53 724 869 562 715 172 873 536  72 151 877 388 119 782 681 169  66 319
 858 527 135 878 212 891 621 524 145 175  41 738  60 557 115  45 731 128 824 134 129 526 825 159 884 866 675 147  83 882
 647 889 290 220 888  52 811 106 666 101 251 846  89 593 187 236 717 195 654 413 708 188 739 158 229 885 602  85 274 796
 880 667 138  94 211 293 872 494 337 183 743 756 249 874 132 520 849 149 178 300  86 111 774 155 897 641 700 203 199 830
 209 250 162 189 316 217 460 237 610 143  88 673 737 304 240 630 806 228 876 698 136 841 695 578 216 716 892 291 177 900
 308 233 789 326 365 192 881 871 164 219 768 625 348 868 424 207 328 206 271 772 276 235 342 312 822 567 818 298 230 450
 726 247 321 232 167 223 570 851 491 254 310 767 208 412 160 110 531 221 786 252 284 339 864 860 246 879 847 165 305 887
 375 278 238 146 287 200 653 244 264 883 181 561 788 241 288 790 736 503 766 325 894 333 302 512 448 537 710 386 329 317
 182 750 295 306 286 898 652 336 358 341 856 645 861 320 267 867 311 468 202 862 454 335 353 430 253 457 309 340 261 260
 383 832 459 362 409 262 763 391 345 301 784 463 265 352 403 691 855 466 646 185 367 285 234 711 255 502 343 472 280 449
 414 642 313 294 495 402 761 245 485 330 405 521 727 398 266 535 440 583 370 680 239 508 406 483 292 624 318 354 478 507
 224 307 477 332 462 456 725 545 534 281 411 571 518 465 487 315 347 446 455 734 441 384 408 451 327 588 422 563 501 338
 432 331 381 474 382 334 256 475 434 359 443 423 378 497 509 896 428 270 467 515 689 427 461 458 323 482 479 437 480 595
 522 490 511 416 577 516 399 542 361 594 269 297 484 385 125 573 476 363 623 397 616 394 560 419 324 373 605 421 514 369
 566 548 445 513 431 392 190   7 529 489 506 492 396 400 356 389 473 426 464 525 663 436 528 580 719 404 498 633 453  64
 505  79 393 626 493 544 407   4 551 357 634 600 395 572 636 283 439 401 637 105 499 690 546 263 617 344 415 589 368 523
 612 438 471 620 351 549 425 565  49 683 550 349 656 585 486 510 614 552 447  81 504 590 611 150 555 272  78 532 608  22
 622 541 539 568 553 601 410 559 496 781  14 268  12 360 586 197 684 651 376  30 377 500 613 210 380  76 643 619 581 668
 644 598 558 587 603 554 141 193 604 452 759 104 584 574 814 205 161 547 390 346  58 575 420 517 635  93  51 618 649 481
 198 282 564 709 569 650 417  13   5 662 615 355 533 170 693 248  35 469 632 556 628  25 639 808 655 204 102 672 800 607
 218  46 792 692 671 543  97 661 657 744 730 194 609 627 729  37  32 699  21 350 640 837  11 314 712  18  19 747 746 322
 227  98 815 840 669 677  31 648 742 854 764 196  26  70 732 277 152 659 163 429 679 723 173   3 156 259 117 720 838 778
 116 540 807 753 713 787 371 379 771 631 685 130 703 538 793 707 100 665 303 179 599 126 108 576   9 201 289  24 755 157
 596 442 821 676   8 591 366 801 688 606  44  67 745  38  33 372 444  73  63 765 582 802 231 674 748 433 213 658 870  65
 139  55 770 785 687  57  99 364 706 488 470  87 718 113 682 773 109 714 214 702 299 664  20 817 140  61 435 798 853 696
  62  29 775 834 816 823 215 819 776 859  28 226 242 243  50 829 166 865  69 387 686 836   6 791 704 107 275  15 845 137
 131 112  16 848 826 810 257 783 660 760 418  59 752 670 820 735 114 812  80 799 835 754  23   2 142 184 296 758  17  42
 225 839 120  34   1  10 279 678  92 519 827  27 171 805  48 762 857 843  75 795 850 813 124 828 809 186 174 794 803 127

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.78841e+06us (= 4788.41ms, 4.78841s)
Wall-clock time (full program): 4.852e+06us (= 4852ms, 4.852s)
Satisfaction error: 0
Number of search iterations: 2006
Number of local moves: 1395 (including on plateau: 843)
Number of local minimum: 77 (including on plateau: 56)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15236
Total number of local moves: 9275 (including on plateau: 4831)
Total number of local minimum: 907 (including on plateau: 326)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 103 767 890 885  72 640 118 882 887 141 249 101 760 825  47 574 615 268 145 834 743 484  14 540  68 711 100 598 183 271
  92 672 876 830  74 679 171 216 732 135 802  52 621 516  67 726 894  35 696 833 724  51  13 163 125 874 793 132 864  57
  54  32 785 844  62 709 192  98 883  89 661  81 875 665  43 852 900 121 469 880 736 879 199 236 832 889 211  33  85 120
 842 520 129 511 245 782  75 193 592 157 146 143 794 744 177 847 351  21 881 865 196 483  40 707 764 708 861 674  31  36
 115  95 886 733 856 779 148 117 783 244 762 144 868 663 178 774 229 130  94 463 841  70  71 849 128 607 898 717 166 107
 198 436 158 757 203 754 113 189 636 230  91 263 799 721  65 701 336 485 817 811 487 222 127 788 891 758 808 471 110  90
 179 380 194 777 265 232 871 139 594 246 486  86 787 676 104 749 677  46 205 853 131 776 238 857 160 850 820 753 184 200
 266 536 295 702  64 293  88 741 689 149 282 308 142 593 202 836 675  97 374 597 361 224 892 840 168 737 855 746 375 388
 671 756 893 638 260 368 687 292 450 170 678 270 328 798 181 812 430 269 277 550 366 255 279 644 133 673 239 495 220 433
 319 573 188 631 289 704 284 333 231 897 235 252 299 716 303 553 391 314 703 610 863 257 323 657 348 577 322 723 237 383
 234 822 191 605 325 338 221 261 896 247 789 343 326 529 652 316 770 426 317 835 228 273 347 623 197 662 253 731 294 464
 306 858 210 612 884 418 281 186 332 267 285 519 628 629 396 617 780 417 370 517 241 508 386 458 276 565 448 558 259 304
 227 521 350 624 243 382 596 738 275 416 344 410 462 435 694 371 354 377 320 481 290 453 599 467 313 618 459 545 406 745
 399 318 172 603 735 352 309 447 349 461 620 637 425 298 341 572 256 526 408 395 625 585 405 449 660 443 403 345 335 642
 480 524 415 439 301 393 340 474 451 515 373 390 441 429 367 557 477 534 445 378 518 567 398 549 329 457 431 503 586 454
 456 240 472 381 440 414 434 478 568 532 397 421 404 525 455 492 491 460 563 346 407 444 609 499 413 363 589 394 473 355
 420 479 358 419 523 296 538 535 424 514 543 411 560 498 466 330 212 402 353 591 546 619 339 437 321 465 584 542 428 362
 497 389 616  87 683 590 412 423 153 559 510 385 392 547 595 555  82 365 217 400 600 554 604 272 359 501 489 493 505 681
 442  12 569 504 666 720 452 650 575 645 356 506 409 286 488 422  59 254 401 384 635 307 658 613 357 278 387 337 581 562
 530 262 539 311 502 571 551 688  10 632 509 669 580  96 719 122 601 541  30  11 438 622 821 208 611 312 608 233 582 606
 630 446 552 360 379 570 766 302 561 494 699 513 579 114 692 182 215 791 537  99   1 155 533 587 566 161 633 152 718 528
 602  28 578 310 729  15 759 500 427 705  80 646 647   7 664   8 288 710 667 315 522  29 693  25 838 470 685 204 837 527
 686 739 659 176 752 556 727  48 283 531 769 544 651 376 740 274 134 626 173 242  53 778 162 258 576  77 195 334 714 682
 564 300 627  79 654 124 468 634 164 219 695 872 167 280 327  39 297 742 668 287 725 768 655 490 680 248  44 291 656 751
 643 372 773 223 818  17 730 639 214 614 482 845  50 187 432 185 747 583 772  93 722 588 816 109  20  73  58 207 803 700
 771 684 342  78 476 174 507 712  55 728  22 792 159 112 806  45 796 670 750 137 475 698 781 136 828  27 264 305 331 854
 755 156 653   2 851  16 823 775 147 690 748 761 251 190 859 108 649 869  61 364 116 138 706  26 800 209 765 140 831  56
 862 807 105 206 763 201 213 804 225 512  60 548  66 150 697 648 797 734 878  42 691  37 826 641 839 102  49 154  63 795
 848   5  34 169 151 715 814 175  69 877 819 813  41 126 888  83   9 829 119  84 123 867 801 369 809  76 226 895 815 866
 324 786   6  19 250 713 827 846 860 899  23 790   4 784 870 165   3 873 805 218 111 824 180  18 106  24  38 810 843 496

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.75799e+06us (= 3757.99ms, 3.75799s)
Wall-clock time (full program): 3.8419e+06us (= 3841.9ms, 3.8419s)
Satisfaction error: 0
Number of search iterations: 1344
Number of local moves: 659 (including on plateau: 151)
Number of local minimum: 91 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9775
Total number of local moves: 7222 (including on plateau: 2903)
Total number of local minimum: 554 (including on plateau: 211)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 220  38  68 768  40 885 751 812 795 214  63 362 844 767  28  43 878  33 859  29  66 851 622 119 765  73 862 151 762 747
 771 145  50 631 758 660 643  89 891  74  35 481 852 853  90  19  24  56 627  97 244 592 646 638 227 193 876 854 566 833
 892  48  17 827 886 777 652  64 881 108 142 254 791 598 109 111  61  67 693  59 706 801 842 421 103 136 688 884 284 613
 624  72 163  21  41 889 562 640 863 127  77 845 898 897 114 187 333  69 723 131 712 692 644 626 701 107 295  94 721 647
 590 834 890 641 841 150 888 216 864 126  81   4 207 194  95 221 219 171 807  18  22 778 738  93 708 896 789 169 657 608
 724 188 301 630 197 663 815 135 470 102 191 298 893 756 152 203 272 228 831 196 839 860 805 265 440  75 687 317 748 234
 835 255 287 628  96 887 576 280 623  80 264 282  79 288 202 256 404  85 720 315 718 143 673 899 502 595 820 132 857 734
 596 162 450 744 139 257 740 674 732  83 179 251 223 895 166 175 382 370 804 383 798 439 508 840 602 260 330 263 310 760
 739 296 426 503 292 289 900 173 495 870 249  65 337 341 201 210 230 183 770 321 671 880 894 372 818 218 420 273 233 846
 736 347 336 788 200 229 754 258 690 816 267 339 617 231 252 318 247 180 814 156 409 320 510 809 830 311 266 369 279 837
 534 270 262 242 323 176 700 275 729 224 861 743 331 271 385 276 189 238 704 877 497 144 882 726 422 357 659 148 717 353
 555 414 452 733 268 235 392 368 556 340 326 832 299 359 215 248 328 618 415 391 354 393 599 838 879 363 525 405 386 429
 544 355 361 322 412 222 584 536 549 360 594 432 656 277 557 447 506 457 632 407 178 352 661 750 448 416 316 453 351 380
 419 371 387 532 424 430 375 278 367 530 591 306 217 494 871 384 883 373 365 474 469 498 634 428 307 541 338 433 345 451
 456 378 431 511 349 269 574 400 512 327 281 467 388 417 425 465 443 696 504 406 408 403 547 523 620 395 533 513 358 516
 483 437 389 413 472 546 423 522 484 366 427 313 500 350 100 436 567 540 411 531 449 548 455 473 675 462 482 441 477 343
 639 487 444 551 464 402 454 539 161 524 606 240 476  10 479 526 138 509 529 390 304 600 410 666 518 468 475 435 461 610
 303 418 535 607 442 507 471 381 243 398 558 314 597 543 679 496 616 312 463 542 446 614 241 629 489 332 537 563 190  49
  46 564 466 459 670 731 319 612 182 492 491   3 514 580 603 517 488 569 129 399 120 611 356 515 538 490 246 735 445 625
 305 493 575 577 499 137 283 478 374 585 348 682 545 528 521 650 579 396 204 678 686 286 397 106  14 633 710 520 635  91
 199 485 553 550 609 684 134 501 290 621 774 250 583 742 560 689 589 649 155 586   5 211 141  15 232 698 259 694 505 552
 205 653 651 147 571 177  84 741 335 699 697 779 325 554 588 570 582 619  58 519 172 685 342 237 154 784 125 695 637 130
 209 486 460  99 826 819 174  37 206 226 669 561 565 587 581 681 727 676 160 707 665 605 377 572  42 713 261 648  98  78
 294 642 822 225 615 458 153  70 128 737 527 601 658 761 755 578 709 683  36 785 702 636   6   2 568 715 181  57 158 253
  53 780 868  82 753 113  60 655  76 772 797  44 794   9 745 764 691 604  26 664 746  31  87 346 213 763 728 786 308 157
 302 787 867 185  13  16  51 752 168 813 848 672  32 705 828 781  20 866 293 775 703 159  62 309 434 123 184 776 329 662
 245 766 719  47 802 821 192 714 291 824 855 823  27  71 645 799  30 858 149 438 480 164  39 140 195 711 806 757  52  55
 394 680 297 101  23 796 300 716 344 850 722 825 122 170 829 803 769 790 324 725 118  88 117 593  86  34   1 792 730 376
 239 856 116 677 654 198 110 817   8 668 236 874  12 146 865 869 811 773  25 667 783   7 115 186 873 810 105  54 749 212
 364 808 872 274 836  92 401 782 208 559 759 573 133 121 875 793 800 847 285 849  45 124 165 379 112 843  11 104 167 334

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.62833e+06us (= 4628.33ms, 4.62833s)
Wall-clock time (full program): 4.69211e+06us (= 4692.11ms, 4.69211s)
Satisfaction error: 0
Number of search iterations: 1832
Number of local moves: 1104 (including on plateau: 466)
Number of local minimum: 133 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 14163
Total number of local moves: 8156 (including on plateau: 4049)
Total number of local minimum: 873 (including on plateau: 305)
Total number of resets: 3
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 898 101 787 758 750 748 809  63  97 759 107 735  54  94  92 255  77  39  76 596  59 117 253 698 794 894 819 233 877 876
 891  69 837 126 181 102 890 843 751 740 221 734  66 888  50  70 115 149 808 144 768 880  33 743 841  91 167 798 426  93
 295 824 865  73 120 527 881 657 619 687  68 775 161  34 160 136  61  27 823 770 504 874 158 900 718  89 492 815 130 272
 857 549 186 882 883 665 780 139 632 786 213 732 111  88 127 241  82 765 799 132 620  96 129 776 832 133 828 128 154 170
 692 453 836  87 896 572 790 400 821 795 200 678  51 250 148 189 197 588 886  52 604 745 261 712 816 190  99 146 109 252
 870 194 875 594 871 805 248 122 810 749 140 887 141  45  48 203  46 509 569 225 858 884 118 781 793 103 424 202 193 208
 273 480 561 278 834 706 728 116 807 642 873 797 147 239 114 266 274 866 243 177 864 142 307 530 226 299 228 311 878 309
 744 586 215 264 259 746 192 889 801 846 271 137 304 845 249 292 401 656 391 219 245 277 869 868 655 222 568 110 260 134
 201 633 318 802 198 812 182 240 467 719 867 206 348 231 276 286 312 716 791 352 685 792 175 640 784 238 637 157 355  95
 234 848 340 251 291 733 220 396 844 872 475 764 121 150 418 416 210 825 860 386 862 301 176 570 290 296 761 212 135 258
 320 679 404 345 382 262 256 437 885 516 544 332 112 317 223 370 406 855 704 730 329 303 185 602 785 300 863 325 368 376
 407 804 371 183 350 331 440 204 683 468 280 699 314 897 343 316 425 583 484 365 432 357 338 567 347 372 892 377 405 481
 364 840 333 460 275 310 445 323 835 522 321 284 379 520 351 434 267 381 651 346 353 427 388 565 709 429 634 521 358 490
 319 269 389 398 879 387 559 448 626 438 412 342 895 430 486 403 422 289 378 556 384 383 428 899 337 313 608 205 297 336
 359 305 390 464 399 270 470 478 363 540 471 447 503 485 362 510 501 582 283 421 595 624 392 513 443 463 523 393 461 505
 496 474 477 413 375 610 499 449 108 442 577 308 535 457 539  24 498 495 410 408 479 700 414 402 512 451 456 506 547 454
 491 531 419 436 360 552 462 469  84 409 265 455 489 508 555 465 524 488 394 322 686  25 459 369 653 517 254 585 563 726
 482   3 446 423 581 621 617 494  44 584 431 591 534 373 600 452 483 458 229 543 538 578 433 335  86 603 196 612 500 645
 566 159 546 601 444  42 575 589 476 598 417 514 573 616 529 551  26  30 361 487 104 511 631 466 643 576  47 760 519 558
 533  23 717 557 537 171 571 562 366   4   6 564 648 554 550 644 606 105 525 680 236 579 689 199 507 473  81 541 638 649
 542 349 385 611 691  14 526 688 326   7 694 672 663 324 580 618 548 315 281 695  17 472 592 172 218 502 153 574 696 590
 635 174 179   8 605  38 669 636 518  15 652 658 397 415 738 380 613 287 647 515 599 187 597 123 224 615 211 742 737 701
 720 435   5 328 532 268 671   9 282  37 693  22 411 674 702 755 831 553 125 660 242 639 707 279 662 756 710 124  74 609
 163 374 729 650  62 560   2 763  83  72 711  28 772 668 813 607 705 263 195 627  41 628 536 341 354 641 191 545 715 676
 593 294  43 622 666 441 155 811 156 169 227  40 774 528 670 806 766 257 232 661 497  98 703  21  60 667 395 725 757 681
  64 820 741 690 493 330 230 659 302 334 306 293 708 623 629 818 752 614 753  19 184 677 851  35  36  53  20 739 731  11
 173 861 664   1  49 356  78 723 178  56 788 168 833 682 778 747 856 327 288 839 714  65 777  85  32 769  16 849 138 625
 217 344  58 767 151 697  18 143 244 165 771 214 789 630 847 850 842 216  13  31 727 779 713 164  12 838 587 180 654 854
 106 367 152 722 235 782 113 119 145 298 684 100 829 762 814 736 817 450 237 754  80 285 420  29  75 822 796 893  67 826
  10 673 247 721 166  57 439 646 162 246 830 339 853 188 724 675 852 827  79 803 209  90 783 131  71 800 859 207 773  55

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.10102e+06us (= 4101.02ms, 4.10102s)
Wall-clock time (full program): 4.16671e+06us (= 4166.71ms, 4.16671s)
Satisfaction error: 0
Number of search iterations: 1569
Number of local moves: 973 (including on plateau: 420)
Number of local minimum: 103 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10729
Total number of local moves: 6583 (including on plateau: 2579)
Total number of local minimum: 614 (including on plateau: 204)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 871 851   3 135  26 158  10 407  52 830 177 890  24 874 115 816 294 774 298 873 153 116 194 861 872 286 865 827 859   4
 301 843 193  13 876 112  14 626   2 868 120 784 126 838 238 845 172 812 803 854 224  46 175 882 817 174  20 793 840 104
  41  78 846   9  21  67 771 252 113 850 156 788 687 822  94 772 223 768 853 646 143  44 258 769 863  30 836 608 837 270
 815 731 210 420 786 787   8 292 166 284  40 825 798 790  54 834 176 740 792 441 196  65  73 751 726 783  64 180 666  22
 808 759 229 136 776 297 797 347  11 742  25 710  28 712 725 178 203 789 752 781 185  58 111 724 202 127 679 718 720 186
 694 691 232  23 778   5 728 268 683 703 399 761  15 780 762 201 700  62 673 239 290 137  69 848   7 661 672 707 695  32
 757 723 169 263 746 280 796 282 217 802  35 801 356 729 702 307  90 777 531 208 101  93  47  18 651 699 693 722 732 188
 657 676  12 134 656  66 665 595 701 685 804 368 660 593 597 118 358 641 677 375 236 105 167 715 667  70 664 255 581  17
 670 643 334 275 609 622 602 237 168 686   6 590 555 542 627 144  19 674 392 628 320   1 305 584 653 109 662 650 690 518
 630 605 162 556 704 179 659 601 636  50 250 631 675 603 619 170  96 574 558 449 128 618 261 600 532  87 644  76 629 533
 575 639  60 293 633 613 612 216 559 553 163 586 583 684 579 138 140 658 610 189 524 588 395 552 519 123 607  77 486 561
 569 596 594 145 591 227 678 544 495 578 245  95 577 546 498  37 548 539  51 148 507 516 328 638 549 505 535 635 521 480
 585 616 572 560 538 530 551 510 478 462 492  43 469 425 494 114 489  38 481 247 453 454 370 520 472 545 419 527 444 617
 502 434 389 273 501 517 496 528 332 428 547  75 476 121 511 649 488 566 226 536 485 482 443 534 543 514 418 568 460 473
 457 365 278 503 523 430 484 361 500 458 459 483 384 468 411 461 491 570 615 433 450 316 404 455 571 471 386 429 391 508
 465 464 599 436 537 479 385 432 490 487 313 463 513 431 390 398 412 405 452 359 435 352 529 525 442 477 506 446 427 466
 493 345 415 806 509 401 393 799 348 614 423 475 440 416 504 383 451 374 379 439 437 470 499 343 424 367 400 417 394 357
 403 467 344 421 396 414 355 892 409 422 366 387 841 364 382 456 341 303 878 760 337 353 671 402 322 376 269 329 410 445
 380 426 342 565 363 438 373 847 350 369 730 765 336 349 330 306 319 300 900 756 265 214 698 299 371 896 318 279 234 397
 321 333 681 589 264 408 251 758 741 311 623 335 249 388 317 739 362 309 248 773 360 654 580 276 515 820 323 338 277 372
 262 191 267 640 346 260 331 562 314 809 716 448 259 406 325 807 764 308 296 692 642 800 604 212 295 885 219 291 351 213
 281 233 721 689 378 755 283 826 447 161 253 312 315 152 285 340 814 246 634 753 737 898 587 197 326 272 221 327 230 842
 182 228 857 669 256 540 242 733 354 289 647 235 266 150 200 879 743 198 222 592 310 880 576 225 204 154 893 891 155 745
 302 241 766 713 381 655 867 183 274 254 895 187 339 211  79 541 828 563 243 192 860 288 819 324  82 554 257 744 124 749
 209 131 748 705 171 668 206 856 881 103 884 512 220 195  92 240 821 173 287 205 897 877 711 181 738 582 199 244  71 708
 117 190 770 717 831 849 215 141 645  85 611 146 813 139 866 522 663 151 149 526 810 785 709 159 108 130 125 557 157 829
  89  84 598 304 107 706  86 218 869  91 832  74 852 624 887 637 625 129  98  61 835 747 894  63  59 550  97 567 862 870
 110  45 883 855  36 811 818  68 767 413 791 497 160  31 100 564 573 844 165 102 727 795 606 682 106 688 122 133 184 839
  80 858 620 886 142 864 823  81 779  72 719  42 736  99 833 271 632 147  88  27 714 875 697  57  55 775 750  48  49 696
 889  29 621 782  34 377  16  53 734  56 794 207 763  33 899 648 680  83 164 231 754 888 735 119 824 805 652 132  39 474

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.28452e+06us (= 4284.52ms, 4.28452s)
Wall-clock time (full program): 4.34778e+06us (= 4347.78ms, 4.34778s)
Satisfaction error: 0
Number of search iterations: 1674
Number of local moves: 945 (including on plateau: 409)
Number of local minimum: 101 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12534
Total number of local moves: 7371 (including on plateau: 3195)
Total number of local minimum: 794 (including on plateau: 246)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 811 871 206 139 583  26 743 142 873 118 848 876 849  27  32  56 130 122 706 780  74  98 529 435 893 725  45 815 772 191
 151 306 887 762 852 664 704 234 358 126 696 895 106  90  44 182 101  46 761 767 117 160 602 430 636 662 763 900 389 124
 843 111 894 204 760  84 598 532 856 837 742 167  79  87  34 775 143 115 558 794 152 646  61 148 836 472 242 884 727 134
 831 174 813 827 302 253 654 187 632 145 828 832 207  64  97 229 593 173 246 508 185 136  94 212 806 578 892 862 363 792
 203  65 878 219 896 155 796 113 888 251 650  78 237 269 170 102 870 135 882 898 123 249 621 588 239 879 177 757 880 247
 297 238 753 759 881 671 779 165 270 119 840 458 312 197 169 107 254 609 890 574  77 166 610 168 812 214 450 623 891 162
 885 211 231 346 661  16 889 287 860 565 748 223 350  83 112  36 824 181 803 620 236 380 298 872 279 263 750 637 711 158
 874 376 256 282 731 310 530 869 800 368 754 345 159 147 156 127 702 292 839 713 128 325 851 284 224 259 850 440 326 198
 733 190 221 675 690 260 456 400 676  96 359 273 281 294 275 183 875 245 267 736 348 485 419 149 707 886 648 701 719 268
 175 327 883 708 220 398 424 460 235 678 470 244  68 391 421 233 677 439 477 699 309 353 730 366 357 808 459 769 426 311
 226 215 773 184 205 387 693 313 683 686 698 375 322 255 384 189 786  88 749 668 280 271 665 417 467 721 433 710 354 318
 401 196 213 548 295 390 669 422 716 709 408 557 425 137 336 217 863 293 432 437 347 402 299 365 480 321 899 797 442 499
 404 474 355 330 372 396 361 436 360 628 411 216 571 580 463 303 516 272 484 536 504 305 737 395 506 370 495 897 452 386
 261 399 300 304 502 329 431 461 394 844 517 225 240 573 296 487 414 481 290 660 547 454 657 364 563 278 799 597 560 288
 379 455 388 301 524 332 546 503 339 592 342 373 367 479 523 498 469 539 562 553 344 586 351 446 415 510 449 527 340 483
 478 475 407 393 575 453 323 406 382 315 542 423 443 473 248 526 522 596 528 533 554 448 445 383 447 493 413 331 551 409
 486 601 369 276 410 631 232 243 541 412 618 511 544 314 765 549 519 266 397 451 622 595 195 537 594 538  48 405 497 349
 663  92 655 564 500 505 222 608 576  22 338 427 515 612 492 611 496 520 531 328 550 471 641   4  42 488 518 264 514 746
 556 392 643 639 607 489 464 600 491 308 324 457 752 605 582 659 362 512  37  99 603 591 569 114 579 209 218  57 507 490
 627 559  54 615 444 377  17 567 494 320 371  28 715 635 561 552 385 647 521 465 428 747 157 679 434 630 381  49 682 374
 614 566 697 644 572 674 590 252 192 764   7 543 589 781 729 724 584 378 286  38  11 540 163 652  31 535 201 228 501 429
 692  10 599 705 616 642  95  20 585 341 587 606 624 334 581 649 568 658 466 438 687  24 534 822 265 186  73 180 210 718
 755 782 104  18 262 150 176 146 476 420 153 778 864 739 732 694 291 673  13 317 726 638  60 670 625 798 274 178 194 809
 100 793 667 845  89 741 416 617 164 629 257 509 640 691 525 689  72 770   6  80 738 722 171 120 695 619 335  50  62 703
 672 745 634 656 289  21 633 766 283  51  40 740 785 717 804 700 403 720  23 109 771 712 129 110 570  69 482  53 144 684
  58 756  52 751   9 861 125 841  47 802  43 645 795 728 723 666 230 847 105  59 791 626 343 653 131   1 513 441   5 868
  85 877 356 108 161 854 277 462  35 545 208 758  14 734 774 714 307 788 685 179 825 776 810 681 116 202   3  55 319 807
  76 790  70 103 333 817 141 834 193 138 258  29 777 820 857 555  71 826 651 154 814 823 227 830  67 199 833 200 285 744
 140 604  82  33 133 787  63 846  91 867 121  66 855 838 829 735 172 418 132 241 789 784 859 816  86 352 853  93  12 818
  39 865  75 577  41 842 468 783  25 819 337 858  30 821 801 768 316 866 188  81 835   2 688 805 613 250  19  15 680   8

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.21388e+06us (= 3213.88ms, 3.21388s)
Wall-clock time (full program): 3.27835e+06us (= 3278.35ms, 3.27835s)
Satisfaction error: 0
Number of search iterations: 951
Number of local moves: 796 (including on plateau: 297)
Number of local minimum: 26 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6867
Total number of local moves: 5633 (including on plateau: 2000)
Total number of local minimum: 262 (including on plateau: 155)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 760 900 637 802 886 813 843  88  99 651  92  17  65  78 897 887 786  94  53 114 824  28  56 753  90 733 136 860  51 422
 818 122 572 855 679 774 816  27  46 121 697 103  40 677 899 117 833 138  55  97 852  83  84 725  98 869 130 875 466 847
 877 827 358 690 770 666 707 686 115 111 639  38  68 680 862  70 829 120 101 249 788 653  58 828 106 885 127 342 142 123
 780 743 891 541 876 817 231  41  69  87 737  95 116 794 853 216 872 108 694 330 163 687 125 237 112 751 580 821  63  85
 801 503 768 618 577 766 228 113  77 294 841 313 105 748 631  67 883 158 771 243 151 682 166 767 233 585 129 892  93 312
 735 709 895 785 200 185 232 143 620 195 567 212 182 765 647 156 744 172 701 223 162 598 173 747 551 734 192 787 316 187
 712 177 732 798 271 890 205 157 349 201 859 178 167 894 230 242 757 257 846 161 169 849 168 871 241 633 263 693 208 337
 698 190 673 281 807 721 229 261 283 272 842 275 273 893 298 183 251 227 353 209 159 715 815 784 483 884 221 718 302 215
 720 225 728 714 207 719 219 245 882 239 835 328 211 269 268 265 692 811 323 711 210 513 868 301 304 287 266 654 254 247
 550 322 722 689 684 539 306 244 288 528 822 258 325 299 280 318 341 603 293 758 502 791 279 282 371 611 252 706 292 260
 661 317 896 792 376 669 332 321 250 203 369 335 372 284 329 319 489 839 262 857 274 606 333 340 326 664 425 587 314 374
 845 359 424 296 398 645 307 383 420 338 600 277 364 370 375 300 320 386 864 636 348 870 336 276 387 863 327 562 295 344
 783 345 523 354 324 426 350 403 411 303 530 357 554 362 492 460 441 404 373 400 394 889 431 363 368 417 378 898 416 366
 616 352 451 346 389 189 347 339 408 365 705 428 454 471 448 360 419 831 514 793 393 738 409 385 401 379 382 563 418 222
 461 429 526 486 472 395 402 446 412 536 476 491 407 414 413 511 433 499 381 556 453 388 432 278 449 560 452 392 521 444
 437 391 443 399 465 423 515 498 380 406 286 482 468 459 494 463 488 447 315 481 504 496 430 438 533 495 484 493 457 445
 458 469 485 410 474 542 537 439 456 478 508 421 470 455 479 427 584  31 464 561 462 361 573 553 473 434  35 509 480 487
 128 475 540 500 575  18 497 552 546 558 520 501 490 518 555 477 525 522 435 589 532 180 524 506  96 512 531 534  50 529
 184 582 259 569 627 547 507 516 602 576 334 544 583 548  26 571 199 628 543  45 652 607 538 578 527 285 581 179 535  43
  72 657 310  37 140 739 574 519 621 193 450 597 549 649 599 579 594 309 564 467 557 256 612 590 593 220  24 224 586 634
  71 614 186 615 191 355 545 623 559  59 124 591 566 646 608 568 630 440 141 356 601 164 617 675 632 236 596 240 592 674
  29 678 255 750 655 176 648 668  39 595 153 660 570 626  79 642 565 700 517 126 704  44 643 667  20 253 619 171 641 622
 160 644 144  89 672 367 658 505 665 588 147 670 764  48 727 629 131 436 119 663 604 377 638 107 605  60 731 217 691 659
  62 635 311 149 165 343 214 650 640 761  91 776 769 708  10 710 146 331 234 685 703 137 681 803 695 100 717   8 625 656
 150  47  76  80  11 197 671 730 752 782 270 699 696 152 724 713   6 609 741  75 754 235 726  73 745 297 772 218 736 778
  25 804 134 238 510  54 723 742 789 662 291 775 805 170 746 755 174 206 133 683   4 308 610  61 763  15 781 109 729 716
  13 148 104 246   9 264 796 740 810 844 290 688 814 118  66 777  82 762 809 397 799 226 198 155 806  49 759 194 773 779
 624  14 405 154 110  42 812 756 188 837  57 749 858  32  74 838  21 702 825 442   2 396 826  19 819 351 880  30 820 832
  81   1  34 196 139 132  12 850 874 881 202 834 797 213  22 888 145 879 415 800 790 248 305 289 840  86 878  16 795 873
 204 836  33  36 856 102  52 830 865 851 181 823 613 175 384   7 135 866 676 808   5 390 861  64 848 267 867  23 854   3

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.72119e+06us (= 3721.19ms, 3.72119s)
Wall-clock time (full program): 3.78462e+06us (= 3784.62ms, 3.78462s)
Satisfaction error: 0
Number of search iterations: 1255
Number of local moves: 940 (including on plateau: 327)
Number of local minimum: 43 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9286
Total number of local moves: 7202 (including on plateau: 3377)
Total number of local minimum: 370 (including on plateau: 287)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 516  65 885  49 173 890  46 820 413 114  44 721  67 822  82 888 723 377 875 706 146 677  31 675 843 805  80  23 112 847
 678 850 834 880 892 164  15 793 134  90  20 131  59 139 192 190 803  96 750 544  87 867 118 883 798 666 856  21 166 799
 879  33 412  54  69  91 761 789 592  36  56 760 553 887  74 884 824  34 578  94 862 821 162 728 758 141 151 855  89 488
 827 124 863 857 877 468 520 133 616 386 115 866 251 889 110 117 159  75 897 102  99 846 186 700 111 672 881  42  29 697
 595 212 886 145 891 508 710 853 594 302 135 788 208 709  38 174 778 153 860 768  92 189 210 865 103 396 160 232 177 784
 829 244 730 148 180 828 554 170 165 195 128 838 175 900 149 283 526 313 894 664 899 608 222 694 572 150 261 329 267 600
 871 169 729 184 266 327 684 783 256 242 191 506 215 633 220 356 841 171 870 245 268 711 119 636 896 157 695 152 250 872
 610 275 658 197  64 260 736 876 882 319 229 762 253 463 161 239 898 109 777 787 869 167 290 619 237 207 257 100 346 868
 739 104 596 136  95 511 837 781 840 126 365 236 221 143 321 310 815 491 893 200 306 769 335 530 252 254 809 297 345 858
 779 224 642 331 426 233 844 715 230 854 198 305 338 326 238 205 604 300 309 277 786 312 541 564 836 372 311 437 223 755
 669 403 775 155 358 291 704 294 255 378 848 240 281 293 276 217 362 382 344 823 842 262 270 748 752 325 813 296 337 522
 341 368 727 528 360 271 782 502 751 279 369 583 334 381 203 419 385 427 449 467 258 790 425 708 274 288 287 599 322 638
 423 517 559 445 383 584 849 282 317 370 422 455 307 333 753 303 347 349 630 514 265 859 375 436 569 366 441 374 324 364
 462 416 480 371 209 747 654 328 446 418 376 264 434 401 301 486 458 414 391 359 469 402 864 397 398 806 272 460 509 523
 444 390 766 247 454 399 298 472 367 430 456 457 552 392 577 487 289 350 421 505 556 405 379 598 400 618 343 407 574 482
 234 663 227 410 354 284 537 490 478 679 581 429 492 566 340 485 394 539 498 585 380 489 432 431 443 314 459 415 404 483
 393 512 304 452 417 561 320 286 387 521 438 527 538 497 542 548 168 420 330 515 471 439 582 196 629 465 617 634 507 299
 231 496 280 647 466 219 533 447 588 384 513 531  39 540 591 461 543 201 474  70 536 476 611 519 408 547 484 615 590 475
 188 525 433 676 348 440 435 698 172 204 670 106 510 570 551 612 586 651  28 470 702 352 464 187 357 691 477 575 690 147
 315 568 121 453 602  78 116 500  51 545 448 573 699 609 411 622 546 409 395 494 693 555 644 424  45 534 643 640 660 122
 142 576 278 639 524 501 181 529 613 549 606 625 648 503 650 605 607 504  52 355 442 571 535 248  24  41 657 635 614  61
 235 589 243 724 627 560 481 713  18 563 550 579 637 587 653 681 113 557 154  12 518 285 565 269 680  81 603 580 626  32
   9 703 532 668 687 652 388 144  50 623 206  72 814 718 631 759  40 740 140 645 558  48   1 450 389 665 661 689 696 137
  62 649 156 493 632  73  13 101 620 737 719 743 495 714 738 818 249 744 129 336 308 132 641   7 745 770 179 733 621 158
  66 772  97 597 722 725 259  71 199 726 734  60 662  55 796  11 685 800 562  98 701 671 601  84 323  47 567 765 831 228
 295 628  77 795  58 746 263 351 667 292 655 130 825  76 624 792 318 683  88 692 656 194 712 185 731  93 406 780 686  17
 107 833  57 479 812 659 202  16 373 682 830 451 593  19 861 716  85 756 127 646   3 428 763 211 213 785   2 808 816 182
 735 774  25 705 673 741 226 339 852 819 895  35 707 163 826  14 105 874 216  83 218  27 810  37 717 720  53   6 757 363
 342 811   5 246 123  30 353 176 835 801 845 732 776 108 767 807 178 802 316 688 332 120 749 361   4 742 817 225 183 241
 499  22 138 804 773 674 214  63 754 851 873  10 832  79 839  26  86 794  68 771 193  43 878 125   8 797 273 791 764 473

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.43164e+06us (= 3431.64ms, 3.43164s)
Wall-clock time (full program): 3.50077e+06us (= 3500.77ms, 3.50077s)
Satisfaction error: 0
Number of search iterations: 1159
Number of local moves: 816 (including on plateau: 292)
Number of local minimum: 67 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7287
Total number of local moves: 5903 (including on plateau: 2449)
Total number of local minimum: 241 (including on plateau: 199)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 880  50 794 888 874  25 112 705  34 555 297  61 194  37 638 718 149  39 733 787  60 863 799 809 853  69 701 574  13 204
 881 878 645 729 850 698 128 776  22  52 536  18  68  80 724  78 728 140  85 886 103 176  98 198 821 813 514 731 893 166
 148 102 785 857 147 275 386 754 845 179 274  65  36 126 770 132 804 445 838 875 100 610 808 621 477  87 883 859 172  55
 143  35 761 887 871 216 854 772 116  46 782 894  26  92 896 207 692 142 224 870 673 877 185 810  81  97 895 200  44 127
 873 226 796 866 639 169 294 860  48 201 655 129 291  54 719  43 786 256 422 616 191 852 511 824  77 876 748 195 199  99
 203 113 797 879 158 849  86 618 133 811 212 272 683 170 837 119 759 115 228 848 251 884 208 695 898 232 872 280 174 131
 186 130 756 897 766 791 865 825 109 121 806 138  79 259 676 387 836 144 242 402 335 750 152 889 177 178 211 293 225 890
 864 222 651 687 675 556 175 869 235 286 241 284 248 346 525 106 773 324 592 389 239 856 630 780 245 263 240 703 193 318
 250 499 704 608 735 372 260 624 892 231 822 134 218 714 400 841 337 329 180 706 108 485 308 424 359 221 762 341 303 348
 379 258 829 588 711 736 223 662 358 899 316 230 317 330 436 243 192 285 236 738 831 658 247 411 833 325 357 392 238 257
 410 237 399 627 310 409 234 581 606 522 900 265 457 501 564 255 356 427 862 710 262 530 839 331 306 421 270 261 288 375
 314 480 546 694 301 407 313 550 205 634 767 374 254 868 327 382 519 413 828 507 305 725 267 363 429 321 495 396 342 189
 332 891 579 450 320 339 264 584 885 401 451 351 586 353 569 503 365 350 289 560 443 732 343 448 434 326 282 362 328 395
 478 455 559 571 299 479 233 548 458 393 300 295 419 367 472 492 642 414 360 463 576 517 468 334 423 855 408 385 500 352
 219 488 604 486 595 636 432 323 464 490 439 281 505 273 347 412 364 867 577 355 390 349 383 340 882 431 244 441 470 428
 418 532 467 397 404 483 394 469 444 377 430 553 302 585  95 425 437 466 307 426 338 449 465 484 494 540 613 491 552 678
 354 368 269 398 481 539 391 435 656 598 416 523 506 493 473 513 371 520 587 543 471 206 452 454 516 474 600  11 370 527
 549 509 336 311 515 628 460 150 626 526 447 420 622 529 114 322 594  62 531 197 602 278 276 578 644 380 510 641 596 562
 603 567 246 388 575  83 570 135 666 533 649 489 101 663 565 524 554  75 125 266 405  72 528 534 682 670 589 623 442 593
 475 737 373 188 660 279 615 213 563 215  20 679 440 716 344 607  17 446 535 376 691 315 459 680 461 538 640 123 573 537
 498 597  42 210 487 669 433 415 456  15 183 763 568 561 551 646 167 650 677   4  14 384 227 779 518 558 635 583 717 508
 544 545  96 122 277  21 730 268 482 220  16 512 700 557 681 591 153 742 647   7 631 462 684 572 497 504 643 614 521 476
 609 652 156  76  93 196 777 184 734 582 105 713 547 696 190 290 249 665 723 648 637  58  32   9 823 601 580 668 605 617
 671 657 171  73 625 611  29 403 165 708 381 620 633 229 202 715 674 619  47 345 720 298 768  41 160 743   3 744 739 721
 661 590 287 110 566   8 819  57 672 685 187 632 784 722 124 765 688 789  30 209 793 161 659  94  84 726   2 118 667 826
 697 690  40  74  27 774 769  31 541 861 502 795 830  23  90 800 139 693  63 120 758 366 406 157 815  33  51 741 851 778
 792 612  89 214  53 629 818  38 292 309 709 599 783 702 137 798 807 664 438 162 168  88 699  70 319 740 173  28 834 751
   5 542 417  49 283 727 712 146 145 814 747 752 745 858 689  45 155 801 653 378 803  82  59 333  19 788 159 163 686 760
  67   6 217 181 107 757 835 151 820 496 271 832 827 771 296 781 117 817 749  56 805 361 753 141  24 252 253 790 136 846
  12 847 104  10 111 154 304 369 843 755 654 842 746 840  64 775  91 816 707  66 812  71 802 312 164 453 182 764 844   1

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 5.02584e+06us (= 5025.84ms, 5.02584s)
Wall-clock time (full program): 5.09067e+06us (= 5090.67ms, 5.09067s)
Satisfaction error: 0
Number of search iterations: 2196
Number of local moves: 1456 (including on plateau: 812)
Number of local minimum: 88 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 15577
Total number of local moves: 8095 (including on plateau: 3975)
Total number of local minimum: 986 (including on plateau: 271)
Total number of resets: 7
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  51  49 444  27 156 853 476 797 527 139   4 812 820 353 340 841 816 718  12 713 301 790  96  38 754 855  23 802  63 845
 792   8 365 278 254 840  31 823  18 169  85 859 771 256 329 338 847 805 751 779 197 860  75 780 824 854  19 462  13  33
 760  55 716 138 810  16 124 741  52  64 525 778 825 224 334 858 793 707 772 844 121 360  95 215 863 836  65  15 726  83
 865 235  20 412 818 719 578 864 396   1   3 795 750   6 293 152 785 801 749   9 232 869  35 789 194 817 246  47 260 775
 517 147 510  82 800  17 137 821 120 110  24 721 791 244 317 857 761 808 654 725 564 631 223 191 709 164  79 630 374 787
 712 280 313 161 696  10 710 769 693 158 163 776 837 195 264 226 774 763 602  11 764 575 219 174  22 794 176 822 190 666
 747 673  67 249  99 596 155 665 255 117 281 643 624 128 420 622 582   5 653 282 735  59 370 786 743 770 723 604 162 700
 242 115 188  94 649 705 714 279 259 703 105 681 686  61 646 346 688 586 639 431  86 534 111 569 737 684 715 595  25 642
 647 225 250 208  37 742  97 731  91 560 107 729 697 589   2 216 509 614 519 830  66  32 593 733 623 615 640 638 617 558
 687 135 150  48 690 711 613 441 266 385 119 563 367 621 552 185 426 606 601 503  76 580 551 608 669 664 498 691  28 481
 657 144  93 270 559 672 175 583 227 536 479 573 570 644  29 141 648 605 437 237 637 487 511 597 574 495 706 478 101 650
 410  74  56 290 539 695 467 506 148 418 345 109 748 449 399  87 409 542 435 571 668 577 501 619 634 561 591 535 588 544
 592 492 131 369 533 661  71  21 611 425 518  14 581 538 358 248 269 508 507 636 327 499 532 627 585 526 641 523 610 562
 568 463 553 457 531 483 566 427 543 421 436 496 129  90 491 572 335 603 397 469 445 635 442 453 439 549 296 375 357 494
 440 555 497 366  70 490 468 565 390 502 448 554 351 387 500 344 450 633 452 652 350 625 587 438 371 391 394 261 472 512
 504 616 484 505 379 537 443 402 471 363 389 548 339 434 333 419 470 477 480 424 520 600 609 461 459   7 328 607 414 493
 514 460 416 567 405 464 852 446 676 388 352 530 184 528 332 312 330 378 298 428 515 381 485 236 386 287 474 406 590 895
 522 529 432 671 415 524 401 433 384 473 359 343 900 546 413 411 458 395 545 400 392 407 373 455 488 295 475 302 466 308
 311 454 722 766 331 183 736 316 788 708 540 262 277 383 626 679 398 247 201 670 354 214 658 342 408 299 336 376 663 267
 486 768 704 732 372 320 856 305 417 288 878 382 447 239 762 829 177 361 404 685 286 314 632 251 364 171 204 207 297 377
 263 783 356 465 834 274 222 456 734 380 809 599 238 745 773 489 325 306 292 309 848  84 253 134 265 758 200 180 819 322
 318 753 765 720 229 210 403 189 874 355 675 304 233 746 348 702 285  46 258 422 782 880 866 168 245 167 323 310 699 240
 126 740 738 739 347 303 556 294 393 683 674 231 319 798 896 698  88 272 283 212 755 341 884 143 289 217 178 362 867  89
 337 275 811 689 850 165 871 170 307 186 807 172 291 876 680 756 146  69 276 273 806  30 827 796 122 213 429 423 759 103
  60 813 628 767 656 892 198 271 826 678 667 228 211 717 701 781 326 160 118 209 151  36 234 130 839 182 897 132 108 899
 142 757 584 694 873 220 728 243 831 804 862  44 102 315 752 205 241 655 127  26 833 193 257 838 192 321 682 173 744  77
 203 893 815 482  45 112 550 116 598 887 730  53 153 196 692 230 136 106 828  58 594 206 898 882  92  62 799 846 368 885
 114 516 849 777 181 149 349 645 557 842 677  72  43 727 218 145 891 268 252 179 430 803 157 868 221  41 881 861 724  78
 888 890 199 620 300 879 125 154 612 889 579 123  98 629 202 166 113 187 814 877 576 832 894 140 324  34 662  68 541 100
  40 618 659 872  57  73 843  42 451 883 875 521 133 851 513 660  39 284 159 651 104  81 547  54  80 886 835 784 870  50

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.30694e+06us (= 3306.94ms, 3.30694s)
Wall-clock time (full program): 3.37022e+06us (= 3370.22ms, 3.37022s)
Satisfaction error: 0
Number of search iterations: 1012
Number of local moves: 779 (including on plateau: 257)
Number of local minimum: 44 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7218
Total number of local moves: 5625 (including on plateau: 1843)
Total number of local minimum: 253 (including on plateau: 139)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 874 300 889 787  80 852 841 411 207 291  10 786 296 146  30 288 213 792 844 130 859 869 378 309 726 126 762   6 357  56
 783 422 867  51  96 663 261 821  75  34 768 829 307  89 866  42  41 763 318 795 857 830 110 205 695 380 681  12  44 810
 836  28 868 749   4 778 191 254 312  23 541 653 134  19 718  15  11 801 797 694 755 860 268 200 697  87 799  31 766 626
 727   3 831 165  70 556  83 773 827 235 738 633 153  69 701 111 175 856 772 820 803 864 206 338 223 109  52  25 758 839
 808  20 770 147 164 317 265 798  66  93 700 637 114 851 643 145 182 696 834 811 739  88  33  26 367 275 837 689 779 621
 730 339 767 733 258 122  74 793   9  58 651 617 666 703 750  37  90 545 823  57 209 548 297 683  59  65 674 613 816 729
 578 151 724 587 155 178 751 807 661  91 715 639  94 654 624 196   7 648 358   5 716 775  43 140  85 246 774 720 752 641
 571 383 719 143 267 693  71 116 771 184 819 709 166 822 673 282 193 347 501 627 753 692 353  29 559  64 612 769  16 611
 723 197 572 425   1 657 332 579 645 264 594 569 530 678 479 363 547 728 743  47 584  18 106 540 218 198 628 356 677 517
 608 349   2 619 342  54  45 680 599 285 652 725  60 632 531 629 685 636 385 527  95 737 172 622 509 119 593 580 477 566
 667  67 553 576 192 404 107 671 712 136 189 454 570 614 664 152 605 482 734  82 493 625 233 533 415 255 555 597 577 601
  84 337 506 510 260 573 486 558 472 620 323 649 582 186 554 154 521 665 589 590 691 401 101 581 443  86 435 532 489 537
 585 375 473 602 557 487 390  63 488 263 543 516 494 631 348 428 610 458 520 437 436 226 138 460 562 370 598 561 476 420
 340  22 588 496 518 463 272 538 524 535 529 461 504 466 523 102 455 418 448 519 481 469 539 366 644 240 646 586 399 424
 452 542 551 515 640 550 503 438 508 414 442 484 374 528 462 468 475 279 397 373  24 429 511 485 387 311 465 565 451 492
 464 376 546 446 459 505 567 398 575 498 600 427 480 499 450 609 522 512 324 478 333 320 303 412 507 395 536 394 274 306
 502 713 341 440 350 372 336 301 447 426 526 483 513 432 405 406 352 497 470 413 534 490 417 386 419 861 441 449 409 384
 495 606 388 500 365 794 812 294 416 313 322 355 421 430 276 453 471 782 360 328 379 514 881 354 280 574 314 270 434 334
 444 706 431 467 377 788 564 403 250 814 408 402 400 331 439 634 346 326 491 407 456 230 623 293 299 741 321 433 361 330
 251 828 241 217 635 125 595 826 371 630 886 389 345 315 308 245 302 359 234 290 423 391 615 325 722 747 283 568 824 225
 319 583 368 212 804 549 707 129 179 898 382 216 848 229 289 679 278 215 174 256 784 271 873 815 780 607 369 310 257 135
 210 796 173 253 800 248 596 148 890 895 266 127 760 304 262 897 849 362 247 410 221 591 854 242 699 552 187 211 238 227
 327 445  98 813 592 236 790 875 343 393 190 188 781 163 149 668 809  38 876 239 351 142 891 846 744 544 335 214 259 176
 171 231 222 842 833 660 777 156 765 855 638 364 705 133 228 896 232 194 396 177 269 157 708 201 286 748 204 802  62 603
 120 684 199 208 714 843 676 185 287 560 329 305 604 764  78 865 688 761 160 344 675 220 682 825 284 711 121 298 202 123
 295 894 118 203 899 181 616 690 877 662 243  97 237 159 131 757 746  76 277 704 117 104 670 858 845 742  55 273 183 806
  21 835  36 888 863 180 702 381 885 759 141  48 756 862 224 740 776  39  14 731 161  35 672 170 618 785  92 721 128 252
  46 754 563 139 686 195 219  99 115 735  53 687 124 108 791 647 656 132 249 474  61 900 525 710  72 879 883 281 850 882
  27 659 103 732 745 392 717 168 158 853 244  49 847 880  32 871 838  40 167 872 144  77 658 669 292 893 150 817 316 105
 457 870   8  50 789 100 169 162  81 698  73  17 650 818 887 736 840  68  13 878 112 642 655 892  79 805 113 832 884 137

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.23234e+06us (= 3232.34ms, 3.23234s)
Wall-clock time (full program): 3.29633e+06us (= 3296.33ms, 3.29633s)
Satisfaction error: 0
Number of search iterations: 936
Number of local moves: 818 (including on plateau: 284)
Number of local minimum: 33 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6815
Total number of local moves: 5840 (including on plateau: 1800)
Total number of local minimum: 183 (including on plateau: 147)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  52 815 181 856  47 367  25 331 826 832  37 184 827 867 611 801 809 293 861  88 296 604  15  24 446 598  87 741 869 125
 103   1 422 841 127  71 251 272 740 858 233  99 831 864 777 849 748 844 615  22  17 846  45  33 798  75 199 842 822 270
 761 800   5 817 135   9 114 280 113  26 178 485 872 848 734 789 675 440 843 850 749 380 853  89 662  41  92  19 805  51
 172 755 267  31 153  14 346  74  67 782 235 322   6 706 305 806 866 751 729 877 816 716 754  61 252 123 664 811 840 214
 112 769 437 813  56  96 144 784 727 854 162 115 767 830 686 406 757 168 752 703 684  70 705 204 273  42  13 744   7 635
 333 783 104 790 746 110  69 695  30 678  98  77 425 388 707 797 626 601 640 560 700 383 143 245 221 721 218 736 780 111
 657 788  21 836 810 180 288  28 745 742  29  38 674 723  80 476 747  20 117  16 602 319 765 687 673 735 100 760 791  68
 105 655 210 698 551  10 134  44 775 689 156 122 667 648 645 670 669  32 639 588 649 720 158 230 222 509 278 711 717 614
 468 628 644 654 612  27 197 774 116 663 286  81 632 581 192 712 719 592 593 547 616 106 750 177 326 276 149 582 603 212
 666 528 633 722 697 166 254 586 731 681 377 299 584 497 375 629 550 577 610 571 155  84 458 292 190 562 191 638   3 209
 620 594 201 546 643 240  76 625 537 609 561 647 682 490 179 541 637 129 540 289 543   4 587 257  66 579 279 557 660 597
 668 487 523 656 566 208 345 217 576 634 517 631   2 514 622  18 650 512 575 574 452 568 369 399  83 494 496 559 503  97
 556 474  12 525 489 128 357 321 567 555 535 570 450 553 513 423 621 169 652 491 467 536 526 312  58 415 506 627 500 607
 554 449 310   8  11 545 578 368  93 590 548 348 532 572 519 486 544 527 591 407 410 531 504 363 549 583 511 381 569 534
 493 502 469 456 478 484 498 448 480 238 455 412 382 558 416 694 436 482 364 405 465 419 317 530 516 520 408 391 488 311
 362 411 393 390 495 539 434 460 424 356 522 334 373 432 642 876 475 355 429 501 314 445 462 481 417 510 374 371 518 420
 453 459 395 316 428 454 404 430 433 507 342 402 444 795 263 392 398 483 324 400 365 414 332 492 824 389 451 565 508 653
 347 352 464 472 341 427 564 396 349 524 309 315 715 413 431 470 360 875 477 329 471 756 344 505 814 262 351 461 336 285
 298 418 793 295 426 646 618 409 438 387 283 641 435 338 403 226 463 847 671 353 394 303 339 691 792 271 378 397 343 219
 264 234 893 386 147 768 457 259 274 302 733 325 237 350 787 443 379 855 290 725 188 265 261 693 821 887 441 300 308 243
 236 372 881 248 385 874 710 804 139 340 661 763 354 231 275 337 250 606 228 306 442 533 206 617 585 323 580 366 150 713
 766 260 803 247 301 759 630 868 244 249 764 696 200 318 358 327 294 820 202 320 335 384 227 473 658 256 552 255 211 738
 823 287 825 142 284 599 479 538 361 281 665 885 187 170 701 269 167 203 266 229 688 882 421 563 529 291 589 193 313 685
 130  63 708 138 185 895 890 892 277 151 880 808 160 148 781 439 157 596 152 141 174 884 605 878 232 268 753  94 297 739
 241 246 699 223 189 865 680 834 282 376 692 239 195 182 213 140  85 330 772 851 165 499 595 466 870 796 818 136  60 776
 839 198 624 207 900 702 873 196 161  46 863 802 183 132 307 220 215 683 171 146  43 253 176 845 730 447 859 799 205 690
 807 857  49 194 871 879 860 126 833 124 225 732 835  23 173  34  57 186 119 896 659 159 163 758 359 778 852  64 164 679
 762 133 573  48 786 898 770 107 888  35 619 728 258 216 224 121  82 304 101 328 714 677 838 704  62 724 828 242 137 608
 794 102  79 131 883 718 819 623 676 370 771 743 515  78  54  65  40 145 120 894  53 600 812 709  86 154 636  55 899 891
  73  95 897 829 773 837 651 726 613  36 779 672  91  50 542  59  39  90  72 108 889 175 785 737 401 886 862 118 109 521

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.21954e+06us (= 3219.54ms, 3.21954s)
Wall-clock time (full program): 3.2832e+06us (= 3283.2ms, 3.2832s)
Satisfaction error: 0
Number of search iterations: 1028
Number of local moves: 832 (including on plateau: 276)
Number of local minimum: 38 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6319
Total number of local moves: 5154 (including on plateau: 1635)
Total number of local minimum: 241 (including on plateau: 122)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 883 844 404 159 826 845 873 893  66 110 788 856  16 210  42 156 164  27 269 166  47  34 679 604 897  41 609 793 320 894
  99 575 714 109 555 772 834 849 626 899  61 884 155  32  14 825  38 137  83 392 154 405 697 895 838  57 713 108 682 313
 885 775 872 817 816 462 832 886  55  43 580 581   8 172 131 820  48 147  30  81  33 501 238 434 780 689 888 751 121  39
 615 744 565 898 857 753 522  93 268 363 831 312 283  54  46 125 112 887  94  79  76 134 553 858 859  95 749 867 794  29
 168 863 730  72 418 782 732  96 823  51  77 784 106  11 257 846 398 129  75 890  67 209 716 837 746 755 499 774 410 194
  90 671 185 123 812 757 191 139 648 198 235 135 114  64 288 274 528 354 255 422 120 450 866 792 720 880 680 878 819 827
 321 686 715 236 583  74 874 879 122 221 881 138 240 115 282 842 521 347 301  87 295 273 681 705 417 891 864 144 567 213
 330 821 246  71 637 702 202 763 806 237 232 167 200 160 326 234 676 105 848 311 360 220 862 630 706 157 889 665 722 230
 208 659 332 142 851 607 165 216 900 214 325 239 289 192 309 635 789 264 183 419 396 882 445 865 651 228 802 319 717 272
 281 688 691 253 723 146 743 244 505 437 179 367 170 229 267 217 779 578 249 562 328 650 231 339 770 769 599 310 799 412
 219 783 206 148 589 379 254 241 726 304 223 211 290 252 227 692 350 261 375 747 877 468 368 777 576 843 675 224 829 401
 186 710 345 427 663 293 587 306 409 322 316 362 415 247 317 491 479 338 276 364 353 488 579 600 577 892 875 260 605 433
 279 593 324 256 400 286 341 365 690 861 371 337 411 876 652 551 373 408 136 406 389 361 394 529 634 291 385 271 853 492
 586 573 397 512 357 464 558 333 485 840 386 376 421 440 335 805 178 390 305 447 509 296 284 480 559 429 556 455 329 430
 307 471 315 543 698 374 508 444 642 510 495 452 349 518 395 549 387 302 424 538 474 356 482 598 391 431 377 420 399 366
 340 327 472 242 453 548 546 563 497 383 460 466 456 550 372 438 515 443 570 542 454 465 303 416 477 524 248 533 568 344
 378 352 582 534 265 494 516 523 459 222 489 442 457 258 620 541 511 388 532 507 413 469 298 441 300 277 355 613 727 552
 487 342 463 346 175 493 647 540  15 768 432 594 285 475 645 628 151 384 643  24 674 592 649 428 308 547 287 687 370 436
 446 403 560 473 226 449 654 426 414 737 490 530 636 685 623 601  31 504 358 618 603  85 619   5 212 595 278 597 130 527
 145 180 536 514 297 470 127 591 181 724 611 496 814 669 616 484 176 612 498 503 554 694 153 323 478 513 381 517 101 557
 684 118  17 590  98 574 205 393 539  44 695 624 704 519 535 207 778 566 699 795  37 629 233 461 188 646 193 407 608 729
 520 280 696 759  25 486 483 662  73 564 502 734 721 584 668 204 348 711 571 896 448  35 141 102 158 631  97 526 294 596
 525 184 569 738 169 199 263 544 195 633 709  49 739 632 656 572 359 500 639 712 708 640 382 203 250 653 196 531  91 275
 617 111  18 766  19 718  21 588 660 693 667   4 719 707 537 638 423 742 610 162 815 606 152   9  88 467 174 683 435 666
 761 104 561 625 143  70 644 259 190 764 506 758 808 810 545 161 314 790 627 733 731 800 119 215 380   3  56  58 150 830
 745  26 126 703  53 334  69 655 807 641   2 828 670 677 672 736 854 678 728  82 425 458 661 292  80   1 262  59 369 822
 756  10 602  62 116  92 197 107 266 773 752 833 621 868 781  22 786 839 787 760 796 740 614  12  89 336 351 402 132  13
 855  60 585 748 439  28 700   6  50 735 801  36 750 847 673  40 762 797 765 173 804 767 182 299 128 318  63 343 103 658
 754 476  65 836 481 163 149 100 741  84 201 117 798 791 860  68 869 835 776 852 725  23 270 177 251 331 243 187 451 841
  45  86 622 813 771 701  78 811 657 140 218 803 870 871 824 113 818  52 809 245 850 785 664 189   7 225 171 133  20 124

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.68297e+06us (= 4682.97ms, 4.68297s)
Wall-clock time (full program): 4.74712e+06us (= 4747.12ms, 4.74712s)
Satisfaction error: 0
Number of search iterations: 1892
Number of local moves: 890 (including on plateau: 275)
Number of local minimum: 118 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 14607
Total number of local moves: 8158 (including on plateau: 3561)
Total number of local minimum: 890 (including on plateau: 274)
Total number of resets: 4
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 739 833 817 553 140 802 176 717 260 234  34  43  95 738 592 198 862  26 682  67 421 152 887 275 872 811  75 100 563 751
  83 770 752 782  53 889 854 853 423  33 890 118  51 614 213 151 899 101 766 898 184  21 681  94 314 133  81 257 816 741
 824 186 776 131  97 857 791 814 588  78  39 124 789 437 622 113 244 177 316 696 737  73 698 227 881 168  35 852 468 677
 182 826  59 888 836 162 876 800 165 199 875  50  91 757 644 175 674 126 745 217 114 258 638 783 851  45 408  56 172 843
 194 615 819 522 713 758 780  99 618 279  46 103 886 801 370 158 773 128 286 447 146 689 778 250 845 728  76 148  66 394
 837 765 139 827  41 894 803 209 663 841 235 111  87 774 287 210 761 170 863 205 536 202 815  79 735  57 200 274 169 726
 847 647 159 885 156 211 704 288 825 167 183 119 104 763 328 102 636 181 856 846 831 221 744 292 818 188 795 166 228 225
 269 504 226 693 129 203 164 687 424 293 324 402 332 828 702  92 600  89 147 307 197 873 850 130 865 808 804  86 864 623
 252 760 179 105 327 870 303 746 897 208 395  60 121 345 893 268 508 248 246 794 643 322 296 195 718 866 639 291 708 312
 277 474 323 715 245 265 262 171 720 896 163 144 206 892 249 420 877 173 869 204 117 270 247 412 598 838 684 222 858 724
 308 900 476 189 263 232 533 396 616  38 861 895 155 354 253 273 405 368 777 382 754 358 380 132 692 891 403 321 593 317
 357 621 879 492 820 430 475 365 400 320 301 201 491 410 350 425 297 490 289 418 480 302 207 445 660 259 729 404 883 315
 355 648 658 333 461 305 460 369 393 409 434 325 251 364 363 444 379 584 371 488 443 538 619 457 439 381 367 526 711 640
 351 855 284 558 127 505 587 304 391 530 419 376 310 560 539 433 267 349 417 383 229 462 429 602 442 497 387 840 573 509
 528 723 231 503 344 353 512 464 385 386 290 331 390 346 311 874 377 456 525 459 486 428 632 399 485 542 415 414 426 500
 384 306 506 471 516 479 283 578 378 545 521 441 449 667 362 520 501 611 389 309 375 372 406 330 562 422 483 341 576 432
 546 193 337 571 577 450 435 218 192 544 566 669 569 398 629 373 266 524 499 624 498 473 489 401 236 604 122 551 448 513
 478 154 733 556 581 397 552 336 595 352 339 407 458 452 601 550 436 518 537 343 374 342 659 187 388 438 515 472 300 465
 334 360 411 240 454 567 549 502 276 523 469 446 532 650  65 484 493 466 115 495 219 637 631 541 294 591 392 748 467 564
 691 453 482  64 570 540 678 565  25 750 557 510 531 110  93 583 554 517 559  16 470 641 241 597 281 690 527 649 494  77
 589 143 633 603 568 547 634 543 174 348 607 685 676 135  90 596 635 440  47 574 106 535 477 785 196 329 340 481 326 673
 612 239 703 606 710 652 427 654  18 630 582 805 608  71 529 675 185 834 261 605  32  11  55 511 141 665 620 642 413  19
 810 224  58  72 625  70 700 534 749 572 768 487 599  10 116 514  22 786  15 775 548 664 716 670 145 653 153 695  82 683
 507 137 680 416 661 359 212 561 295 626 662 807 705 178 731 722 138 755  42 759 463 736  49   4   6 627 655 743  37 242
  36 256 694 230  85 727  24 125 233 455  13 767 714 157 671  84 585 609 730 788 740 756  29 809 318 282 709 721 496 672
 613 220 651  44 356 108  88 590 214 586 668 793 813 338 237 822 254 580 697  61 762 764   3 688  98  23 594 742 451 657
 779 280 107 646 610 706  17 679 725 347 799 867 753   5 747 798 319 734 255   9 839 617 109 686 136  62  27 666 190   1
 645 180  52 656 835  12 271 264 272 787 784 849 842 299 790 732 191 821 829 335  20 298   8 806  28 366 769 150 555  69
  74 120  63  68 823 134 285  54 771 707 579 712  48 701 860 878 161 882 243 215 871 719 223 884 431 313 812 160 575 149
  14 123 628  96 792  31  80  30 830 832 112 868 859 361 278 848 216 772 142 796 880 781 519 844  40 238 699 797   7   2

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.12406e+06us (= 3124.06ms, 3.12406s)
Wall-clock time (full program): 3.19678e+06us (= 3196.78ms, 3.19678s)
Satisfaction error: 0
Number of search iterations: 960
Number of local moves: 710 (including on plateau: 231)
Number of local minimum: 36 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 5808
Total number of local moves: 4822 (including on plateau: 1924)
Total number of local minimum: 175 (including on plateau: 131)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 854 627 156 872 650 780 674 835 771 883  78 235 250  34 799 144  60  36 134 252 105  97 819 107 768 728 607  44 217 899
  40 871 707 113 646 223 847 172 669 596 288 787 672 108 891  41 115  64  88 746  59 808 742 219 820 628 515 173 830  37
  52 104 897 677 162 152 411 213 855 828  68 701 670 697 834  92  84 112 106 603 207 449 875 222 882 873 665 895  80  49
  81 160 879 865 777 247 793 100 863 876 248 682 673 188 159  86 264 277 135 132 659 137 769 823 852 605 880  77 170  58
  76 858 109 176 316 365 801 708 839 524 181 715 660 822 885 185 655 446  65 184 120  13 690 180 729 693 179 169 280 892
 101 520 121 637 171 846 718 727 561 841  69 860 827 790 228 142 881 136 158 373 203 151 189 110 376 894 653 898 138 196
 226 806 782 153 840 593 887 249 591 360 215 845 275 850  62 195 194 298 560 186 221 366 297 890 831 853 237 133 258 262
 175 815 182 125 147 582 773 888 767 807 391 658 609 610 284 205 174 122 131 861 281 163 575 224 612 842 803 278 270 161
 116 364 150 214 385 571 706 775 490 389 324 848 884 654 393 283 197 218 453 415 261 829 804 294 661 227 900 323 114 273
 296 410 241 795 421 843 469 239 889 759 333 781 336 532 302 212 210 339 662 202 868 140 498 319 745 349 208 417 274 426
 585 353 345 166 276 758 688 309 675 303 632 705 800 857 337 236 368 259 350 886 301 272 367 329 732 346 348 377 290 265
 383 233 388 500 427 874 747 460 472 700 334 473 328 635 375 285 397 614 354 648 362 351 529 192 636 340 423 308 409 338
 260 413 289 429 279 893 616 327 584 378 307 291 896 523 359 451 434 482 817 450 418 416 394 489 526 480 306 363 379 266
 299 321 458 439 538 401 445 465 369 499 384 304 539 772 878 320 541 392 263 536 390 517 343 408 562 315 484 454 557 322
 519 534 447 525 356 530 502 466 501 479 399 444 452 527 436 508 419 352 477 432 503 396 204 286 347 433 573 440 474 554
 506 312 361 512 516 292 412 481 387 491 457 461 231 513 578 583 487 509 493  55 552 435 569 313 598 497 430 488 355 641
 565 595 386 522 395 230 325 606 403 478 358 485 564 462 518 639 443 643 183 428 380 344 407 588 341 442 680 537 549  19
 441 372 371 547 463  38 455 704 335 528 431 326 269 566 494 464 686 191 448 629 507 332 456 558 331 374 511 602 590 496
 544 422 483 402 563  90 404 631 129 468 542 559 505 271   8 400 623 531  42 486 510 678 594 617 330 667 420 556 548 492
 553 695 586 555 624 381 254 533 342 589 130 638 438 287 475 611 414 521 743  15 476 580 177 622  21 550 504 620 570  11
 691 664 689  66 604 209 311 470 437 234 798  47  61 242 546 687 608 398 317 721  24 657 545 543 256 600 123 666 568 733
 370   9 626 577 685 295  43 229 314 535 696  35 268  83 681 645 737 579 644 103 676  93 581 567  99 576 796 719 540 714
 713 668 766  53 671 406 149  45 117  89 738 155 206 243 599 640 656 615 818  82 592 756  14 551 257  79 741 716 597 783
 722 652 710 724 757 165  32 649 282  72 694 124  48 164 866 625  57 763 712 813 702 663 633  25 225   1 154  26 679 776
 788 619 731 613   2  10  85 187 198  17 405  39  71  28 774 844 765 739 684 692 752 797 683 786  94  16  73 647 642 734
 833 699 717 621  12  20 310 244 300 200 762 232  50 251  33 778 725 760 357  63 802 761 193 750 293 240 143 735 805 826
 824  87 119  18   5 471 305 753 118 201 709 267 157 618  54 726 711 723 789 574 867 792  98 836  46 190  27 811 825 794
 812  95  23 754 634 601  31 220  75 216 816 148 318 102 630 770 139 749 814 832 730 736 238 424  22 168 810  96 764 748
 837  70 651  74 495 785 255  51 178 146 851 245 755 572  30 869 720 809 862 246 128 587 141 459  56 127 211 821 740 744
 253 167 145 791 698 864  67 779   4  29 877 425 703 514   7 849 751 838 856 870 859 199  91 784 467 382 111 126   3   6

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.53386e+06us (= 3533.86ms, 3.53386s)
Wall-clock time (full program): 3.59751e+06us (= 3597.51ms, 3.59751s)
Satisfaction error: 0
Number of search iterations: 1159
Number of local moves: 946 (including on plateau: 366)
Number of local minimum: 47 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7707
Total number of local moves: 6068 (including on plateau: 2559)
Total number of local minimum: 251 (including on plateau: 184)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

   6 146 129 153 772 880   4  85  91 852 795  12 116 887 203 628 728 872 846 857 811 814 427 882  88  19 486 787  37 102
 844 412 179 335  76 776 643   9  20 851  26  42 222  57 690 777  22 824 881 898 534 892 127 807 786  51 201 555 303 675
 665  68 425 778 606 883   7 105  89 874 821  47  44 823 764 758  66   5 876 722 825 847 371 727 755  40 235  14 112 163
 762  83  70  31 794 781 806  23  96 780  16 864 140 710  24 399 156 782 768 863 767 770 328 673 704 124  99 541 174 387
 695 267  80 236  25 723   1   8 141 834 800 297 306 840 749 848 720 726 871 714  77 517   2 162 532 567 212 708  38 819
 719  94  27 472  17 687 232 756 245 694 725 150 663 698 775 647 680 653 685 765 699 691  35 668  13  97  49 729  69  81
 804 200 243 242 537 656  11 457 240 630 801 664 130 577 539 676 620  48 646 529 697 783 553 159 669  90 215 788 180 131
 667  82  53  98 558 736 677 196  74 733 747 661 177 696 638 253 325 254 678 700 617 734   3 586 258 299 512 597 307 599
 183  45 316 119 724 590 230 683 256 545 752 383 330 568 282 798 171 574 636 688 674  30 524 870 549 170 252 596 311 666
 598 178 191 793 684 587 190 585 100  33 278 658 301 518 655 216 682 681 745 521 104 595 641 689 108 320 578 318 211 757
 671  61 186 500 589 789 648 550 331 498 164 361 583 579 626 566 488 637  10 576 591 239 551 143  60  86 652 594 351 835
 559 381 181  55 716 515 228 485 262 634 319 603 333 356 619  39 250 584 406 612 670 600 562 738 323 480 644 607 227 527
 277 125 365 556 751 394 635 588 359 624 650 298 565 571 560 651 310 477 255 324 627 369 302 342 519 209 573  15 713 511
 401 542 360 396 557 437 609  32 158 409 569 520 405  75 466 372 580 572 631 487 332 533 513 499 543 592 364 575 479 507
 672 546 453 404 525 416 640 390 449 172 505 514 389 423 508 439 490 621 501 448 526 522 388 354 410 616 408  36 392 358
 428 581 432 445 446 476 407 338 447 386 464 313 773 808 538 462 393 329 554 451 402 290 244 433 352 471 469 438 493 452
 417 516 602 510 506 548 378 494 492 300 474 270 275 459 415 563 489 337 289 413 544 418 530 552 336 491 444 535 478 440
 468 582 454 395 357 547 257 363 483 271 470 157 748 207 251 803 286 496 426 442 403 481 894 528 790 366 272 288 610 420
 495 482 632 797 397 348 384 296 702 229 197 703 623 523 293 210 238 382 467 349 391 456 731 285 375 660 398 419 618 435
 263 711 649 414 345 422 362 347 705 193 706 436 460 531 441 502 385 326 376 461 341 266 853 334 247 843 370 421 639 166
 377 605 625 741 431 217 497 353 836 897 260 160 504 280 274 346 237 309 350 308 890 339 208 291 429 411 750 430 355 805
 283 774 657 717 888 184 608 226 613 312 185 450 633 151 802 259 344 187 327 304 246 463 195 424 287 659 841 473 759 264
  92 761 709 878 194 106 858 813 742 147 281 434 276 269 379 796 879 374 224 317 176 284 686 198 142 561 570 134 503 732
 373 737 715 273 455 192 465 869 829 223 225 818 219 103 314 233 169 721 221 241 138 261 739 895 891 712 279 234 766 205
 321 817 832 614 220 168 831 809 837 231 202 113 343 305 400 484 816 540 265 133 114 161 249 292 896 810 604  58 735 315
 769 893 812 611 828 167 294 645 845 458 173 117 693 204 268 199 368 154 144 136 367 121 839 322 206 475 601 886 792 128
  95 885 692 826 132 118 855 860 820 295 122 868 859 145  46 109 877  73 135  34 110  72 248 214 622 833 899 155 763 753
  54 754 900 213 175  28 822 707 784 165 120 873 866 148 149 340 218 854 139  71 564 188 189 380 111 875 654 815 629 730
  21 443 884 861  87  65 799 850 827 182 830 862 779 115 785  41 849  64  56  67 126  78 718  50 743 842  93 740 615  43
 536 744 662  52 123  79 137 593 642  63 838 867 760 889  62 101 679  59 107  84 152 701 865  18 771 746 791  29 856 509

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.20301e+06us (= 4203.01ms, 4.20301s)
Wall-clock time (full program): 4.26929e+06us (= 4269.29ms, 4.26929s)
Satisfaction error: 0
Number of search iterations: 1543
Number of local moves: 1138 (including on plateau: 553)
Number of local minimum: 66 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12031
Total number of local moves: 7672 (including on plateau: 3682)
Total number of local minimum: 567 (including on plateau: 282)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 415 594 604  60 763 113 323 882 380 146  91 890 883 333  80 636 595 767 694  75 662 137  28 781  84 893 844  78 142 542
 447 877 627 154 446 750 508 740  56  62 119 682 226 644 178 888 261 158 857 172 710 122 294  99 820 868 823 199 403 325
 574  65 598 160 831 104 254 207 216 162  83 289 749 544 111 639 186 848 860 730 679 828  88 106 687 800 840 861 282 134
 885  50 809 472 102 283 597 439 149 664 131 858 788 317 185 215 773 173 808 112 702 625  25  85 821 691 817  68 764 107
 666 330 891 240 402  58 247 896  66 139 220 699 609 686 124 218 756 681 181 722 657 873 356 165 793 469 841 127 224 179
 708  49 230 782  97 529 350 135  42 203 660 204 250 889 128 897 608 182 863 837 274 348 822 352 409 599 768 169 351 780
 713  53 345 205 141 414 875 465 136 239 244 752 285 884 120 194 537 155 720 698 270 121 786 602 635 838 824 856 231 177
 830 266 251 295 195 210 196 515 307 138 163 895 260 751 180 795 675 167 792 297 777  90 898 616 737 783 754 361 171 150
 614  74 701 187 367 241 339 168 899 389 143 304 280 559 316 358 771 876 214 892 364 816 724 140 867 680 629 265 245  93
 759 281 382 429 311 293 482 332 343 586 346 233 253 633 386 340 766 366 326 825 337 370 649 288 258 852 815 535 347 392
 656 246 442 235 603 329 277 381 157 341 653 818 461 880 303 264 796 507 376 696 365 237 869 334 532 485 431 399 130 312
 894 267 362 322 733 353 191 420 407 242 454 579 206 426 504 445 369 385 331 683 549 424 438 826 427 584 455 401 466 372
 558 223 440 321 393 430 383 170 308 301 344 296 812 678 478 373 798 554 476 865 359 213 690 411 705 613 467 291 306 259
 484 548 453 377 486 238 443 313 335 417 480 470 555 692 338 477 349 374 560 434 543 462 654 387 422 471 516 418 305 514
 400 419 517 493 271 336 363 450 404 327 458 357 394 384 379 510 525 571 611 437 479 396 605 391 668 464 487 355 499 565
 488 539 413 511 501 298 292 500 320 395 388 519 406 423 405 375 491 398 576 410 522 490 489 547 695 463 473 432 520 236
 581 421 573 630 428 531 319 585 524 528 449 227 545 512 563 378 129 540 436 503 105 570   4 626 483 459 587 354 513 412
 557 433 556 174 534 371 360 553 147 509 550 546 457 648 562 707 567  41 460 624 342 475 498 444 451 286   7 502 659 495
 256 674 619 538  26 572 269 551 589 492 272 505   6 145 506 669 523 527 615 601 596 568 494 217 518 273 222 275 806 591
 123 575 643 618 748 249 670 714 742 676  73 101 474 569 617   1 566 700 650 561 578 268 468 621  29  19 221 408 813  20
 110 628  48 642 769 606 673 634 658   8 530 712 541 184 622 623  47 647 665 397 189 697  21 564 299 287 255 612  36 811
 252 693 794  14 719 761  38  11 716 310 526 760 592 425 620   2 590 533  32 709 580 645 448 593 456 279 202 234  95 886
  45 684 607 728 452 789 552 116 496 711 521 152 721  96 481 732  82 638 144  23  63 743 201 839  12 192 497 791 744 663
 193 646 723 706 600 703  67 689 717 736 610 190 441 156 746 661 368 632 115  51 183 651 290  86 200 232  13 667 772 671
 132  44 126 735 318 583 588 853 747 631 847 103 738  87 637 655 262  77  98 302  30 731 243 804 725 197 166 755 536 765
 109 718 176 819  64  16 640 829 785 726 784  54 677 219 727 652 118  81  57 315 832  17 229 775 188 435 228 641 807 797
 300 672  71  40 577 803 741   3 790 887 770 125 802 211 801 757 100 810 159 209  89 582 762  35  34  61  70 835 734 685
 328 729 208 866 787 836 779  94 416 851 879 248  37 212 704  18 314 805  72 164 739  15 774 827 257  55  33  22 688 758
 114 843 108 862   9 870 850 753 864 854 872 814  24 175 881  31 284 263 715  10 871 225 278  76  27 148  79 745  92 778
 324 874 198 900 842 846 849 117 799 845 855 133  43 153 833   5 309  59  52 161  69 776 390 878 276  39 151 859 834  46

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.20992e+06us (= 3209.92ms, 3.20992s)
Wall-clock time (full program): 3.27327e+06us (= 3273.27ms, 3.27327s)
Satisfaction error: 0
Number of search iterations: 899
Number of local moves: 651 (including on plateau: 150)
Number of local minimum: 35 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7011
Total number of local moves: 5270 (including on plateau: 1623)
Total number of local minimum: 248 (including on plateau: 147)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 114 798 864 734 195  93 861 778 869 762 761  78 755  69 117 791  68 900 414 169  44 740  34 124 296 823 166 259 758  81
 676 895 803 346 210 106 827 464 155  95 805 428 870  47  40 735 162 881 682 255  50 115  51  72 240 741 882 118 878 886
 893 178 804 832  53  75 731 771 742 154 603 111 654 216  39 753  48 884 810 885  52 258 196 103  56 719 291  85 839 680
 557  74 503 874 772  70 695 547  73 267 638 101 205  55  88 868 254 891 724 213 692 645 173 107 128 777 657 214 765 888
 739 279  64 743 872 120 586 507 811 859 875 319 146 219  87 590 189 687 243 145  92 263 626 751  96 822 130 185 656 814
 566 135  58 260 192 899 887 686 164 246 818 229 773 108 211 331 123 738 898 535  49 754 116 105 892 571 752 314 879 226
 419 871 119 249 142 310 406 866 274 521 775 151 786 245 215 223 109 727 857 883  98 489 247 167  97 896 708 186 700 779
 225 199 500 764 131 148 829 897 212 161 628 202 890 230 257 336 403 633 187 237 683 641 873 337 132 863 168 293 655 801
 862 261 608 573 301 288 600 636 809 277 819 174 384 160  86 306 256 529 709 183 315 816 441 275 358 706 298 354 348 783
 197 272 318 386 536 295 746 722 670 834 732 448 285 191 635 224 317 583 784 397 845 262 334 265 486 578 287 476 203 207
 328 244 410 794 182 356 715 714 480 232 613 218 372 228 512 266 170 629 856 848 276 307 867 525 251 549 149 344 440 640
 270 312 206 865 374 701 643 799 271 282 252 877 300 330 325 733 305 595 508 184 439 780 320 368 380 537 338 565 209 447
 497 513 326 694 409 297 606 423 294 434 220 353 433 519 370 442 553 493 365 362 388 408 776 381 520 876 349 241 432 541
 286 341 360 404 321 445 759 458 357 417 402 416 343 426 377 647 369 233 200 359 572 221 472 889 894 491 367 455 446 788
 528 584 355 364 460 488 322 836 333 482 546 523 299 345 453 309 522 459 544 496 479 530 430 463 407 394 350 483 462 269
 418 473 511 281 620 509 347 506 303 598 552 533 437 465 400 366 556 481 499 438 456 340 396 398 327 420 504 436 510 435
 415 371  82 290 667 401 324 487 466 505 485 390 405 560 451 631 387 375 484 425 632 422 548 429 681 126 582 502 449 543
 492 339 431 335 526 555 393 539 461 666 457 563 471 469 332 452 515   1 581 579 532 171 545 424 516  65 591 634 413 467
 698 605 412 373 570 569 104  25 689 514 136  27 619 618 379 577 391 450  76 594 621 658 363 470 562 351 454 495 575 540
  43 588 227 140 659 639 389 264 392 444 561 385 624 443 478 601 625 250 302 129 614 172 559 576 527 284 623 611 616 750
 421 702 399 711 781 517 180  46 574   7 179 604 671 550 705 673 597 253  61 760  21 718 316 837 610  41 609 602 177 193
 475 688   2   9 630 542 273 152 376 100  26 770  66 728 800 697 649 242 646 538 554 395 696 662 612 234 551 599 653 150
 143 617 787  60 589 564 311  12 685 663  37 660 651 729 675 524 785  91 637 627 568  94  99 668 587  36 693 494 121 308
  33 669 664 113 825 826  17  24 736 661 147 704  45 790 679 766 501 352  31 678 593  71 677  20 596 329 652 795 498  23
 684 592 710 125  10 378 292  54 534 283 268 382 531 802 730 122 820 585 278 580 567 789 477 880  35  62 648 622 157 518
 650 672 830 190  11 748  77 280 235 642 236 707 110 716 797 159 769  13  15 139 757 723 411 749 768 474 713 691 144  89
 717 289 674 383 792 703 361 163   5 607 239 644 712 806 841  57 725  14 102 158 726 490 817 699 747  29  83 838   4  90
 323 815 855 813  22 849   8  42 721 850 217 844 188 737 847 165 756 204 181 812 222 248  30 198 852 558  19 763 238 138
  38   6 615 468 835 793  32 690 796 208 175 831  63 854 782  59 767 141 665  67 745 153 851 720 846  84  80 858 156 137
 808 133  18 342 828 231 194 127  28 744 313 843 427 860 807 112 824 201 176 840 833 842 774 853  16  79 821   3 134 304

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.17268e+06us (= 4172.68ms, 4.17268s)
Wall-clock time (full program): 4.23587e+06us (= 4235.87ms, 4.23587s)
Satisfaction error: 0
Number of search iterations: 1648
Number of local moves: 1116 (including on plateau: 630)
Number of local minimum: 61 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 11870
Total number of local moves: 7917 (including on plateau: 4071)
Total number of local minimum: 587 (including on plateau: 300)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

  62 385  61 899 647  60 120 866 895 132 855 613 226 144 837 204 673  42 725  79  77 662  88 817 153 660 888 884 217 544
  93 900  84 206 883  75 124 878 845 125 852 640 634  98 704 709 806 618  90 140 128  73  76 804 109 192 891 395 828 515
 580 561 870 193 835 178 134 784 263 202 848 733 718 148 834 637 887 260 813  65 151  56 141 882 240  72 129 308 244 749
  68 894 225 885 792  94 223 764 236 252 869 513 769 118 788 829 823 197  85 286 690 168  51 897 179 839 228  81 127 545
 138 362 173 578 889 760 107 771 638 169 858 719 251 184 864 708 873 122 130 207 214 143  89 601 209 892 221 740 158 747
 100 720 191 890 767 812 104 875 644 594 830 341 587 281 826 592 893 186 254  49  64  87 152 155 424 602 285 396 185 629
 366 836 297 727 652 113  53 731 782 230 741 607 272 222 146 833 807 482 189 110 314 316 205 755 195 166 194 499 880 795
 738 519 190 707 641 177 156 881 669 174 636 639 825 229 171 511 266 450 300  86 287 247 886 761 276 656 131 329 224 753
 783 732 283 436 430 294 233 622 355 212 232 811 575 172 136 773 701 364 305 677 150 872 250 350 237 779 306 454 219 772
 259 726 344 249 338 261 874 603 573 655 239 849 822 280 357 231 441 337 275 352 700 312 243 386 309 729 246 302 327 896
 255 777 339 360 242 387 448 491 814 447 265 745 809 392 176 756 465 501 164 816 318 467 180 270 133 832 241 256 290 879
 345 382 342 218 434 505 479 785 739 368 301 553 631 167 402 429 332 697 898 431 277 335 313 354 274 722 375 698 199 530
 556 401 379 507 440 220 351 579 369 380 268 744 590 452 325 469 461 824 423 388 296 187 383 412 438 818 378 524 343 610
 716 595 340 428 415 472 321 608 361 478 459 323 668 751 433 476 381 374 406 389 411 443 311 390 495 372 435 422 444 398
 439 526 475 413 451 391 557 532 560 404 347 588 480 471 567 468 517 514 298 403 426 437 523 367 464 427 504 328 292 346
 552 326 358 295 449 550 393 359 518 319 363 399 609 630 503 574 457 533 407 497 394 486 490 419 604 458   7 460 509 597
 691 710 446 397 370 376 445 293 278 408 568 500 606  19 418 487 348 235 463 624 666 522 620 442 493 416 531  95 527 521
 570 541 564 489 632 356 462 105  26 520 628 405 108 600 543 605 584  46 474 583 485 565 421 494  52 488 484 737 657 291
 581 455 670 502 506 414 453 215 333 492 516  10 534 619 649 466 432 304 116 547 614 576 684 334 572   3 625 496 549 248
 508 157 546 559 645 713 555 303 271 612  34  29   8 409 569 160 539 473 648 685 349 599 650 563 689 317 611 593 538 183
  27 627 566 558 537 659 554 181 470  36 510 115 284 651 728 135 681 258 483 536   1 723 591 635 542 529 868 582 322 126
 307 111 512 598  91 589 562 353 198 535 617  41 586 324 616 642 147 715 667 621 548  44 717 551 711 371 528 417 694 102
 410 269 798 149 626 525 696  43 724 288 654 175 119 802 680 200 213  82 768 646 695 743 703 661  35  17 765 154 778  97
 336   4 585 577  69 615 774  57  74 675  37 315 162 721 702 123  22 498 803 693 643 571 766  67 810 299 840 664 682 331
 238 373 762 679  45   6 734  55 633 770 481 137 159 699 282 320  39 736 827 663 789 671 540  25 801 365 623 596  83 384
 665  30 748 101 245 714 653 267  99 775 103 227 752 658  28 196  21 456 735 112 688 846 793 686 857 188 672 253 808 139
 674  13 676  31 257 821 843  92  70 776 121 145  71 861  11  78  66 800 862 871 790 712 877  59 850 203 687 310 706 182
 856 377 819 142  24 859 842  48 758 838 165 425 210 787  63  96 262 805  20 477 757  58 867  16 815 264 781  15 780 289
 742   5   9 692   2 678 865 163  47 853 106 420 234 876 117  14 170 820 854 683 847 763 851  32 705 759  18 797 114 279
 860 201 863  50 161 841 400 211 273 796  12 754 216 750  40 794 208 786  33 799 746 831  54 330 844  80  23 730 791  38

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.0994e+06us (= 3099.4ms, 3.0994s)
Wall-clock time (full program): 3.16791e+06us (= 3167.91ms, 3.16791s)
Satisfaction error: 0
Number of search iterations: 846
Number of local moves: 546 (including on plateau: 105)
Number of local minimum: 35 (including on plateau: 6)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 6107
Total number of local moves: 4982 (including on plateau: 1644)
Total number of local minimum: 206 (including on plateau: 121)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 410   4 209  43 638 235 733  36 173 819 862 858 857 202   6 845 863 756 759 775  14  68 155 829 647 821  47 180 631  40
  15 112 204  23 245 704 697 753 751 771 762 860 824  22 136 568 888 783  94 237  64  27 617 792 796 843  20 144   2 761
  98 236 512  11 243   9 741  17 797 832 868 850 703  93   5 841 672 791 714 249   1 118 157 730 765 865  29  59 709 800
 707 736 115 459 397 694 255  58  18 856 660  19 807 106 804 303 650 728 815 671 214  66 218 254 789 854  10 194 186 872
 786 611 101  51   3 766 215  39 268 844 779 816 835 140 778 522 793 764 742 381 116 139  71 750 683  81 146 119 339 837
 663  65 154 212 654 416  53 576 103 291 777 644 757 295 760 361 620 798 746 675 213 729  35 692 374 655 232 151  88 726
 113 487 574 114 722 634  13 839 330 738 599 578 772  25 684 493  75 664 755  34 162 666 203 475 642 725 163 175 393 668
 643 367 580 195  89 584 417   8  32 752 754 624 677 401 612 148 688 673 685  38 285 550  16 502 680 723 420 597 105 670
 687 289  90  60 716 533 686 719 121 519 712 223 636 499  12 233 745 627 690 609  92 438 691 187 514 645 304 528  45 665
 551 681 478 256 138 143 676 695  50 331 630 702 705 269 649  42 340 646 640 693 413 626 711  57 652 579 159 198 403 402
 541 309 264   7 699 518 548 486 305 460 477 566 563 496 509  70 529 594 651 221 407 395 592 708 530 662 176 469 153 610
 472 334 510 363 600 377 678 526  21 500 537 134 590 457 507 158 572 515 577 564 389 556 553 343 463 480 191 573 451 524
 488 447  44 348 769 619 545 628 443 585 505 485 338 380 601 629 539 326 538 461 508 657  26 589  95 474 423 287 323 415
 464 544 442 325 504 482 439 621 466 614 565 552 513  24 425 567 456 346 506 445 517 411 701 490  80 569 329 390 436 292
 430 521 525 400 350 511 431 547 427 432 516 428 365 473 418 484 328 639 281 532 471 379 560 465 392 419 454 582 318 437
 452 453 491 588 406 394 398 273 444 535 455 479 554 332 534 462 360 489 321 467 387 495 575 344 421 476 598 383 501 448
 422 587 319 549 540 370 405 284 498 546 497 369 399 336 527 450 386 364 384 449 279 715 299 724 433 322 604 446 531 481
 899 555 424 635 372 267 414 337 494 583 315 354 306 608 376 404 435 378 342 409 561 362 373 656 867 251 557 349 352 280
 615 581 359 558 302 192 278 483 648 689 412 897 396 210 559 388 900 345 891 265 641 219 263 290 220 253 607 259 440 355
 353 727 320 679 258 842 603 371 429 274 312 248 426 307 313 658 298 327 357 884 605 177 294 366 434 441 812 382 748 270
 257 740 368 763 167 217 780 190 828 276 227 333 247 838 351 799 226 356 228 193 520 282 826 492 239 375 618 818 637 324
 211 731 773 700 161 468 310 208 898 199 260 241 286 667 347 877 562 196 178 814 586 836 261 133 234 277 632 408 720 341
 230 653 784 696 848 317 128 883 864 216 127 523 316 787 262 633 188 225 308 543 606 170 120 358 244 164 623 732 743 224
 181 593 768 674 266 250 889 293 782 172 297 189 130 803 698 283 717 300 124 311 806 171 206 881 275  74 833 781 602 166
 185 613 335 710 721 886  99 252 503 122 238 160 174 669 314 788 179 200  33 737 659 770 866 246 591 131 739 810 713  72
 165 109 893 735 882 145 125 849 458 141 111 183 110 811 242 682 201 240  69 107 831 878 785 301 205 896 851 718 570 222
 152 168 802 890 596 820 895 744 536 104 123 149  48 805 272 229  76 102 861  56 855 231 873 706 182  91 595 887 470 197
 817 822 391 823 296 147 880 870 661  97  31 879  41 813 129 385  67 156 126  73 749 767 847  78 108  79 622 834 137 790
 616 271 885 808 871 825  52  84 542 135  61  30  86 794 809 117  85  87  63 795 734 859 874  49 184 207 869 774 894  55
 892 169 801 840  62 150 132 846 625  82  46 142  54 853 876  96  77 100  37 827 830 758 747  28 776  83 852 288 875 571

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.39125e+06us (= 4391.25ms, 4.39125s)
Wall-clock time (full program): 4.46409e+06us (= 4464.09ms, 4.46409s)
Satisfaction error: 0
Number of search iterations: 1734
Number of local moves: 1065 (including on plateau: 443)
Number of local minimum: 90 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 12929
Total number of local moves: 8556 (including on plateau: 4099)
Total number of local minimum: 778 (including on plateau: 279)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 784 868 316  47 652 785 839 889  95  79 900 838  67 840 100  72 160  40  41 521  48  88 847 512 822  37 182 899 265 882
 594 884 187  58 619 165 134 615 866  57 895 888 118  77  42 834 869 120 138 862  68 371 661 826  75  64 853 766  91 718
 585  87 400 855 181 796  98 803 115 147 804 891 164 617 248 797 746  34  55 677 734  70 864 558  99 151 779 417 119 624
 679 770 717 757 231 790  21 825 132 116 655 883  84 109 245 732 105  92  59 768 220 205 773 690  69 896 177 852  46 817
 702 130 878  29 894 112 537 163 595 137 178 835  80 818 180 724  93 234 172 161 101  97 656 886 634 849 814 670 276 880
 689  66 639 386 798 872 767 448 599 171 311 801 204 587 157 167 363 125 103 139  85 124 592 488 692  71 859 760 601 851
 641 213 406 669 644 830 338 788 110 622 283 228 202 758  44 638 155 224 237 873 357 185 800 897  94 226 222 654 591 586
 871 149 802 236 793 200 545 741 725 259 206 269 244 781 295 257 221 405 358 285 877 339 365 241 890 154 320 731 246 710
 653 254 893 563 787 256 881 344 875 321 411 210 287 263 215 460 233 135 298 239 261 842 726 385 191 162 260 611 667 832
 837 310 729 214 268 201 809 247 810 898 207 554 145 885 243 397 372 264 452 404 353 326 581 328 235 456 272 739 381 598
 548 249 763 325 232 451 754 230 778 485 582 329 266 761 467 281 169 391 403 799 293 327 415 596 426 367 336 580 211 701
 439 242 705 300 203 275 733 477 441 289 453 606 277 719 330 476 422 282 892 317 312 229 704 402 572 525 189 556 730 418
 649 436 395 438 331 520 309 857 284 291 290 364 369 368 428 340 621 443 409 279 351 491 765 567 547 401 430 445 471 626
 273 302 831 434 510 414 806 519 380 457 410 420 466 495 208 459 148 427 484 515 332 390 526 613 480 571 323 530 450 342
 465 238 559 350 516 431 504 602 854 319 374 493 419 399 646 306 377 575 388 470 482 345 432 412 370 389 280 568 497 455
 479 546 387 481 440 429 487 435 346 299 421 354 522 494 490 433 296 356 550 496 518 396 524 489 437 424 393 533 423 637
 360  28 442 446 536 384 454 538 382 508 720 334 527 540 458 506  96 492 378 517 509 593 449 560 473 523 578 335 474 375
 253 574  22 288 541 557 416 539 462 468 352 500 315 413 584 483 469 534 532 444 355 665 255 603 662 505 486 252 472 514
 153 612 314 461 597 707 407 373 528 555  82 197 513 128 616 543 735 673 676 447 535 752 305 144 366 642 425 337 294 398
 570 542 107 651 503 658  90 712 106 552 499 769 561   9 660 696 359 636 529   6 348 564 333 184 565 819 683 361 303 140
  19 620 133 347 146 685 475 605 737  43 682 632 588  53 744 792 640 502 553 647  15 648 251 629 609 630 610  45 195 240
 141 579 150 623  39 464  38 549 198 695 645 589 657 318 650 566 498 501 672 631 743  31 322  20 666 627 716 127 736 324
 301 604 286 723 783 698  23  89   2 780 628 262 713 703 749 544 671 686 664  62 750 573  11 199  33 663 681 292 186 156
 577 687  51  27 643  18 478 308  17 562 678 633 699  60 569   1 748 618 870 625 812 775 123 225 223 776 808  73 688 143
  63 714 219 693  36   5 271   8 392 740 583  65 867 113 742 771 709 836 728  30 708 635 383 680   4 576 721 188 865 170
 117 700 142 608  24 764 408 126 212 747 715 313 795 551 706  32 674 590 753  49 813 820 131 104 816   7 876 166 675  81
 193 607 270 511 777 179 507 349 684 846 114 159 786 174 887  52 722 815 829 209 745 824 192 121 756 861  16 176  78  76
 362 694 823 668 267  14 531  83 227 843 341  12 856 394 827 762 122 794 376 614 711 751 168 772 129  54  50 463 782  25
 175 807 108 600 307 659 697  35 789 379  10  61 879 297 833 258 874 828  56 691 805 755 111 190 759 278  74 173 844 183
 343   3 841 727 217 196 158 218 774 850  86  26 845 791 152 136 848 863 860 738 274 304 250 194 821 811 102 216 858  13

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.74816e+06us (= 3748.16ms, 3.74816s)
Wall-clock time (full program): 3.81318e+06us (= 3813.18ms, 3.81318s)
Satisfaction error: 0
Number of search iterations: 1366
Number of local moves: 915 (including on plateau: 427)
Number of local minimum: 59 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0
Total number of search iterations: 9906
Total number of local moves: 6390 (including on plateau: 2732)
Total number of local minimum: 475 (including on plateau: 218)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 452 870 807 420  47 723 832 124  26 791 888 818  74 767  55  59 614 107  68 157 205 122 797  93 896 167 678 825 133 900
 899 876 661 603  72 642 887  62   9 742 253 863 158 821  44 408 754  32  22  42 166 154 772 171 700  63 880 874  30 855
 729 771 889 726 153 898 313 578 179 649 750 208 128 805 209  84 884 228  92 629 290 740 802  99  54  25 138 890  52 523
 658 279 798 485 891 894 672 103 149 264 769 789 135 544  37 186 535 140 220 827  56 144 845  43  60 141 739 664 589 859
 606  98 448 834 394 125 556 679 237 893 830 792 306 765 223  69 409 265  86 160 113 321 690 142 152 463 496 724 816 823
 691 758 644 882 101 502 612 615 257 701 878 131 148 684 212 477 601 248 251 132  58 129 785  36 459 176 249 733 801 564
 796 822 833 722 332 351 473 715 181 204 865 258 250 301 216  97 302 156 286 708 123 215 848 897 143  14 786 645 163 813
 841 139 651 579 225 266 600 276 168 788 267 361 183 866 295 378 873  48 270 764 218 747 392 254 346 239 565 418 745 753
 839 221 710 219  82 120 770 732 336 281 213 881 207 782  73 151 669 217 255 424 227 895 790 263 308 241 650 871 828 260
 804 436 419 744 362 339 867 711 174 433 232 371 438 242 318 269 843 112 165 817 349 382 852 256 353 300 826 525 292 284
 698 375 641 681 246 443 795 697 368 426 892 111 226 357 354 274 312 492 238 840 278 333 287 192 400 366 686 693 272 542
 447 320 665 352 330 388 714 864 233 194 437 721 338 334 319 200 677 322 403 311 406 288 854 373 370 307 819 572 546 411
 597 576 630 417 315 410 490 467 422 337 190 335 427 376 323 442 609 683 507 787 425 328 440 363 273 414 660 450 350 472
 431 407 538 465 369 283 656 446 359 297 675 511 347 355 561 405 498 584 483 341 396 386 539 374 381 626 550 455 404 393
 588 383 486 460 185 505 534 713 325 304 509 456 453 379 434 449 445 298 495 415 587 356 458 516 309 583 324 554 533 479
 560 515 387 598 348 532 470 390 633 513 342 402 430 395  19 380 488 435 522 541 481 343 413 517 480 510 268 568 482 553
 344 547 432 557 252 545 416 501 619 489 608 591 540 457 397 476 423 303 580 262 461 570 275 616 191  90 471 384 551 567
  70 528 365 193 706 582 180 201 454 468 543 331 439 464 676 399 184 506 624  40 552 573 444 655 667 563 377 247 743 741
 391 639 360 548 310 585 653 494 555 779 537  46 401 529 696 549 716 499 126 592 680 638 110 484 211  39 372 398 574   4
 231 491 340 130 623 466 282 613 595 637 527 503 618 102 478 705 245 493 635  76 536 577 531 451 428 692 294 114 521 581
 291 230 285 620 469 518  12 280 625  50 421 605 702 654 634 602 175 820 569 512 617 621  16 526 719 803 367  20 749   3
 170 161 224 520 671 199 659  87 590 685 776 666 514  94 607 707 277 632 631 559 596  91 187 487 594 599 203 385 738 206
 100 562  77 172 575 734  13 178 524  17 109 316 475  83 689 530 824 627 673 571 883 712 345 497 756 862 558 296  53 704
 136 718 145 326 674 646 188 134 751 815 150 610 640 643 687 647  85 474 604 229 849 648 121 566 500 763 364 389   5   8
 412 694  75  67 652  79 259 327 761 688 358 657 728 197 860 586 235 762 784 695 663 662 155 682 622 668  29  95   6  57
  31  38 164 162 810 636   2 766 611  28 196 116 836 317 856 844  88 800 628 462 838 720 195 670 731 703 429 222 593  23
 236  21 119 799 755  96 261 329 853   7  41 717 812  51 783 699 118 808 835 508 781 757  10 877 886 829   1  27 289 210
 147 177 314  64 847  89  24 240 777  65 106  71 872 735 858 760  78 806 775  49 773 748 104 774 778 730 127 182 709 736
 305 117 293 137 868 885  81 441 869 727 108  80 811 214 793 837  35 768 831 271  66 146 159 780 737 814 504  61 759  18
  15 746 115  33 851  34 244 752 875 243  45 198 879 202 809 846 519 850 857 794 842 169 299 861  11 725 105 234 189 173

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.60514e+06us (= 3605.14ms, 3.60514s)
Wall-clock time (full program): 3.6681e+06us (= 3668.1ms, 3.6681s)
Satisfaction error: 0
Number of search iterations: 1177
Number of local moves: 704 (including on plateau: 285)
Number of local minimum: 63 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8807
Total number of local moves: 5685 (including on plateau: 2106)
Total number of local minimum: 465 (including on plateau: 143)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 899 875 118 860  89  38 839 666 125 858 842 704  28 650 173 117 641 110 496   1 795 857  17  85 115  40 787 119 768 803
 895  56 848  95  36 876 750 805 819 678  70 572 121  16 215 214 626 886 629 654 634 186  58 152 467  91 197 123 894 852
 879 177 831 499  82  47 818 130 872 693 638 627 145 591 141  44 721 526 745 148 645 692 109  20 656 101  75 880 205 778
 338  54  41  93 111 595 867 486 228 684 183 711  65 635 265  48 637 896 767 477 625 794  71 585 628  53 735 116 897 830
 142  73 878  51 694 520 864 838 688 577 198 679 133 602 207 184 789 138 814 296 806 774  94 169 510 881 191 153 131 441
  61 208 151 137 122 882 140 892 167 611 861 873 147 420 219 134 825 303 732 460 254 866 225 168 869 127 782 226 862 791
  96 220 257 176 105 653 793 813 229 851 554 891 194 777 144 388 714 403 785 306 307 102 155 695 817 354 604 193 783 156
 216 190 200 341 157 579 437 885 274 877 697 887 311 781 248 661 834 330 835 329 212 150 246 362 687 239 712 262 136 440
 309 192 223 135 245 312 423 288 893 855 871 664 321 780 351 293 833 366 761 497 826 729 346  60 314 243 847 206  97 235
 240 379 384 273 163 823 419 376 196 601 569 890 702 796 336 300 586 301 446 681 829 283 107 249 578 340 324 523 466 355
 270 313 407 345 295 261 289 286 421 349 883 612 374 238 430 224 536 268 673 802 556 320 402 365 672 431 727 900 396 470
 237 375 387 233 318 898 172 335 716 532 771 432 258 846 304 361 647 344 490 868 317 427 275 347 884 279 342 333 199 588
 409 234 358 266 469 744 298 395 217 483 428 575 453 410 325 269 553 779 424 454 294 393 445 391 816 459 849 537 263 525
 353 390 449 218 397 302 272 505 392 534 734 547 464 452 373 389 677 339 450 535 508 527 444 334 348 480 567 343 426 766
 382 418 524 495 377 327 561 337 456 305 417 429 511 482 315 411 434 416 385 481 400 463 485 492 668 541 359 513 457 674
 284 504 472 515 509 642 660 386 566 383 285 412 538 380 326 545 468 507 512 455 531 593 394  68 473 435 356 350 491 475
 458  27 372 589 487 503 613 540 557 502 251 124 401 414 565 551 522 598 308 461 600 404 479 517 378 494 576 367 662 195
 357 651 655 484 560 171 489 676 701 291 231 332 174 736 562 370 439  29 610 162 498 570 518 406 256 596 657 573 582 179
 415 546 614 471 564 146 519 620 399 297 436 521 633  92 563 500   9 644 583 126 465 476 685 623 232 580 221 506 607 422
 630 438 544 710 548 624 478 559 652 448  84  52 425  31 474 680 331 599 609  66 442 462 592 733 252 501 322  10 616 603
 590 619  32 516 739 631 649 597 405  23  78  46 443   8 632 703 292 550 104 493 280 514 671 549 310 748 143 726 754 670
 533 646 574 706 530 568 581 658  37 413 691  67 542  63 552 788  55 539 276 210  14 622 690 621 182 707  76 742 555 277
 810 757 636 618 775 571 605  21   4 188 381 204 686 271 808 689  15 709  99 222  69 587 837 841  98 667 203 643  50 451
 488 828 659 725 606 112   2 128 584 185 201 253 713 759 807 615 161 594  18 751  33 264 558  30 202 746 352 705 698 738
 801 820 720 792 675  19 665 608 175 160 164 159 723 108 758 737 282 433  80 753  86  88 836 773  79 166 360 722 696  77
 822 762 648 663 708 369 247 181 180 368 699 364 763 242 640 724 129  24 287 227 764  72 756 840 363  35 617 786 230   5
 770 776 719  12 845 408  22 100 772 236 278 319 827 255 888  25 241 113 120 728 731 244 639 747 290 760  59 804 259 528
 749 790  13 832 815 178  26 132 844 170 718 211 824 730 250 821  87 811 165 784  81 683 798 769  74 765  62 323   7   3
  39 398 752 865 812 529  11 158  83  64 260 209 853 669 755 856 103 854  45 371 213 316 740 809 447 797 543 741 189  34
  43 799  49 800 682 187   6 114 863 299  42 149 743 281 889 874 328 106 267 717 700  57 843 715 850 859 870  90 139 154

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.98825e+06us (= 3988.25ms, 3.98825s)
Wall-clock time (full program): 4.05287e+06us (= 4052.87ms, 4.05287s)
Satisfaction error: 0
Number of search iterations: 763
Number of local moves: 576 (including on plateau: 196)
Number of local minimum: 29 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10882
Total number of local moves: 7130 (including on plateau: 2903)
Total number of local minimum: 594 (including on plateau: 216)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 268  21 261 144 751 827 878 147 815 181  61 841 867 747 877 813 822 763 156 861 820 845 154 178  19 133  39 140  79   7
 795 467 102 722  72  23 851  26  15 407  64 658 762 285 857 854 856 768 776 775 226 600 100 233 207  45 786  38 352 793
 865   6   4 817 709 488  28  35 805  25  74 231 750 755 748 649 839 835 137 843 171 624 110 754 179 214 767 217  51 785
 858 701  37 715 105 746 525  70 255  76 197 221 868 737 712 833 830 769   8 696 810 345  71 244 509 135 466  67 127 782
 774 204 704 771 151 829 728 638  48 590 758 299 773  40 745 796 655 779  30 394  31 550  32  86 697 289 281  91  62 690
 752  75 121 807 646  58 675 669 682 248 108 163 866 594 633 740 702 743 765 280 538 695  78 341 501 129  55   3 358 490
 569 661  13 714 788 761 117 742 803 112 673 155 648 168 721 711 848 700 192 549  54 529 176 476 713  63  73  59 686  41
 586  65  53 573 126 561 629   1 652  29 720 812 610 216 657  99 676 764 563 615 659 556 484 252  94  52 733 196 710 772
 622 554 766 571 797 621  27 581 253  16 679  22 592  90 677 687 666 674 698 632  24  18 558  69 642  87 627 104 535 626
 724 663 684 284 131 541 577 664 608  77 604  68 572 173 601 522 421 692   5 483  57 693 498  60 680 208 719 238 587 681
 136 662 606 511 635 653 588 628 706 401   2 227 718  84 665 532 225 548 707 115 717 618 536 286  66 469 206 139 667 462
 228 533 512 416 495 636 630 570 443 202 494  17 489 477 605 634 575 528 432 514 595 471 414 346 380 491 475 322 582   9
 492 543 654 392 583 527 609 486 485 442 524 191 413 470 540 552 315 436 460 465 499 247 405 318  89 523 613 276 473 493
 478 481 455 623  10 526 547 559 668 337 598 589 428 185 386 382  11 410 449 534 472 637 614 444 371 585 555 291 387 503
 578 321 433 562 545 496 546 454 497  12 450 530 453 406 439 502 457 568 447 423 381 419 487 468 517 542 298 359 505 420
 847 537 580 357 408 565 515 366 464 399 504 362 412 441 364 391 520 378 339 368 422 437 516 293 383 539 274 760 389 385
 461 553 507 427 388 480 459 355 544 576 479 506 200 741 301 393 363 353 458 290 435 424 456 557 331 500 336 683 513 446
 360 853 551 871 404 396 349 434 409 300 282 756 508 463 395 344 365 417 402 727 287 440 342 239 237 650 418 617 397 302
 263 376 373 430 328 351 828 350 579 730 367 415 288 184 334 303 354 316 603 201 220 783 275 564 372 327 425 824 852 900
 431 222 313 296 429 451 445 295 319 607 400 831 241 273 370 312 326 356 294 566 324 875 672 584 899 232 826 671 317 338
 347 223 377 379 236 343 132 308 311 738 309 869 612 884 270  96 243 361 320 277 809 254 641 691 873 660 792 625 210 325
 307 292 182 651 246 269 267 332 864 726 314 725 209 780 310 258 619 256 187 259 879 735 611 620 297 639 304 732 271 374
 482 160 640 323 838 199 330 823 384 685 452 846 157 306 195 245 205 264 211 193 821 194 597 531 872 644 787 705 251 175
 162 215 804 149 840 329 885 656 283 744 142 235 257 340 158 305 272 148 260 335 265 708 398 801 894 825 643 593 348 521
 103 849 266 369 161 250 124 647 819 759 166 510 249 631 279 889 694  44 689 688 118 130 152 645 716 616  82 794 213 863
  50 723 791 174 891 111 474 218 219 882 874 574  47 670 123 177 203 242 799 262 519 183 778 757  95 887  80 770 836 106
 234 837 800 212 438 375 122 898 169 859 850 678  49 411 134  46 138 224 784  36 390 170 876 165 749 832 888 818 240  93
 229 109 896 188 189 128 448 886 198 734 736 591 164 602 186  56 230 145 781 180 806 143 699 860  83 814 703 790 816 125
  88 739 150  33 842 883 101 518 120 777 753 403 141 802 114 116  42  20 729 808 599  85 893 855 153 789  97 862 890 113
 426 870 880  34 333  92  81 159  98 844 881 190 172 560 119 278  43  14 834 146 567 107 892 798 897 596 167 731 811 895

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.7539e+06us (= 3753.9ms, 3.7539s)
Wall-clock time (full program): 3.81714e+06us (= 3817.14ms, 3.81714s)
Satisfaction error: 0
Number of search iterations: 1304
Number of local moves: 1104 (including on plateau: 455)
Number of local minimum: 45 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 8771
Total number of local moves: 6580 (including on plateau: 2857)
Total number of local minimum: 362 (including on plateau: 208)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 486  48 108 838 725  89 536 830 504 889 322 827  39  91 874 203 717 106  78 172 658 848 833 856 472  42 147 782  70 325
 713 886 250 888 897 841  95 209 178  63 824 828  55 137  92  99 815  93 482  44 232 871 618 798 406 154  54 196 896 801
 499 101 407 757 835 872 857 805 124 893 807  72 797  46 899 859 163 122  83 104 624 621 758 577  64 255  74  47 148 245
 656 201 701 455 285 573  97 640 804  84 861  50 732  35 787 683 190  82  66 522 149 855 850 900 417  37  25 222 679 877
 409 191 156 793 181 728 185 625 150  51 809 796  62 130 131 760 844 287 214 184 862 770 632 800  86 898 138 737 225 681
 739 891 321 562 822 687 176 884 429 211 763 653 355  52 151 661 263 282  67 199 168 751 207 817 894 177 118 217 779 219
 610 133 103 885 699 612 823 715 142 498 853 644 143 247  57 579 746 358 388 276 256 820 384 794 218 202 159 230 208 733
 535  28 145 873 390 160 836 708 205 224 714 684 396 171 477 571 264 289 223 197 391 673 791 785 336 461 136 695 818 339
 606 111 188 272 892 819 238 313 776 128 559 881 332 241 374 244 895 153 344 288 882 560 676 569 280 326 126 204 360 878
 458 195 431 242 542 310 337 212 821 484 845 497 400 451 453 849 270 221 387 252 858 649 166 491 634 301 343 278 488 650
 454 266 627 236 422 356 726 309 251 290 767 141 311 368 306 879 323 392 478 826 228 709 425 527 487 440 333 473 485 680
 771 279 194 730 262 267 286 275 281 655 692 718 254 248 180 754 502 268 880 441 394 765 383 566 335 448 340 302 293 752
 403 445 239 361 447 398 420 315 839 338 524 808 318 408 492 578 327 430 389 235 269 693 341 507 334 512 466 382 443 854
 585 869 426 467 249 506 345 274 378 353 436 449 435 364 303 404 543 890 246 557 347 564 350 456 324 416 505 470 474 530
 592 386 434 528 351 265 509 452 510 493 532 468 307 462 617 379 305 450 372 550 494 424 446 587 329 459 549 393 496 376
 596 299 354 444 423 319 413 516 533 257 284 419 635 563 517 465 561 480 283 620 231 349 513 369 539 521 395 460 628 529
 500 381 503 607 595 428 226 469 613 331 433 100 243 552 414 405 666 367 352 586 537 411 495 421 397 547 523 575 437 401
  94 508 442 551 576 371 583 464 385 330 317 545 227 432  60 475 526 735 768 591 696 346 375 365 519 399 648 514 660  13
 113 662 483  17 636 611 553 657  90 630 295 511 342 668 593 651 747 490 167 663 380 259 584 294  16 599 637 544 567  56
  73 631 439 669 570 292  10 418 534 623  98 697 581 427 802  30 633 531 641 135 298 300 647 234 749 556 622 540 189 546
 117 554 598 704 481 328 594 412 568 373 237 220 759 525 609 233 304 671 795 605 121 183 273 366 580  24 565 646 515 555
 161 712 558 296  27 590 603 320  96 377 260  59 615 616 608 109 112 753 638 769 689 198 745 119 471 642 716 864 476 316
 187 589 721 115 703 685   1  77 743 667  53 253 501 597 574 727  71 829 538 691  68 134 105 362 675 582 601 541 710 415
 162 700 786   8  36 764 144  38 438 719  19 518 600 678 788  69 741 654 626 734 277 240 780 479 639 645 672 258  12 291
 348 705 762 731 102 182 410 702 261 690 229 314 652 876 677 312 173  61 659 629 852  34 215   6  23 740 789 139 722 520
 744 643  76 107 155 810 308  45 665 706   2  33 843 792 799  49 271 750 694 174 775  81   3 116 773 664 614 883 724 216
 783 846 723 170 206  22 772 489 619 837 200 192 814 738 688 602  85 363 604 812 213 123   5 129 110 729 707 146 748  40
 179  20 711  43 755  31 834 402 114 572 548   4 875 867  18 457 682 811 784 670 698 120 165 158 868 774 842  79  75 359
 756 370 887  26 210 588 832 127 686  29 152 777  32 863  88 297 761 816 463 825 803 157  14  58 674 175 840 847 169 193
 186 865 742 140  41  11 766 813 778 720  80 357 860 870  87 132  15 781 806 164  65   7 736   9 866 790 831 851  21 125

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.78754e+06us (= 3787.54ms, 3.78754s)
Wall-clock time (full program): 3.8632e+06us (= 3863.2ms, 3.8632s)
Satisfaction error: 0
Number of search iterations: 1419
Number of local moves: 727 (including on plateau: 226)
Number of local minimum: 83 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10203
Total number of local moves: 7417 (including on plateau: 3064)
Total number of local minimum: 490 (including on plateau: 241)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 552 850 837 118  48 854 255 170 791  47 350 354  15 845  34  60 818 810 807  67 881 184  20 872  43  72 227 847 851 836
 754   4  75  24 865 861 640 311 829  71  10 774 263 830  14 116 763 798 786 235 826 196  28 251 206 214 278 784 886 823
 797 775 458  59 834  88   8 284 718  87  54 666 108 731  86 209 848 772 773 300 779 793  46 767 348  19   1 668 751 688
 755 750 147  11 764 849 273 710 715  41 653 299  84 835 331 181 785 758 730 737 817  42  18 308 140 155  12   7 808 800
 685 863 746 202  13 749 139 200   3 216 748  23 142 766 157  29 873 738 696  76 747 363  50 729 465 601 179 795 799 723
 648 683 842 674 704  17 136 461 762 720 327 328  26 700  69  49 778 790 632 635 249  77  30 587   6 340  83 657 736 769
 756 691 620 741 207 676 285 102 679 722 564  21 115 708 230  35 636 133 675 659 537 171 624  31 598 732  25 757 573 212
 712 589 802 695 599 717  52   5 782 643 390 219 127  37 335 178 616 405 745 337 654 177 740 173  36 667 259 592 727 505
 638 535 567 510 697 672  57   9 660 600 488  16 494 590  91 176 669 673 570 662 735 210 760  97 295 644 104 677 521  98
 595 615 661 582 430 550 129 106 591 248 549 499 529 556 539  89 630 183 656 713 191  22 576 560 128 694 240 613 743 298
 603 528 625 627 617 605   2 527 682 584 113 483 232 647 641 436 594 119 597  32 167 633 637 612 134  40 583 542 596 277
 578 434 523 561 463 410 294 541 642 500 383 275 478 471 473 716 714 572  45 566 490  64 622 188 536  55 506 555 498 362
  27 288 502 585 315 532 565 480 558 604 447 575 459 519 441 418 380  38 475 645 511 516 563 476 557 496 588 484 359 112
 482 606 551 417 703 429 531 513 455 518 319 553 393 507 453 460 257 470 540 581 428 432 530  99 293 385 375 464 401 370
 392 456 389 462 365 442 431 477 377 524 435 571 493 609 608 579 614 356 382 414 347 406 373 466 341 415 339 580 449 423
 544 508 355 439 497 448 289 427 525 559 512 433 522 409 450 501 504 607 367 316 400 568 388 286 391 342 658 457 445 368
 548 329 413 269 680 261 399 376 416 474 317 623 412 489 425 446 421 491 819 472 479 264 526 296 481 733 407 360 403 486
 396 398 631 811 684 452 827 189 290 349 803 384 546 386 495 543 301 487 369 280 344 250 247 422 352 343 353 330 438 815
 485 226 322 411 860 302 318 309 310 424 213 816 538 312 437 467 454 776 451 292 366 781 378 374 338 517 689 272 358 719
 267 509 305 345 304 297 252 371 387 262 752 372 514 351 443 402 274 208 166 871 794 840 265 884 780 765 469 239 149 678
 236 137 408 303 260 397 783 838 172 796 291 843 444 326 321 789 394 199 468 123 577 381 271 611 701 805 831 186  79 545
 253 693 332 325 333 492 814 868 788 671 254 282 320 146 193 618 162 744 222 323 228 864 201 856 812 503 440 242 266 270
 233 306 138 238 650 245 809 887 132 258 243 361 821 174 867 897 215 307 152 153 547 686 801 336 855 652 569 283 114 586
 161 241 190 246 687 164 866 420 182 742 346 820 828 121 870 900 198 204 256 211 268 846 225 629 664 426 832 364 229 379
 180 148  92 895 109 725 869 889  53  78 165 324 724  66 876 711 231 221 234 334 154 813 857 879 839 634 663 163  74 515
 777  85 150 223 160  82 858 822 101  56 882 690 853 217 699 768  73 534 156 880 169 706 877 126 314 898 806 313 144  96
  51 698 124 175 205 125 670 707 649 833 892 533 619 593 728 844  33 122  94 655  90 639 709 203 824 158 894 218 143 287
 220 185 753 890 145 874 562 651 110 888 281 111 804 276 626 610 168 357  65 891  80 187 702 404 792 194 574 899  81 135
 151 141  95 825 197 130 681 237  93 883 875 646 841 195 878 734  44 419 395 159 602 739 759 893 520 131 761 105 107 279
  39 244 862 852 120  70 721 628  63 117 859 621 771 103 705 554  68 224 192 896  58 665 692 100 726 885 770  62 787  61

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.83141e+06us (= 3831.41ms, 3.83141s)
Wall-clock time (full program): 3.89549e+06us (= 3895.49ms, 3.89549s)
Satisfaction error: 0
Number of search iterations: 1334
Number of local moves: 790 (including on plateau: 329)
Number of local minimum: 68 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9275
Total number of local moves: 6456 (including on plateau: 2620)
Total number of local minimum: 428 (including on plateau: 192)
Total number of resets: 2
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 894 136 168 108 586 757 134 571 899 628  65  23 200 161 791 775 742 623  58 148 890 562 725  73  95  38 776 104 887 898
  47 897 845  40 574 738 797 194  53 440 128  92  74  83 658 840 882 885 483 852  84 172 560  45 157 892 860 135 879 129
 883 167  61 255 598 743 820 785 193 578 186 151  57 102 671 863 861 663 188 770 121 561  70  44  29 859 854 523 756 103
 127  71 828 241 889 608 334 891 201 841 842 496  93 175 679 895 858 699 693  76 105 138 569  60 132  64 881 867 131  31
 166 165 872 290 449 687 271 676 114 806 698 235 289 601 801 119 183 308 831 875 257 798 269 261 169 152 809 635 666  63
 847  88 827  79 799 245 870 153 145 838 715 226 133 221 706 176 853 504 174 294 304 602 593 147 876 307 164 808 612 209
 359 243 187 393 778 790 750 220 202 886 565 256  77 717 814 351 329 739 163 888 296 524 287 377 149 233 779 306 640 217
 331 219 139 378 691 253 162 896 101 864 310 263 203 511 675 339 783 660 796 736 837 678 429 316 179 274 724 284 368 116
 462 197 182 408 604 880 143 265 254 421 865 793 297 374 795 207 210 824 878 258 434 846 288 150 510 399 173 355 761 282
 249 338 278 321 767 805 277 352 160 893 224 579 300 832 342 286 424 485 683 178 734 755 240 293 868 319 366 199 848 120
 346 356 239 815 839 665 259 313 242 704 856 522 322 670 411 299 281 714 813 696 206 349 566 227 208 381 213 283 301 419
 326 367 205 618 708 768 332 250 291 645 459 463 230 550 364 354 448 211 803 874 475 729 361 388 231 409 295 228 792 341
 251 385 395 614 720 363 280 376 272 382 862 369 554 825 373 285 441 558 740 800 195 427 423 315 457 410 454 348 343 298
 414 553 401 400 580 309 542 327 519 540 655 380 425 379 515 453 426 474 748 246 501 446 347 360 336 422 370 479 582 386
 559 420 340 546 499 333 508 484 384 439 455 576 567 575 428 344 371 551 365 680 323 900 244 444 324 353 189 500 503 311
 247 447 450 413 320 528 433 260 391 466 402 492 585 482 568 572 513 470 397 487 626 581 398  52 531 437 392 431 557 587
 445 529 464 406 407 673 266 506 325  18 418 473 521 375 345 469 610 404 387 383 471 456 682 539 394 478 570 416 443 642
 412 436 476 652  81 273 526 481 432 442 477 113  46 328 517 430 438 615 465 632 497 403 653 532 650 564 594 318 544 488
 597 512 733 180 112 514 590 591 480 494 516  16 543 216 556 651 537 552  54  19 493 548  24 764 507 527 530 648 525 486
 545 460 534 690  33 549 607 472 458 452  43 467 638 536 237 489 611 110 312 518 596 111 171 509 681 589 595 622 275 605
 674 624 606 232 106 109 646 711 794   9  34 302 766 118 599 627 451  11 491 520  72 248 647 649 669 668 637 573 236 686
 372 684 713 643 185 215 657 735 609 292  75 644 495 505 629 654 625  99 330 358 468  49  96 633 563 782 140 659   6 600
 577 772 695 490 158  14 181 100 692  21 716 849 636 314  50 731 616 238 538 588 672 196 192 641 765 667 709  15  48 634
 707 787  32 555 126 584  62  41 498 117 417 769 777 541 184 621   5 337 461 234 721 214 630 732 222 727 718 619 389 688
 547 603 754 620 362 229 533 836 583 141 664  22 744  26  78 817  66 390  36 159 154 225 156 753 816 752 223 751 749 726
 656 723 415 810 613  80 712  28 844  17 123 884 788 685 146  10   8  51 317 198 639 335 710 843 719  27  87 762 435 850
   2 758 703 631  91  55 771 305 851 107 268 702 677 350  20 745 759 405 212 177 617  86 781 830 689 700 125 818 191  89
 662 747  94 728 357 396 784 763 873 592  42 804 866 780 276  85  56 130 822 142 264 267 812 826  59 262  97  39  35 855
 807 694 811  90 204  82 170 144 821 190 705 697 871 737  69   3  13 502 155   7 802 774 773 877 829  37  67 760   1 823
   4 137  68 869 279 270  98 789 834 252 730 857 741 746 218  25 115 303 122 722 661 535 819 835 701 786 124  30  12 833

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.4337e+06us (= 3433.7ms, 3.4337s)
Wall-clock time (full program): 3.4966e+06us (= 3496.6ms, 3.4966s)
Satisfaction error: 0
Number of search iterations: 1097
Number of local moves: 657 (including on plateau: 179)
Number of local minimum: 58 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 7857
Total number of local moves: 5933 (including on plateau: 2116)
Total number of local minimum: 344 (including on plateau: 170)
Total number of resets: 0
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 889 138 488 693 721  81  88 739 726 897 177 203 811 887  85 167 570 858 148 124 886 170 763 158 136 142 798  67 859  46
 877 881 331 764 175 133 180 237 875 896  73 135 520 200 150 197 860  57 147  51 698 786 782 370  71 852 825 838 376 178
 103 734 389 757 537  59 182 129 773 126 105 672 790 865  93 870 101  97  72 607 432 338 482 122 636 866 754 893 856  75
 109 231 571 885  86  74 538 120 758 160 123 639 728 879 144 735 750 171  76 669 409 576 234 117 128 206 867 898 799 835
 127 680 258 868 121 184 766 795 681 808 297  35 756 707 190 736  84  47  60 696 691 108 682 250 215 864 788 244 632 145
 251 705 755 874 279 551 767 165 720 211 377 554 363 814 131 714 248 153 268  91 688 266 259 350 155 884 729 179 831 183
  49 742 665 163 282 807 819 834 855 139  62 395 208 792 201 188 809 186 157  87 890 220 218 891 265 820 296 781 509 185
 384 263 596 275 104 633 794 849 869 301 271 592 823 315 226 166 241 372 242 189 845 454 815 212 213 706 623 111 882 149
 369 708 853 740 406 256 899  83 597 209 233 803 198 299 408 243 125 450 254 839 515 525 199 391 283 816 700 230 637 247
 663 716 141 303 883 176 844 828 174 671 191 827 246 195 399 322 415 270 143 375 894 888 324 257 261 713 402 312 443 239
 319 273 249 196 895 396 252 417 711 400 824 749 205 235 506 202 240 418 481 358 779 840 456 422 347 214 648 405 612 466
 590 381 768 306 431 462 307 373 892 412 293 748 392 305 379 318 277 390 878 204 624 447 193 260 349 330 620 314 812 460
 502 356 334 264 473 656 362 311 686 336 438 801 850 285 224 342 329 832 313 441 453 796 228 325 429 378 463 427 600 281
 388 469 222 225 398 599 420 387 621 448 238 731 644 559 288 516  32 348 900 528 368 784 491 317 386 287 477 424 512 508
 567 421 492 452 436 569 320 286 414 435 316 413 602 575 536 267 323 449 380 475 617 547 499 340 442 458 606 464 461 353
 430  50 540 598 343 465 535 468 510 480 470 326 397 345 514 341 609 532 446 371 650 298 497 558 445 367 513 530 321 566
 539 522 676 582 517 588 366 642 164 479 505  80 355 474 546 507 486 524 344 556 309  89 615 426 523 382 346 423 361 589
 360 695 543 484 487 643 383 496 393 498 428 278 154 533 302 459 478 245 407 471 308 404 701 579 593 619 110 601 280 583
 521 490 555 651 410 223 568 451 168 574 627 351 584 641 544 439 518 541 608 638 146 216  29 531 646 678 295 119 352 401
 455 476 493 647  53 529 519 628 437 611 483 500 328 595  13 526 634 467 385   1 290 770 791 542 495 640  96 604   6 501
 419 503 137 472 545  54 504 440 100 775 662  30  82 511 668 679 614 489 626 444 359 630  34 616 625 585 291 572 327 722
 411 560  69 652 673 657 181  77  94 635 457 107 746 697 661 703 581 550 675 552  40  39 548 631 561 118 294 761 156 629
 563 229 591 683 655  55 603   3 140 692 674 236 645 217 783 822 702 578 684  19  64 573 173 276 854  78 207 841 289 586
 743 114  99 730 580 762  11 262 152 712 699 485  31  63 719 649 687 613 690 802 274 817 587  98 793 221 113  48 161 800
 664 694  92 134 594  15 187 653 255 151 494 339 771 577 660 842 253 610 847 654 337  58 741 727  41 300 210 747 159 709
 553  25 354   8 357 752 725 826  52 549 744 780  21 789 873 670  45 723 753 659  18 425   2 732 760   5 192 162 132 829
 805  28 622  16 733 745 403 837 102 106 778 605  24  26 848 112  43 364 846  65 564 292 715 861 872  90 565 658 172 618
  66 227 871  17 689 785  22 310 365  12 804 232 769  14 876  10 797 806 787 880  68 333 710 738 857  70 284   7 332 777
 772 677  44  56 433 776 666 774 115  33 810 335 434  42 685  36 843 562 704 836 169 765  23 667 718 269   9  37 374 851
  27 527 717  20 219 830 304  95 116 759 862 534  38  79 863 737 821 813 194 833 130  61 724 751 416 557 394 818 272   4

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 4.07229e+06us (= 4072.29ms, 4.07229s)
Wall-clock time (full program): 4.13574e+06us (= 4135.74ms, 4.13574s)
Satisfaction error: 0
Number of search iterations: 1541
Number of local moves: 1018 (including on plateau: 459)
Number of local minimum: 76 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 10112
Total number of local moves: 7096 (including on plateau: 3570)
Total number of local minimum: 446 (including on plateau: 273)
Total number of resets: 1
Total number of restarts: 0

Error: 0
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: true
Number of threads (not used if no parallel search): 8
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 5 local moves
Selected variables are frozen for: 0 local moves
Percentage of chance to espace a plateau rather than exploring it: 6%
3 variables are reset when 30 variables are frozen
Never perform restarts
############

 398 214  91 762 821 885  86 826  55 813 540 136 754  12 651 784  76 872  36 699  64 180 160  13 567 194 847 710 772 497
 770 207 200 269 142 128  70 883  22 743  82  45 882 795 834 783 108 430  61 884  73 746 776   3 197 288 840 750 690 814
 798 717 691 230 299 744 236 843  21 766 729  11 373 765 700 257  17 806  32 850  43 239 756  25 118   1 865  10 792 781
 790 694 195 363  38 642 148 785 222 829 189 181 716 816 777 182  58 878   4 830 357 666 649  15  68  90  51 673 799 810
  72  16 265 237 693 325  44 362 183 759 796 361 823 786 573 815 164 817  47 775  85 169 809  87 185 514 683 705 771 594
 767 738 229 372 439  30  92 681  14 734 820 138 628 797 155  94 174 812 390 870 227 613 619 665   2 321 676 664  39 715
 748 856 393 278 281 862 305 530  29 788 629 107 552 752 276 769 131 607   7 553 110 719 757 190 310 133 779  93 293 678
 603 793 379 153 247 697 597 753 595 315 661 163 606 569 235 685 657 612 162 695 262  56   8 109 339 208 600 463 562 731
   9 725 158 268 121 551 291 686 232 711 662 184 768 720 119 474 671 650 557 535 324   5 831 541 204 149 593 722 570 484
 445 591 543 116 272 634 172 572 648 554 805 494 528 563  67 561 253 732 256 146 434 602 558 741 156 327 620  54 415 656
  57 566 333 122  75 252 145 655 389 653  18 440 630 733 544 592 680 598 608 516 454 579 728 647 582 336 542 503  48 490
 601 618 120 213 441 559 478 622 585   6 320 672 448 509  52 505 670 571 537 504 137 625 575 546 500 150 782 501 130 538
 522 465 488  88 457 677 523 425 675 496 646 282  35 489 224 659 568 520 596 432 159 589 483 534 343 353 507 679 255 346
 470 584 383 165  28 462 519 485 388 576 581 511 493 506 377 708 461 473 510 556 387 438 414 531 384 287 468 587 428 355
 610 626 548 458 527 464 411 471 482 460 479 359 545 407 453 381 586 447 367 306 375 442 475 332 590 199 487 422 400 406
 512 499 547 459 426 396 444 451 539 466 378 352 408 616 536 385 446 309 599 394 480 518 498 524 350 423 502 392 338 328
 348 403 481 399 334 419 844 421 467 424 437 491 314 307 751 452 311 297 689 413 578 455 604 283 317 549 397 513 515 302
 841 431 623 621 706 696 727 405 279 295 525 238 300 312 286 264 330 893 449 366 668 443 289 486 340 435 329 271 345 322
 341 380 456 807 371 342 402 347 344 382 368 791 638 364 472 450 386 358 337 416 577 277 234 747 409 565 351 323 811 469
 316 318 640 617 773 477 723 420 301 335 895 404 111  83 703 495 221  98 418 354 624 401 356 308 641 848 532 248 588 267
 225 827 712 745 632 365 285 244 280 891 254 360 892 114 429 223 667 233 833 212 436 202 370 258 802 605 161 196 645 417
 290 141 808 749 853 124 326  79 698 331 220 742 521 177 580 476 825 211 517 273 660 873 170 226 319 688 240 874 275 249
 139 140 864 854 614 260 187 778 714 296 263 627 294 658 702 412 633 210 303 259 824 266 860 243 637 701 147 391 215  24
 876  97 764 652 669  71 730 166 313 349 246 721 284 846 858 143 205 298 713 304 526 157 219 737 611 583 250  66 894 167
 508 274 192 533 761 888 739  77 787  20 129 855 186 228 369 152 216 203 270 154 755 218 112 709 819 822 789 736 251 763
  89 707 890 758  80 261 842  50 839 245 209 740 193 100 643 818 780  81 869  23 639 804 125 636 631 427 241 127 492 176
  74  41 550 410 899 887 877 175 881  27 126 836 395 188 376  46 880 191 879 132 692 117  78 832 849 897  26 900 217  37
 654 242 292 644 231 206 828 151 837 134 560 635 101  99 374 835 803 135 863  95 838 704 168 898 682 861 115 178 179 173
 113 574 615 609 852 106 718  49 896  84 886 794  63  60 198  19 851 104 735 103 859 857 663 774 889 801  42  40 102  59
 529  31  65 564 433 105 726 123 800  33  62 845  34 144 201  96 687  69 871 866 868 555 171 875 674 760  53 724 684 867

SATISFACTION run
Permutation problem: true
Time budget: 3e+07us (= 30000ms, 30s)
Search time: 3.81826e+06us (= 3818.26ms, 3.81826s)
Wall-clock time (full program): 3.88158e+06us (= 3881.58ms, 3.88158s)
Satisfaction error: 0
Number of search iterations: 1322
Number of local moves: 647 (including on plateau: 201)
Number of local minimum: 85 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0
Total number of search iterations: 9783
Total number of local moves: 6397 (including on plateau: 2176)
Total number of local minimum: 574 (including on plateau: 173)
Total number of resets: 1
Total number of restarts: 0

Error: 0
